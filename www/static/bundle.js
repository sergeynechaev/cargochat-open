/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	// Yandex Metrika
	"use strict";

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

	var _api = __webpack_require__(1);

	var _NoAuthLoginLogin = __webpack_require__(221);

	var _NoAuthLoginLoginForm = __webpack_require__(222);

	var _NoAuthLoginLoginForgotPassword = __webpack_require__(229);

	var _NoAuthLandingLanding = __webpack_require__(231);

	var _ClassesLogger = __webpack_require__(3);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	// import {Notifications} from './SimpleComponents/Notifications';

	var _ControlsNotificationsNotifications = __webpack_require__(246);

	var _NoAuthSocialOauth = __webpack_require__(397);

	var _AuthDashboard = __webpack_require__(247);

	var _AuthSessions2 = __webpack_require__(398);

	var _AuthProfile = __webpack_require__(404);

	var _AuthJoinCompany = __webpack_require__(406);

	var _NoAuthSentLetter = __webpack_require__(409);

	var _NoAuthActivation = __webpack_require__(410);

	var _NoAuthInviteActivation = __webpack_require__(411);

	var _NoAuthUserInviteAccept = __webpack_require__(413);

	var _NoAuthKey_a = __webpack_require__(414);

	var _Dispatcher = __webpack_require__(4);

	var _AuthFindPartner = __webpack_require__(415);

	var _AuthUserRequests = __webpack_require__(419);

	var _AuthCompanyCompanyContactsContacts = __webpack_require__(420);

	var _AuthCompanySettings = __webpack_require__(428);

	var _AuthTenders = __webpack_require__(429);

	var _AuthSettings = __webpack_require__(434);

	var _AuthAccounts = __webpack_require__(435);

	var _AuthUserUser = __webpack_require__(436);

	var _AuthTest = __webpack_require__(437);

	var _AuthCreateTender = __webpack_require__(433);

	var _AuthFindTenders = __webpack_require__(439);

	var _AuthAdmin = __webpack_require__(440);

	var _AuthAdmin2 = _interopRequireDefault(_AuthAdmin);

	var _AuthA_Users = __webpack_require__(441);

	var _AuthA_Users2 = _interopRequireDefault(_AuthA_Users);

	var _AuthA_Tenders = __webpack_require__(442);

	var _AuthA_Tenders2 = _interopRequireDefault(_AuthA_Tenders);

	var _AuthA_Companies = __webpack_require__(443);

	var _AuthA_Companies2 = _interopRequireDefault(_AuthA_Companies);

	var _AuthA_Invites = __webpack_require__(444);

	var _AuthA_Invites2 = _interopRequireDefault(_AuthA_Invites);

	var _AuthA_CreateCompany = __webpack_require__(445);

	var _AuthA_CreateCompany2 = _interopRequireDefault(_AuthA_CreateCompany);

	var _AuthA_Connections = __webpack_require__(449);

	var _AuthA_Connections2 = _interopRequireDefault(_AuthA_Connections);

	var _AuthLinksLinks = __webpack_require__(450);

	var _AuthLinksCarriers = __webpack_require__(451);

	var _AuthLinksCarriers2 = _interopRequireDefault(_AuthLinksCarriers);

	var _AuthLinksExpeditors = __webpack_require__(455);

	var _AuthLinksExpeditors2 = _interopRequireDefault(_AuthLinksExpeditors);

	var _AuthLinksShippers = __webpack_require__(456);

	var _AuthLinksShippers2 = _interopRequireDefault(_AuthLinksShippers);

	var _AuthLinksBookmarks = __webpack_require__(457);

	var _AuthLinksBookmarks2 = _interopRequireDefault(_AuthLinksBookmarks);

	var _AuthLinksBlackmarks = __webpack_require__(458);

	var _AuthLinksBlackmarks2 = _interopRequireDefault(_AuthLinksBlackmarks);

	var _AuthMyContacts = __webpack_require__(459);

	var _AuthSearch = __webpack_require__(460);

	var _AuthCompanyDetailsCompanyAbout = __webpack_require__(461);

	var _AuthCompanyCompanyInfoCompanyInfo = __webpack_require__(527);

	var _AuthCompComp = __webpack_require__(531);

	var _AuthCompCompNotFound = __webpack_require__(533);

	var _AuthCompCompAbout = __webpack_require__(534);

	var _AuthCompCompInfo = __webpack_require__(535);

	var _AuthCompCompContacts = __webpack_require__(536);

	var _AuthCompCompRelations = __webpack_require__(537);

	var _AuthLinksRelationTable = __webpack_require__(454);

	var _AuthCompCompOrders = __webpack_require__(538);

	var _AuthCompCompVehicles = __webpack_require__(539);

	// Company:
	var _AuthCompanyDetails = __webpack_require__(544);

	var _AuthCompanyDetailsCompanyTenders = __webpack_require__(545);

	var _AuthCompanyDetailsCompanyVacancies = __webpack_require__(546);

	// Price Requests

	var _AuthPriceRequestsPriceRequests = __webpack_require__(547);

	var _AuthPriceRequestsPriceRequestsCreated = __webpack_require__(550);

	var _AuthPriceRequestsPriceRequestsReceived = __webpack_require__(560);

	var _AuthPriceRequestsPriceRequestsSearch = __webpack_require__(561);

	var _AuthPriceRequestsPriceRequestsBookmarks = __webpack_require__(562);

	var _AuthPriceRequestsPriceRequestsView = __webpack_require__(563);

	var _AuthPriceRequestsPriceRequestsSearch2 = __webpack_require__(571);

	// test

	// Transport

	var _AuthTransportTransport = __webpack_require__(578);

	var _AuthTransportTransportList = __webpack_require__(581);

	// Orders

	var _AuthOrdersOrders = __webpack_require__(583);

	var _AuthOrdersOrderCreate = __webpack_require__(584);

	var _AuthOrdersOrderTemplates = __webpack_require__(586);

	var _AuthOrdersOrderNew = __webpack_require__(588);

	var _AuthOrdersOrderOpen = __webpack_require__(589);

	var _AuthOrdersOrderClose = __webpack_require__(590);

	var _AuthOrdersOrderShip = __webpack_require__(591);

	var _AuthOrdersOrderDone = __webpack_require__(592);

	var _AuthOrdersOrderArh = __webpack_require__(593);

	var _AuthOrdersOrderCancel = __webpack_require__(594);

	// Channel

	var _AuthChannelChannelJs = __webpack_require__(381);

	var _AuthChannelChannelJs2 = _interopRequireDefault(_AuthChannelChannelJs);

	// Chat

	var _AuthChatChatJs = __webpack_require__(391);

	var _AuthChatChatJs2 = _interopRequireDefault(_AuthChatChatJs);

	(function (d, w, c) {
	    (w[c] = w[c] || []).push(function () {
	        try {
	            w.yaCounter32354600 = new Ya.Metrika({
	                id: 32354600,
	                clickmap: true,
	                trackLinks: true,
	                accurateTrackBounce: true,
	                webvisor: true,
	                trackHash: true,
	                ut: "noindex"
	            });
	        } catch (e) {}
	    });

	    var n = d.getElementsByTagName("script")[0],
	        s = d.createElement("script"),
	        f = function f() {
	        n.parentNode.insertBefore(s, n);
	    };
	    s.type = "text/javascript";
	    s.async = true;
	    s.src = "https://mc.yandex.ru/metrika/watch.js";

	    if (w.opera == "[object Opera]") {
	        d.addEventListener("DOMContentLoaded", f, false);
	    } else {
	        f();
	    }
	})(document, window, "yandex_metrika_callbacks");

	/**
	 * Main App
	 */

	// require('../styles/index.scss');
	// require('../styles/datepicker.scss');

	__webpack_require__(595);

	var React = __webpack_require__(202);
	var Router = __webpack_require__(7);
	var Route = Router.Route;
	var RouteHandler = Router.RouteHandler;
	var DefaultRoute = Router.DefaultRoute;
	var Redirect = Router.DefaultRoute;

	var App = React.createClass({
	    displayName: "App",

	    getInitialState: function getInitialState() {
	        return {
	            serial: 1000,
	            notes: [],
	            systemIsDown: false,
	            // websocketIsDown: false,
	            shutdownCounter: 0
	        };
	    },

	    componentDidMount: function componentDidMount() {
	        _Dispatcher.Events.on(_Dispatcher.Events.EV_SHOW_NOTIFY, this.noteHr);
	        _Dispatcher.Events.on(_Dispatcher.Events.EV_SYSTEM_DOWN, this.systemDown);
	        // Events.on(Events.EV_WEBSOCKET_DOWN, this.websocketDown);
	        this.counter = 0;
	        this.startTimeoutId = null;
	        this.systemIsDown = false;
	        this.websocketIsDown = false;
	        this.resetStartCounter();
	    },

	    componentWillUnmount: function componentWillUnmount() {
	        _Dispatcher.Events.rem(_Dispatcher.Events.EV_SHOW_NOTIFY, this.noteHr);
	        _Dispatcher.Events.rem(_Dispatcher.Events.EV_SYSTEM_DOWN, this.systemDown);
	        // Events.rem(Events.EV_WEBSOCKET_DOWN, this.websocketDown);
	    },

	    systemDown: function systemDown(e) {
	        if (!this.systemIsDown) {
	            _ClassesLogger.logger.log('SYSTEM IS DOWN');
	            this.systemIsDown = true;
	            this.setState({ systemIsDown: this.systemIsDown, triesCounter: 0 });
	            this.startTimeoutId = setTimeout(this.startCounter, 1000);
	        }
	    },

	    // websocketDown( e ) {
	    //     if( ! this.websocketIsDown ) {
	    //         logger.log('WEBSOCKET IS DOWN');
	    //         this.websocketIsDown = true;
	    //         this.setState({websocketIsDown: this.websocketIsDown, triesCounter: 0});
	    //         this.startTimeoutId = setTimeout( this.startCounter, 1000 );
	    //     }
	    // },

	    startCounter: function startCounter() {
	        this.setState({ startCounter: --this.counterToPing });
	        clearTimeout(this.startTimeoutId);
	        if (this.counterToPing == 0) {
	            // if( this.websocketIsDown ) {
	            //     Events.openWebSocket();
	            //     this.pingWebsocket();
	            // } else {
	            this.pingSystem();
	            // }
	        } else {
	                this.startTimeoutId = setTimeout(this.startCounter, 1000);
	            }
	    },

	    // сколько секунж ждем до новой попытки соединения с сервером
	    resetStartCounter: function resetStartCounter() {
	        this.counterToPing = 10;
	    },

	    pingSystem: function pingSystem() {
	        var _this = this;

	        this.counter++;
	        _api.Api.ping().then(function (res) {
	            //if( this.counter > 5 ) {
	            if (res !== undefined && res.pong !== undefined) {
	                _this.systemIsDown = false;
	                _this.counter = 0;
	                _this.resetStartCounter();
	                _this.startTimeoutId = null;
	                _this.setState({ systemIsDown: _this.systemIsDown, triesCounter: _this.counter, startCounter: _this.counterToPing });
	            } else {
	                _ClassesLogger.logger.log('ping again');
	                _this.setState({ triesCounter: _this.counter });
	                _this.resetStartCounter();
	                _this.startCounter();
	            }
	        });
	    },

	    // pingWebsocket() {
	    //     this.counter++;
	    //     if( Events.ws.readyState == 1 ) {
	    //         this.websocketIsDown = false;
	    //         this.counter = 0;
	    //         this.resetStartCounter();
	    //         this.startTimeoutId = null;
	    //         this.setState({websocketIsDown: this.websocketIsDown, triesCounter: this.counter, startCounter: this.counterToPing});
	    //     } else {
	    //         logger.log('ping websocket again');
	    //         this.setState({triesCounter: this.counter});
	    //         this.resetStartCounter();
	    //         this.startCounter();
	    //     }
	    // },

	    noteHr: function noteHr(msg) {
	        var n = this.state.notes.concat();
	        n.push({ id: this.state.serial++, msg: msg });
	        this.setState({ notes: n });
	    },

	    closeNotify: function closeNotify(id) {
	        _ClassesLogger.logger.log('closeNotify id=' + id);
	        var n = this.state.notes.concat();
	        n = n.filter(function (o) {
	            return o.id != id;
	        });
	        this.setState({ notes: n });
	    },

	    onClick: function onClick(e) {
	        if (e.target.dataset && e.target.dataset.select) {
	            // ?
	        } else {
	                _Dispatcher.Events.run(_Dispatcher.Events.EV_CLICK_ANYWHERE, e);
	            }
	    },

	    onMouseUp: function onMouseUp(e) {
	        //console.log('[index] onMouseUp')
	        _Dispatcher.Events.run(_Dispatcher.Events.EV_GLOBAL_MOUSE_UP, e);
	    },

	    render: function render() {
	        var _this2 = this;

	        //console.log('this.state.notes:');
	        //console.debug(this.state.notes);
	        //console.debug(React);
	        //console.debug(App);
	        //console.debug(React.constructor.__proto__);

	        // всплывающие и автоматом исчезающие уведомления
	        var notes = this.state.notes.map(function (obj, key) {
	            return React.createElement(_ControlsNotificationsNotifications.Notifications, { key: key, obj: obj, close: _this2.closeNotify });
	        });

	        if (this.state.systemIsDown || this.state.websocketIsDown) {
	            return React.createElement(
	                _SimpleComponentsFlexBox.FlexBox,
	                { direction: "column", justify: "center", alignItems: "center", className: "systemIsDown__Container" },
	                React.createElement(
	                    "h1",
	                    { className: "box-row-nw just-center main-text heading" },
	                    "Cargo.chat"
	                ),
	                React.createElement(
	                    "div",
	                    { className: "systemIsDown__Message" },
	                    this.state.websocketIsDown ? React.createElement(
	                        "div",
	                        { className: "marg-b" },
	                        "Потеряно соединение с веб-сокетом."
	                    ) : React.createElement(
	                        "div",
	                        { className: "marg-b" },
	                        "Потеряно соединение с сервером."
	                    ),
	                    React.createElement(
	                        _SimpleComponentsFlexBox.FlexBox,
	                        { direction: "row", alignItems: "center" },
	                        React.createElement(
	                            "div",
	                            { className: "padd-right" },
	                            this.state.startCounter ? "Следующая попытка через" : "Попытка подключения...",
	                            ": "
	                        ),
	                        React.createElement(
	                            "div",
	                            { className: "box-row-nw just-center align-center accent-block" },
	                            React.createElement(
	                                "span",
	                                { className: "font12 font600 accent-pad" },
	                                this.state.startCounter ? this.state.startCounter : ''
	                            )
	                        )
	                    ),
	                    React.createElement(
	                        _SimpleComponentsFlexBox.FlexBox,
	                        { direction: "row", alignItems: "center" },
	                        React.createElement(
	                            "div",
	                            { className: "systemIsDown__Message_Tries" },
	                            "Неуспешных попыток: ",
	                            React.createElement(
	                                "span",
	                                { className: "systemIsDown__Message_Tries_Counter" },
	                                this.state.triesCounter
	                            )
	                        )
	                    )
	                )
	            );
	        } else {
	            return React.createElement(
	                "div",
	                { className: "page" },
	                React.createElement(
	                    "div",
	                    { className: "note" },
	                    notes
	                ),
	                React.createElement(RouteHandler, null)
	            )
	            // <div onMouseUp={this.onMouseUp} onClick={this.onClick} className="box-row-nw just-center">
	            //     <div className="main-window">
	            //         <RouteHandler/>
	            //         <div className="note-place">
	            //             {notes}
	            //         </div>
	            //     </div>
	            // </div>
	            ;
	        }
	    }
	});

	var routes = React.createElement(
	    Route,
	    { handler: App, path: "/" },
	    React.createElement(Route, { path: "/_=_", handler: _NoAuthSocialOauth.SocialOauth }),
	    React.createElement(Route, { name: "social_oauth", path: "social_oauth", handler: _NoAuthSocialOauth.SocialOauth }),
	    React.createElement(Route, { name: "newemail", path: "key_a", handler: _NoAuthKey_a.Key_a }),
	    React.createElement(
	        Route,
	        { name: "login", path: "login", handler: _NoAuthLoginLogin.Login },
	        React.createElement(DefaultRoute, { name: "form", handler: _NoAuthLoginLoginForm.LoginForm }),
	        React.createElement(Route, { name: "forgot", path: "forgot", handler: _NoAuthLoginLoginForgotPassword.LoginForgotPassword })
	    ),
	    React.createElement(Route, { name: "landing", path: "landing", handler: _NoAuthLandingLanding.Landing }),
	    React.createElement(Route, { name: "sentletter", path: "sentletter", handler: _NoAuthSentLetter.SentLetter }),
	    React.createElement(Route, { name: "activation", path: "activation", handler: _NoAuthActivation.Activation }),
	    React.createElement(Route, { name: "inviteactivation", path: "inviteactivation", handler: _NoAuthInviteActivation.InviteActivation }),
	    React.createElement(Route, { name: "user-invite-accept", path: "user-invite-accept", handler: _NoAuthUserInviteAccept.UserInviteAccept }),
	    React.createElement(
	        Route,
	        { name: "dashboard", path: "dashboard", handler: _AuthDashboard.Dashboard },
	        React.createElement(DefaultRoute, { name: "about", handler: _AuthCompanyCompanyInfoCompanyInfo.CompanyInfo }),
	        React.createElement(
	            Route,
	            { name: "links", path: "links", handler: _AuthLinksLinks.Links },
	            React.createElement(DefaultRoute, { name: "search", handler: _AuthSearch.Search }),
	            React.createElement(Route, { name: "carriers", path: "carriers", handler: _AuthLinksCarriers2["default"] }),
	            React.createElement(Route, { name: "shippers", path: "shippers", handler: _AuthLinksShippers2["default"] }),
	            React.createElement(Route, { name: "expeditors", path: "expeditors", handler: _AuthLinksExpeditors2["default"] }),
	            React.createElement(Route, { name: "blackmarks", path: "blackmarks", handler: _AuthLinksBlackmarks2["default"] }),
	            React.createElement(Route, { name: "bookmarks", path: "bookmarks", handler: _AuthLinksBookmarks2["default"] })
	        ),
	        React.createElement(
	            Route,
	            { name: "orders", path: "orders", handler: _AuthOrdersOrders.Orders },
	            "// ",
	            React.createElement(DefaultRoute, { name: "create", handler: _AuthOrdersOrderCreate.OrderCreate }),
	            React.createElement(Route, { name: "tpls", path: "tpls", handler: _AuthOrdersOrderTemplates.OrderTemplates }),
	            React.createElement(Route, { name: "new", path: "new", handler: _AuthOrdersOrderNew.OrderNew }),
	            React.createElement(Route, { name: "open", path: "open", handler: _AuthOrdersOrderOpen.OrderOpen }),
	            React.createElement(Route, { name: "close", path: "close", handler: _AuthOrdersOrderClose.OrderClose }),
	            React.createElement(Route, { name: "ship", path: "ship", handler: _AuthOrdersOrderShip.OrderShip }),
	            React.createElement(Route, { name: "done", path: "done", handler: _AuthOrdersOrderDone.OrderDone }),
	            React.createElement(Route, { name: "arh", path: "arh", handler: _AuthOrdersOrderArh.OrderArh }),
	            React.createElement(Route, { name: "cancel", path: "cancel", handler: _AuthOrdersOrderCancel.OrderCancel })
	        ),
	        React.createElement(Route, { name: "channel", path: "channel/:id", handler: _AuthChannelChannelJs2["default"] }),
	        React.createElement(Route, { name: "chat", path: "chat/:id", handler: _AuthChatChatJs2["default"] }),
	        React.createElement(
	            Route,
	            { name: "price-requests", path: "price-requests", handler: _AuthPriceRequestsPriceRequests.PriceRequests },
	            React.createElement(DefaultRoute, { name: "price-requests-created", handler: _AuthPriceRequestsPriceRequestsCreated.PriceRequestsCreated }),
	            React.createElement(Route, { name: "price-requests-received", path: "received", handler: _AuthPriceRequestsPriceRequestsReceived.PriceRequestsReceived }),
	            React.createElement(Route, { name: "price-requests-search", path: "search", handler: _AuthPriceRequestsPriceRequestsSearch.PriceRequestsSearch }),
	            React.createElement(Route, { name: "price-requests-search2", path: "search2", handler: _AuthPriceRequestsPriceRequestsSearch2.PriceRequestsSearch2 }),
	            React.createElement(Route, { name: "price-requests-bookmarks", path: "bookmarks", handler: _AuthPriceRequestsPriceRequestsBookmarks.PriceRequestsBookmarks }),
	            React.createElement(Route, { name: "price-requests-view", path: "view/:id", handler: _AuthPriceRequestsPriceRequestsView.PriceRequestsView })
	        ),
	        React.createElement(Route, { name: "my-contacts", path: "my-contacts", handler: _AuthMyContacts.MyContacts }),
	        React.createElement(
	            Route,
	            { name: "admin", path: "admin", handler: _AuthAdmin2["default"] },
	            React.createElement(Route, { name: "users", path: "users", handler: _AuthA_Users2["default"] }),
	            React.createElement(Route, { name: "companies", path: "companies", handler: _AuthA_Companies2["default"] }),
	            React.createElement(Route, { name: "a_create_company", path: "a_create_company", handler: _AuthA_CreateCompany2["default"] }),
	            React.createElement(Route, { name: "a_tenders", path: "a_tenders", handler: _AuthA_Tenders2["default"] }),
	            React.createElement(Route, { name: "a_invites", path: "a_invites", handler: _AuthA_Invites2["default"] }),
	            React.createElement(Route, { name: "a_connections", path: "a_connections", handler: _AuthA_Connections2["default"] })
	        ),
	        React.createElement(
	            Route,
	            { path: "comp/:id", handler: _AuthCompComp.Comp },
	            React.createElement(DefaultRoute, { name: "compabout", handler: _AuthCompCompAbout.CompAbout }),
	            React.createElement(Route, { path: "notfound", handler: _AuthCompCompNotFound.CompNotFound }),
	            React.createElement(Route, { path: "info", handler: _AuthCompCompInfo.CompInfo }),
	            React.createElement(Route, { path: "contacts", handler: _AuthCompCompContacts.CompContacts }),
	            React.createElement(
	                Route,
	                { path: "relations", handler: _AuthCompCompRelations.CompRelations },
	                React.createElement(DefaultRoute, { name: "relations-carriers", handler: _AuthLinksRelationTable.RelationTable }),
	                React.createElement(Route, { path: "shippers", handler: _AuthLinksRelationTable.RelationTable }),
	                React.createElement(Route, { path: "expeditors", handler: _AuthLinksRelationTable.RelationTable })
	            ),
	            React.createElement(Route, { path: "orders", handler: _AuthCompCompOrders.CompOrders }),
	            React.createElement(Route, { path: "vehicles", handler: _AuthCompCompVehicles.CompVehicles })
	        ),
	        React.createElement(
	            Route,
	            { name: "profile", handler: _AuthProfile.Profile },
	            React.createElement(DefaultRoute, { name: "settings", handler: _AuthSettings.Settings }),
	            React.createElement(Route, { name: "accounts", path: "accounts", handler: _AuthAccounts.Accounts }),
	            React.createElement(Route, { name: "sessions", path: "sessions", handler: _AuthSessions2.Sessions2 })
	        ),
	        React.createElement(Route, { name: "join", path: "join", handler: _AuthJoinCompany.JoinCompany }),
	        React.createElement(Route, { name: "requests", path: "requests", handler: _AuthUserRequests.Requests }),
	        React.createElement(
	            Route,
	            { name: "company", path: "company", handler: _AuthCompanyDetails.CompanyDetails },
	            React.createElement(DefaultRoute, { name: "company-about", handler: _AuthCompanyCompanyInfoCompanyInfo.CompanyInfo }),
	            React.createElement(Route, { name: "company-staff", path: "staff", handler: _AuthCompanyCompanyContactsContacts.Contacts }),
	            React.createElement(Route, { name: "company-register-info", path: "register-info", handler: _AuthCompCompInfo.CompInfo }),
	            React.createElement(Route, { name: "company-settings", path: "settings", handler: _AuthCompanySettings.CompanySettings }),
	            React.createElement(
	                Route,
	                { name: "company-transport", path: "transport", handler: _AuthTransportTransport.Transport },
	                React.createElement(DefaultRoute, { name: "transport-list", handler: _AuthTransportTransportList.TransportList })
	            )
	        ),
	        React.createElement(Route, { name: "findtenders", path: "findtenders", handler: _AuthFindTenders.FindTenders }),
	        React.createElement(Route, { name: "test", path: "test", handler: _AuthTest.Test })
	    ),
	    React.createElement(DefaultRoute, { handler: _AuthDashboard.Dashboard })
	);

	Router.run(routes, function (Handler) {
	    _Dispatcher.Events.run(_Dispatcher.Events.EV_ROUTE_CHANGED, null);
	    React.render(React.createElement(Handler, null), document.body);
	});

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	var _utils = __webpack_require__(2);

	var _Dispatcher = __webpack_require__(4);

	var _ClassesLogger = __webpack_require__(3);

	// это чудокостыль для фетча
	// делаешь var r = new xreq('ping', {foo: 'bar'}, onData)
	// и можешь сбросить его r.cancel()
	__webpack_require__(220);

	var xreq = // полученный json

	// usage: var r = new req('ping', {foo: 'bar'}, function (r) { console.debug(r.res) })
	function xreq(cm, params, handler) {
	    var _this = this;

	    _classCallCheck(this, xreq);

	    this.handler = null;
	    this.raise_errors = true;
	    this.res = null;

	    this.loaded = function (res) {
	        /*
	        console.log('loaded')
	        console.debug(res)
	        */
	        _this.res = res;
	        if (!_this.res) _this.res = { err: -1, msg: 'api failed' };
	        // if (this.raise_errors && this.res.err) Events.runError(this.res.msg);
	        _utils.Utils.run(_this.handler, _this);
	    };

	    this.cancel = function () {
	        _this.handler = null;
	    };

	    /*
	    console.log('xreq')
	    console.debug(cm)
	    console.debug(params)
	    */
	    this.handler = handler;
	    Api.req(cm, params, true, false).then(this.loaded);
	}

	// Стандартный FETCH запрос

	;

	exports.xreq = xreq;
	var Api = {

	    API_URI: 'http://cargo.chat/api/',

	    sid: _utils.Utils.cookieGet("sid"),

	    req: function req(cm) {
	        var params = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
	        var withSid = arguments.length <= 2 || arguments[2] === undefined ? true : arguments[2];
	        var errCrutch = arguments.length <= 3 || arguments[3] === undefined ? true : arguments[3];

	        //console.log('[Api] req "' + cm + '"')
	        params.cm = cm;
	        if (withSid) {
	            params.sid = this.sid;
	        }

	        // logger.log( 'API FETCH', this.API_URI + '?cm=' + Utils.o2j(params) );

	        return fetch(this.API_URI + '?cm=' + encodeURIComponent(_utils.Utils.o2j(params))).then(function (response) {
	            if (response.status >= 200 && response.status < 300) {
	                return response;
	            }
	            throw new Error(response.statusText);
	        }).then(function (response) {
	            return response.json();
	        }).then(function (json) {
	            if (json !== undefined) {
	                if (json.err === undefined && errCrutch) json.err = null;
	                return json;
	            } else {
	                _ClassesLogger.logger.log('API RETURN UNDEF', json);
	                // обрабатывать undefined
	                //throw new Error('API has returned undefined result.');    // потестить!
	            }
	        })['catch'](function (e) {
	            console.error('Request failed: ' + e);
	            _Dispatcher.Events.run(_Dispatcher.Events.EV_SYSTEM_DOWN, { message: e }); // тестируется
	        });

	        // // old behavior
	        // return fetch(this.API_URI + '?cm=' + Utils.o2j(params))
	        //     .then(r => r.json())     
	        //     .catch(e => console.log('request failed: ' + e));  // todo: show dialog
	    },

	    req_by_post: function req_by_post(cm) {
	        var params = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
	        var form_data = arguments.length <= 2 || arguments[2] === undefined ? new FormData() : arguments[2];
	        var withSid = arguments.length <= 3 || arguments[3] === undefined ? true : arguments[3];

	        params.cm = cm;
	        if (withSid) params.sid = this.sid;
	        console.log('req_by_post');
	        console.log(form_data);
	        return fetch(this.API_URI + '?cm=' + _utils.Utils.o2j(params), { method: 'post', body: form_data }).then(function (r) {
	            return r.json();
	        })['catch'](function (e) {
	            return console.log('request failed: ' + e);
	        }); // todo: show dialog
	    },

	    lead_reg: function lead_reg(params) {
	        return this.req('lead_reg', params, false);
	    },

	    events: function events(version, delay) {
	        return this.req('events', { version: version, delay: delay });
	    },
	    /*
	    compCheck       : function (params) {
	        return this.req('comp_check', params)
	    },
	    */
	    userInviteAccept: function userInviteAccept(params) {
	        return this.req('user_invite_accept', params);
	    },
	    compInviteCreate: function compInviteCreate(params) {
	        return this.req('comp_invite_create', params);
	    },
	    /*
	    compInviteAccept: function (params) {
	        return this.req('comp_invite_accept', params, false)
	    },
	    */
	    compUserMove: function compUserMove(params) {
	        return this.req('comp_user_move', params);
	    },

	    getDadata: function getDadata(params) {
	        return this.req('dadata', params, false);
	    },
	    compSuggest: function compSuggest(params) {
	        return this.req('comp_suggest', params);
	    },

	    linkCreateRequest: function linkCreateRequest(params) {
	        return this.req('comp_relation_create', params);
	    },
	    linkDeleteRequest: function linkDeleteRequest(params) {
	        return this.req('comp_relation_delete', params);
	    },
	    /*
	    loginRequest       : function (email, passw) {
	        return this.req('user_login', {email: email, passw: passw}, false);
	    },
	    loginEnterRequest       : function (token, code) {
	        return this.req('user_enter', {token: token, code: code}, false);
	    },
	    */
	    logoutRequest: function logoutRequest() {
	        var r = this.req('user_logout');
	        _utils.Utils.cookieDel('sid');
	        _utils.Utils.cookieDel('user_id');
	        return r;
	    },
	    closeSessionRequest: function closeSessionRequest(sid) {
	        return this.req('user_logout', { sid: sid }, false);
	    },

	    changeEmailARequest: function changeEmailARequest(email) {
	        return this.req('user_get_key_a', {
	            email: email
	        }, false);
	    },
	    newEmailRequest: function newEmailRequest(key, newEmail) {
	        return this.req('user_get_key_b', {
	            email: newEmail,
	            key_a: key
	        }, false);
	    },
	    userActivationRequest: function userActivationRequest(key) {
	        return this.req('user_activate', {
	            key: key
	        }, false);
	    },
	    userSessionsRequest: function userSessionsRequest() {
	        return this.req('user_sessions');
	    },

	    userStateRequest: function userStateRequest() {
	        return this.req('user_state');
	    },

	    userEditRequest: function userEditRequest(newState) {
	        return this.req('user_update', newState);
	    },

	    // Company
	    companyStateRequestByInn: function companyStateRequestByInn(inn) {
	        return this.req('comp_state', {
	            inn: inn
	        });
	    },
	    companyStateRequestById: function companyStateRequestById(id) {
	        return this.req('comp_state', {
	            comp_id: id
	        });
	    },
	    createCompanyRequest: function createCompanyRequest(options) {
	        return this.req('comp_create', options);
	    },
	    createCompanyNewRequest: function createCompanyNewRequest(options) {
	        return this.req('comp_create2', options);
	    },

	    updateCompanyRequest: function updateCompanyRequest(options) {
	        return this.req("comp_update", options);
	    },

	    deleteCompanyRequest: function deleteCompanyRequest(id) {
	        return this.req('comp_delete', {
	            comp_id: id
	        });
	    },
	    checkUnique: function checkUnique(f, v) {
	        return this.req('check_unique', { field: f, value: v });
	    },
	    joinRequestCreate: function joinRequestCreate(id) {
	        return this.req('join_request_create', { comp_id: id });
	    },
	    joinRequestDelete: function joinRequestDelete(id) {
	        return this.req('join_request_delete', { comp_id: id });
	    },
	    getCompsList: function getCompsList(params) {
	        return this.req('comps_list', params);
	    },

	    // Tenders
	    createTender: function createTender(params) {
	        console.log("debug");
	        console.debug(this);
	        return this.req('tender_create', params);
	    },
	    updateTender: function updateTender(params) {
	        return this.req('tender_update', params);
	    },
	    deleteTender: function deleteTender(id) {
	        return this.req('tender_delete', { tender_id: id });
	    },
	    tender_invite_accept: function tender_invite_accept(id) {
	        return this.req('tender_invite_accept', { invites: [id] });
	    },

	    // Contacts
	    user_contacts_list: function user_contacts_list(params) {
	        return this.req('user_contacts_list', params);
	    },
	    user_contact_add: function user_contact_add(params) {
	        return this.req('user_contact_add', params);
	    },
	    user_contact_rem: function user_contact_rem(params) {
	        return this.req('user_contact_rem', params);
	    },

	    // Channel
	    msg_channels_list: function msg_channels_list(params) {
	        return this.req('msg_channels_list', params);
	    },
	    msg_channel_users: function msg_channel_users(params) {
	        return this.req('msg_channel_users', params);
	    },
	    msg_channel_create: function msg_channel_create(params) {
	        return this.req('msg_channel_create', params);
	    },
	    msg_channel_delete: function msg_channel_delete(params) {
	        return this.req('msg_channel_delete', params);
	    },
	    msg_channel_invite: function msg_channel_invite(params) {
	        return this.req('msg_channel_invite', params);
	    },
	    msg_channel_leave: function msg_channel_leave(params) {
	        return this.req('msg_channel_leave', params);
	    },
	    msg_channel_join: function msg_channel_join(params) {
	        return this.req('msg_channel_join', params);
	    },
	    /*
	    msg_channel_hist: function(params){ // deprecated
	        return this.req('msg_channel_hist', params);
	    },
	    */
	    msg_channel_hist_list: function msg_channel_hist_list(params) {
	        return this.req('msg_channel_hist_list', params);
	    },
	    msg_channel_send: function msg_channel_send(params) {
	        return this.req('msg_channel_send', params);
	    },
	    msg_channel_erase: function msg_channel_erase(params) {
	        return this.req('msg_channel_erase', params);
	    },
	    msg_channel_correct: function msg_channel_correct(params) {
	        return this.req('msg_channel_correct', params);
	    },
	    msg_channel_readed: function msg_channel_readed(params) {
	        return this.req('msg_channel_readed', params);
	    },

	    // Chat
	    /*
	    msg_private_hist: function (params) { // deprecated
	        return this.req('msg_private_hist', params)
	    },
	    */
	    msg_private_hist_list: function msg_private_hist_list(params) {
	        return this.req('msg_private_hist_list', params);
	    },
	    msg_private_send: function msg_private_send(params) {
	        return this.req('msg_private_send', params);
	    },
	    msg_private_readed: function msg_private_readed(params) {
	        return this.req('msg_private_readed', params);
	    },
	    msg_privates_list: function msg_privates_list(params) {
	        return this.req('msg_privates_list', params);
	    },

	    // Price Requests
	    price_request_create: function price_request_create(params) {
	        return this.req('price_request_create', params);
	    },
	    price_request_delete: function price_request_delete(id) {
	        return this.req('price_request_delete', { price_request_id: id });
	    },
	    price_request_received_delete: function price_request_received_delete(id) {
	        return this.req('price_request_received_delete', { price_request_id: id });
	    },
	    price_request_bet_create: function price_request_bet_create(params) {
	        return this.req('price_request_bet_create', params);
	    },
	    price_request_bookmark_create: function price_request_bookmark_create(id) {
	        return this.req('price_request_bookmark_create', { price_request_id: id });
	    },
	    price_request_bookmark_delete: function price_request_bookmark_delete(id) {
	        return this.req('price_request_bookmark_delete', { price_request_id: id });
	    },
	    price_requests_list: function price_requests_list(params) {
	        return this.req('price_requests_list', params);
	    },
	    price_request_bets_list: function price_request_bets_list(params) {
	        return this.req('price_request_bets_list', params);
	    },

	    // Transport
	    vehicle_upsert: function vehicle_upsert(params) {
	        return this.req('vehicle_upsert', params);
	    },
	    vehicle_delete: function vehicle_delete(id) {
	        return this.req('vehicle_delete', { vehicle_id: id });
	    },
	    vehicles_list: function vehicles_list(params) {
	        return this.req('vehicles_list', params);
	    },

	    // Uploading file
	    temp_file_create: function temp_file_create(params) {
	        return this.req_by_post('temp_file_create', {}, params);
	    },

	    // Common db requests
	    justDoRequest: function justDoRequest(c) {
	        return this.req(c);
	    },

	    // Company

	    comp_invites_list: function comp_invites_list(params) {
	        return this.req('comp_invites_list', params);
	    },

	    comp_user_perm_change: function comp_user_perm_change(params) {
	        return this.req('comp_user_perm_change', params);
	    },

	    user_invite_create: function user_invite_create(params) {
	        return this.req('user_invite_create', params);
	    },

	    user_invite_delete: function user_invite_delete(params) {
	        return this.req('user_invite_delete', params);
	    },

	    user_position_change: function user_position_change(params) {
	        return this.req('user_position_change', params);
	    },

	    users_list: function users_list(params) {
	        return this.req('users_list', params);
	    },

	    ping: function ping(c) {
	        //console.log('ping');
	        return this.req('ping', {}, false);
	    }

	};

	exports.Api = Api;
	// handler окончания загрузки
	// при получении ошибки от апи слать ее в системный коллектор событий

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	var _ClassesLogger = __webpack_require__(3);

	var Utils = {
	    // вспомогательные функции - четкая проверка типов
	    toStr: function toStr(v) {
	        return Object.prototype.toString.call(v);
	    },
	    isArray: function isArray(v) {
	        return this.toStr(v) === '[object Array]';
	    },
	    isObject: function isObject(v) {
	        return this.toStr(v) === '[object Object]';
	    },
	    isNumber: function isNumber(v) {
	        return this.toStr(v) === '[object Number]';
	    },
	    isString: function isString(v) {
	        return this.toStr(v) === '[object String]';
	    },
	    o2j: function o2j(obj) {
	        try {
	            return JSON.stringify(obj);
	        } catch (e) {
	            console.error('JSON.stringify fail: ' + e);
	            return '{}';
	        }
	    },
	    j2o: function j2o(json) {
	        try {
	            return JSON.parse(json);
	        } catch (e) {
	            //console.error('JSON.parse fail: ' + e + ' src=' + json);
	            return {};
	        }
	    },

	    // вернет объект по пути path из src
	    // usage: var o = {k1: {k2: {k3: 1, k4: 888}}}
	    // usage: Utils.deep(o, 'k1', null)       // {k2: {k3: 1, k4: 888}}
	    // usage: Utils.deep(o, 'k1.k2.k4', 321)  // 888
	    // usage: Utils.deep(o, 'k1.k2.k5', 321)  // 321
	    deep: function deep(src, path, def) {
	        if (!Utils.isObject(src)) return def;
	        if (!Utils.isString(path)) return def;
	        var nodes = path.split('.');
	        for (var i = 0, l = nodes.length; i < l; i++) {
	            src = src[nodes[i]];
	            if (src == null) return def;
	        }
	        return src;
	    },

	    // вернет true для валидного email
	    isEmailValid: function isEmailValid(email) {
	        var re = /^([\w-]+(?:\.[\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$/i;
	        return re.test(email);
	    },

	    // вернет true если el будет найден в ar
	    isElementInArray: function isElementInArray(el, ar) {
	        return Utils.isArray(ar) && ar.indexOf(el) != -1;
	    },

	    // проверка даты на соответствие маске YYYY-MM-DD
	    dateFix: function dateFix(val, def) {
	        if ((val || '').match(/^\d{4}-\d{2}-\d{2}$/) != null) return val;
	        return def;
	    },

	    // формат run(func[, arg1[, arg2[, ...]]])
	    // func - функция, которая запусткается с передачей в нее агрументов
	    // возвращает результат выполнения func
	    // если func не передать или передать не функцию, то вернется null
	    run: function run() {
	        //console.log('Utils.run');
	        //console.debug(arguments);
	        if (arguments.length < 1) return null;
	        //console.debug(Object.prototype.toString.call(arguments[0]));
	        var f = arguments[0];
	        if (Object.prototype.toString.call(f) != '[object Function]') return null;
	        var a = [];
	        for (var i = 1, l = arguments.length; i < l; i++) a.push(arguments[i]);
	        return f.apply(null, a);
	    },

	    // Функция получения ширины вьюпорта
	    getClientWidth: function getClientWidth() {
	        return document.compatMode == 'CSS1Compat' && !window.opera ? document.documentElement.clientWidth : document.body.clientWidth;
	    },
	    // Функция получения высоты вьюпорта
	    getClientHeight: function getClientHeight() {
	        return document.compatMode == 'CSS1Compat' && !window.opera ? document.documentElement.clientHeight : document.body.clientHeight;
	    },
	    getMinMaxXY: function getMinMaxXY(array) {
	        var minX = 100;
	        var minY = 100;
	        var maxX = 0;
	        var maxY = 0;
	        array.forEach(function (item, z, arr) {
	            if (item.x && item.y) {
	                if (item.x < minX) minX = item.x;
	                if (item.y < minY) minY = item.y;
	                if (item.x > maxX) maxX = item.x;
	                if (item.y > maxY) maxY = item.y;
	            }
	        });
	        return [[minY, minX], [maxY, maxX]];
	    },
	    cookieGet: function cookieGet(name) {
	        var re = new RegExp("(?:^|; )" + name.replace(/([\.$?*|{}\(\)\[\]\\\/\+^])/g, '\\$1') + "=([^;]*)");
	        var matches = document.cookie.match(re);
	        return matches ? decodeURIComponent(matches[1]) : null;
	    },
	    cookieSet: function cookieSet(name, value, options) {
	        options = options || {};
	        var expires = options.expires;
	        if (typeof expires == "number" && expires) {
	            var d = new Date();
	            d.setTime(d.getTime() + expires * 1000);
	            expires = options.expires = d;
	        }
	        if (expires && expires.toUTCString) {
	            options.expires = expires.toUTCString();
	        }
	        value = encodeURIComponent(value);
	        var updatedCookie = name + "=" + value;
	        for (var propName in options) {
	            updatedCookie += "; " + propName;
	            var propValue = options[propName];
	            if (propValue !== true) {
	                updatedCookie += "=" + propValue;
	            }
	        }
	        document.cookie = updatedCookie;
	    },
	    cookieDel: function cookieDel(name) {
	        this.cookieSet(name, "", { expires: -1 });
	    },
	    lg: function lg(txt) {
	        var d = new Date();
	        var tm = d.toTimeString().split(' ')[0] + '.' + d.getTime().toString().substr(-3);
	        console.log(tm + ' ' + txt);
	    },
	    extract_uri_param: function extract_uri_param(uri, key) {
	        var m = uri ? uri.match(new RegExp('(\\?|&)' + key + '=([^&#]+)(&?)', '')) : null;
	        return m && m.length == 4 ? m[2] : null;
	    },
	    extract_phone_number: function extract_phone_number(v) {
	        if (!v) return null;
	        var m = v.match(/(\d)/g);
	        return m && m.length == 11 ? m.join('') : null;
	    },
	    extract_longlat: function extract_longlat(latlong) {
	        var m = String(latlong || '').match(/^((?:-?)(?:[0-9]+)?(?:.(?:[0-9]+))) ((?:-?)(?:[0-9]+)?(?:.(?:[0-9]+)))$$/);
	        return m && m.length == 3 ? { x: m[1], y: m[2] } : null;
	    },
	    extract_ymd_from_date: function extract_ymd_from_date(v) {
	        var r = { year: 2015, month: 1, day: 1 };
	        if (v) {
	            var m = v.match(/([^\-]+)\-([^\-]+)\-([^\-T]+)/); // нестрогое извлечение даты из строки (три вхождения без минусов, разделенных минусами)
	            if (m && m.length == 4) {
	                r.year = m[1];
	                r.month = m[2];
	                r.day = m[3];
	            }
	        }
	        return r;
	    },
	    is_valid_yyyymmdd: function is_valid_yyyymmdd(v) {
	        return (/^(\d{4})\-(\d{2})\-(\d{2})$/.test(v)
	        ); // строгая проверка валидности даты (формат YYYY-MM-DD)
	    },

	    // Показать стек при ошибке
	    stackTrace: function stackTrace() {
	        var err = new Error();
	        return err.stack;
	    },

	    // определение позиции курсора в поле input или textarea
	    getCaretPosition: function getCaretPosition(field) {
	        var pos = 0;
	        if (document.selection) {
	            // IE < 11
	            field.focus();
	            var sel = document.selection.createRange();
	            sel.moveStart('character', -field.value.length);
	            pos = sel.text.length;
	        } else if (field.selectionStart || field.selectionStart == '0') {
	            pos = field.selectionDirection == 'backward' ? field.selectionStart : field.selectionEnd;
	        }
	        return pos;
	    },

	    // автоматическое увеличение высоты элемента до максимального значения
	    elemAutoSize: function elemAutoSize(ta, maxHeight) {

	        if (!ta) return;

	        // считаем оффсет
	        var offset = !window.opera ? ta.offsetHeight - ta.clientHeight : ta.offsetHeight + parseInt(window.getComputedStyle(t, null).getPropertyValue('border-top-width'));
	        ta.style.height = 'auto';
	        var viewHeight = ta.clientHeight + offset;
	        var totalHeight = ta.scrollHeight + offset;

	        // вытаскиваем предыдущее значение, если есть
	        var prevHeight = ta.getAttribute('data-prev-height');
	        if (!prevHeight) prevHeight = 0;

	        if (totalHeight > maxHeight) {
	            // если убежали за максимум, оставляем предыдущую высоту поля
	            prevHeight = maxHeight - prevHeight > offset * 2 ? maxHeight - offset : prevHeight;
	            ta.style.height = prevHeight ? prevHeight + 'px' : maxHeight + 'px';
	            ta.style.overflowY = 'auto';
	        } else {
	            // увеличиваем поле, пока можно
	            ta.style.height = totalHeight + 'px';
	            ta.style.overflowY = 'hidden';
	            ta.setAttribute('data-prev-height', totalHeight);
	        }
	        //logger.log('autosize', viewHeight, totalHeight, prevHeight);
	    },

	    // регистрация глобального события window
	    addWindowEvent: function addWindowEvent(eventType, e) {
	        if (window.attachEvent) {
	            window.attachEvent('on' + eventType, function () {
	                e();
	            });
	        } else if (window.addEventListener) {
	            window.addEventListener(eventType, function () {
	                e();
	            }, true);
	        }
	    },

	    // отписка от глобального события window
	    remWindowEvent: function remWindowEvent(eventType, e) {
	        if (window.detachEvent) {
	            window.detachEvent('on' + eventType, function () {
	                e();
	            });
	        } else if (window.removeEventListener) {
	            window.removeEventListener(eventType, function () {
	                e();
	            }, true);
	        }
	    },

	    // format timestamp to YYYY-MM-DD HH:MM:SS
	    ts2tmdhms: function ts2tmdhms(ts) {
	        if (!Utils.isNumber(ts)) return null;
	        var d = new Date(ts * 1000);
	        return [d.getYear() + 1900, Utils.zf(d.getMonth() + 1, 2), Utils.zf(d.getDate(), 2)].join('-') + ' ' + [Utils.zf(d.getHours(), 2), Utils.zf(d.getMinutes(), 2), Utils.zf(d.getSeconds(), 2)].join(':');
	    },

	    // format timestamp to YYYY-MM-DD
	    timestamp2YYYYMMDD: function timestamp2YYYYMMDD(ts) {
	        if (!Utils.isNumber(ts)) return null;
	        var d = new Date(ts * 1000);
	        return [d.getYear() + 1900, Utils.zf(d.getMonth() + 1, 2), Utils.zf(d.getDate(), 2)].join('-');
	    },

	    // zefofill: zf(123, 5) == '00123'
	    zf: function zf(v, n) {
	        v = String(v) || '';
	        n = n || 0;
	        while (v.length < n) v = '0' + v;
	        return v;
	    },

	    // вставка нолика для преобразования времени в формат 00:00
	    timeZf: function timeZf(ts) {
	        var date = new Date(ts * 1000);
	        return [Utils.zf(date.getHours(), 2), Utils.zf(date.getMinutes(), 2)].join(':');
	    },

	    // вставка текста в textarea
	    setTaText: function setTaText(ta, text) {

	        var startPos = ta.selectionStart;
	        var endPos = ta.selectionEnd;

	        // вставляем текст
	        ta.value = ta.value.substring(0, startPos) + text + ta.value.substring(endPos, ta.value.length);

	        // курсор в конец вставки
	        ta.focus();
	        ta.selectionStart = startPos + text.length;
	        ta.selectionEnd = startPos + text.length;
	    },

	    // удаление всех html тегов, включая атрибуты
	    clearHtmlTags: function clearHtmlTags(text) {
	        return text.replace(/<(.|\n)*?>/g, '');
	    },

	    // удаление пробелов и переводов строк в начале и конце строки
	    trim: function trim(txt) {
	        return txt.replace(/^\s+|\s+$/g, "");
	    },
	    lTrim: function lTrim(txt) {
	        return txt.replace(/^\s+/, "");
	    },
	    rTrim: function rTrim(txt) {
	        return txt.replace(/\s+$/, "");
	    },

	    /*
	     * Recursively merge properties and return new object
	     * obj1 <- obj2 [ <- ... ]
	     */
	    merge: function merge() {
	        var dst = {},
	            src = undefined,
	            p = undefined,
	            args = [].splice.call(arguments, 0);
	        while (args.length > 0) {
	            src = args.splice(0, 1)[0];
	            if (toString.call(src) == '[object Object]') {
	                for (p in src) {
	                    if (src.hasOwnProperty(p)) {
	                        if (toString.call(src[p]) == '[object Object]') {
	                            dst[p] = Utils.merge(dst[p] || {}, src[p]);
	                        } else {
	                            dst[p] = src[p];
	                        }
	                    }
	                }
	            }
	        }
	        return dst;
	    },

	    checkFlags: function checkFlags(flags, flag) {
	        return (flags & 1) == 1 ? true : (flags & flag) === flag;
	    },

	    toArray: function toArray(obj) {
	        var newArray = [];
	        function add(obj, parentKey) {
	            var newParentKey = !parentKey ? "" : parentKey + ".";
	            for (var key in obj) {
	                //console.log(typeof(obj[key]));
	                if (typeof obj[key] === "object") {
	                    add(obj[key], newParentKey + key);
	                } else {
	                    newArray.push({ key: newParentKey + key, value: obj[key] });
	                }
	            }
	        }
	        add(obj);
	        return newArray;
	    },

	    getValue: function getValue(src, path) {
	        var len = path.split(".");
	        for (var i = 0; i < len.length; i++) {
	            src = src[len[i]];
	            if (src === undefined) return undefined;
	        }
	        return src;
	    },

	    browserName: navigator.sayswho = (function () {
	        var ua = navigator.userAgent,
	            tem,
	            M = ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i) || [];
	        if (/trident/i.test(M[1])) {
	            tem = /\brv[ :]+(\d+)/g.exec(ua) || [];
	            return 'IE ' + (tem[1] || '');
	        }
	        if (M[1] === 'Chrome') {
	            tem = ua.match(/\b(OPR|Edge)\/(\d+)/);
	            if (tem != null) return tem.slice(1).join(' ').replace('OPR', 'Opera');
	        }
	        M = M[2] ? [M[1], M[2]] : [navigator.appName, navigator.appVersion, '-?'];
	        if ((tem = ua.match(/version\/(\d+)/i)) != null) M.splice(1, 1, tem[1]);
	        return M.join(' ');
	    })()

	};

	exports.Utils = Utils;
	//module.exports = Utils;

	var DateTime = (function () {
	    function DateTime(date) {
	        _classCallCheck(this, DateTime);

	        this.__months = [{ id: 1, value: "Января" }, { id: 2, value: "Февраля" }, { id: 3, value: "Марта" }, { id: 4, value: "Апреля" }, { id: 5, value: "Мая" }, { id: 6, value: "Июня" }, { id: 7, value: "Июля" }, { id: 8, value: "Августа" }, { id: 9, value: "Сентября" }, { id: 10, value: "Октября" }, { id: 11, value: "Ноября" }, { id: 12, value: "Декабря" }];

	        this.newDate = date.match(/(\d{4})-(\d{2})-(\d{2})(?:(?:T|\s)(\d{2}):(\d{2}):(\d{2})){0,1}/);
	    }

	    _createClass(DateTime, [{
	        key: 'getFullMonthDate',
	        value: function getFullMonthDate() {
	            var intDate = parseInt(this.newDate[2], 10);
	            var month = this.__months[intDate - 1].value;
	            return this.newDate[3] + " " + month + " " + this.newDate[1];
	        }
	    }, {
	        key: 'getDate',
	        value: function getDate() {
	            return this.newDate[3] + "." + this.newDate[2] + "." + this.newDate[1];
	        }
	    }, {
	        key: 'getTime',
	        value: function getTime() {
	            return this.newDate[4] + ":" + this.newDate[5];
	        }
	    }]);

	    return DateTime;
	})();

	exports.DateTime = DateTime;

	_ClassesLogger.logger.log(Utils.browserName);

/***/ },
/* 3 */
/***/ function(module, exports) {

	/**
	 * System Logger - Логгер для отладки
	 * Нужно использовать вместо console.log.
	 * 
	 * В логгер можно передавать любое число параметров в любом порядке, в том числе this класса,
	 * откуда вызывается сам логгер. Логгер выведет в консоли текущую дату, название класса (если передано),
	 * комментарий (первая текстовая строка, которая передана в логгер), остальные параметры будут
	 * показаны по одному на каждой строке.
	 *
	 * - Подключение логгера:
	 *   import {logger} from '{путь_до}/Classes/Logger';
	 *
	 * - Использование логгера:
	 *   вызывается командой logger.log( параметры );
	 *
	 * - Параметры логгера:
	 *   принимает любое количество параметров в любом порядке, при этом:
	 *   - первая встреченная строка будет интерпретирована как комментарий
	 *   - первый встреченный объект с именем конструктора, отличным от Object и Array, будет
	 *     интерпретирован как объект {this}, из которого был вызван логгер, и будет показано имя класса
	 *   - если в логгер передать строку 'error', то будет сделан вызов console.error вместо console.debug
	 *
	 * - Примеры:
	 *   - Вызов
	 *     logger.log('render transport list', this.state, 'another string', this, AppState.Transport, 'error', [1,2,3,4]);
	 *   - Ответ
	 *     *error* [ 5 сент. 2015 г., 22:32 ] {TransportList} render transport list test
	 *     объект this.state
	 *     another string
	 *     объект AppState.Transport
	 *     массив [1,2,3,4]
	 * 
	 */

	// usage:
	// import {logger} from '../../Classes/Logger';
	// ...
	// logger.log(this, 'Text to log')
	// ...

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var Logger = (function () {
	    function Logger(env) {
	        var _this = this;

	        _classCallCheck(this, Logger);

	        this.with_time = false;

	        this.log = function () {
	            for (var _len = arguments.length, params = Array(_len), _key = 0; _key < _len; _key++) {
	                params[_key] = arguments[_key];
	            }

	            if (_this.env != "development") return;

	            if (params.length) {
	                var t;

	                (function () {

	                    // get date
	                    var d = new Date();
	                    var currentDate = d.toLocaleString('ru-RU', { year: 'numeric', month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit' });

	                    // get the first string and the first object with the classname - it's a {this} object
	                    var commentString = '';
	                    var className = '';
	                    var isError = false;
	                    var paramsToLog = params.filter(function (param) {
	                        if (!commentString.length && typeof param === 'string') {
	                            commentString = ' ' + param;
	                        } else if (!className.length && typeof param === 'object' && param.constructor.name !== 'Object' && param.constructor.name !== 'Array' && param.constructor.name !== 'RegExp') {
	                            className = '{' + param.constructor.name + '}';
	                        } else if (typeof param === 'string' && param.toLowerCase() === 'error') {
	                            isError = true;
	                        } else {
	                            return param;
	                        }
	                    });

	                    // print the log header with the date, class name and comment string
	                    t = className + commentString;

	                    if (_this.with_time) t = '[' + currentDate + '] ' + t;
	                    isError ? console.error(t) : console.debug(t);

	                    // print other params one by one, each param at the new string
	                    paramsToLog.forEach(function (param) {
	                        console.log(param);
	                    });
	                })();
	            }
	        };

	        this.env = env || "development";
	    }

	    _createClass(Logger, null, [{
	        key: "debug",

	        /**
	         * DEPRECATED
	         */
	        value: function debug(e, msg) {
	            console.log("[" + Logger.getDate() + "] {" + e.constructor.name + "} " + msg);

	            for (var _len2 = arguments.length, params = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
	                params[_key2 - 2] = arguments[_key2];
	            }

	            if (params.length) {
	                params.map(function (param, key) {
	                    console.debug(param);
	                });
	            }
	        }

	        /**
	         * DEPRECATED
	         */
	    }, {
	        key: "error",
	        value: function error(e, msg) {
	            console.error("[" + Logger.getDate() + "] {" + e.constructor.name + "} " + msg);

	            for (var _len3 = arguments.length, params = Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {
	                params[_key3 - 2] = arguments[_key3];
	            }

	            if (params.length) {
	                params.map(function (param, key) {
	                    console.error(param);
	                });
	            }
	        }

	        /**
	         * DEPRECATED
	         */
	    }, {
	        key: "getDate",
	        value: function getDate() {
	            var d = new Date();
	            var dd = (d.getDate() < 10 ? '0' : '') + d.getDate();
	            var MM = (d.getMonth() + 1 < 10 ? '0' : '') + (d.getMonth() + 1);
	            var hh = (d.getHours() < 10 ? '0' : '') + d.getHours();
	            var mm = (d.getMinutes() < 10 ? '0' : '') + d.getMinutes();
	            var ss = (d.getSeconds() < 10 ? '0' : '') + d.getSeconds();
	            //let yy = d.getFullYear().toString().substr(-2);
	            return d.getFullYear() + "-" + MM + "-" + dd + " " + hh + ":" + mm + ":" + ss;
	        }
	    }]);

	    return Logger;
	})();

	exports["default"] = Logger;
	var logger = new Logger("development");
	exports.logger = logger;

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _api = __webpack_require__(1);

	var _utils = __webpack_require__(2);

	var _ClassesEventsController = __webpack_require__(5);

	var _ClassesEventsController2 = _interopRequireDefault(_ClassesEventsController);

	var _ClassesLogger = __webpack_require__(3);

	var React = __webpack_require__(202);

	var Error = {
	    error: [],
	    newError: function newError(code, msg) {
	        console.log("NEW ERROR");
	        console.debug("Code:");
	        console.debug(code);
	        console.debug("Code:");
	        console.debug(msg);
	        var err = { code: code, msg: msg };
	        this.error.push(err);
	        Events.run(Events.EV_SHOW_NOTIFY, msg);
	    }
	};

	exports.Error = Error;
	var Dictionary = {

	    companyPrivateSettingsList: [{ id: "any", value: 'Любая компания' }, { id: "none", value: 'Никто' }, { id: "request", value: 'Только по запросу' }],

	    ofpList: [{ id: 1, value: 'Индивидуальный предприниматель' }, { id: 2, value: 'Общество с ограниченной ответственностью' }, { id: 3, value: 'Акционерное общество' }, { id: 4, value: 'Государственные унитарное предприятие' }, { id: 5, value: 'Муниципальные унитарное предприятие' }],

	    // [DEPRECATED in new API]
	    //
	    // tagsList: [
	    //     {id: 1, tag: "trade_from", value: 'Склад'},
	    //     {id: 2, tag: "transport_from", value: 'Перевозчик'},
	    //     {id: 3, tag: "transport_to", value: 'Грузовладелец'},
	    //     {id: 4, tag: "trade_to", value: 'Покупатель'},
	    //     {id: 5, tag: "expeditor", value: 'Экспедитор'}
	    // ],

	    tagsList: [{ id: 1, tag: "carrier", value: 'Перевозчик' }, { id: 2, tag: "expeditor", value: 'Экспедитор' }, { id: 3, tag: "shipper", value: 'Грузовладелец' }],

	    taxationList: [{ id: 1, tag: "ОС", value: 'ОСН - Общая система налогообложения' }, { id: 2, tag: "УСН", value: 'УСН - Упрощенная система налогообложения' }, { id: 3, tag: "ЕНВД", value: 'ЕНВД - Единый налог на вмененный доход' }, { id: 4, tag: "ПСН", value: 'ПСН - Патентная система налогообложения' }, { id: 5, tag: "ЕСХН", value: 'ЕСХН - Единый сельскохозяйственный налог' }],

	    getValueFromDadata: function getValueFromDadata(key) {
	        //this.deep_value(this.dadata, key);
	        return this.dadata[key];
	    },

	    selectFromCompPrivateList: function selectFromCompPrivateList(id) {
	        return this.companyPrivateSettingsList.map(function (item) {
	            var newItem = {
	                id: item.id,
	                value: item.value
	            };
	            newItem.__selected__ = newItem.id === id;

	            return newItem;
	        });
	    },

	    // getTags(arr){
	    //     //console.log(arr);
	    //     var newArr = [];

	    //     if (arr.length > 0) {
	    //         newArr = arr.map(item=> {
	    //             var newItem = this.tagsList.filter(tag=> {
	    //                 return tag.tag === item.tag
	    //             });

	    //             return newItem[0].value
	    //         })
	    //     }
	    //     //console.log(newArr);
	    //     return newArr
	    // },

	    // getTagsForMyComp(arr){
	    //     //console.log(arr);
	    //     var newArr = [];

	    //     if ((arr || []).length > 0) {
	    //         newArr = arr.map(item=> {
	    //             var newItem = this.tagsList.filter(tag=> {
	    //                 return tag.tag === item.tag
	    //             });

	    //             return newItem[0].value
	    //         })
	    //     }
	    //     //console.log(newArr);
	    //     return newArr
	    // },

	    // getTagsSimple(arr){
	    //     console.log(arr);
	    //     var newArr = [];

	    //     if ((arr || []).length > 0) {
	    //         newArr = arr.map(item=> {
	    //             var newItem = this.tagsList.filter(tag=> {
	    //                 return tag.tag === item
	    //             });

	    //             return newItem[0].value
	    //         })
	    //     }
	    //     console.log(newArr);
	    //     return newArr
	    // },

	    getOfpList: function getOfpList() {
	        return this.ofpList;
	    },

	    getTagsList: function getTagsList() {
	        return this.tagsList;
	    },

	    // getCompanyTaxation( taxation ) {
	    //     var tax = this.taxationList.filter( tax => {
	    //         return tax.tag == taxation;
	    //     });
	    //     return tax[0].value;
	    // },

	    selectFromTagsList: function selectFromTagsList(arr) {
	        return this.tagsList.map(function (item) {
	            var isId = false;
	            var newItem = { id: item.id, tag: item.tag, value: item.value };
	            for (var i = 0; i < arr.length; i++) {
	                if (item.id === arr[i]) {
	                    isId = true;
	                }
	            }
	            if (isId) {
	                newItem.__selected__ = true;
	            }
	            return newItem;
	        });
	    }
	};

	exports.Dictionary = Dictionary;
	var Store = {
	    userId: null,
	    userState: null,
	    companies: null,
	    sessions: [],
	    selectedCompany: null,
	    searchResult: null,
	    setSearchResult: function setSearchResult(query, result) {
	        if (query) {
	            this.searchResult = { query: query, results: result };
	        } else {
	            console.log("не передан поисковый запрос (первый аргумент)");
	        }
	    },
	    getSearchResult: function getSearchResult(query) {
	        var res = this.searchResult;
	        if (res && res.query === query) {
	            console.log("из кэша");
	            return res;
	        }
	        return false;
	    },
	    setSelectedCompany: function setSelectedCompany(company) {
	        //console.log('[Store] setSelectedCompany')
	        //console.debug(company)
	        this.selectedCompany = company;
	        Events.run(Events.EV_COMP_DETAILS, { company: Store.selectedCompany });
	    },
	    setSessions: function setSessions(sessions) {
	        //console.log('[Store] setSessions');
	        //console.debug(sessions)
	        this.sessions = sessions;
	        Events.run(Events.EV_SESSIONS_UPDATE, { sessions: this.sessions });
	    },
	    setUserState: function setUserState(state) {
	        //console.log('[Store] setUserState');
	        this.userState = state;
	        //this.deleteAllCompanies();
	        Events.run(Events.EV_PROFILE_UPDATE, {
	            profile: this.userState,
	            editMode: false
	        });
	        if (this.userState.comps.length > 0) {
	            Actions.getCompanyByInn(this.userState.comps[0].inn);
	        }
	    },

	    addCompanies: function addCompanies(comps) {
	        //console.log('[Store] addCompanies')
	        //console.debug(comps)
	        this.companies = comps;
	        Events.run(Events.EV_COMPS_CHANGED, {});
	    },

	    removeCompById: function removeCompById(id) {
	        //console.log('[Store] removeCompById ' + id)
	        for (var i = 0; i < this.companies.length; i++) {
	            var c = this.companies[i];
	            if (c.id != id) continue;
	            if (this.selectedCompany && this.selectedCompany.id == c.id) {
	                this.selectedCompany = null;
	                this.userState = null;
	                this.companies = null;
	                Actions.getUserState();
	                return;
	            }
	            this.companies.splice(i, 1);
	            Events.run(Events.EV_COMPS_CHANGED, {});
	            return;
	        }
	    },
	    companiesReady: function companiesReady() {
	        return this.companies != null;
	    }
	};

	exports.Store = Store;
	var Actions = {

	    createLink: function createLink(params) {
	        _api.Api.linkCreateRequest(params).then(function (res) {
	            if (res.err) {
	                console.log("Error " + res.msg);
	            } else {
	                console.log("СВЯЗЬ СОЗДАНА");
	            }
	        });
	    },

	    tender_invite_accept: function tender_invite_accept(id) {
	        _api.Api.tender_invite_accept(id).then(function (res) {
	            console.log(res);
	            if (res.invites_accepted.length === 0) {
	                console.log("Error");
	            } else {}
	        });
	    },

	    createTender: function createTender(params) {
	        _api.Api.createTender(params).then(function (res) {
	            if (res.err) {
	                console.log(res.msg);
	            } else {
	                console.log(res);
	                window.location.hash = 'dashboard/company/tenders';
	            }
	        });
	    },
	    updateTender: function updateTender(params, backToTenders) {
	        var _this = this;

	        _api.Api.updateTender(params).then(function (res) {
	            if (res.err) {
	                alert(res.msg);
	                console.log(res.msg);
	            } else {
	                console.log(res);
	                _this.updateCompanyInfo();
	                backToTenders();
	            }
	        });
	    },
	    deleteTender: function deleteTender(id) {
	        var _this2 = this;

	        _api.Api.deleteTender(id).then(function (res) {
	            if (res.err) {
	                console.log(res.msg);
	            } else {
	                console.log(res);
	                _this2.updateCompanyInfo();
	            }
	        });
	    },

	    getCompsList: function getCompsList(params) {
	        _api.Api.getCompsList(params).then(function (res) {
	            if (res.err) {
	                console.log(res.msg);
	            } else {
	                console.log(res);
	                Store.setSearchResult(res.data);
	            }
	        });
	    },

	    joinRequestCreate: function joinRequestCreate(id) {
	        console.log('[Actions] joinRequestCreate ' + id);
	        _api.Api.joinRequestCreate(id).then(function (res) {
	            if (res.err) {
	                console.log(res.msg);
	            } else {}
	        });
	    },
	    joinRequestDelete: function joinRequestDelete(id) {
	        var _this3 = this;

	        console.log('[Actions] joinRequestDelete ' + id);
	        _api.Api.joinRequestDelete(id).then(function (res) {
	            if (res.err) {
	                console.log(res.msg);
	            } else {
	                Store.userState = null;
	                _this3.getUserState();
	            }
	        });
	    },

	    createCompany: function createCompany(options) {
	        var _this4 = this;

	        console.log('[Actions] createCompany');
	        console.debug(options);
	        _api.Api.createCompanyRequest(options).then(function (res) {
	            if (res.err) {
	                if (res.err === -1) {
	                    Events.run(Events.EV_CHECK_EDIT, {
	                        checkedInn: false,
	                        message: "Компания с таким ИНН уже существует"
	                    });
	                } else {
	                    alert(_utils.Utils.o2j(res));
	                }
	            } else {
	                Store.userState = null;
	                _this4.getUserState();
	                window.location.hash = 'dashboard/company/details';
	            }
	        });
	    },

	    updateCompanyRequest: function updateCompanyRequest(options) {
	        var _this5 = this;

	        _api.Api.updateCompanyRequest(options).then(function (res) {
	            if (res.err) {
	                alert(res.msg);
	            } else {
	                _this5.updateCompanyInfo();
	            }
	        });
	    },

	    getUserState: function getUserState() {
	        var _this6 = this;

	        //console.log('[Actions] getUserState')
	        if (Store.userState) return;
	        //console.log('[Actions] getUserState do')
	        //console.log(new Error().stack)
	        _api.Api.userStateRequest().then(function (res) {
	            //Store.deleteAllCompanies(); 
	            Store.setUserState(res);
	            //console.log(res.comps);
	            _this6.loadComps(res.comps);
	        });
	    },
	    saveUserState: function saveUserState(state) {
	        var _this7 = this;

	        //console.log('[Actions] saveUserState')
	        //console.debug(state)
	        _api.Api.userEditRequest(state).then(function (res) {
	            if (res.err) {
	                Events.run(Events.EV_PROFILE_UPDATE_FAIL, res);
	                return;
	            }
	            Store.userState = null;
	            _this7.getUserState();
	        });
	    },
	    getSessions: function getSessions() {
	        //console.log('[Actions] getSessions')
	        _api.Api.userSessionsRequest().then(function (res) {
	            if (res.err) {} else {
	                Store.setSessions(res.sessions);
	            }
	        });
	    },

	    deleteSession: function deleteSession(sid) {
	        var _this8 = this;

	        //console.log('[Actions] deleteSession ' + sid)
	        _api.Api.closeSessionRequest(sid).then(function (res) {
	            if (res.err) {
	                Events.run(Events.EV_SESSIONS_UPDATE, { info: res.msg });
	            } else {
	                //console.log(res);
	                Events.run(Events.EV_SESSIONS_UPDATE, { info: "Сессия закрыта" });
	                _this8.getSessions();
	            }
	        });
	    },
	    updateCompanyInfo: function updateCompanyInfo() {
	        if (Store.userState.comps.length > 0) {
	            this.getCompanyByInn(Store.userState.comps[0].inn);
	        }
	    },

	    getCompanyByInn: function getCompanyByInn(companyInn) {
	        //console.log('[Actions] getCompanyByInn ' + companyInn)
	        _api.Api.companyStateRequestByInn(companyInn).then(function (res) {
	            //console.log("Api response companyByInn");
	            if (res.err) {
	                //console.log("нет компании с таким инн");
	            } else {
	                    //console.log("компания найдена");
	                    Store.setSelectedCompany(res);
	                }
	        });
	    },
	    deleteCompany: function deleteCompany(id) {
	        //console.log('[Actions] deleteCompany ' + id)
	        _api.Api.deleteCompanyRequest(id).then(function (res) {
	            if (res.err) {
	                if (err === -1) {} else {}
	            } else {
	                //this.getUserState();
	                Store.removeCompById(id);
	            }
	        });
	    },

	    loadComps: function loadComps(inns) {
	        //console.log('[Actions] loadComps ' + inns);
	        var comps_buffer = [];
	        if (!inns || inns.length < 1) {
	            Store.addCompanies(comps_buffer);
	            return;
	        }
	        var comps_pending = inns.length;
	        for (var j = 0; j < inns.length; j++) {
	            //console.log('load ' + j);
	            _api.Api.companyStateRequestByInn(inns[j].inn).then(function (resp) {
	                //console.log('loaded');
	                comps_pending--;
	                comps_buffer.push(resp);
	                //console.log('comps_pending ' + comps_pending);
	                if (comps_pending === 0) {
	                    //console.log('done');
	                    //console.debug(comps_buffer);
	                    Store.addCompanies(comps_buffer);
	                }
	            });
	        }
	    }

	};

	exports.Actions = Actions;
	// создаем экземпляр класса, отвечающего за обработку событий от cервера
	var Events = new _ClassesEventsController2['default']();

	exports.Events = Events;
	/**
	 * DEPRECATED
	 *
	 * управление событиями перенесено в EventsController
	 * вызов Events.on вместо Events.on
	 * 
	 */
	// var Events = {
	//     EV_SEARCH_RESULT      : 'EV_SEARCH_RESULT',
	//     EV_PROFILE_UPDATE     : 'EV_PROFILE_UPDATE',
	//     EV_COMP_DETAILS       : 'EV_COMP_DETAILS',
	//     EV_COMP_STATE         : 'EV_COMP_STATE',
	//     EV_ROUTE_CHANGED      : 'EV_ROUTE_CHANGED',
	//     EV_SESSIONS_UPDATE    : 'EV_SESSIONS_UPDATE',
	//     EV_SHOW_NOTIFY        : 'EV_SHOW_NOTIFY',
	//     EV_CHECK_EDIT         : 'EV_CHECK_EDIT',
	//     EV_PROFILE_UPDATE_FAIL: 'EV_PROFILE_UPDATE_FAIL',
	//     EV_USER_REQUESTS      : 'EV_USER_REQUESTS',
	//     EV_COMPS_CHANGED      : 'EV_COMPS_CHANGED',
	//     EV_CLICK_ANYWHERE     : 'EV_CLICK_ANYWHERE',
	//     EV_GLOBAL_MOUSE_UP    : 'EV_GLOBAL_MOUSE_UP',
	//     EV_MSG_PRIVATE_NEW: 'EV_MSG_PRIVATE_NEW',
	//     EV_USER_STATE_UPDATE  : 'EV_USER_STATE_UPDATE',
	//     EV_NEW_PRIVATE_UNREADED : 'EV_NEW_PRIVATE_UNREADED',
	//     EV_ASK_OPEN_CHAT_WINDOW : 'EV_ASK_OPEN_CHAT_WINDOW',
	//     EV_INVITE_CHANNEL     : 'EV_INVITE_CHANNEL',
	//     EV_MSG_CHANNEL        : 'EV_MSG_CHANNEL',
	//     EV_SYSTEM_DOWN        : 'EV_SYSTEM_DOWN',
	//     EV_SYSTEM_UP          : 'EV_SYSTEM_UP',

	//     evs: {},

	//     reg: function (id, hr) {
	//         var l = this.evs[id];
	//         l ? l.push(hr) : this.evs[id] = [hr]
	//     },

	//     run: function (id, p) {
	//         var l = this.evs[id];
	//         if (l) {
	//             l.forEach(o => o(p));
	//         }
	//     },

	//     rem: function (id, hr) {
	//         var l = this.evs[id];
	//         if (l) {
	//             this.evs[id] = l.filter(h => h != hr)
	//         }
	//     }

	// };

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x2, _x3, _x4) { var _again = true; _function: while (_again) { var object = _x2, property = _x3, receiver = _x4; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x2 = parent; _x3 = property; _x4 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _api = __webpack_require__(1);

	var _Controller2 = __webpack_require__(6);

	var _Controller3 = _interopRequireDefault(_Controller2);

	var _Logger = __webpack_require__(3);

	var _utils = __webpack_require__(2);

	/**
	 * Управдление событиями, приходящими от сервера
	 * 
	 * Экземпляр класса создается в файле Dispatcher.js и к остальным
	 * файлам подключается оттуда.
	 * 
	 */
	var Router = __webpack_require__(7);

	var EventsController = (function (_Controller) {
	    _inherits(EventsController, _Controller);

	    function EventsController() {
	        var _this = this;

	        _classCallCheck(this, EventsController);

	        _get(Object.getPrototypeOf(EventsController.prototype), 'constructor', this).call(this);

	        // регистриуем постоянные имена
	        this['const'] = ['EV_SEARCH_RESULT', 'EV_PROFILE_UPDATE', 'EV_COMP_DETAILS', 'EV_COMP_STATE', 'EV_ROUTE_CHANGED', 'EV_SESSIONS_UPDATE', 'EV_CHECK_EDIT', 'EV_PROFILE_UPDATE_FAIL', 'EV_USER_REQUESTS', 'EV_COMPS_CHANGED', 'EV_CLICK_ANYWHERE', 'EV_GLOBAL_MOUSE_UP', 'EV_USER_STATE_UPDATE',

	        // system events
	        'EV_SHOW_NOTIFY', 'EV_SHOW_EVENT', 'EV_SYSTEM_DOWN', 'EV_SYSTEM_UP',

	        // API: channel & group messages
	        'EV_MSG_CHANNEL_NEW', 'EV_MSG_CHANNEL_UNREADED', 'EV_MSG_CHANNEL_ERASE', 'EV_MSG_CHANNEL_CORRECT', 'EV_MSG_CHANNEL_NEW', 'EV_MSG_CHANNEL_INVITE', 'EV_MSG_CHANNEL_USER_UPSERT', 'EV_MSG_CHANNEL_USER_LEAVE', 'EV_MSG_CHANNEL_ORDERS', 'EV_MSG_CHANNEL_DELETED', 'EV_INVITE_CHANNEL', 'EV_MSG_CHANNEL',

	        // API: private messages
	        'EV_MSG_PRIVATE_NEW', 'EV_MSG_PRIVATE_UNREADED', 'EV_MSG_PRIVATE_INTERLOCUTOR_LRM',

	        // API: user online-offline
	        'EV_WATCH_USERS_INIT', 'EV_USER_ONLINE', 'EV_USER_OFFLINE',

	        // Websocket
	        'EV_WEBSOCKET_REG', 'EV_WEBSOCKET_CLOSED', 'EV_WEBSOCKET_DOWN', 'EV_RELATION_REQUEST_REFUSE', 'EV_RELATION_REQUEST_ACCEPT', 'EV_RELATION_REQUEST_CANCEL', 'EV_RELATION_REQUEST_MESSAGE', 'EV_COMP_RELATIONS_CHANGED'];

	        this.registerConst = function () {
	            _this['const'].forEach(function (evtName) {
	                return _this[evtName] = evtName;
	            });
	        };

	        this.openWebSocket = function () {

	            // только для авторизованного юзера
	            try {
	                _this.userSid = _api.Api.sid;
	            } catch (e) {
	                return;
	            }

	            // не даем повторной регистрации с одной страницы, чтобы не получать двойные ивенты
	            if (_this._isReady) return;

	            _this.ws = new WebSocket(_this.ws_URI);
	            _this.initWebSocket();
	        };

	        this.initWebSocket = function () {

	            // Обработчики состояний сокета
	            //
	            // открыт
	            _this.ws.onopen = function (event) {
	                _Logger.logger.log(_this, 'WebSocket connection established.');
	                _this.registerWebSocket();
	            };

	            // ошибка
	            _this.ws.onerror = function (error) {
	                _Logger.logger.log(_this, 'WebSocket ERROR.', error.message, 'error');
	            };

	            // закрыт или прерван
	            _this.ws.onclose = function (event) {
	                _this.ws = null;
	                _this._isReady = false;

	                if (event.wasClean) {
	                    _Logger.logger.log(_this, 'WebSocket connection closed.', event.code, event.reason);
	                } else {
	                    _this.reconnectWebSocket(event);
	                    // this.run(this.EV_WEBSOCKET_DOWN, event); // deprecated
	                }
	            };

	            // получение сообщения по сокету
	            _this.ws.onmessage = function (event) {
	                _this.onEventReceived(event);
	            };
	        };

	        this.closeWebSocket = function () {
	            if (_this.ws) _this.ws.close();

	            // test reconnect
	            // this.reconnectWebSocket( {code: '-1', reason: 'Test event'} );
	        };

	        this.reconnectWebSocket = function (event) {
	            var lastErrorTime = _this.wsErrors.length ? _this.wsErrors[0].date : 0;
	            var nowTime = Date.now();

	            // increase reconnect time by 5 sec, reset time after every 60 sec delay
	            var reconnectDelay = lastErrorTime ? nowTime - lastErrorTime + 5000 < 60000 ? nowTime - lastErrorTime + 5000 : 1000 : 1000;

	            var reconnectText = reconnectDelay <= 1000 ? "now" : "in " + Math.round(reconnectDelay / 1000) + " sec";

	            _this.wsErrors.unshift({ date: nowTime, code: event.code, reason: event.reason });
	            _this._reconnectTO = setTimeout(_this.openWebSocket, reconnectDelay);
	            _Logger.logger.log(_this, 'WebSocket connection terminated. Code: ' + event.code + ' Reason: ' + event.reason, 'error');
	            _Logger.logger.log(_this, 'Trying to reconnect ' + reconnectText);
	        };

	        this.registerWebSocket = function () {
	            _this.wsSend('reg');
	        };

	        this.wsSend = function (cm) {
	            var params = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	            _Logger.logger.log(_this, 'wsSend');
	            console.debug(cm, params);

	            // формируем параметры
	            params.cm = cm;
	            params.sid = _api.Api.sid;

	            // CONNECTING = 0
	            // OPEN = 1
	            // CLOSED = 2
	            if (_this.ws.readyState == 1) {
	                // logger.log(this, 'WebSocket SEND: ', Utils.o2j(params));
	                _this.ws.send(_utils.Utils.o2j(params));
	            } else {
	                _Logger.logger.log(_this, 'WebSocket NOT OPENED. Failed to execute command: ', _utils.Utils.o2j(params));
	            }
	        };

	        this.isReady = function () {
	            return _this._isReady;
	        };

	        this.onEventReceived = function (event) {
	            // logger.log(this, 'WebSocket EVENT RECEIVED', event, event.data);
	            _this.handleEvent(_utils.Utils.j2o(event.data));
	        };

	        this.handleEvent = function (data) {
	            _Logger.logger.log(_this, 'handleEvent', data);

	            if (data == null || 'type' in data == false) {
	                _Logger.logger.log(_this, 'ERR: invalid ws event data');
	                return;
	            }

	            switch (data['type']) {

	                case 'reg':

	                    // ws ответил на reg

	                    if (!_utils.Utils.isNumber(data.user_id)) {
	                        _Logger.logger.log(_this, 'ERR: ws reg failed (user_id is nan)');
	                        return;
	                    }

	                    _Logger.logger.log(_this, 'WebSocket REGISTERED: user_id=' + data.user_id);
	                    _this._isReady = true;
	                    _this._reconnectTO = null;
	                    _this.run(_this.EV_WEBSOCKET_REG, data.user_id);

	                    // test reconnect
	                    // this._reconnectTO = setTimeout( this.closeWebSocket, 10 );

	                    break;

	                case 'watch':

	                    // ws ответил на watch

	                    if ('online' in data == false) {
	                        _Logger.logger.log(_this, 'ERR: ws watch failed (online required)');
	                        return;
	                    }

	                    // подписка на обновление статусов юзеров
	                    _Logger.logger.log(_this, 'WebSocket RUN EVENT: watch_users_init', data);
	                    _this.run(_this.EV_WATCH_USERS_INIT, data);

	                    break;

	                default:
	                    _this.run('EV_' + data['type'].toUpperCase(), data);

	            }
	        };

	        this.runError = function (msg) {
	            _this.run(_this.EV_SHOW_NOTIFY, { type: 'error', message: msg });
	        };

	        this.runInfo = function (msg) {
	            _this.run(_this.EV_SHOW_NOTIFY, { type: 'info', message: msg });
	        };

	        this.runNotify = function (event) {
	            _this.run(_this.EV_SHOW_EVENT, event);
	        };

	        this.registerConst();

	        // флаг открыт и зарегистрирован
	        this._isReady = false;

	        // параметры Web Socket
	        this.ws_URI = 'ws://cargo.chat/apiws';
	        this.ws = null;
	        this.wsErrors = [];
	        this._reconnectTO = null;
	    }

	    // постоянные имена событий
	    return EventsController;
	})(_Controller3['default']);

	exports['default'] = EventsController;
	module.exports = exports['default'];

	/**
	 *  Web Socket
	 */

	/*
	 *  End of Web Socket
	 */

	// parse & run websocket event

	// ищем и запускаем событие

	// вслывающие и исчезающие со временем уведомления

	// уведомления в нотифай-центр, добавляются и остаются висеть, пока их не увидит юзер

/***/ },
/* 6 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var Controller = function Controller() {
	    _classCallCheck(this, Controller);

	    this.evs = {};

	    this.on = function (id, hr) {
	        var l = this.evs[id];
	        l ? l.push(hr) : this.evs[id] = [hr];
	    };

	    this.run = function (id, p) {
	        var l = this.evs[id];
	        if (l) {
	            l.forEach(function (o) {
	                return o(p);
	            });
	        }
	    };

	    this.rem = function (id, hr) {
	        var l = this.evs[id];
	        if (l) {
	            this.evs[id] = l.filter(function (h) {
	                return h != hr;
	            });
	        }
	    };
	};

	exports["default"] = Controller;
	module.exports = exports["default"];

	// контейнер событий

	// регистрация события

	// запуск события

	// отписка

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.DefaultRoute = __webpack_require__(8);
	exports.Link = __webpack_require__(177);
	exports.NotFoundRoute = __webpack_require__(178);
	exports.Redirect = __webpack_require__(179);
	exports.Route = __webpack_require__(176);
	exports.ActiveHandler = __webpack_require__(174);
	exports.RouteHandler = exports.ActiveHandler;

	exports.HashLocation = __webpack_require__(180);
	exports.HistoryLocation = __webpack_require__(183);
	exports.RefreshLocation = __webpack_require__(184);
	exports.StaticLocation = __webpack_require__(185);
	exports.TestLocation = __webpack_require__(186);

	exports.ImitateBrowserBehavior = __webpack_require__(187);
	exports.ScrollToTopBehavior = __webpack_require__(188);

	exports.History = __webpack_require__(182);
	exports.Navigation = __webpack_require__(189);
	exports.State = __webpack_require__(190);

	exports.createRoute = __webpack_require__(166).createRoute;
	exports.createDefaultRoute = __webpack_require__(166).createDefaultRoute;
	exports.createNotFoundRoute = __webpack_require__(166).createNotFoundRoute;
	exports.createRedirect = __webpack_require__(166).createRedirect;
	exports.createRoutesFromReactChildren = __webpack_require__(191);

	exports.create = __webpack_require__(192);
	exports.run = __webpack_require__(201);

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var PropTypes = __webpack_require__(9);
	var RouteHandler = __webpack_require__(174);
	var Route = __webpack_require__(176);

	/**
	 * A <DefaultRoute> component is a special kind of <Route> that
	 * renders when its parent matches but none of its siblings do.
	 * Only one such route may be used at any given level in the
	 * route hierarchy.
	 */

	var DefaultRoute = (function (_Route) {
	  _inherits(DefaultRoute, _Route);

	  function DefaultRoute() {
	    _classCallCheck(this, DefaultRoute);

	    _get(Object.getPrototypeOf(DefaultRoute.prototype), 'constructor', this).apply(this, arguments);
	  }

	  // TODO: Include these in the above class definition
	  // once we can use ES7 property initializers.
	  // https://github.com/babel/babel/issues/619

	  return DefaultRoute;
	})(Route);

	DefaultRoute.propTypes = {
	  name: PropTypes.string,
	  path: PropTypes.falsy,
	  children: PropTypes.falsy,
	  handler: PropTypes.func.isRequired
	};

	DefaultRoute.defaultProps = {
	  handler: RouteHandler
	};

	module.exports = DefaultRoute;

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var assign = __webpack_require__(10);
	var ReactPropTypes = __webpack_require__(11).PropTypes;
	var Route = __webpack_require__(166);

	var PropTypes = assign({}, ReactPropTypes, {

	  /**
	   * Indicates that a prop should be falsy.
	   */
	  falsy: function falsy(props, propName, componentName) {
	    if (props[propName]) return new Error('<' + componentName + '> should not have a "' + propName + '" prop');
	  },

	  /**
	   * Indicates that a prop should be a Route object.
	   */
	  route: ReactPropTypes.instanceOf(Route),

	  /**
	   * Indicates that a prop should be a Router object.
	   */
	  //router: ReactPropTypes.instanceOf(Router) // TODO
	  router: ReactPropTypes.func

	});

	module.exports = PropTypes;

/***/ },
/* 10 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Object.assign
	 */

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign

	'use strict';

	function assign(target, sources) {
	  if (target == null) {
	    throw new TypeError('Object.assign target cannot be null or undefined');
	  }

	  var to = Object(target);
	  var hasOwnProperty = Object.prototype.hasOwnProperty;

	  for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {
	    var nextSource = arguments[nextIndex];
	    if (nextSource == null) {
	      continue;
	    }

	    var from = Object(nextSource);

	    // We don't currently support accessors nor proxies. Therefore this
	    // copy cannot throw. If we ever supported this then we must handle
	    // exceptions and side-effects. We don't support symbols so they won't
	    // be transferred.

	    for (var key in from) {
	      if (hasOwnProperty.call(from, key)) {
	        to[key] = from[key];
	      }
	    }
	  }

	  return to;
	}

	module.exports = assign;


/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(12);


/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule React
	 */

	/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/

	'use strict';

	var EventPluginUtils = __webpack_require__(14);
	var ReactChildren = __webpack_require__(18);
	var ReactComponent = __webpack_require__(31);
	var ReactClass = __webpack_require__(46);
	var ReactContext = __webpack_require__(22);
	var ReactCurrentOwner = __webpack_require__(26);
	var ReactElement = __webpack_require__(21);
	var ReactElementValidator = __webpack_require__(41);
	var ReactDOM = __webpack_require__(49);
	var ReactDOMTextComponent = __webpack_require__(51);
	var ReactDefaultInjection = __webpack_require__(100);
	var ReactInstanceHandles = __webpack_require__(28);
	var ReactMount = __webpack_require__(76);
	var ReactPerf = __webpack_require__(37);
	var ReactPropTypes = __webpack_require__(131);
	var ReactReconciler = __webpack_require__(38);
	var ReactServerRendering = __webpack_require__(163);

	var assign = __webpack_require__(10);
	var findDOMNode = __webpack_require__(120);
	var onlyChild = __webpack_require__(165);

	ReactDefaultInjection.inject();

	var createElement = ReactElement.createElement;
	var createFactory = ReactElement.createFactory;
	var cloneElement = ReactElement.cloneElement;

	if ("production" !== process.env.NODE_ENV) {
	  createElement = ReactElementValidator.createElement;
	  createFactory = ReactElementValidator.createFactory;
	  cloneElement = ReactElementValidator.cloneElement;
	}

	var render = ReactPerf.measure('React', 'render', ReactMount.render);

	var React = {
	  Children: {
	    map: ReactChildren.map,
	    forEach: ReactChildren.forEach,
	    count: ReactChildren.count,
	    only: onlyChild
	  },
	  Component: ReactComponent,
	  DOM: ReactDOM,
	  PropTypes: ReactPropTypes,
	  initializeTouchEvents: function(shouldUseTouch) {
	    EventPluginUtils.useTouchEvents = shouldUseTouch;
	  },
	  createClass: ReactClass.createClass,
	  createElement: createElement,
	  cloneElement: cloneElement,
	  createFactory: createFactory,
	  createMixin: function(mixin) {
	    // Currently a noop. Will be used to validate and trace mixins.
	    return mixin;
	  },
	  constructAndRenderComponent: ReactMount.constructAndRenderComponent,
	  constructAndRenderComponentByID: ReactMount.constructAndRenderComponentByID,
	  findDOMNode: findDOMNode,
	  render: render,
	  renderToString: ReactServerRendering.renderToString,
	  renderToStaticMarkup: ReactServerRendering.renderToStaticMarkup,
	  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
	  isValidElement: ReactElement.isValidElement,
	  withContext: ReactContext.withContext,

	  // Hook for JSX spread, don't use this for anything else.
	  __spread: assign
	};

	// Inject the runtime into a devtools global hook regardless of browser.
	// Allows for debugging when the hook is injected on the page.
	if (
	  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&
	  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
	  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
	    CurrentOwner: ReactCurrentOwner,
	    InstanceHandles: ReactInstanceHandles,
	    Mount: ReactMount,
	    Reconciler: ReactReconciler,
	    TextComponent: ReactDOMTextComponent
	  });
	}

	if ("production" !== process.env.NODE_ENV) {
	  var ExecutionEnvironment = __webpack_require__(60);
	  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {

	    // If we're in Chrome, look for the devtools marker and provide a download
	    // link if not installed.
	    if (navigator.userAgent.indexOf('Chrome') > -1) {
	      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
	        console.debug(
	          'Download the React DevTools for a better development experience: ' +
	          'https://fb.me/react-devtools'
	        );
	      }
	    }

	    var expectedFeatures = [
	      // shims
	      Array.isArray,
	      Array.prototype.every,
	      Array.prototype.forEach,
	      Array.prototype.indexOf,
	      Array.prototype.map,
	      Date.now,
	      Function.prototype.bind,
	      Object.keys,
	      String.prototype.split,
	      String.prototype.trim,

	      // shams
	      Object.create,
	      Object.freeze
	    ];

	    for (var i = 0; i < expectedFeatures.length; i++) {
	      if (!expectedFeatures[i]) {
	        console.error(
	          'One or more ES5 shim/shams expected by React are not available: ' +
	          'https://fb.me/react-warning-polyfills'
	        );
	        break;
	      }
	    }
	  }
	}

	React.version = '0.13.3';

	module.exports = React;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 13 */
/***/ function(module, exports) {

	// shim for using process in browser

	var process = module.exports = {};
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;

	function cleanUpNextTick() {
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}

	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = setTimeout(cleanUpNextTick);
	    draining = true;

	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    clearTimeout(timeout);
	}

	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        setTimeout(drainQueue, 0);
	    }
	};

	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};

	function noop() {}

	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;

	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};

	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginUtils
	 */

	'use strict';

	var EventConstants = __webpack_require__(15);

	var invariant = __webpack_require__(17);

	/**
	 * Injected dependencies:
	 */

	/**
	 * - `Mount`: [required] Module that can convert between React dom IDs and
	 *   actual node references.
	 */
	var injection = {
	  Mount: null,
	  injectMount: function(InjectedMount) {
	    injection.Mount = InjectedMount;
	    if ("production" !== process.env.NODE_ENV) {
	      ("production" !== process.env.NODE_ENV ? invariant(
	        InjectedMount && InjectedMount.getNode,
	        'EventPluginUtils.injection.injectMount(...): Injected Mount module ' +
	        'is missing getNode.'
	      ) : invariant(InjectedMount && InjectedMount.getNode));
	    }
	  }
	};

	var topLevelTypes = EventConstants.topLevelTypes;

	function isEndish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseUp ||
	         topLevelType === topLevelTypes.topTouchEnd ||
	         topLevelType === topLevelTypes.topTouchCancel;
	}

	function isMoveish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseMove ||
	         topLevelType === topLevelTypes.topTouchMove;
	}
	function isStartish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseDown ||
	         topLevelType === topLevelTypes.topTouchStart;
	}


	var validateEventDispatches;
	if ("production" !== process.env.NODE_ENV) {
	  validateEventDispatches = function(event) {
	    var dispatchListeners = event._dispatchListeners;
	    var dispatchIDs = event._dispatchIDs;

	    var listenersIsArr = Array.isArray(dispatchListeners);
	    var idsIsArr = Array.isArray(dispatchIDs);
	    var IDsLen = idsIsArr ? dispatchIDs.length : dispatchIDs ? 1 : 0;
	    var listenersLen = listenersIsArr ?
	      dispatchListeners.length :
	      dispatchListeners ? 1 : 0;

	    ("production" !== process.env.NODE_ENV ? invariant(
	      idsIsArr === listenersIsArr && IDsLen === listenersLen,
	      'EventPluginUtils: Invalid `event`.'
	    ) : invariant(idsIsArr === listenersIsArr && IDsLen === listenersLen));
	  };
	}

	/**
	 * Invokes `cb(event, listener, id)`. Avoids using call if no scope is
	 * provided. The `(listener,id)` pair effectively forms the "dispatch" but are
	 * kept separate to conserve memory.
	 */
	function forEachEventDispatch(event, cb) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchIDs = event._dispatchIDs;
	  if ("production" !== process.env.NODE_ENV) {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and IDs are two parallel arrays that are always in sync.
	      cb(event, dispatchListeners[i], dispatchIDs[i]);
	    }
	  } else if (dispatchListeners) {
	    cb(event, dispatchListeners, dispatchIDs);
	  }
	}

	/**
	 * Default implementation of PluginModule.executeDispatch().
	 * @param {SyntheticEvent} SyntheticEvent to handle
	 * @param {function} Application-level callback
	 * @param {string} domID DOM id to pass to the callback.
	 */
	function executeDispatch(event, listener, domID) {
	  event.currentTarget = injection.Mount.getNode(domID);
	  var returnValue = listener(event, domID);
	  event.currentTarget = null;
	  return returnValue;
	}

	/**
	 * Standard/simple iteration through an event's collected dispatches.
	 */
	function executeDispatchesInOrder(event, cb) {
	  forEachEventDispatch(event, cb);
	  event._dispatchListeners = null;
	  event._dispatchIDs = null;
	}

	/**
	 * Standard/simple iteration through an event's collected dispatches, but stops
	 * at the first dispatch execution returning true, and returns that id.
	 *
	 * @return id of the first dispatch execution who's listener returns true, or
	 * null if no listener returned true.
	 */
	function executeDispatchesInOrderStopAtTrueImpl(event) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchIDs = event._dispatchIDs;
	  if ("production" !== process.env.NODE_ENV) {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and IDs are two parallel arrays that are always in sync.
	      if (dispatchListeners[i](event, dispatchIDs[i])) {
	        return dispatchIDs[i];
	      }
	    }
	  } else if (dispatchListeners) {
	    if (dispatchListeners(event, dispatchIDs)) {
	      return dispatchIDs;
	    }
	  }
	  return null;
	}

	/**
	 * @see executeDispatchesInOrderStopAtTrueImpl
	 */
	function executeDispatchesInOrderStopAtTrue(event) {
	  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
	  event._dispatchIDs = null;
	  event._dispatchListeners = null;
	  return ret;
	}

	/**
	 * Execution of a "direct" dispatch - there must be at most one dispatch
	 * accumulated on the event or it is considered an error. It doesn't really make
	 * sense for an event with multiple dispatches (bubbled) to keep track of the
	 * return values at each dispatch execution, but it does tend to make sense when
	 * dealing with "direct" dispatches.
	 *
	 * @return The return value of executing the single dispatch.
	 */
	function executeDirectDispatch(event) {
	  if ("production" !== process.env.NODE_ENV) {
	    validateEventDispatches(event);
	  }
	  var dispatchListener = event._dispatchListeners;
	  var dispatchID = event._dispatchIDs;
	  ("production" !== process.env.NODE_ENV ? invariant(
	    !Array.isArray(dispatchListener),
	    'executeDirectDispatch(...): Invalid `event`.'
	  ) : invariant(!Array.isArray(dispatchListener)));
	  var res = dispatchListener ?
	    dispatchListener(event, dispatchID) :
	    null;
	  event._dispatchListeners = null;
	  event._dispatchIDs = null;
	  return res;
	}

	/**
	 * @param {SyntheticEvent} event
	 * @return {bool} True iff number of dispatches accumulated is greater than 0.
	 */
	function hasDispatches(event) {
	  return !!event._dispatchListeners;
	}

	/**
	 * General utilities that are useful in creating custom Event Plugins.
	 */
	var EventPluginUtils = {
	  isEndish: isEndish,
	  isMoveish: isMoveish,
	  isStartish: isStartish,

	  executeDirectDispatch: executeDirectDispatch,
	  executeDispatch: executeDispatch,
	  executeDispatchesInOrder: executeDispatchesInOrder,
	  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
	  hasDispatches: hasDispatches,
	  injection: injection,
	  useTouchEvents: false
	};

	module.exports = EventPluginUtils;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventConstants
	 */

	'use strict';

	var keyMirror = __webpack_require__(16);

	var PropagationPhases = keyMirror({bubbled: null, captured: null});

	/**
	 * Types of raw signals from the browser caught at the top level.
	 */
	var topLevelTypes = keyMirror({
	  topBlur: null,
	  topChange: null,
	  topClick: null,
	  topCompositionEnd: null,
	  topCompositionStart: null,
	  topCompositionUpdate: null,
	  topContextMenu: null,
	  topCopy: null,
	  topCut: null,
	  topDoubleClick: null,
	  topDrag: null,
	  topDragEnd: null,
	  topDragEnter: null,
	  topDragExit: null,
	  topDragLeave: null,
	  topDragOver: null,
	  topDragStart: null,
	  topDrop: null,
	  topError: null,
	  topFocus: null,
	  topInput: null,
	  topKeyDown: null,
	  topKeyPress: null,
	  topKeyUp: null,
	  topLoad: null,
	  topMouseDown: null,
	  topMouseMove: null,
	  topMouseOut: null,
	  topMouseOver: null,
	  topMouseUp: null,
	  topPaste: null,
	  topReset: null,
	  topScroll: null,
	  topSelectionChange: null,
	  topSubmit: null,
	  topTextInput: null,
	  topTouchCancel: null,
	  topTouchEnd: null,
	  topTouchMove: null,
	  topTouchStart: null,
	  topWheel: null
	});

	var EventConstants = {
	  topLevelTypes: topLevelTypes,
	  PropagationPhases: PropagationPhases
	};

	module.exports = EventConstants;


/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule keyMirror
	 * @typechecks static-only
	 */

	'use strict';

	var invariant = __webpack_require__(17);

	/**
	 * Constructs an enumeration with keys equal to their value.
	 *
	 * For example:
	 *
	 *   var COLORS = keyMirror({blue: null, red: null});
	 *   var myColor = COLORS.blue;
	 *   var isColorValid = !!COLORS[myColor];
	 *
	 * The last line could not be performed if the values of the generated enum were
	 * not equal to their keys.
	 *
	 *   Input:  {key1: val1, key2: val2}
	 *   Output: {key1: key1, key2: key2}
	 *
	 * @param {object} obj
	 * @return {object}
	 */
	var keyMirror = function(obj) {
	  var ret = {};
	  var key;
	  ("production" !== process.env.NODE_ENV ? invariant(
	    obj instanceof Object && !Array.isArray(obj),
	    'keyMirror(...): Argument must be an object.'
	  ) : invariant(obj instanceof Object && !Array.isArray(obj)));
	  for (key in obj) {
	    if (!obj.hasOwnProperty(key)) {
	      continue;
	    }
	    ret[key] = key;
	  }
	  return ret;
	};

	module.exports = keyMirror;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule invariant
	 */

	"use strict";

	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	var invariant = function(condition, format, a, b, c, d, e, f) {
	  if ("production" !== process.env.NODE_ENV) {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }

	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error(
	        'Minified exception occurred; use the non-minified dev environment ' +
	        'for the full error message and additional helpful warnings.'
	      );
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(
	        'Invariant Violation: ' +
	        format.replace(/%s/g, function() { return args[argIndex++]; })
	      );
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	};

	module.exports = invariant;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildren
	 */

	'use strict';

	var PooledClass = __webpack_require__(19);
	var ReactFragment = __webpack_require__(20);

	var traverseAllChildren = __webpack_require__(27);
	var warning = __webpack_require__(24);

	var twoArgumentPooler = PooledClass.twoArgumentPooler;
	var threeArgumentPooler = PooledClass.threeArgumentPooler;

	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * traversal. Allows avoiding binding callbacks.
	 *
	 * @constructor ForEachBookKeeping
	 * @param {!function} forEachFunction Function to perform traversal with.
	 * @param {?*} forEachContext Context to perform context with.
	 */
	function ForEachBookKeeping(forEachFunction, forEachContext) {
	  this.forEachFunction = forEachFunction;
	  this.forEachContext = forEachContext;
	}
	PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

	function forEachSingleChild(traverseContext, child, name, i) {
	  var forEachBookKeeping = traverseContext;
	  forEachBookKeeping.forEachFunction.call(
	    forEachBookKeeping.forEachContext, child, i);
	}

	/**
	 * Iterates through children that are typically specified as `props.children`.
	 *
	 * The provided forEachFunc(child, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} forEachFunc.
	 * @param {*} forEachContext Context for forEachContext.
	 */
	function forEachChildren(children, forEachFunc, forEachContext) {
	  if (children == null) {
	    return children;
	  }

	  var traverseContext =
	    ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
	  traverseAllChildren(children, forEachSingleChild, traverseContext);
	  ForEachBookKeeping.release(traverseContext);
	}

	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * mapping. Allows avoiding binding callbacks.
	 *
	 * @constructor MapBookKeeping
	 * @param {!*} mapResult Object containing the ordered map of results.
	 * @param {!function} mapFunction Function to perform mapping with.
	 * @param {?*} mapContext Context to perform mapping with.
	 */
	function MapBookKeeping(mapResult, mapFunction, mapContext) {
	  this.mapResult = mapResult;
	  this.mapFunction = mapFunction;
	  this.mapContext = mapContext;
	}
	PooledClass.addPoolingTo(MapBookKeeping, threeArgumentPooler);

	function mapSingleChildIntoContext(traverseContext, child, name, i) {
	  var mapBookKeeping = traverseContext;
	  var mapResult = mapBookKeeping.mapResult;

	  var keyUnique = !mapResult.hasOwnProperty(name);
	  if ("production" !== process.env.NODE_ENV) {
	    ("production" !== process.env.NODE_ENV ? warning(
	      keyUnique,
	      'ReactChildren.map(...): Encountered two children with the same key, ' +
	      '`%s`. Child keys must be unique; when two children share a key, only ' +
	      'the first child will be used.',
	      name
	    ) : null);
	  }

	  if (keyUnique) {
	    var mappedChild =
	      mapBookKeeping.mapFunction.call(mapBookKeeping.mapContext, child, i);
	    mapResult[name] = mappedChild;
	  }
	}

	/**
	 * Maps children that are typically specified as `props.children`.
	 *
	 * The provided mapFunction(child, key, index) will be called for each
	 * leaf child.
	 *
	 * TODO: This may likely break any calls to `ReactChildren.map` that were
	 * previously relying on the fact that we guarded against null children.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} mapFunction.
	 * @param {*} mapContext Context for mapFunction.
	 * @return {object} Object containing the ordered map of results.
	 */
	function mapChildren(children, func, context) {
	  if (children == null) {
	    return children;
	  }

	  var mapResult = {};
	  var traverseContext = MapBookKeeping.getPooled(mapResult, func, context);
	  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
	  MapBookKeeping.release(traverseContext);
	  return ReactFragment.create(mapResult);
	}

	function forEachSingleChildDummy(traverseContext, child, name, i) {
	  return null;
	}

	/**
	 * Count the number of children that are typically specified as
	 * `props.children`.
	 *
	 * @param {?*} children Children tree container.
	 * @return {number} The number of children.
	 */
	function countChildren(children, context) {
	  return traverseAllChildren(children, forEachSingleChildDummy, null);
	}

	var ReactChildren = {
	  forEach: forEachChildren,
	  map: mapChildren,
	  count: countChildren
	};

	module.exports = ReactChildren;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule PooledClass
	 */

	'use strict';

	var invariant = __webpack_require__(17);

	/**
	 * Static poolers. Several custom versions for each potential number of
	 * arguments. A completely generic pooler is easy to implement, but would
	 * require accessing the `arguments` object. In each of these, `this` refers to
	 * the Class itself, not an instance. If any others are needed, simply add them
	 * here, or in their own files.
	 */
	var oneArgumentPooler = function(copyFieldsFrom) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, copyFieldsFrom);
	    return instance;
	  } else {
	    return new Klass(copyFieldsFrom);
	  }
	};

	var twoArgumentPooler = function(a1, a2) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2);
	    return instance;
	  } else {
	    return new Klass(a1, a2);
	  }
	};

	var threeArgumentPooler = function(a1, a2, a3) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3);
	  }
	};

	var fiveArgumentPooler = function(a1, a2, a3, a4, a5) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4, a5);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4, a5);
	  }
	};

	var standardReleaser = function(instance) {
	  var Klass = this;
	  ("production" !== process.env.NODE_ENV ? invariant(
	    instance instanceof Klass,
	    'Trying to release an instance into a pool of a different type.'
	  ) : invariant(instance instanceof Klass));
	  if (instance.destructor) {
	    instance.destructor();
	  }
	  if (Klass.instancePool.length < Klass.poolSize) {
	    Klass.instancePool.push(instance);
	  }
	};

	var DEFAULT_POOL_SIZE = 10;
	var DEFAULT_POOLER = oneArgumentPooler;

	/**
	 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
	 * itself (statically) not adding any prototypical fields. Any CopyConstructor
	 * you give this may have a `poolSize` property, and will look for a
	 * prototypical `destructor` on instances (optional).
	 *
	 * @param {Function} CopyConstructor Constructor that can be used to reset.
	 * @param {Function} pooler Customizable pooler.
	 */
	var addPoolingTo = function(CopyConstructor, pooler) {
	  var NewKlass = CopyConstructor;
	  NewKlass.instancePool = [];
	  NewKlass.getPooled = pooler || DEFAULT_POOLER;
	  if (!NewKlass.poolSize) {
	    NewKlass.poolSize = DEFAULT_POOL_SIZE;
	  }
	  NewKlass.release = standardReleaser;
	  return NewKlass;
	};

	var PooledClass = {
	  addPoolingTo: addPoolingTo,
	  oneArgumentPooler: oneArgumentPooler,
	  twoArgumentPooler: twoArgumentPooler,
	  threeArgumentPooler: threeArgumentPooler,
	  fiveArgumentPooler: fiveArgumentPooler
	};

	module.exports = PooledClass;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	* @providesModule ReactFragment
	*/

	'use strict';

	var ReactElement = __webpack_require__(21);

	var warning = __webpack_require__(24);

	/**
	 * We used to allow keyed objects to serve as a collection of ReactElements,
	 * or nested sets. This allowed us a way to explicitly key a set a fragment of
	 * components. This is now being replaced with an opaque data structure.
	 * The upgrade path is to call React.addons.createFragment({ key: value }) to
	 * create a keyed fragment. The resulting data structure is opaque, for now.
	 */

	if ("production" !== process.env.NODE_ENV) {
	  var fragmentKey = '_reactFragment';
	  var didWarnKey = '_reactDidWarn';
	  var canWarnForReactFragment = false;

	  try {
	    // Feature test. Don't even try to issue this warning if we can't use
	    // enumerable: false.

	    var dummy = function() {
	      return 1;
	    };

	    Object.defineProperty(
	      {},
	      fragmentKey,
	      {enumerable: false, value: true}
	    );

	    Object.defineProperty(
	      {},
	      'key',
	      {enumerable: true, get: dummy}
	    );

	    canWarnForReactFragment = true;
	  } catch (x) { }

	  var proxyPropertyAccessWithWarning = function(obj, key) {
	    Object.defineProperty(obj, key, {
	      enumerable: true,
	      get: function() {
	        ("production" !== process.env.NODE_ENV ? warning(
	          this[didWarnKey],
	          'A ReactFragment is an opaque type. Accessing any of its ' +
	          'properties is deprecated. Pass it to one of the React.Children ' +
	          'helpers.'
	        ) : null);
	        this[didWarnKey] = true;
	        return this[fragmentKey][key];
	      },
	      set: function(value) {
	        ("production" !== process.env.NODE_ENV ? warning(
	          this[didWarnKey],
	          'A ReactFragment is an immutable opaque type. Mutating its ' +
	          'properties is deprecated.'
	        ) : null);
	        this[didWarnKey] = true;
	        this[fragmentKey][key] = value;
	      }
	    });
	  };

	  var issuedWarnings = {};

	  var didWarnForFragment = function(fragment) {
	    // We use the keys and the type of the value as a heuristic to dedupe the
	    // warning to avoid spamming too much.
	    var fragmentCacheKey = '';
	    for (var key in fragment) {
	      fragmentCacheKey += key + ':' + (typeof fragment[key]) + ',';
	    }
	    var alreadyWarnedOnce = !!issuedWarnings[fragmentCacheKey];
	    issuedWarnings[fragmentCacheKey] = true;
	    return alreadyWarnedOnce;
	  };
	}

	var ReactFragment = {
	  // Wrap a keyed object in an opaque proxy that warns you if you access any
	  // of its properties.
	  create: function(object) {
	    if ("production" !== process.env.NODE_ENV) {
	      if (typeof object !== 'object' || !object || Array.isArray(object)) {
	        ("production" !== process.env.NODE_ENV ? warning(
	          false,
	          'React.addons.createFragment only accepts a single object.',
	          object
	        ) : null);
	        return object;
	      }
	      if (ReactElement.isValidElement(object)) {
	        ("production" !== process.env.NODE_ENV ? warning(
	          false,
	          'React.addons.createFragment does not accept a ReactElement ' +
	          'without a wrapper object.'
	        ) : null);
	        return object;
	      }
	      if (canWarnForReactFragment) {
	        var proxy = {};
	        Object.defineProperty(proxy, fragmentKey, {
	          enumerable: false,
	          value: object
	        });
	        Object.defineProperty(proxy, didWarnKey, {
	          writable: true,
	          enumerable: false,
	          value: false
	        });
	        for (var key in object) {
	          proxyPropertyAccessWithWarning(proxy, key);
	        }
	        Object.preventExtensions(proxy);
	        return proxy;
	      }
	    }
	    return object;
	  },
	  // Extract the original keyed object from the fragment opaque type. Warn if
	  // a plain object is passed here.
	  extract: function(fragment) {
	    if ("production" !== process.env.NODE_ENV) {
	      if (canWarnForReactFragment) {
	        if (!fragment[fragmentKey]) {
	          ("production" !== process.env.NODE_ENV ? warning(
	            didWarnForFragment(fragment),
	            'Any use of a keyed object should be wrapped in ' +
	            'React.addons.createFragment(object) before being passed as a ' +
	            'child.'
	          ) : null);
	          return fragment;
	        }
	        return fragment[fragmentKey];
	      }
	    }
	    return fragment;
	  },
	  // Check if this is a fragment and if so, extract the keyed object. If it
	  // is a fragment-like object, warn that it should be wrapped. Ignore if we
	  // can't determine what kind of object this is.
	  extractIfFragment: function(fragment) {
	    if ("production" !== process.env.NODE_ENV) {
	      if (canWarnForReactFragment) {
	        // If it is the opaque type, return the keyed object.
	        if (fragment[fragmentKey]) {
	          return fragment[fragmentKey];
	        }
	        // Otherwise, check each property if it has an element, if it does
	        // it is probably meant as a fragment, so we can warn early. Defer,
	        // the warning to extract.
	        for (var key in fragment) {
	          if (fragment.hasOwnProperty(key) &&
	              ReactElement.isValidElement(fragment[key])) {
	            // This looks like a fragment object, we should provide an
	            // early warning.
	            return ReactFragment.extract(fragment);
	          }
	        }
	      }
	    }
	    return fragment;
	  }
	};

	module.exports = ReactFragment;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactElement
	 */

	'use strict';

	var ReactContext = __webpack_require__(22);
	var ReactCurrentOwner = __webpack_require__(26);

	var assign = __webpack_require__(10);
	var warning = __webpack_require__(24);

	var RESERVED_PROPS = {
	  key: true,
	  ref: true
	};

	/**
	 * Warn for mutations.
	 *
	 * @internal
	 * @param {object} object
	 * @param {string} key
	 */
	function defineWarningProperty(object, key) {
	  Object.defineProperty(object, key, {

	    configurable: false,
	    enumerable: true,

	    get: function() {
	      if (!this._store) {
	        return null;
	      }
	      return this._store[key];
	    },

	    set: function(value) {
	      ("production" !== process.env.NODE_ENV ? warning(
	        false,
	        'Don\'t set the %s property of the React element. Instead, ' +
	        'specify the correct value when initially creating the element.',
	        key
	      ) : null);
	      this._store[key] = value;
	    }

	  });
	}

	/**
	 * This is updated to true if the membrane is successfully created.
	 */
	var useMutationMembrane = false;

	/**
	 * Warn for mutations.
	 *
	 * @internal
	 * @param {object} element
	 */
	function defineMutationMembrane(prototype) {
	  try {
	    var pseudoFrozenProperties = {
	      props: true
	    };
	    for (var key in pseudoFrozenProperties) {
	      defineWarningProperty(prototype, key);
	    }
	    useMutationMembrane = true;
	  } catch (x) {
	    // IE will fail on defineProperty
	  }
	}

	/**
	 * Base constructor for all React elements. This is only used to make this
	 * work with a dynamic instanceof check. Nothing should live on this prototype.
	 *
	 * @param {*} type
	 * @param {string|object} ref
	 * @param {*} key
	 * @param {*} props
	 * @internal
	 */
	var ReactElement = function(type, key, ref, owner, context, props) {
	  // Built-in properties that belong on the element
	  this.type = type;
	  this.key = key;
	  this.ref = ref;

	  // Record the component responsible for creating this element.
	  this._owner = owner;

	  // TODO: Deprecate withContext, and then the context becomes accessible
	  // through the owner.
	  this._context = context;

	  if ("production" !== process.env.NODE_ENV) {
	    // The validation flag and props are currently mutative. We put them on
	    // an external backing store so that we can freeze the whole object.
	    // This can be replaced with a WeakMap once they are implemented in
	    // commonly used development environments.
	    this._store = {props: props, originalProps: assign({}, props)};

	    // To make comparing ReactElements easier for testing purposes, we make
	    // the validation flag non-enumerable (where possible, which should
	    // include every environment we run tests in), so the test framework
	    // ignores it.
	    try {
	      Object.defineProperty(this._store, 'validated', {
	        configurable: false,
	        enumerable: false,
	        writable: true
	      });
	    } catch (x) {
	    }
	    this._store.validated = false;

	    // We're not allowed to set props directly on the object so we early
	    // return and rely on the prototype membrane to forward to the backing
	    // store.
	    if (useMutationMembrane) {
	      Object.freeze(this);
	      return;
	    }
	  }

	  this.props = props;
	};

	// We intentionally don't expose the function on the constructor property.
	// ReactElement should be indistinguishable from a plain object.
	ReactElement.prototype = {
	  _isReactElement: true
	};

	if ("production" !== process.env.NODE_ENV) {
	  defineMutationMembrane(ReactElement.prototype);
	}

	ReactElement.createElement = function(type, config, children) {
	  var propName;

	  // Reserved names are extracted
	  var props = {};

	  var key = null;
	  var ref = null;

	  if (config != null) {
	    ref = config.ref === undefined ? null : config.ref;
	    key = config.key === undefined ? null : '' + config.key;
	    // Remaining properties are added to a new props object
	    for (propName in config) {
	      if (config.hasOwnProperty(propName) &&
	          !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }

	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }

	  // Resolve default props
	  if (type && type.defaultProps) {
	    var defaultProps = type.defaultProps;
	    for (propName in defaultProps) {
	      if (typeof props[propName] === 'undefined') {
	        props[propName] = defaultProps[propName];
	      }
	    }
	  }

	  return new ReactElement(
	    type,
	    key,
	    ref,
	    ReactCurrentOwner.current,
	    ReactContext.current,
	    props
	  );
	};

	ReactElement.createFactory = function(type) {
	  var factory = ReactElement.createElement.bind(null, type);
	  // Expose the type on the factory and the prototype so that it can be
	  // easily accessed on elements. E.g. <Foo />.type === Foo.type.
	  // This should not be named `constructor` since this may not be the function
	  // that created the element, and it may not even be a constructor.
	  // Legacy hook TODO: Warn if this is accessed
	  factory.type = type;
	  return factory;
	};

	ReactElement.cloneAndReplaceProps = function(oldElement, newProps) {
	  var newElement = new ReactElement(
	    oldElement.type,
	    oldElement.key,
	    oldElement.ref,
	    oldElement._owner,
	    oldElement._context,
	    newProps
	  );

	  if ("production" !== process.env.NODE_ENV) {
	    // If the key on the original is valid, then the clone is valid
	    newElement._store.validated = oldElement._store.validated;
	  }
	  return newElement;
	};

	ReactElement.cloneElement = function(element, config, children) {
	  var propName;

	  // Original props are copied
	  var props = assign({}, element.props);

	  // Reserved names are extracted
	  var key = element.key;
	  var ref = element.ref;

	  // Owner will be preserved, unless ref is overridden
	  var owner = element._owner;

	  if (config != null) {
	    if (config.ref !== undefined) {
	      // Silently steal the ref from the parent.
	      ref = config.ref;
	      owner = ReactCurrentOwner.current;
	    }
	    if (config.key !== undefined) {
	      key = '' + config.key;
	    }
	    // Remaining properties override existing props
	    for (propName in config) {
	      if (config.hasOwnProperty(propName) &&
	          !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }

	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }

	  return new ReactElement(
	    element.type,
	    key,
	    ref,
	    owner,
	    element._context,
	    props
	  );
	};

	/**
	 * @param {?object} object
	 * @return {boolean} True if `object` is a valid component.
	 * @final
	 */
	ReactElement.isValidElement = function(object) {
	  // ReactTestUtils is often used outside of beforeEach where as React is
	  // within it. This leads to two different instances of React on the same
	  // page. To identify a element from a different React instance we use
	  // a flag instead of an instanceof check.
	  var isElement = !!(object && object._isReactElement);
	  // if (isElement && !(object instanceof ReactElement)) {
	  // This is an indicator that you're using multiple versions of React at the
	  // same time. This will screw with ownership and stuff. Fix it, please.
	  // TODO: We could possibly warn here.
	  // }
	  return isElement;
	};

	module.exports = ReactElement;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactContext
	 */

	'use strict';

	var assign = __webpack_require__(10);
	var emptyObject = __webpack_require__(23);
	var warning = __webpack_require__(24);

	var didWarn = false;

	/**
	 * Keeps track of the current context.
	 *
	 * The context is automatically passed down the component ownership hierarchy
	 * and is accessible via `this.context` on ReactCompositeComponents.
	 */
	var ReactContext = {

	  /**
	   * @internal
	   * @type {object}
	   */
	  current: emptyObject,

	  /**
	   * Temporarily extends the current context while executing scopedCallback.
	   *
	   * A typical use case might look like
	   *
	   *  render: function() {
	   *    var children = ReactContext.withContext({foo: 'foo'}, () => (
	   *
	   *    ));
	   *    return <div>{children}</div>;
	   *  }
	   *
	   * @param {object} newContext New context to merge into the existing context
	   * @param {function} scopedCallback Callback to run with the new context
	   * @return {ReactComponent|array<ReactComponent>}
	   */
	  withContext: function(newContext, scopedCallback) {
	    if ("production" !== process.env.NODE_ENV) {
	      ("production" !== process.env.NODE_ENV ? warning(
	        didWarn,
	        'withContext is deprecated and will be removed in a future version. ' +
	        'Use a wrapper component with getChildContext instead.'
	      ) : null);

	      didWarn = true;
	    }

	    var result;
	    var previousContext = ReactContext.current;
	    ReactContext.current = assign({}, previousContext, newContext);
	    try {
	      result = scopedCallback();
	    } finally {
	      ReactContext.current = previousContext;
	    }
	    return result;
	  }

	};

	module.exports = ReactContext;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule emptyObject
	 */

	"use strict";

	var emptyObject = {};

	if ("production" !== process.env.NODE_ENV) {
	  Object.freeze(emptyObject);
	}

	module.exports = emptyObject;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule warning
	 */

	"use strict";

	var emptyFunction = __webpack_require__(25);

	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var warning = emptyFunction;

	if ("production" !== process.env.NODE_ENV) {
	  warning = function(condition, format ) {for (var args=[],$__0=2,$__1=arguments.length;$__0<$__1;$__0++) args.push(arguments[$__0]);
	    if (format === undefined) {
	      throw new Error(
	        '`warning(condition, format, ...args)` requires a warning ' +
	        'message argument'
	      );
	    }

	    if (format.length < 10 || /^[s\W]*$/.test(format)) {
	      throw new Error(
	        'The warning format should be able to uniquely identify this ' +
	        'warning. Please, use a more descriptive format than: ' + format
	      );
	    }

	    if (format.indexOf('Failed Composite propType: ') === 0) {
	      return; // Ignore CompositeComponent proptype check.
	    }

	    if (!condition) {
	      var argIndex = 0;
	      var message = 'Warning: ' + format.replace(/%s/g, function()  {return args[argIndex++];});
	      console.warn(message);
	      try {
	        // --- Welcome to debugging React ---
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch(x) {}
	    }
	  };
	}

	module.exports = warning;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 25 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule emptyFunction
	 */

	function makeEmptyFunction(arg) {
	  return function() {
	    return arg;
	  };
	}

	/**
	 * This function accepts and discards inputs; it has no side effects. This is
	 * primarily useful idiomatically for overridable function endpoints which
	 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
	 */
	function emptyFunction() {}

	emptyFunction.thatReturns = makeEmptyFunction;
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
	emptyFunction.thatReturnsNull = makeEmptyFunction(null);
	emptyFunction.thatReturnsThis = function() { return this; };
	emptyFunction.thatReturnsArgument = function(arg) { return arg; };

	module.exports = emptyFunction;


/***/ },
/* 26 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCurrentOwner
	 */

	'use strict';

	/**
	 * Keeps track of the current owner.
	 *
	 * The current owner is the component who should own any components that are
	 * currently being constructed.
	 *
	 * The depth indicate how many composite components are above this render level.
	 */
	var ReactCurrentOwner = {

	  /**
	   * @internal
	   * @type {ReactComponent}
	   */
	  current: null

	};

	module.exports = ReactCurrentOwner;


/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule traverseAllChildren
	 */

	'use strict';

	var ReactElement = __webpack_require__(21);
	var ReactFragment = __webpack_require__(20);
	var ReactInstanceHandles = __webpack_require__(28);

	var getIteratorFn = __webpack_require__(30);
	var invariant = __webpack_require__(17);
	var warning = __webpack_require__(24);

	var SEPARATOR = ReactInstanceHandles.SEPARATOR;
	var SUBSEPARATOR = ':';

	/**
	 * TODO: Test that a single child and an array with one item have the same key
	 * pattern.
	 */

	var userProvidedKeyEscaperLookup = {
	  '=': '=0',
	  '.': '=1',
	  ':': '=2'
	};

	var userProvidedKeyEscapeRegex = /[=.:]/g;

	var didWarnAboutMaps = false;

	function userProvidedKeyEscaper(match) {
	  return userProvidedKeyEscaperLookup[match];
	}

	/**
	 * Generate a key string that identifies a component within a set.
	 *
	 * @param {*} component A component that could contain a manual key.
	 * @param {number} index Index that is used if a manual key is not provided.
	 * @return {string}
	 */
	function getComponentKey(component, index) {
	  if (component && component.key != null) {
	    // Explicit key
	    return wrapUserProvidedKey(component.key);
	  }
	  // Implicit key determined by the index in the set
	  return index.toString(36);
	}

	/**
	 * Escape a component key so that it is safe to use in a reactid.
	 *
	 * @param {*} key Component key to be escaped.
	 * @return {string} An escaped string.
	 */
	function escapeUserProvidedKey(text) {
	  return ('' + text).replace(
	    userProvidedKeyEscapeRegex,
	    userProvidedKeyEscaper
	  );
	}

	/**
	 * Wrap a `key` value explicitly provided by the user to distinguish it from
	 * implicitly-generated keys generated by a component's index in its parent.
	 *
	 * @param {string} key Value of a user-provided `key` attribute
	 * @return {string}
	 */
	function wrapUserProvidedKey(key) {
	  return '$' + escapeUserProvidedKey(key);
	}

	/**
	 * @param {?*} children Children tree container.
	 * @param {!string} nameSoFar Name of the key path so far.
	 * @param {!number} indexSoFar Number of children encountered until this point.
	 * @param {!function} callback Callback to invoke with each child found.
	 * @param {?*} traverseContext Used to pass information throughout the traversal
	 * process.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildrenImpl(
	  children,
	  nameSoFar,
	  indexSoFar,
	  callback,
	  traverseContext
	) {
	  var type = typeof children;

	  if (type === 'undefined' || type === 'boolean') {
	    // All of the above are perceived as null.
	    children = null;
	  }

	  if (children === null ||
	      type === 'string' ||
	      type === 'number' ||
	      ReactElement.isValidElement(children)) {
	    callback(
	      traverseContext,
	      children,
	      // If it's the only child, treat the name as if it was wrapped in an array
	      // so that it's consistent if the number of children grows.
	      nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar,
	      indexSoFar
	    );
	    return 1;
	  }

	  var child, nextName, nextIndex;
	  var subtreeCount = 0; // Count of children found in the current subtree.

	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = (
	        (nameSoFar !== '' ? nameSoFar + SUBSEPARATOR : SEPARATOR) +
	        getComponentKey(child, i)
	      );
	      nextIndex = indexSoFar + subtreeCount;
	      subtreeCount += traverseAllChildrenImpl(
	        child,
	        nextName,
	        nextIndex,
	        callback,
	        traverseContext
	      );
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (iteratorFn) {
	      var iterator = iteratorFn.call(children);
	      var step;
	      if (iteratorFn !== children.entries) {
	        var ii = 0;
	        while (!(step = iterator.next()).done) {
	          child = step.value;
	          nextName = (
	            (nameSoFar !== '' ? nameSoFar + SUBSEPARATOR : SEPARATOR) +
	            getComponentKey(child, ii++)
	          );
	          nextIndex = indexSoFar + subtreeCount;
	          subtreeCount += traverseAllChildrenImpl(
	            child,
	            nextName,
	            nextIndex,
	            callback,
	            traverseContext
	          );
	        }
	      } else {
	        if ("production" !== process.env.NODE_ENV) {
	          ("production" !== process.env.NODE_ENV ? warning(
	            didWarnAboutMaps,
	            'Using Maps as children is not yet fully supported. It is an ' +
	            'experimental feature that might be removed. Convert it to a ' +
	            'sequence / iterable of keyed ReactElements instead.'
	          ) : null);
	          didWarnAboutMaps = true;
	        }
	        // Iterator will provide entry [k,v] tuples rather than values.
	        while (!(step = iterator.next()).done) {
	          var entry = step.value;
	          if (entry) {
	            child = entry[1];
	            nextName = (
	              (nameSoFar !== '' ? nameSoFar + SUBSEPARATOR : SEPARATOR) +
	              wrapUserProvidedKey(entry[0]) + SUBSEPARATOR +
	              getComponentKey(child, 0)
	            );
	            nextIndex = indexSoFar + subtreeCount;
	            subtreeCount += traverseAllChildrenImpl(
	              child,
	              nextName,
	              nextIndex,
	              callback,
	              traverseContext
	            );
	          }
	        }
	      }
	    } else if (type === 'object') {
	      ("production" !== process.env.NODE_ENV ? invariant(
	        children.nodeType !== 1,
	        'traverseAllChildren(...): Encountered an invalid child; DOM ' +
	        'elements are not valid children of React components.'
	      ) : invariant(children.nodeType !== 1));
	      var fragment = ReactFragment.extract(children);
	      for (var key in fragment) {
	        if (fragment.hasOwnProperty(key)) {
	          child = fragment[key];
	          nextName = (
	            (nameSoFar !== '' ? nameSoFar + SUBSEPARATOR : SEPARATOR) +
	            wrapUserProvidedKey(key) + SUBSEPARATOR +
	            getComponentKey(child, 0)
	          );
	          nextIndex = indexSoFar + subtreeCount;
	          subtreeCount += traverseAllChildrenImpl(
	            child,
	            nextName,
	            nextIndex,
	            callback,
	            traverseContext
	          );
	        }
	      }
	    }
	  }

	  return subtreeCount;
	}

	/**
	 * Traverses children that are typically specified as `props.children`, but
	 * might also be specified through attributes:
	 *
	 * - `traverseAllChildren(this.props.children, ...)`
	 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
	 *
	 * The `traverseContext` is an optional argument that is passed through the
	 * entire traversal. It can be used to store accumulations or anything else that
	 * the callback might find relevant.
	 *
	 * @param {?*} children Children tree object.
	 * @param {!function} callback To invoke upon traversing each child.
	 * @param {?*} traverseContext Context for traversal.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }

	  return traverseAllChildrenImpl(children, '', 0, callback, traverseContext);
	}

	module.exports = traverseAllChildren;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstanceHandles
	 * @typechecks static-only
	 */

	'use strict';

	var ReactRootIndex = __webpack_require__(29);

	var invariant = __webpack_require__(17);

	var SEPARATOR = '.';
	var SEPARATOR_LENGTH = SEPARATOR.length;

	/**
	 * Maximum depth of traversals before we consider the possibility of a bad ID.
	 */
	var MAX_TREE_DEPTH = 100;

	/**
	 * Creates a DOM ID prefix to use when mounting React components.
	 *
	 * @param {number} index A unique integer
	 * @return {string} React root ID.
	 * @internal
	 */
	function getReactRootIDString(index) {
	  return SEPARATOR + index.toString(36);
	}

	/**
	 * Checks if a character in the supplied ID is a separator or the end.
	 *
	 * @param {string} id A React DOM ID.
	 * @param {number} index Index of the character to check.
	 * @return {boolean} True if the character is a separator or end of the ID.
	 * @private
	 */
	function isBoundary(id, index) {
	  return id.charAt(index) === SEPARATOR || index === id.length;
	}

	/**
	 * Checks if the supplied string is a valid React DOM ID.
	 *
	 * @param {string} id A React DOM ID, maybe.
	 * @return {boolean} True if the string is a valid React DOM ID.
	 * @private
	 */
	function isValidID(id) {
	  return id === '' || (
	    id.charAt(0) === SEPARATOR && id.charAt(id.length - 1) !== SEPARATOR
	  );
	}

	/**
	 * Checks if the first ID is an ancestor of or equal to the second ID.
	 *
	 * @param {string} ancestorID
	 * @param {string} descendantID
	 * @return {boolean} True if `ancestorID` is an ancestor of `descendantID`.
	 * @internal
	 */
	function isAncestorIDOf(ancestorID, descendantID) {
	  return (
	    descendantID.indexOf(ancestorID) === 0 &&
	    isBoundary(descendantID, ancestorID.length)
	  );
	}

	/**
	 * Gets the parent ID of the supplied React DOM ID, `id`.
	 *
	 * @param {string} id ID of a component.
	 * @return {string} ID of the parent, or an empty string.
	 * @private
	 */
	function getParentID(id) {
	  return id ? id.substr(0, id.lastIndexOf(SEPARATOR)) : '';
	}

	/**
	 * Gets the next DOM ID on the tree path from the supplied `ancestorID` to the
	 * supplied `destinationID`. If they are equal, the ID is returned.
	 *
	 * @param {string} ancestorID ID of an ancestor node of `destinationID`.
	 * @param {string} destinationID ID of the destination node.
	 * @return {string} Next ID on the path from `ancestorID` to `destinationID`.
	 * @private
	 */
	function getNextDescendantID(ancestorID, destinationID) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    isValidID(ancestorID) && isValidID(destinationID),
	    'getNextDescendantID(%s, %s): Received an invalid React DOM ID.',
	    ancestorID,
	    destinationID
	  ) : invariant(isValidID(ancestorID) && isValidID(destinationID)));
	  ("production" !== process.env.NODE_ENV ? invariant(
	    isAncestorIDOf(ancestorID, destinationID),
	    'getNextDescendantID(...): React has made an invalid assumption about ' +
	    'the DOM hierarchy. Expected `%s` to be an ancestor of `%s`.',
	    ancestorID,
	    destinationID
	  ) : invariant(isAncestorIDOf(ancestorID, destinationID)));
	  if (ancestorID === destinationID) {
	    return ancestorID;
	  }
	  // Skip over the ancestor and the immediate separator. Traverse until we hit
	  // another separator or we reach the end of `destinationID`.
	  var start = ancestorID.length + SEPARATOR_LENGTH;
	  var i;
	  for (i = start; i < destinationID.length; i++) {
	    if (isBoundary(destinationID, i)) {
	      break;
	    }
	  }
	  return destinationID.substr(0, i);
	}

	/**
	 * Gets the nearest common ancestor ID of two IDs.
	 *
	 * Using this ID scheme, the nearest common ancestor ID is the longest common
	 * prefix of the two IDs that immediately preceded a "marker" in both strings.
	 *
	 * @param {string} oneID
	 * @param {string} twoID
	 * @return {string} Nearest common ancestor ID, or the empty string if none.
	 * @private
	 */
	function getFirstCommonAncestorID(oneID, twoID) {
	  var minLength = Math.min(oneID.length, twoID.length);
	  if (minLength === 0) {
	    return '';
	  }
	  var lastCommonMarkerIndex = 0;
	  // Use `<=` to traverse until the "EOL" of the shorter string.
	  for (var i = 0; i <= minLength; i++) {
	    if (isBoundary(oneID, i) && isBoundary(twoID, i)) {
	      lastCommonMarkerIndex = i;
	    } else if (oneID.charAt(i) !== twoID.charAt(i)) {
	      break;
	    }
	  }
	  var longestCommonID = oneID.substr(0, lastCommonMarkerIndex);
	  ("production" !== process.env.NODE_ENV ? invariant(
	    isValidID(longestCommonID),
	    'getFirstCommonAncestorID(%s, %s): Expected a valid React DOM ID: %s',
	    oneID,
	    twoID,
	    longestCommonID
	  ) : invariant(isValidID(longestCommonID)));
	  return longestCommonID;
	}

	/**
	 * Traverses the parent path between two IDs (either up or down). The IDs must
	 * not be the same, and there must exist a parent path between them. If the
	 * callback returns `false`, traversal is stopped.
	 *
	 * @param {?string} start ID at which to start traversal.
	 * @param {?string} stop ID at which to end traversal.
	 * @param {function} cb Callback to invoke each ID with.
	 * @param {?boolean} skipFirst Whether or not to skip the first node.
	 * @param {?boolean} skipLast Whether or not to skip the last node.
	 * @private
	 */
	function traverseParentPath(start, stop, cb, arg, skipFirst, skipLast) {
	  start = start || '';
	  stop = stop || '';
	  ("production" !== process.env.NODE_ENV ? invariant(
	    start !== stop,
	    'traverseParentPath(...): Cannot traverse from and to the same ID, `%s`.',
	    start
	  ) : invariant(start !== stop));
	  var traverseUp = isAncestorIDOf(stop, start);
	  ("production" !== process.env.NODE_ENV ? invariant(
	    traverseUp || isAncestorIDOf(start, stop),
	    'traverseParentPath(%s, %s, ...): Cannot traverse from two IDs that do ' +
	    'not have a parent path.',
	    start,
	    stop
	  ) : invariant(traverseUp || isAncestorIDOf(start, stop)));
	  // Traverse from `start` to `stop` one depth at a time.
	  var depth = 0;
	  var traverse = traverseUp ? getParentID : getNextDescendantID;
	  for (var id = start; /* until break */; id = traverse(id, stop)) {
	    var ret;
	    if ((!skipFirst || id !== start) && (!skipLast || id !== stop)) {
	      ret = cb(id, traverseUp, arg);
	    }
	    if (ret === false || id === stop) {
	      // Only break //after// visiting `stop`.
	      break;
	    }
	    ("production" !== process.env.NODE_ENV ? invariant(
	      depth++ < MAX_TREE_DEPTH,
	      'traverseParentPath(%s, %s, ...): Detected an infinite loop while ' +
	      'traversing the React DOM ID tree. This may be due to malformed IDs: %s',
	      start, stop
	    ) : invariant(depth++ < MAX_TREE_DEPTH));
	  }
	}

	/**
	 * Manages the IDs assigned to DOM representations of React components. This
	 * uses a specific scheme in order to traverse the DOM efficiently (e.g. in
	 * order to simulate events).
	 *
	 * @internal
	 */
	var ReactInstanceHandles = {

	  /**
	   * Constructs a React root ID
	   * @return {string} A React root ID.
	   */
	  createReactRootID: function() {
	    return getReactRootIDString(ReactRootIndex.createReactRootIndex());
	  },

	  /**
	   * Constructs a React ID by joining a root ID with a name.
	   *
	   * @param {string} rootID Root ID of a parent component.
	   * @param {string} name A component's name (as flattened children).
	   * @return {string} A React ID.
	   * @internal
	   */
	  createReactID: function(rootID, name) {
	    return rootID + name;
	  },

	  /**
	   * Gets the DOM ID of the React component that is the root of the tree that
	   * contains the React component with the supplied DOM ID.
	   *
	   * @param {string} id DOM ID of a React component.
	   * @return {?string} DOM ID of the React component that is the root.
	   * @internal
	   */
	  getReactRootIDFromNodeID: function(id) {
	    if (id && id.charAt(0) === SEPARATOR && id.length > 1) {
	      var index = id.indexOf(SEPARATOR, 1);
	      return index > -1 ? id.substr(0, index) : id;
	    }
	    return null;
	  },

	  /**
	   * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
	   * should would receive a `mouseEnter` or `mouseLeave` event.
	   *
	   * NOTE: Does not invoke the callback on the nearest common ancestor because
	   * nothing "entered" or "left" that element.
	   *
	   * @param {string} leaveID ID being left.
	   * @param {string} enterID ID being entered.
	   * @param {function} cb Callback to invoke on each entered/left ID.
	   * @param {*} upArg Argument to invoke the callback with on left IDs.
	   * @param {*} downArg Argument to invoke the callback with on entered IDs.
	   * @internal
	   */
	  traverseEnterLeave: function(leaveID, enterID, cb, upArg, downArg) {
	    var ancestorID = getFirstCommonAncestorID(leaveID, enterID);
	    if (ancestorID !== leaveID) {
	      traverseParentPath(leaveID, ancestorID, cb, upArg, false, true);
	    }
	    if (ancestorID !== enterID) {
	      traverseParentPath(ancestorID, enterID, cb, downArg, true, false);
	    }
	  },

	  /**
	   * Simulates the traversal of a two-phase, capture/bubble event dispatch.
	   *
	   * NOTE: This traversal happens on IDs without touching the DOM.
	   *
	   * @param {string} targetID ID of the target node.
	   * @param {function} cb Callback to invoke.
	   * @param {*} arg Argument to invoke the callback with.
	   * @internal
	   */
	  traverseTwoPhase: function(targetID, cb, arg) {
	    if (targetID) {
	      traverseParentPath('', targetID, cb, arg, true, false);
	      traverseParentPath(targetID, '', cb, arg, false, true);
	    }
	  },

	  /**
	   * Traverse a node ID, calling the supplied `cb` for each ancestor ID. For
	   * example, passing `.0.$row-0.1` would result in `cb` getting called
	   * with `.0`, `.0.$row-0`, and `.0.$row-0.1`.
	   *
	   * NOTE: This traversal happens on IDs without touching the DOM.
	   *
	   * @param {string} targetID ID of the target node.
	   * @param {function} cb Callback to invoke.
	   * @param {*} arg Argument to invoke the callback with.
	   * @internal
	   */
	  traverseAncestors: function(targetID, cb, arg) {
	    traverseParentPath('', targetID, cb, arg, true, false);
	  },

	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _getFirstCommonAncestorID: getFirstCommonAncestorID,

	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _getNextDescendantID: getNextDescendantID,

	  isAncestorIDOf: isAncestorIDOf,

	  SEPARATOR: SEPARATOR

	};

	module.exports = ReactInstanceHandles;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 29 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactRootIndex
	 * @typechecks
	 */

	'use strict';

	var ReactRootIndexInjection = {
	  /**
	   * @param {function} _createReactRootIndex
	   */
	  injectCreateReactRootIndex: function(_createReactRootIndex) {
	    ReactRootIndex.createReactRootIndex = _createReactRootIndex;
	  }
	};

	var ReactRootIndex = {
	  createReactRootIndex: null,
	  injection: ReactRootIndexInjection
	};

	module.exports = ReactRootIndex;


/***/ },
/* 30 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getIteratorFn
	 * @typechecks static-only
	 */

	'use strict';

	/* global Symbol */
	var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

	/**
	 * Returns the iterator method function contained on the iterable object.
	 *
	 * Be sure to invoke the function with the iterable as context:
	 *
	 *     var iteratorFn = getIteratorFn(myIterable);
	 *     if (iteratorFn) {
	 *       var iterator = iteratorFn.call(myIterable);
	 *       ...
	 *     }
	 *
	 * @param {?object} maybeIterable
	 * @return {?function}
	 */
	function getIteratorFn(maybeIterable) {
	  var iteratorFn = maybeIterable && (
	    (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL])
	  );
	  if (typeof iteratorFn === 'function') {
	    return iteratorFn;
	  }
	}

	module.exports = getIteratorFn;


/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponent
	 */

	'use strict';

	var ReactUpdateQueue = __webpack_require__(32);

	var invariant = __webpack_require__(17);
	var warning = __webpack_require__(24);

	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactComponent(props, context) {
	  this.props = props;
	  this.context = context;
	}

	/**
	 * Sets a subset of the state. Always use this to mutate
	 * state. You should treat `this.state` as immutable.
	 *
	 * There is no guarantee that `this.state` will be immediately updated, so
	 * accessing `this.state` after calling this method may return the old value.
	 *
	 * There is no guarantee that calls to `setState` will run synchronously,
	 * as they may eventually be batched together.  You can provide an optional
	 * callback that will be executed when the call to setState is actually
	 * completed.
	 *
	 * When a function is provided to setState, it will be called at some point in
	 * the future (not synchronously). It will be called with the up to date
	 * component arguments (state, props, context). These values can be different
	 * from this.* because your function may be called after receiveProps but before
	 * shouldComponentUpdate, and this new state, props, and context will not yet be
	 * assigned to this.
	 *
	 * @param {object|function} partialState Next partial state or function to
	 *        produce next partial state to be merged with current state.
	 * @param {?function} callback Called after state is updated.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.setState = function(partialState, callback) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    typeof partialState === 'object' ||
	    typeof partialState === 'function' ||
	    partialState == null,
	    'setState(...): takes an object of state variables to update or a ' +
	    'function which returns an object of state variables.'
	  ) : invariant(typeof partialState === 'object' ||
	  typeof partialState === 'function' ||
	  partialState == null));
	  if ("production" !== process.env.NODE_ENV) {
	    ("production" !== process.env.NODE_ENV ? warning(
	      partialState != null,
	      'setState(...): You passed an undefined or null state object; ' +
	      'instead, use forceUpdate().'
	    ) : null);
	  }
	  ReactUpdateQueue.enqueueSetState(this, partialState);
	  if (callback) {
	    ReactUpdateQueue.enqueueCallback(this, callback);
	  }
	};

	/**
	 * Forces an update. This should only be invoked when it is known with
	 * certainty that we are **not** in a DOM transaction.
	 *
	 * You may want to call this when you know that some deeper aspect of the
	 * component's state has changed but `setState` was not called.
	 *
	 * This will not invoke `shouldComponentUpdate`, but it will invoke
	 * `componentWillUpdate` and `componentDidUpdate`.
	 *
	 * @param {?function} callback Called after update is complete.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.forceUpdate = function(callback) {
	  ReactUpdateQueue.enqueueForceUpdate(this);
	  if (callback) {
	    ReactUpdateQueue.enqueueCallback(this, callback);
	  }
	};

	/**
	 * Deprecated APIs. These APIs used to exist on classic React classes but since
	 * we would like to deprecate them, we're not going to move them over to this
	 * modern base class. Instead, we define a getter that warns if it's accessed.
	 */
	if ("production" !== process.env.NODE_ENV) {
	  var deprecatedAPIs = {
	    getDOMNode: [
	      'getDOMNode',
	      'Use React.findDOMNode(component) instead.'
	    ],
	    isMounted: [
	      'isMounted',
	      'Instead, make sure to clean up subscriptions and pending requests in ' +
	      'componentWillUnmount to prevent memory leaks.'
	    ],
	    replaceProps: [
	      'replaceProps',
	      'Instead, call React.render again at the top level.'
	    ],
	    replaceState: [
	      'replaceState',
	      'Refactor your code to use setState instead (see ' +
	      'https://github.com/facebook/react/issues/3236).'
	    ],
	    setProps: [
	      'setProps',
	      'Instead, call React.render again at the top level.'
	    ]
	  };
	  var defineDeprecationWarning = function(methodName, info) {
	    try {
	      Object.defineProperty(ReactComponent.prototype, methodName, {
	        get: function() {
	          ("production" !== process.env.NODE_ENV ? warning(
	            false,
	            '%s(...) is deprecated in plain JavaScript React classes. %s',
	            info[0],
	            info[1]
	          ) : null);
	          return undefined;
	        }
	      });
	    } catch (x) {
	      // IE will fail on defineProperty (es5-shim/sham too)
	    }
	  };
	  for (var fnName in deprecatedAPIs) {
	    if (deprecatedAPIs.hasOwnProperty(fnName)) {
	      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
	    }
	  }
	}

	module.exports = ReactComponent;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactUpdateQueue
	 */

	'use strict';

	var ReactLifeCycle = __webpack_require__(33);
	var ReactCurrentOwner = __webpack_require__(26);
	var ReactElement = __webpack_require__(21);
	var ReactInstanceMap = __webpack_require__(34);
	var ReactUpdates = __webpack_require__(35);

	var assign = __webpack_require__(10);
	var invariant = __webpack_require__(17);
	var warning = __webpack_require__(24);

	function enqueueUpdate(internalInstance) {
	  if (internalInstance !== ReactLifeCycle.currentlyMountingInstance) {
	    // If we're in a componentWillMount handler, don't enqueue a rerender
	    // because ReactUpdates assumes we're in a browser context (which is
	    // wrong for server rendering) and we're about to do a render anyway.
	    // See bug in #1740.
	    ReactUpdates.enqueueUpdate(internalInstance);
	  }
	}

	function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    ReactCurrentOwner.current == null,
	    '%s(...): Cannot update during an existing state transition ' +
	    '(such as within `render`). Render methods should be a pure function ' +
	    'of props and state.',
	    callerName
	  ) : invariant(ReactCurrentOwner.current == null));

	  var internalInstance = ReactInstanceMap.get(publicInstance);
	  if (!internalInstance) {
	    if ("production" !== process.env.NODE_ENV) {
	      // Only warn when we have a callerName. Otherwise we should be silent.
	      // We're probably calling from enqueueCallback. We don't want to warn
	      // there because we already warned for the corresponding lifecycle method.
	      ("production" !== process.env.NODE_ENV ? warning(
	        !callerName,
	        '%s(...): Can only update a mounted or mounting component. ' +
	        'This usually means you called %s() on an unmounted ' +
	        'component. This is a no-op.',
	        callerName,
	        callerName
	      ) : null);
	    }
	    return null;
	  }

	  if (internalInstance === ReactLifeCycle.currentlyUnmountingInstance) {
	    return null;
	  }

	  return internalInstance;
	}

	/**
	 * ReactUpdateQueue allows for state updates to be scheduled into a later
	 * reconciliation step.
	 */
	var ReactUpdateQueue = {

	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	  enqueueCallback: function(publicInstance, callback) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      typeof callback === 'function',
	      'enqueueCallback(...): You called `setProps`, `replaceProps`, ' +
	      '`setState`, `replaceState`, or `forceUpdate` with a callback that ' +
	      'isn\'t callable.'
	    ) : invariant(typeof callback === 'function'));
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);

	    // Previously we would throw an error if we didn't have an internal
	    // instance. Since we want to make it a no-op instead, we mirror the same
	    // behavior we have in other enqueue* methods.
	    // We also need to ignore callbacks in componentWillMount. See
	    // enqueueUpdates.
	    if (!internalInstance ||
	        internalInstance === ReactLifeCycle.currentlyMountingInstance) {
	      return null;
	    }

	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    // TODO: The callback here is ignored when setState is called from
	    // componentWillMount. Either fix it or disallow doing so completely in
	    // favor of getInitialState. Alternatively, we can disallow
	    // componentWillMount during server-side rendering.
	    enqueueUpdate(internalInstance);
	  },

	  enqueueCallbackInternal: function(internalInstance, callback) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      typeof callback === 'function',
	      'enqueueCallback(...): You called `setProps`, `replaceProps`, ' +
	      '`setState`, `replaceState`, or `forceUpdate` with a callback that ' +
	      'isn\'t callable.'
	    ) : invariant(typeof callback === 'function'));
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldUpdateComponent`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function(publicInstance) {
	    var internalInstance = getInternalInstanceReadyForUpdate(
	      publicInstance,
	      'forceUpdate'
	    );

	    if (!internalInstance) {
	      return;
	    }

	    internalInstance._pendingForceUpdate = true;

	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function(publicInstance, completeState) {
	    var internalInstance = getInternalInstanceReadyForUpdate(
	      publicInstance,
	      'replaceState'
	    );

	    if (!internalInstance) {
	      return;
	    }

	    internalInstance._pendingStateQueue = [completeState];
	    internalInstance._pendingReplaceState = true;

	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function(publicInstance, partialState) {
	    var internalInstance = getInternalInstanceReadyForUpdate(
	      publicInstance,
	      'setState'
	    );

	    if (!internalInstance) {
	      return;
	    }

	    var queue =
	      internalInstance._pendingStateQueue ||
	      (internalInstance._pendingStateQueue = []);
	    queue.push(partialState);

	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Sets a subset of the props.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialProps Subset of the next props.
	   * @internal
	   */
	  enqueueSetProps: function(publicInstance, partialProps) {
	    var internalInstance = getInternalInstanceReadyForUpdate(
	      publicInstance,
	      'setProps'
	    );

	    if (!internalInstance) {
	      return;
	    }

	    ("production" !== process.env.NODE_ENV ? invariant(
	      internalInstance._isTopLevel,
	      'setProps(...): You called `setProps` on a ' +
	      'component with a parent. This is an anti-pattern since props will ' +
	      'get reactively updated when rendered. Instead, change the owner\'s ' +
	      '`render` method to pass the correct value as props to the component ' +
	      'where it is created.'
	    ) : invariant(internalInstance._isTopLevel));

	    // Merge with the pending element if it exists, otherwise with existing
	    // element props.
	    var element = internalInstance._pendingElement ||
	                  internalInstance._currentElement;
	    var props = assign({}, element.props, partialProps);
	    internalInstance._pendingElement = ReactElement.cloneAndReplaceProps(
	      element,
	      props
	    );

	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Replaces all of the props.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} props New props.
	   * @internal
	   */
	  enqueueReplaceProps: function(publicInstance, props) {
	    var internalInstance = getInternalInstanceReadyForUpdate(
	      publicInstance,
	      'replaceProps'
	    );

	    if (!internalInstance) {
	      return;
	    }

	    ("production" !== process.env.NODE_ENV ? invariant(
	      internalInstance._isTopLevel,
	      'replaceProps(...): You called `replaceProps` on a ' +
	      'component with a parent. This is an anti-pattern since props will ' +
	      'get reactively updated when rendered. Instead, change the owner\'s ' +
	      '`render` method to pass the correct value as props to the component ' +
	      'where it is created.'
	    ) : invariant(internalInstance._isTopLevel));

	    // Merge with the pending element if it exists, otherwise with existing
	    // element props.
	    var element = internalInstance._pendingElement ||
	                  internalInstance._currentElement;
	    internalInstance._pendingElement = ReactElement.cloneAndReplaceProps(
	      element,
	      props
	    );

	    enqueueUpdate(internalInstance);
	  },

	  enqueueElementInternal: function(internalInstance, newElement) {
	    internalInstance._pendingElement = newElement;
	    enqueueUpdate(internalInstance);
	  }

	};

	module.exports = ReactUpdateQueue;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 33 */
/***/ function(module, exports) {

	/**
	 * Copyright 2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactLifeCycle
	 */

	'use strict';

	/**
	 * This module manages the bookkeeping when a component is in the process
	 * of being mounted or being unmounted. This is used as a way to enforce
	 * invariants (or warnings) when it is not recommended to call
	 * setState/forceUpdate.
	 *
	 * currentlyMountingInstance: During the construction phase, it is not possible
	 * to trigger an update since the instance is not fully mounted yet. However, we
	 * currently allow this as a convenience for mutating the initial state.
	 *
	 * currentlyUnmountingInstance: During the unmounting phase, the instance is
	 * still mounted and can therefore schedule an update. However, this is not
	 * recommended and probably an error since it's about to be unmounted.
	 * Therefore we still want to trigger in an error for that case.
	 */

	var ReactLifeCycle = {
	  currentlyMountingInstance: null,
	  currentlyUnmountingInstance: null
	};

	module.exports = ReactLifeCycle;


/***/ },
/* 34 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstanceMap
	 */

	'use strict';

	/**
	 * `ReactInstanceMap` maintains a mapping from a public facing stateful
	 * instance (key) and the internal representation (value). This allows public
	 * methods to accept the user facing instance as an argument and map them back
	 * to internal methods.
	 */

	// TODO: Replace this with ES6: var ReactInstanceMap = new Map();
	var ReactInstanceMap = {

	  /**
	   * This API should be called `delete` but we'd have to make sure to always
	   * transform these to strings for IE support. When this transform is fully
	   * supported we can rename it.
	   */
	  remove: function(key) {
	    key._reactInternalInstance = undefined;
	  },

	  get: function(key) {
	    return key._reactInternalInstance;
	  },

	  has: function(key) {
	    return key._reactInternalInstance !== undefined;
	  },

	  set: function(key, value) {
	    key._reactInternalInstance = value;
	  }

	};

	module.exports = ReactInstanceMap;


/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactUpdates
	 */

	'use strict';

	var CallbackQueue = __webpack_require__(36);
	var PooledClass = __webpack_require__(19);
	var ReactCurrentOwner = __webpack_require__(26);
	var ReactPerf = __webpack_require__(37);
	var ReactReconciler = __webpack_require__(38);
	var Transaction = __webpack_require__(45);

	var assign = __webpack_require__(10);
	var invariant = __webpack_require__(17);
	var warning = __webpack_require__(24);

	var dirtyComponents = [];
	var asapCallbackQueue = CallbackQueue.getPooled();
	var asapEnqueued = false;

	var batchingStrategy = null;

	function ensureInjected() {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    ReactUpdates.ReactReconcileTransaction && batchingStrategy,
	    'ReactUpdates: must inject a reconcile transaction class and batching ' +
	    'strategy'
	  ) : invariant(ReactUpdates.ReactReconcileTransaction && batchingStrategy));
	}

	var NESTED_UPDATES = {
	  initialize: function() {
	    this.dirtyComponentsLength = dirtyComponents.length;
	  },
	  close: function() {
	    if (this.dirtyComponentsLength !== dirtyComponents.length) {
	      // Additional updates were enqueued by componentDidUpdate handlers or
	      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
	      // these new updates so that if A's componentDidUpdate calls setState on
	      // B, B will update before the callback A's updater provided when calling
	      // setState.
	      dirtyComponents.splice(0, this.dirtyComponentsLength);
	      flushBatchedUpdates();
	    } else {
	      dirtyComponents.length = 0;
	    }
	  }
	};

	var UPDATE_QUEUEING = {
	  initialize: function() {
	    this.callbackQueue.reset();
	  },
	  close: function() {
	    this.callbackQueue.notifyAll();
	  }
	};

	var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];

	function ReactUpdatesFlushTransaction() {
	  this.reinitializeTransaction();
	  this.dirtyComponentsLength = null;
	  this.callbackQueue = CallbackQueue.getPooled();
	  this.reconcileTransaction =
	    ReactUpdates.ReactReconcileTransaction.getPooled();
	}

	assign(
	  ReactUpdatesFlushTransaction.prototype,
	  Transaction.Mixin, {
	  getTransactionWrappers: function() {
	    return TRANSACTION_WRAPPERS;
	  },

	  destructor: function() {
	    this.dirtyComponentsLength = null;
	    CallbackQueue.release(this.callbackQueue);
	    this.callbackQueue = null;
	    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
	    this.reconcileTransaction = null;
	  },

	  perform: function(method, scope, a) {
	    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
	    // with this transaction's wrappers around it.
	    return Transaction.Mixin.perform.call(
	      this,
	      this.reconcileTransaction.perform,
	      this.reconcileTransaction,
	      method,
	      scope,
	      a
	    );
	  }
	});

	PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

	function batchedUpdates(callback, a, b, c, d) {
	  ensureInjected();
	  batchingStrategy.batchedUpdates(callback, a, b, c, d);
	}

	/**
	 * Array comparator for ReactComponents by mount ordering.
	 *
	 * @param {ReactComponent} c1 first component you're comparing
	 * @param {ReactComponent} c2 second component you're comparing
	 * @return {number} Return value usable by Array.prototype.sort().
	 */
	function mountOrderComparator(c1, c2) {
	  return c1._mountOrder - c2._mountOrder;
	}

	function runBatchedUpdates(transaction) {
	  var len = transaction.dirtyComponentsLength;
	  ("production" !== process.env.NODE_ENV ? invariant(
	    len === dirtyComponents.length,
	    'Expected flush transaction\'s stored dirty-components length (%s) to ' +
	    'match dirty-components array length (%s).',
	    len,
	    dirtyComponents.length
	  ) : invariant(len === dirtyComponents.length));

	  // Since reconciling a component higher in the owner hierarchy usually (not
	  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
	  // them before their children by sorting the array.
	  dirtyComponents.sort(mountOrderComparator);

	  for (var i = 0; i < len; i++) {
	    // If a component is unmounted before pending changes apply, it will still
	    // be here, but we assume that it has cleared its _pendingCallbacks and
	    // that performUpdateIfNecessary is a noop.
	    var component = dirtyComponents[i];

	    // If performUpdateIfNecessary happens to enqueue any new updates, we
	    // shouldn't execute the callbacks until the next render happens, so
	    // stash the callbacks first
	    var callbacks = component._pendingCallbacks;
	    component._pendingCallbacks = null;

	    ReactReconciler.performUpdateIfNecessary(
	      component,
	      transaction.reconcileTransaction
	    );

	    if (callbacks) {
	      for (var j = 0; j < callbacks.length; j++) {
	        transaction.callbackQueue.enqueue(
	          callbacks[j],
	          component.getPublicInstance()
	        );
	      }
	    }
	  }
	}

	var flushBatchedUpdates = function() {
	  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
	  // array and perform any updates enqueued by mount-ready handlers (i.e.,
	  // componentDidUpdate) but we need to check here too in order to catch
	  // updates enqueued by setState callbacks and asap calls.
	  while (dirtyComponents.length || asapEnqueued) {
	    if (dirtyComponents.length) {
	      var transaction = ReactUpdatesFlushTransaction.getPooled();
	      transaction.perform(runBatchedUpdates, null, transaction);
	      ReactUpdatesFlushTransaction.release(transaction);
	    }

	    if (asapEnqueued) {
	      asapEnqueued = false;
	      var queue = asapCallbackQueue;
	      asapCallbackQueue = CallbackQueue.getPooled();
	      queue.notifyAll();
	      CallbackQueue.release(queue);
	    }
	  }
	};
	flushBatchedUpdates = ReactPerf.measure(
	  'ReactUpdates',
	  'flushBatchedUpdates',
	  flushBatchedUpdates
	);

	/**
	 * Mark a component as needing a rerender, adding an optional callback to a
	 * list of functions which will be executed once the rerender occurs.
	 */
	function enqueueUpdate(component) {
	  ensureInjected();

	  // Various parts of our code (such as ReactCompositeComponent's
	  // _renderValidatedComponent) assume that calls to render aren't nested;
	  // verify that that's the case. (This is called by each top-level update
	  // function, like setProps, setState, forceUpdate, etc.; creation and
	  // destruction of top-level components is guarded in ReactMount.)
	  ("production" !== process.env.NODE_ENV ? warning(
	    ReactCurrentOwner.current == null,
	    'enqueueUpdate(): Render methods should be a pure function of props ' +
	    'and state; triggering nested component updates from render is not ' +
	    'allowed. If necessary, trigger nested updates in ' +
	    'componentDidUpdate.'
	  ) : null);

	  if (!batchingStrategy.isBatchingUpdates) {
	    batchingStrategy.batchedUpdates(enqueueUpdate, component);
	    return;
	  }

	  dirtyComponents.push(component);
	}

	/**
	 * Enqueue a callback to be run at the end of the current batching cycle. Throws
	 * if no updates are currently being performed.
	 */
	function asap(callback, context) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    batchingStrategy.isBatchingUpdates,
	    'ReactUpdates.asap: Can\'t enqueue an asap callback in a context where' +
	    'updates are not being batched.'
	  ) : invariant(batchingStrategy.isBatchingUpdates));
	  asapCallbackQueue.enqueue(callback, context);
	  asapEnqueued = true;
	}

	var ReactUpdatesInjection = {
	  injectReconcileTransaction: function(ReconcileTransaction) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      ReconcileTransaction,
	      'ReactUpdates: must provide a reconcile transaction class'
	    ) : invariant(ReconcileTransaction));
	    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
	  },

	  injectBatchingStrategy: function(_batchingStrategy) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      _batchingStrategy,
	      'ReactUpdates: must provide a batching strategy'
	    ) : invariant(_batchingStrategy));
	    ("production" !== process.env.NODE_ENV ? invariant(
	      typeof _batchingStrategy.batchedUpdates === 'function',
	      'ReactUpdates: must provide a batchedUpdates() function'
	    ) : invariant(typeof _batchingStrategy.batchedUpdates === 'function'));
	    ("production" !== process.env.NODE_ENV ? invariant(
	      typeof _batchingStrategy.isBatchingUpdates === 'boolean',
	      'ReactUpdates: must provide an isBatchingUpdates boolean attribute'
	    ) : invariant(typeof _batchingStrategy.isBatchingUpdates === 'boolean'));
	    batchingStrategy = _batchingStrategy;
	  }
	};

	var ReactUpdates = {
	  /**
	   * React references `ReactReconcileTransaction` using this property in order
	   * to allow dependency injection.
	   *
	   * @internal
	   */
	  ReactReconcileTransaction: null,

	  batchedUpdates: batchedUpdates,
	  enqueueUpdate: enqueueUpdate,
	  flushBatchedUpdates: flushBatchedUpdates,
	  injection: ReactUpdatesInjection,
	  asap: asap
	};

	module.exports = ReactUpdates;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CallbackQueue
	 */

	'use strict';

	var PooledClass = __webpack_require__(19);

	var assign = __webpack_require__(10);
	var invariant = __webpack_require__(17);

	/**
	 * A specialized pseudo-event module to help keep track of components waiting to
	 * be notified when their DOM representations are available for use.
	 *
	 * This implements `PooledClass`, so you should never need to instantiate this.
	 * Instead, use `CallbackQueue.getPooled()`.
	 *
	 * @class ReactMountReady
	 * @implements PooledClass
	 * @internal
	 */
	function CallbackQueue() {
	  this._callbacks = null;
	  this._contexts = null;
	}

	assign(CallbackQueue.prototype, {

	  /**
	   * Enqueues a callback to be invoked when `notifyAll` is invoked.
	   *
	   * @param {function} callback Invoked when `notifyAll` is invoked.
	   * @param {?object} context Context to call `callback` with.
	   * @internal
	   */
	  enqueue: function(callback, context) {
	    this._callbacks = this._callbacks || [];
	    this._contexts = this._contexts || [];
	    this._callbacks.push(callback);
	    this._contexts.push(context);
	  },

	  /**
	   * Invokes all enqueued callbacks and clears the queue. This is invoked after
	   * the DOM representation of a component has been created or updated.
	   *
	   * @internal
	   */
	  notifyAll: function() {
	    var callbacks = this._callbacks;
	    var contexts = this._contexts;
	    if (callbacks) {
	      ("production" !== process.env.NODE_ENV ? invariant(
	        callbacks.length === contexts.length,
	        'Mismatched list of contexts in callback queue'
	      ) : invariant(callbacks.length === contexts.length));
	      this._callbacks = null;
	      this._contexts = null;
	      for (var i = 0, l = callbacks.length; i < l; i++) {
	        callbacks[i].call(contexts[i]);
	      }
	      callbacks.length = 0;
	      contexts.length = 0;
	    }
	  },

	  /**
	   * Resets the internal queue.
	   *
	   * @internal
	   */
	  reset: function() {
	    this._callbacks = null;
	    this._contexts = null;
	  },

	  /**
	   * `PooledClass` looks for this.
	   */
	  destructor: function() {
	    this.reset();
	  }

	});

	PooledClass.addPoolingTo(CallbackQueue);

	module.exports = CallbackQueue;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPerf
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * ReactPerf is a general AOP system designed to measure performance. This
	 * module only has the hooks: see ReactDefaultPerf for the analysis tool.
	 */
	var ReactPerf = {
	  /**
	   * Boolean to enable/disable measurement. Set to false by default to prevent
	   * accidental logging and perf loss.
	   */
	  enableMeasure: false,

	  /**
	   * Holds onto the measure function in use. By default, don't measure
	   * anything, but we'll override this if we inject a measure function.
	   */
	  storedMeasure: _noMeasure,

	  /**
	   * @param {object} object
	   * @param {string} objectName
	   * @param {object<string>} methodNames
	   */
	  measureMethods: function(object, objectName, methodNames) {
	    if ("production" !== process.env.NODE_ENV) {
	      for (var key in methodNames) {
	        if (!methodNames.hasOwnProperty(key)) {
	          continue;
	        }
	        object[key] = ReactPerf.measure(
	          objectName,
	          methodNames[key],
	          object[key]
	        );
	      }
	    }
	  },

	  /**
	   * Use this to wrap methods you want to measure. Zero overhead in production.
	   *
	   * @param {string} objName
	   * @param {string} fnName
	   * @param {function} func
	   * @return {function}
	   */
	  measure: function(objName, fnName, func) {
	    if ("production" !== process.env.NODE_ENV) {
	      var measuredFunc = null;
	      var wrapper = function() {
	        if (ReactPerf.enableMeasure) {
	          if (!measuredFunc) {
	            measuredFunc = ReactPerf.storedMeasure(objName, fnName, func);
	          }
	          return measuredFunc.apply(this, arguments);
	        }
	        return func.apply(this, arguments);
	      };
	      wrapper.displayName = objName + '_' + fnName;
	      return wrapper;
	    }
	    return func;
	  },

	  injection: {
	    /**
	     * @param {function} measure
	     */
	    injectMeasure: function(measure) {
	      ReactPerf.storedMeasure = measure;
	    }
	  }
	};

	/**
	 * Simply passes through the measured function, without measuring it.
	 *
	 * @param {string} objName
	 * @param {string} fnName
	 * @param {function} func
	 * @return {function}
	 */
	function _noMeasure(objName, fnName, func) {
	  return func;
	}

	module.exports = ReactPerf;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactReconciler
	 */

	'use strict';

	var ReactRef = __webpack_require__(39);
	var ReactElementValidator = __webpack_require__(41);

	/**
	 * Helper to call ReactRef.attachRefs with this composite component, split out
	 * to avoid allocations in the transaction mount-ready queue.
	 */
	function attachRefs() {
	  ReactRef.attachRefs(this, this._currentElement);
	}

	var ReactReconciler = {

	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {string} rootID DOM ID of the root node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function(internalInstance, rootID, transaction, context) {
	    var markup = internalInstance.mountComponent(rootID, transaction, context);
	    if ("production" !== process.env.NODE_ENV) {
	      ReactElementValidator.checkAndWarnForMutatedProps(
	        internalInstance._currentElement
	      );
	    }
	    transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    return markup;
	  },

	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function(internalInstance) {
	    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
	    internalInstance.unmountComponent();
	  },

	  /**
	   * Update a component using a new element.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @internal
	   */
	  receiveComponent: function(
	    internalInstance, nextElement, transaction, context
	  ) {
	    var prevElement = internalInstance._currentElement;

	    if (nextElement === prevElement && nextElement._owner != null) {
	      // Since elements are immutable after the owner is rendered,
	      // we can do a cheap identity compare here to determine if this is a
	      // superfluous reconcile. It's possible for state to be mutable but such
	      // change should trigger an update of the owner which would recreate
	      // the element. We explicitly check for the existence of an owner since
	      // it's possible for an element created outside a composite to be
	      // deeply mutated and reused.
	      return;
	    }

	    if ("production" !== process.env.NODE_ENV) {
	      ReactElementValidator.checkAndWarnForMutatedProps(nextElement);
	    }

	    var refsChanged = ReactRef.shouldUpdateRefs(
	      prevElement,
	      nextElement
	    );

	    if (refsChanged) {
	      ReactRef.detachRefs(internalInstance, prevElement);
	    }

	    internalInstance.receiveComponent(nextElement, transaction, context);

	    if (refsChanged) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	  },

	  /**
	   * Flush any dirty changes in a component.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function(
	    internalInstance,
	    transaction
	  ) {
	    internalInstance.performUpdateIfNecessary(transaction);
	  }

	};

	module.exports = ReactReconciler;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactRef
	 */

	'use strict';

	var ReactOwner = __webpack_require__(40);

	var ReactRef = {};

	function attachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(component.getPublicInstance());
	  } else {
	    // Legacy ref
	    ReactOwner.addComponentAsRefTo(component, ref, owner);
	  }
	}

	function detachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(null);
	  } else {
	    // Legacy ref
	    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
	  }
	}

	ReactRef.attachRefs = function(instance, element) {
	  var ref = element.ref;
	  if (ref != null) {
	    attachRef(ref, instance, element._owner);
	  }
	};

	ReactRef.shouldUpdateRefs = function(prevElement, nextElement) {
	  // If either the owner or a `ref` has changed, make sure the newest owner
	  // has stored a reference to `this`, and the previous owner (if different)
	  // has forgotten the reference to `this`. We use the element instead
	  // of the public this.props because the post processing cannot determine
	  // a ref. The ref conceptually lives on the element.

	  // TODO: Should this even be possible? The owner cannot change because
	  // it's forbidden by shouldUpdateReactComponent. The ref can change
	  // if you swap the keys of but not the refs. Reconsider where this check
	  // is made. It probably belongs where the key checking and
	  // instantiateReactComponent is done.

	  return (
	    nextElement._owner !== prevElement._owner ||
	    nextElement.ref !== prevElement.ref
	  );
	};

	ReactRef.detachRefs = function(instance, element) {
	  var ref = element.ref;
	  if (ref != null) {
	    detachRef(ref, instance, element._owner);
	  }
	};

	module.exports = ReactRef;


/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactOwner
	 */

	'use strict';

	var invariant = __webpack_require__(17);

	/**
	 * ReactOwners are capable of storing references to owned components.
	 *
	 * All components are capable of //being// referenced by owner components, but
	 * only ReactOwner components are capable of //referencing// owned components.
	 * The named reference is known as a "ref".
	 *
	 * Refs are available when mounted and updated during reconciliation.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return (
	 *         <div onClick={this.handleClick}>
	 *           <CustomComponent ref="custom" />
	 *         </div>
	 *       );
	 *     },
	 *     handleClick: function() {
	 *       this.refs.custom.handleClick();
	 *     },
	 *     componentDidMount: function() {
	 *       this.refs.custom.initialize();
	 *     }
	 *   });
	 *
	 * Refs should rarely be used. When refs are used, they should only be done to
	 * control data that is not handled by React's data flow.
	 *
	 * @class ReactOwner
	 */
	var ReactOwner = {

	  /**
	   * @param {?object} object
	   * @return {boolean} True if `object` is a valid owner.
	   * @final
	   */
	  isValidOwner: function(object) {
	    return !!(
	      (object &&
	      typeof object.attachRef === 'function' && typeof object.detachRef === 'function')
	    );
	  },

	  /**
	   * Adds a component by ref to an owner component.
	   *
	   * @param {ReactComponent} component Component to reference.
	   * @param {string} ref Name by which to refer to the component.
	   * @param {ReactOwner} owner Component on which to record the ref.
	   * @final
	   * @internal
	   */
	  addComponentAsRefTo: function(component, ref, owner) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      ReactOwner.isValidOwner(owner),
	      'addComponentAsRefTo(...): Only a ReactOwner can have refs. This ' +
	      'usually means that you\'re trying to add a ref to a component that ' +
	      'doesn\'t have an owner (that is, was not created inside of another ' +
	      'component\'s `render` method). Try rendering this component inside of ' +
	      'a new top-level component which will hold the ref.'
	    ) : invariant(ReactOwner.isValidOwner(owner)));
	    owner.attachRef(ref, component);
	  },

	  /**
	   * Removes a component by ref from an owner component.
	   *
	   * @param {ReactComponent} component Component to dereference.
	   * @param {string} ref Name of the ref to remove.
	   * @param {ReactOwner} owner Component on which the ref is recorded.
	   * @final
	   * @internal
	   */
	  removeComponentAsRefFrom: function(component, ref, owner) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      ReactOwner.isValidOwner(owner),
	      'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. This ' +
	      'usually means that you\'re trying to remove a ref to a component that ' +
	      'doesn\'t have an owner (that is, was not created inside of another ' +
	      'component\'s `render` method). Try rendering this component inside of ' +
	      'a new top-level component which will hold the ref.'
	    ) : invariant(ReactOwner.isValidOwner(owner)));
	    // Check that `component` is still the current ref because we do not want to
	    // detach the ref if another component stole it.
	    if (owner.getPublicInstance().refs[ref] === component.getPublicInstance()) {
	      owner.detachRef(ref);
	    }
	  }

	};

	module.exports = ReactOwner;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactElementValidator
	 */

	/**
	 * ReactElementValidator provides a wrapper around a element factory
	 * which validates the props passed to the element. This is intended to be
	 * used only in DEV and could be replaced by a static type checker for languages
	 * that support it.
	 */

	'use strict';

	var ReactElement = __webpack_require__(21);
	var ReactFragment = __webpack_require__(20);
	var ReactPropTypeLocations = __webpack_require__(42);
	var ReactPropTypeLocationNames = __webpack_require__(43);
	var ReactCurrentOwner = __webpack_require__(26);
	var ReactNativeComponent = __webpack_require__(44);

	var getIteratorFn = __webpack_require__(30);
	var invariant = __webpack_require__(17);
	var warning = __webpack_require__(24);

	function getDeclarationErrorAddendum() {
	  if (ReactCurrentOwner.current) {
	    var name = ReactCurrentOwner.current.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	/**
	 * Warn if there's no key explicitly set on dynamic arrays of children or
	 * object keys are not valid. This allows us to keep track of children between
	 * updates.
	 */
	var ownerHasKeyUseWarning = {};

	var loggedTypeFailures = {};

	var NUMERIC_PROPERTY_REGEX = /^\d+$/;

	/**
	 * Gets the instance's name for use in warnings.
	 *
	 * @internal
	 * @return {?string} Display name or undefined
	 */
	function getName(instance) {
	  var publicInstance = instance && instance.getPublicInstance();
	  if (!publicInstance) {
	    return undefined;
	  }
	  var constructor = publicInstance.constructor;
	  if (!constructor) {
	    return undefined;
	  }
	  return constructor.displayName || constructor.name || undefined;
	}

	/**
	 * Gets the current owner's displayName for use in warnings.
	 *
	 * @internal
	 * @return {?string} Display name or undefined
	 */
	function getCurrentOwnerDisplayName() {
	  var current = ReactCurrentOwner.current;
	  return (
	    current && getName(current) || undefined
	  );
	}

	/**
	 * Warn if the element doesn't have an explicit key assigned to it.
	 * This element is in an array. The array could grow and shrink or be
	 * reordered. All children that haven't already been validated are required to
	 * have a "key" property assigned to it.
	 *
	 * @internal
	 * @param {ReactElement} element Element that requires a key.
	 * @param {*} parentType element's parent's type.
	 */
	function validateExplicitKey(element, parentType) {
	  if (element._store.validated || element.key != null) {
	    return;
	  }
	  element._store.validated = true;

	  warnAndMonitorForKeyUse(
	    'Each child in an array or iterator should have a unique "key" prop.',
	    element,
	    parentType
	  );
	}

	/**
	 * Warn if the key is being defined as an object property but has an incorrect
	 * value.
	 *
	 * @internal
	 * @param {string} name Property name of the key.
	 * @param {ReactElement} element Component that requires a key.
	 * @param {*} parentType element's parent's type.
	 */
	function validatePropertyKey(name, element, parentType) {
	  if (!NUMERIC_PROPERTY_REGEX.test(name)) {
	    return;
	  }
	  warnAndMonitorForKeyUse(
	    'Child objects should have non-numeric keys so ordering is preserved.',
	    element,
	    parentType
	  );
	}

	/**
	 * Shared warning and monitoring code for the key warnings.
	 *
	 * @internal
	 * @param {string} message The base warning that gets output.
	 * @param {ReactElement} element Component that requires a key.
	 * @param {*} parentType element's parent's type.
	 */
	function warnAndMonitorForKeyUse(message, element, parentType) {
	  var ownerName = getCurrentOwnerDisplayName();
	  var parentName = typeof parentType === 'string' ?
	    parentType : parentType.displayName || parentType.name;

	  var useName = ownerName || parentName;
	  var memoizer = ownerHasKeyUseWarning[message] || (
	    (ownerHasKeyUseWarning[message] = {})
	  );
	  if (memoizer.hasOwnProperty(useName)) {
	    return;
	  }
	  memoizer[useName] = true;

	  var parentOrOwnerAddendum =
	    ownerName ? (" Check the render method of " + ownerName + ".") :
	    parentName ? (" Check the React.render call using <" + parentName + ">.") :
	    '';

	  // Usually the current owner is the offender, but if it accepts children as a
	  // property, it may be the creator of the child that's responsible for
	  // assigning it a key.
	  var childOwnerAddendum = '';
	  if (element &&
	      element._owner &&
	      element._owner !== ReactCurrentOwner.current) {
	    // Name of the component that originally created this child.
	    var childOwnerName = getName(element._owner);

	    childOwnerAddendum = (" It was passed a child from " + childOwnerName + ".");
	  }

	  ("production" !== process.env.NODE_ENV ? warning(
	    false,
	    message + '%s%s See https://fb.me/react-warning-keys for more information.',
	    parentOrOwnerAddendum,
	    childOwnerAddendum
	  ) : null);
	}

	/**
	 * Ensure that every element either is passed in a static location, in an
	 * array with an explicit keys property defined, or in an object literal
	 * with valid key property.
	 *
	 * @internal
	 * @param {ReactNode} node Statically passed child of any type.
	 * @param {*} parentType node's parent's type.
	 */
	function validateChildKeys(node, parentType) {
	  if (Array.isArray(node)) {
	    for (var i = 0; i < node.length; i++) {
	      var child = node[i];
	      if (ReactElement.isValidElement(child)) {
	        validateExplicitKey(child, parentType);
	      }
	    }
	  } else if (ReactElement.isValidElement(node)) {
	    // This element was passed in a valid location.
	    node._store.validated = true;
	  } else if (node) {
	    var iteratorFn = getIteratorFn(node);
	    // Entry iterators provide implicit keys.
	    if (iteratorFn) {
	      if (iteratorFn !== node.entries) {
	        var iterator = iteratorFn.call(node);
	        var step;
	        while (!(step = iterator.next()).done) {
	          if (ReactElement.isValidElement(step.value)) {
	            validateExplicitKey(step.value, parentType);
	          }
	        }
	      }
	    } else if (typeof node === 'object') {
	      var fragment = ReactFragment.extractIfFragment(node);
	      for (var key in fragment) {
	        if (fragment.hasOwnProperty(key)) {
	          validatePropertyKey(key, fragment[key], parentType);
	        }
	      }
	    }
	  }
	}

	/**
	 * Assert that the props are valid
	 *
	 * @param {string} componentName Name of the component for error messages.
	 * @param {object} propTypes Map of prop name to a ReactPropType
	 * @param {object} props
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @private
	 */
	function checkPropTypes(componentName, propTypes, props, location) {
	  for (var propName in propTypes) {
	    if (propTypes.hasOwnProperty(propName)) {
	      var error;
	      // Prop type validation may throw. In case they do, we don't want to
	      // fail the render phase where it didn't fail before. So we log it.
	      // After these have been cleaned up, we'll let them throw.
	      try {
	        // This is intentionally an invariant that gets caught. It's the same
	        // behavior as without this statement except with a better message.
	        ("production" !== process.env.NODE_ENV ? invariant(
	          typeof propTypes[propName] === 'function',
	          '%s: %s type `%s` is invalid; it must be a function, usually from ' +
	          'React.PropTypes.',
	          componentName || 'React class',
	          ReactPropTypeLocationNames[location],
	          propName
	        ) : invariant(typeof propTypes[propName] === 'function'));
	        error = propTypes[propName](props, propName, componentName, location);
	      } catch (ex) {
	        error = ex;
	      }
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;

	        var addendum = getDeclarationErrorAddendum(this);
	        ("production" !== process.env.NODE_ENV ? warning(false, 'Failed propType: %s%s', error.message, addendum) : null);
	      }
	    }
	  }
	}

	var warnedPropsMutations = {};

	/**
	 * Warn about mutating props when setting `propName` on `element`.
	 *
	 * @param {string} propName The string key within props that was set
	 * @param {ReactElement} element
	 */
	function warnForPropsMutation(propName, element) {
	  var type = element.type;
	  var elementName = typeof type === 'string' ? type : type.displayName;
	  var ownerName = element._owner ?
	    element._owner.getPublicInstance().constructor.displayName : null;

	  var warningKey = propName + '|' + elementName + '|' + ownerName;
	  if (warnedPropsMutations.hasOwnProperty(warningKey)) {
	    return;
	  }
	  warnedPropsMutations[warningKey] = true;

	  var elementInfo = '';
	  if (elementName) {
	    elementInfo = ' <' + elementName + ' />';
	  }
	  var ownerInfo = '';
	  if (ownerName) {
	    ownerInfo = ' The element was created by ' + ownerName + '.';
	  }

	  ("production" !== process.env.NODE_ENV ? warning(
	    false,
	    'Don\'t set .props.%s of the React component%s. Instead, specify the ' +
	    'correct value when initially creating the element or use ' +
	    'React.cloneElement to make a new element with updated props.%s',
	    propName,
	    elementInfo,
	    ownerInfo
	  ) : null);
	}

	// Inline Object.is polyfill
	function is(a, b) {
	  if (a !== a) {
	    // NaN
	    return b !== b;
	  }
	  if (a === 0 && b === 0) {
	    // +-0
	    return 1 / a === 1 / b;
	  }
	  return a === b;
	}

	/**
	 * Given an element, check if its props have been mutated since element
	 * creation (or the last call to this function). In particular, check if any
	 * new props have been added, which we can't directly catch by defining warning
	 * properties on the props object.
	 *
	 * @param {ReactElement} element
	 */
	function checkAndWarnForMutatedProps(element) {
	  if (!element._store) {
	    // Element was created using `new ReactElement` directly or with
	    // `ReactElement.createElement`; skip mutation checking
	    return;
	  }

	  var originalProps = element._store.originalProps;
	  var props = element.props;

	  for (var propName in props) {
	    if (props.hasOwnProperty(propName)) {
	      if (!originalProps.hasOwnProperty(propName) ||
	          !is(originalProps[propName], props[propName])) {
	        warnForPropsMutation(propName, element);

	        // Copy over the new value so that the two props objects match again
	        originalProps[propName] = props[propName];
	      }
	    }
	  }
	}

	/**
	 * Given an element, validate that its props follow the propTypes definition,
	 * provided by the type.
	 *
	 * @param {ReactElement} element
	 */
	function validatePropTypes(element) {
	  if (element.type == null) {
	    // This has already warned. Don't throw.
	    return;
	  }
	  // Extract the component class from the element. Converts string types
	  // to a composite class which may have propTypes.
	  // TODO: Validating a string's propTypes is not decoupled from the
	  // rendering target which is problematic.
	  var componentClass = ReactNativeComponent.getComponentClassForElement(
	    element
	  );
	  var name = componentClass.displayName || componentClass.name;
	  if (componentClass.propTypes) {
	    checkPropTypes(
	      name,
	      componentClass.propTypes,
	      element.props,
	      ReactPropTypeLocations.prop
	    );
	  }
	  if (typeof componentClass.getDefaultProps === 'function') {
	    ("production" !== process.env.NODE_ENV ? warning(
	      componentClass.getDefaultProps.isReactClassApproved,
	      'getDefaultProps is only used on classic React.createClass ' +
	      'definitions. Use a static property named `defaultProps` instead.'
	    ) : null);
	  }
	}

	var ReactElementValidator = {

	  checkAndWarnForMutatedProps: checkAndWarnForMutatedProps,

	  createElement: function(type, props, children) {
	    // We warn in this case but don't throw. We expect the element creation to
	    // succeed and there will likely be errors in render.
	    ("production" !== process.env.NODE_ENV ? warning(
	      type != null,
	      'React.createElement: type should not be null or undefined. It should ' +
	        'be a string (for DOM elements) or a ReactClass (for composite ' +
	        'components).'
	    ) : null);

	    var element = ReactElement.createElement.apply(this, arguments);

	    // The result can be nullish if a mock or a custom function is used.
	    // TODO: Drop this when these are no longer allowed as the type argument.
	    if (element == null) {
	      return element;
	    }

	    for (var i = 2; i < arguments.length; i++) {
	      validateChildKeys(arguments[i], type);
	    }

	    validatePropTypes(element);

	    return element;
	  },

	  createFactory: function(type) {
	    var validatedFactory = ReactElementValidator.createElement.bind(
	      null,
	      type
	    );
	    // Legacy hook TODO: Warn if this is accessed
	    validatedFactory.type = type;

	    if ("production" !== process.env.NODE_ENV) {
	      try {
	        Object.defineProperty(
	          validatedFactory,
	          'type',
	          {
	            enumerable: false,
	            get: function() {
	              ("production" !== process.env.NODE_ENV ? warning(
	                false,
	                'Factory.type is deprecated. Access the class directly ' +
	                'before passing it to createFactory.'
	              ) : null);
	              Object.defineProperty(this, 'type', {
	                value: type
	              });
	              return type;
	            }
	          }
	        );
	      } catch (x) {
	        // IE will fail on defineProperty (es5-shim/sham too)
	      }
	    }


	    return validatedFactory;
	  },

	  cloneElement: function(element, props, children) {
	    var newElement = ReactElement.cloneElement.apply(this, arguments);
	    for (var i = 2; i < arguments.length; i++) {
	      validateChildKeys(arguments[i], newElement.type);
	    }
	    validatePropTypes(newElement);
	    return newElement;
	  }

	};

	module.exports = ReactElementValidator;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypeLocations
	 */

	'use strict';

	var keyMirror = __webpack_require__(16);

	var ReactPropTypeLocations = keyMirror({
	  prop: null,
	  context: null,
	  childContext: null
	});

	module.exports = ReactPropTypeLocations;


/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypeLocationNames
	 */

	'use strict';

	var ReactPropTypeLocationNames = {};

	if ("production" !== process.env.NODE_ENV) {
	  ReactPropTypeLocationNames = {
	    prop: 'prop',
	    context: 'context',
	    childContext: 'child context'
	  };
	}

	module.exports = ReactPropTypeLocationNames;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNativeComponent
	 */

	'use strict';

	var assign = __webpack_require__(10);
	var invariant = __webpack_require__(17);

	var autoGenerateWrapperClass = null;
	var genericComponentClass = null;
	// This registry keeps track of wrapper classes around native tags
	var tagToComponentClass = {};
	var textComponentClass = null;

	var ReactNativeComponentInjection = {
	  // This accepts a class that receives the tag string. This is a catch all
	  // that can render any kind of tag.
	  injectGenericComponentClass: function(componentClass) {
	    genericComponentClass = componentClass;
	  },
	  // This accepts a text component class that takes the text string to be
	  // rendered as props.
	  injectTextComponentClass: function(componentClass) {
	    textComponentClass = componentClass;
	  },
	  // This accepts a keyed object with classes as values. Each key represents a
	  // tag. That particular tag will use this class instead of the generic one.
	  injectComponentClasses: function(componentClasses) {
	    assign(tagToComponentClass, componentClasses);
	  },
	  // Temporary hack since we expect DOM refs to behave like composites,
	  // for this release.
	  injectAutoWrapper: function(wrapperFactory) {
	    autoGenerateWrapperClass = wrapperFactory;
	  }
	};

	/**
	 * Get a composite component wrapper class for a specific tag.
	 *
	 * @param {ReactElement} element The tag for which to get the class.
	 * @return {function} The React class constructor function.
	 */
	function getComponentClassForElement(element) {
	  if (typeof element.type === 'function') {
	    return element.type;
	  }
	  var tag = element.type;
	  var componentClass = tagToComponentClass[tag];
	  if (componentClass == null) {
	    tagToComponentClass[tag] = componentClass = autoGenerateWrapperClass(tag);
	  }
	  return componentClass;
	}

	/**
	 * Get a native internal component class for a specific tag.
	 *
	 * @param {ReactElement} element The element to create.
	 * @return {function} The internal class constructor function.
	 */
	function createInternalComponent(element) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    genericComponentClass,
	    'There is no registered component for the tag %s',
	    element.type
	  ) : invariant(genericComponentClass));
	  return new genericComponentClass(element.type, element.props);
	}

	/**
	 * @param {ReactText} text
	 * @return {ReactComponent}
	 */
	function createInstanceForText(text) {
	  return new textComponentClass(text);
	}

	/**
	 * @param {ReactComponent} component
	 * @return {boolean}
	 */
	function isTextComponent(component) {
	  return component instanceof textComponentClass;
	}

	var ReactNativeComponent = {
	  getComponentClassForElement: getComponentClassForElement,
	  createInternalComponent: createInternalComponent,
	  createInstanceForText: createInstanceForText,
	  isTextComponent: isTextComponent,
	  injection: ReactNativeComponentInjection
	};

	module.exports = ReactNativeComponent;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Transaction
	 */

	'use strict';

	var invariant = __webpack_require__(17);

	/**
	 * `Transaction` creates a black box that is able to wrap any method such that
	 * certain invariants are maintained before and after the method is invoked
	 * (Even if an exception is thrown while invoking the wrapped method). Whoever
	 * instantiates a transaction can provide enforcers of the invariants at
	 * creation time. The `Transaction` class itself will supply one additional
	 * automatic invariant for you - the invariant that any transaction instance
	 * should not be run while it is already being run. You would typically create a
	 * single instance of a `Transaction` for reuse multiple times, that potentially
	 * is used to wrap several different methods. Wrappers are extremely simple -
	 * they only require implementing two methods.
	 *
	 * <pre>
	 *                       wrappers (injected at creation time)
	 *                                      +        +
	 *                                      |        |
	 *                    +-----------------|--------|--------------+
	 *                    |                 v        |              |
	 *                    |      +---------------+   |              |
	 *                    |   +--|    wrapper1   |---|----+         |
	 *                    |   |  +---------------+   v    |         |
	 *                    |   |          +-------------+  |         |
	 *                    |   |     +----|   wrapper2  |--------+   |
	 *                    |   |     |    +-------------+  |     |   |
	 *                    |   |     |                     |     |   |
	 *                    |   v     v                     v     v   | wrapper
	 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
	 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
	 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | +---+ +---+   +---------+   +---+ +---+ |
	 *                    |  initialize                    close    |
	 *                    +-----------------------------------------+
	 * </pre>
	 *
	 * Use cases:
	 * - Preserving the input selection ranges before/after reconciliation.
	 *   Restoring selection even in the event of an unexpected error.
	 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
	 *   while guaranteeing that afterwards, the event system is reactivated.
	 * - Flushing a queue of collected DOM mutations to the main UI thread after a
	 *   reconciliation takes place in a worker thread.
	 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
	 *   content.
	 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
	 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
	 * - (Future use case): Layout calculations before and after DOM updates.
	 *
	 * Transactional plugin API:
	 * - A module that has an `initialize` method that returns any precomputation.
	 * - and a `close` method that accepts the precomputation. `close` is invoked
	 *   when the wrapped process is completed, or has failed.
	 *
	 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
	 * that implement `initialize` and `close`.
	 * @return {Transaction} Single transaction for reuse in thread.
	 *
	 * @class Transaction
	 */
	var Mixin = {
	  /**
	   * Sets up this instance so that it is prepared for collecting metrics. Does
	   * so such that this setup method may be used on an instance that is already
	   * initialized, in a way that does not consume additional memory upon reuse.
	   * That can be useful if you decide to make your subclass of this mixin a
	   * "PooledClass".
	   */
	  reinitializeTransaction: function() {
	    this.transactionWrappers = this.getTransactionWrappers();
	    if (!this.wrapperInitData) {
	      this.wrapperInitData = [];
	    } else {
	      this.wrapperInitData.length = 0;
	    }
	    this._isInTransaction = false;
	  },

	  _isInTransaction: false,

	  /**
	   * @abstract
	   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
	   */
	  getTransactionWrappers: null,

	  isInTransaction: function() {
	    return !!this._isInTransaction;
	  },

	  /**
	   * Executes the function within a safety window. Use this for the top level
	   * methods that result in large amounts of computation/mutations that would
	   * need to be safety checked.
	   *
	   * @param {function} method Member of scope to call.
	   * @param {Object} scope Scope to invoke from.
	   * @param {Object?=} args... Arguments to pass to the method (optional).
	   *                           Helps prevent need to bind in many cases.
	   * @return Return value from `method`.
	   */
	  perform: function(method, scope, a, b, c, d, e, f) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      !this.isInTransaction(),
	      'Transaction.perform(...): Cannot initialize a transaction when there ' +
	      'is already an outstanding transaction.'
	    ) : invariant(!this.isInTransaction()));
	    var errorThrown;
	    var ret;
	    try {
	      this._isInTransaction = true;
	      // Catching errors makes debugging more difficult, so we start with
	      // errorThrown set to true before setting it to false after calling
	      // close -- if it's still set to true in the finally block, it means
	      // one of these calls threw.
	      errorThrown = true;
	      this.initializeAll(0);
	      ret = method.call(scope, a, b, c, d, e, f);
	      errorThrown = false;
	    } finally {
	      try {
	        if (errorThrown) {
	          // If `method` throws, prefer to show that stack trace over any thrown
	          // by invoking `closeAll`.
	          try {
	            this.closeAll(0);
	          } catch (err) {
	          }
	        } else {
	          // Since `method` didn't throw, we don't want to silence the exception
	          // here.
	          this.closeAll(0);
	        }
	      } finally {
	        this._isInTransaction = false;
	      }
	    }
	    return ret;
	  },

	  initializeAll: function(startIndex) {
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      try {
	        // Catching errors makes debugging more difficult, so we start with the
	        // OBSERVED_ERROR state before overwriting it with the real return value
	        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
	        // block, it means wrapper.initialize threw.
	        this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
	        this.wrapperInitData[i] = wrapper.initialize ?
	          wrapper.initialize.call(this) :
	          null;
	      } finally {
	        if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {
	          // The initializer for wrapper i threw an error; initialize the
	          // remaining wrappers but silence any exceptions from them to ensure
	          // that the first error is the one to bubble up.
	          try {
	            this.initializeAll(i + 1);
	          } catch (err) {
	          }
	        }
	      }
	    }
	  },

	  /**
	   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
	   * them the respective return values of `this.transactionWrappers.init[i]`
	   * (`close`rs that correspond to initializers that failed will not be
	   * invoked).
	   */
	  closeAll: function(startIndex) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      this.isInTransaction(),
	      'Transaction.closeAll(): Cannot close transaction when none are open.'
	    ) : invariant(this.isInTransaction()));
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      var initData = this.wrapperInitData[i];
	      var errorThrown;
	      try {
	        // Catching errors makes debugging more difficult, so we start with
	        // errorThrown set to true before setting it to false after calling
	        // close -- if it's still set to true in the finally block, it means
	        // wrapper.close threw.
	        errorThrown = true;
	        if (initData !== Transaction.OBSERVED_ERROR && wrapper.close) {
	          wrapper.close.call(this, initData);
	        }
	        errorThrown = false;
	      } finally {
	        if (errorThrown) {
	          // The closer for wrapper i threw an error; close the remaining
	          // wrappers but silence any exceptions from them to ensure that the
	          // first error is the one to bubble up.
	          try {
	            this.closeAll(i + 1);
	          } catch (e) {
	          }
	        }
	      }
	    }
	    this.wrapperInitData.length = 0;
	  }
	};

	var Transaction = {

	  Mixin: Mixin,

	  /**
	   * Token to look for to determine if an error occured.
	   */
	  OBSERVED_ERROR: {}

	};

	module.exports = Transaction;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 46 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactClass
	 */

	'use strict';

	var ReactComponent = __webpack_require__(31);
	var ReactCurrentOwner = __webpack_require__(26);
	var ReactElement = __webpack_require__(21);
	var ReactErrorUtils = __webpack_require__(47);
	var ReactInstanceMap = __webpack_require__(34);
	var ReactLifeCycle = __webpack_require__(33);
	var ReactPropTypeLocations = __webpack_require__(42);
	var ReactPropTypeLocationNames = __webpack_require__(43);
	var ReactUpdateQueue = __webpack_require__(32);

	var assign = __webpack_require__(10);
	var invariant = __webpack_require__(17);
	var keyMirror = __webpack_require__(16);
	var keyOf = __webpack_require__(48);
	var warning = __webpack_require__(24);

	var MIXINS_KEY = keyOf({mixins: null});

	/**
	 * Policies that describe methods in `ReactClassInterface`.
	 */
	var SpecPolicy = keyMirror({
	  /**
	   * These methods may be defined only once by the class specification or mixin.
	   */
	  DEFINE_ONCE: null,
	  /**
	   * These methods may be defined by both the class specification and mixins.
	   * Subsequent definitions will be chained. These methods must return void.
	   */
	  DEFINE_MANY: null,
	  /**
	   * These methods are overriding the base class.
	   */
	  OVERRIDE_BASE: null,
	  /**
	   * These methods are similar to DEFINE_MANY, except we assume they return
	   * objects. We try to merge the keys of the return values of all the mixed in
	   * functions. If there is a key conflict we throw.
	   */
	  DEFINE_MANY_MERGED: null
	});


	var injectedMixins = [];

	/**
	 * Composite components are higher-level components that compose other composite
	 * or native components.
	 *
	 * To create a new type of `ReactClass`, pass a specification of
	 * your new class to `React.createClass`. The only requirement of your class
	 * specification is that you implement a `render` method.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return <div>Hello World</div>;
	 *     }
	 *   });
	 *
	 * The class specification supports a specific protocol of methods that have
	 * special meaning (e.g. `render`). See `ReactClassInterface` for
	 * more the comprehensive protocol. Any other properties and methods in the
	 * class specification will available on the prototype.
	 *
	 * @interface ReactClassInterface
	 * @internal
	 */
	var ReactClassInterface = {

	  /**
	   * An array of Mixin objects to include when defining your component.
	   *
	   * @type {array}
	   * @optional
	   */
	  mixins: SpecPolicy.DEFINE_MANY,

	  /**
	   * An object containing properties and methods that should be defined on
	   * the component's constructor instead of its prototype (static methods).
	   *
	   * @type {object}
	   * @optional
	   */
	  statics: SpecPolicy.DEFINE_MANY,

	  /**
	   * Definition of prop types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  propTypes: SpecPolicy.DEFINE_MANY,

	  /**
	   * Definition of context types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  contextTypes: SpecPolicy.DEFINE_MANY,

	  /**
	   * Definition of context types this component sets for its children.
	   *
	   * @type {object}
	   * @optional
	   */
	  childContextTypes: SpecPolicy.DEFINE_MANY,

	  // ==== Definition methods ====

	  /**
	   * Invoked when the component is mounted. Values in the mapping will be set on
	   * `this.props` if that prop is not specified (i.e. using an `in` check).
	   *
	   * This method is invoked before `getInitialState` and therefore cannot rely
	   * on `this.state` or use `this.setState`.
	   *
	   * @return {object}
	   * @optional
	   */
	  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,

	  /**
	   * Invoked once before the component is mounted. The return value will be used
	   * as the initial value of `this.state`.
	   *
	   *   getInitialState: function() {
	   *     return {
	   *       isOn: false,
	   *       fooBaz: new BazFoo()
	   *     }
	   *   }
	   *
	   * @return {object}
	   * @optional
	   */
	  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,

	  /**
	   * @return {object}
	   * @optional
	   */
	  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,

	  /**
	   * Uses props from `this.props` and state from `this.state` to render the
	   * structure of the component.
	   *
	   * No guarantees are made about when or how often this method is invoked, so
	   * it must not have side effects.
	   *
	   *   render: function() {
	   *     var name = this.props.name;
	   *     return <div>Hello, {name}!</div>;
	   *   }
	   *
	   * @return {ReactComponent}
	   * @nosideeffects
	   * @required
	   */
	  render: SpecPolicy.DEFINE_ONCE,



	  // ==== Delegate methods ====

	  /**
	   * Invoked when the component is initially created and about to be mounted.
	   * This may have side effects, but any external subscriptions or data created
	   * by this method must be cleaned up in `componentWillUnmount`.
	   *
	   * @optional
	   */
	  componentWillMount: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked when the component has been mounted and has a DOM representation.
	   * However, there is no guarantee that the DOM node is in the document.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been mounted (initialized and rendered) for the first time.
	   *
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidMount: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked before the component receives new props.
	   *
	   * Use this as an opportunity to react to a prop transition by updating the
	   * state using `this.setState`. Current props are accessed via `this.props`.
	   *
	   *   componentWillReceiveProps: function(nextProps, nextContext) {
	   *     this.setState({
	   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
	   *     });
	   *   }
	   *
	   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
	   * transition may cause a state change, but the opposite is not true. If you
	   * need it, you are probably looking for `componentWillUpdate`.
	   *
	   * @param {object} nextProps
	   * @optional
	   */
	  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked while deciding if the component should be updated as a result of
	   * receiving new props, state and/or context.
	   *
	   * Use this as an opportunity to `return false` when you're certain that the
	   * transition to the new props/state/context will not require a component
	   * update.
	   *
	   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
	   *     return !equal(nextProps, this.props) ||
	   *       !equal(nextState, this.state) ||
	   *       !equal(nextContext, this.context);
	   *   }
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @return {boolean} True if the component should update.
	   * @optional
	   */
	  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,

	  /**
	   * Invoked when the component is about to update due to a transition from
	   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
	   * and `nextContext`.
	   *
	   * Use this as an opportunity to perform preparation before an update occurs.
	   *
	   * NOTE: You **cannot** use `this.setState()` in this method.
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @param {ReactReconcileTransaction} transaction
	   * @optional
	   */
	  componentWillUpdate: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked when the component's DOM representation has been updated.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been updated.
	   *
	   * @param {object} prevProps
	   * @param {?object} prevState
	   * @param {?object} prevContext
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidUpdate: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked when the component is about to be removed from its parent and have
	   * its DOM representation destroyed.
	   *
	   * Use this as an opportunity to deallocate any external resources.
	   *
	   * NOTE: There is no `componentDidUnmount` since your component will have been
	   * destroyed by that point.
	   *
	   * @optional
	   */
	  componentWillUnmount: SpecPolicy.DEFINE_MANY,



	  // ==== Advanced methods ====

	  /**
	   * Updates the component's currently mounted DOM representation.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   * @overridable
	   */
	  updateComponent: SpecPolicy.OVERRIDE_BASE

	};

	/**
	 * Mapping from class specification keys to special processing functions.
	 *
	 * Although these are declared like instance properties in the specification
	 * when defining classes using `React.createClass`, they are actually static
	 * and are accessible on the constructor instead of the prototype. Despite
	 * being static, they must be defined outside of the "statics" key under
	 * which all other static methods are defined.
	 */
	var RESERVED_SPEC_KEYS = {
	  displayName: function(Constructor, displayName) {
	    Constructor.displayName = displayName;
	  },
	  mixins: function(Constructor, mixins) {
	    if (mixins) {
	      for (var i = 0; i < mixins.length; i++) {
	        mixSpecIntoComponent(Constructor, mixins[i]);
	      }
	    }
	  },
	  childContextTypes: function(Constructor, childContextTypes) {
	    if ("production" !== process.env.NODE_ENV) {
	      validateTypeDef(
	        Constructor,
	        childContextTypes,
	        ReactPropTypeLocations.childContext
	      );
	    }
	    Constructor.childContextTypes = assign(
	      {},
	      Constructor.childContextTypes,
	      childContextTypes
	    );
	  },
	  contextTypes: function(Constructor, contextTypes) {
	    if ("production" !== process.env.NODE_ENV) {
	      validateTypeDef(
	        Constructor,
	        contextTypes,
	        ReactPropTypeLocations.context
	      );
	    }
	    Constructor.contextTypes = assign(
	      {},
	      Constructor.contextTypes,
	      contextTypes
	    );
	  },
	  /**
	   * Special case getDefaultProps which should move into statics but requires
	   * automatic merging.
	   */
	  getDefaultProps: function(Constructor, getDefaultProps) {
	    if (Constructor.getDefaultProps) {
	      Constructor.getDefaultProps = createMergedResultFunction(
	        Constructor.getDefaultProps,
	        getDefaultProps
	      );
	    } else {
	      Constructor.getDefaultProps = getDefaultProps;
	    }
	  },
	  propTypes: function(Constructor, propTypes) {
	    if ("production" !== process.env.NODE_ENV) {
	      validateTypeDef(
	        Constructor,
	        propTypes,
	        ReactPropTypeLocations.prop
	      );
	    }
	    Constructor.propTypes = assign(
	      {},
	      Constructor.propTypes,
	      propTypes
	    );
	  },
	  statics: function(Constructor, statics) {
	    mixStaticSpecIntoComponent(Constructor, statics);
	  }
	};

	function validateTypeDef(Constructor, typeDef, location) {
	  for (var propName in typeDef) {
	    if (typeDef.hasOwnProperty(propName)) {
	      // use a warning instead of an invariant so components
	      // don't show up in prod but not in __DEV__
	      ("production" !== process.env.NODE_ENV ? warning(
	        typeof typeDef[propName] === 'function',
	        '%s: %s type `%s` is invalid; it must be a function, usually from ' +
	        'React.PropTypes.',
	        Constructor.displayName || 'ReactClass',
	        ReactPropTypeLocationNames[location],
	        propName
	      ) : null);
	    }
	  }
	}

	function validateMethodOverride(proto, name) {
	  var specPolicy = ReactClassInterface.hasOwnProperty(name) ?
	    ReactClassInterface[name] :
	    null;

	  // Disallow overriding of base class methods unless explicitly allowed.
	  if (ReactClassMixin.hasOwnProperty(name)) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      specPolicy === SpecPolicy.OVERRIDE_BASE,
	      'ReactClassInterface: You are attempting to override ' +
	      '`%s` from your class specification. Ensure that your method names ' +
	      'do not overlap with React methods.',
	      name
	    ) : invariant(specPolicy === SpecPolicy.OVERRIDE_BASE));
	  }

	  // Disallow defining methods more than once unless explicitly allowed.
	  if (proto.hasOwnProperty(name)) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      specPolicy === SpecPolicy.DEFINE_MANY ||
	      specPolicy === SpecPolicy.DEFINE_MANY_MERGED,
	      'ReactClassInterface: You are attempting to define ' +
	      '`%s` on your component more than once. This conflict may be due ' +
	      'to a mixin.',
	      name
	    ) : invariant(specPolicy === SpecPolicy.DEFINE_MANY ||
	    specPolicy === SpecPolicy.DEFINE_MANY_MERGED));
	  }
	}

	/**
	 * Mixin helper which handles policy validation and reserved
	 * specification keys when building React classses.
	 */
	function mixSpecIntoComponent(Constructor, spec) {
	  if (!spec) {
	    return;
	  }

	  ("production" !== process.env.NODE_ENV ? invariant(
	    typeof spec !== 'function',
	    'ReactClass: You\'re attempting to ' +
	    'use a component class as a mixin. Instead, just use a regular object.'
	  ) : invariant(typeof spec !== 'function'));
	  ("production" !== process.env.NODE_ENV ? invariant(
	    !ReactElement.isValidElement(spec),
	    'ReactClass: You\'re attempting to ' +
	    'use a component as a mixin. Instead, just use a regular object.'
	  ) : invariant(!ReactElement.isValidElement(spec)));

	  var proto = Constructor.prototype;

	  // By handling mixins before any other properties, we ensure the same
	  // chaining order is applied to methods with DEFINE_MANY policy, whether
	  // mixins are listed before or after these methods in the spec.
	  if (spec.hasOwnProperty(MIXINS_KEY)) {
	    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
	  }

	  for (var name in spec) {
	    if (!spec.hasOwnProperty(name)) {
	      continue;
	    }

	    if (name === MIXINS_KEY) {
	      // We have already handled mixins in a special case above
	      continue;
	    }

	    var property = spec[name];
	    validateMethodOverride(proto, name);

	    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
	      RESERVED_SPEC_KEYS[name](Constructor, property);
	    } else {
	      // Setup methods on prototype:
	      // The following member methods should not be automatically bound:
	      // 1. Expected ReactClass methods (in the "interface").
	      // 2. Overridden methods (that were mixed in).
	      var isReactClassMethod =
	        ReactClassInterface.hasOwnProperty(name);
	      var isAlreadyDefined = proto.hasOwnProperty(name);
	      var markedDontBind = property && property.__reactDontBind;
	      var isFunction = typeof property === 'function';
	      var shouldAutoBind =
	        isFunction &&
	        !isReactClassMethod &&
	        !isAlreadyDefined &&
	        !markedDontBind;

	      if (shouldAutoBind) {
	        if (!proto.__reactAutoBindMap) {
	          proto.__reactAutoBindMap = {};
	        }
	        proto.__reactAutoBindMap[name] = property;
	        proto[name] = property;
	      } else {
	        if (isAlreadyDefined) {
	          var specPolicy = ReactClassInterface[name];

	          // These cases should already be caught by validateMethodOverride
	          ("production" !== process.env.NODE_ENV ? invariant(
	            isReactClassMethod && (
	              (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)
	            ),
	            'ReactClass: Unexpected spec policy %s for key %s ' +
	            'when mixing in component specs.',
	            specPolicy,
	            name
	          ) : invariant(isReactClassMethod && (
	            (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)
	          )));

	          // For methods which are defined more than once, call the existing
	          // methods before calling the new property, merging if appropriate.
	          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {
	            proto[name] = createMergedResultFunction(proto[name], property);
	          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {
	            proto[name] = createChainedFunction(proto[name], property);
	          }
	        } else {
	          proto[name] = property;
	          if ("production" !== process.env.NODE_ENV) {
	            // Add verbose displayName to the function, which helps when looking
	            // at profiling tools.
	            if (typeof property === 'function' && spec.displayName) {
	              proto[name].displayName = spec.displayName + '_' + name;
	            }
	          }
	        }
	      }
	    }
	  }
	}

	function mixStaticSpecIntoComponent(Constructor, statics) {
	  if (!statics) {
	    return;
	  }
	  for (var name in statics) {
	    var property = statics[name];
	    if (!statics.hasOwnProperty(name)) {
	      continue;
	    }

	    var isReserved = name in RESERVED_SPEC_KEYS;
	    ("production" !== process.env.NODE_ENV ? invariant(
	      !isReserved,
	      'ReactClass: You are attempting to define a reserved ' +
	      'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' +
	      'as an instance property instead; it will still be accessible on the ' +
	      'constructor.',
	      name
	    ) : invariant(!isReserved));

	    var isInherited = name in Constructor;
	    ("production" !== process.env.NODE_ENV ? invariant(
	      !isInherited,
	      'ReactClass: You are attempting to define ' +
	      '`%s` on your component more than once. This conflict may be ' +
	      'due to a mixin.',
	      name
	    ) : invariant(!isInherited));
	    Constructor[name] = property;
	  }
	}

	/**
	 * Merge two objects, but throw if both contain the same key.
	 *
	 * @param {object} one The first object, which is mutated.
	 * @param {object} two The second object
	 * @return {object} one after it has been mutated to contain everything in two.
	 */
	function mergeIntoWithNoDuplicateKeys(one, two) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    one && two && typeof one === 'object' && typeof two === 'object',
	    'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.'
	  ) : invariant(one && two && typeof one === 'object' && typeof two === 'object'));

	  for (var key in two) {
	    if (two.hasOwnProperty(key)) {
	      ("production" !== process.env.NODE_ENV ? invariant(
	        one[key] === undefined,
	        'mergeIntoWithNoDuplicateKeys(): ' +
	        'Tried to merge two objects with the same key: `%s`. This conflict ' +
	        'may be due to a mixin; in particular, this may be caused by two ' +
	        'getInitialState() or getDefaultProps() methods returning objects ' +
	        'with clashing keys.',
	        key
	      ) : invariant(one[key] === undefined));
	      one[key] = two[key];
	    }
	  }
	  return one;
	}

	/**
	 * Creates a function that invokes two functions and merges their return values.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createMergedResultFunction(one, two) {
	  return function mergedResult() {
	    var a = one.apply(this, arguments);
	    var b = two.apply(this, arguments);
	    if (a == null) {
	      return b;
	    } else if (b == null) {
	      return a;
	    }
	    var c = {};
	    mergeIntoWithNoDuplicateKeys(c, a);
	    mergeIntoWithNoDuplicateKeys(c, b);
	    return c;
	  };
	}

	/**
	 * Creates a function that invokes two functions and ignores their return vales.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createChainedFunction(one, two) {
	  return function chainedFunction() {
	    one.apply(this, arguments);
	    two.apply(this, arguments);
	  };
	}

	/**
	 * Binds a method to the component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 * @param {function} method Method to be bound.
	 * @return {function} The bound method.
	 */
	function bindAutoBindMethod(component, method) {
	  var boundMethod = method.bind(component);
	  if ("production" !== process.env.NODE_ENV) {
	    boundMethod.__reactBoundContext = component;
	    boundMethod.__reactBoundMethod = method;
	    boundMethod.__reactBoundArguments = null;
	    var componentName = component.constructor.displayName;
	    var _bind = boundMethod.bind;
	    /* eslint-disable block-scoped-var, no-undef */
	    boundMethod.bind = function(newThis ) {for (var args=[],$__0=1,$__1=arguments.length;$__0<$__1;$__0++) args.push(arguments[$__0]);
	      // User is trying to bind() an autobound method; we effectively will
	      // ignore the value of "this" that the user is trying to use, so
	      // let's warn.
	      if (newThis !== component && newThis !== null) {
	        ("production" !== process.env.NODE_ENV ? warning(
	          false,
	          'bind(): React component methods may only be bound to the ' +
	          'component instance. See %s',
	          componentName
	        ) : null);
	      } else if (!args.length) {
	        ("production" !== process.env.NODE_ENV ? warning(
	          false,
	          'bind(): You are binding a component method to the component. ' +
	          'React does this for you automatically in a high-performance ' +
	          'way, so you can safely remove this call. See %s',
	          componentName
	        ) : null);
	        return boundMethod;
	      }
	      var reboundMethod = _bind.apply(boundMethod, arguments);
	      reboundMethod.__reactBoundContext = component;
	      reboundMethod.__reactBoundMethod = method;
	      reboundMethod.__reactBoundArguments = args;
	      return reboundMethod;
	      /* eslint-enable */
	    };
	  }
	  return boundMethod;
	}

	/**
	 * Binds all auto-bound methods in a component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 */
	function bindAutoBindMethods(component) {
	  for (var autoBindKey in component.__reactAutoBindMap) {
	    if (component.__reactAutoBindMap.hasOwnProperty(autoBindKey)) {
	      var method = component.__reactAutoBindMap[autoBindKey];
	      component[autoBindKey] = bindAutoBindMethod(
	        component,
	        ReactErrorUtils.guard(
	          method,
	          component.constructor.displayName + '.' + autoBindKey
	        )
	      );
	    }
	  }
	}

	var typeDeprecationDescriptor = {
	  enumerable: false,
	  get: function() {
	    var displayName = this.displayName || this.name || 'Component';
	    ("production" !== process.env.NODE_ENV ? warning(
	      false,
	      '%s.type is deprecated. Use %s directly to access the class.',
	      displayName,
	      displayName
	    ) : null);
	    Object.defineProperty(this, 'type', {
	      value: this
	    });
	    return this;
	  }
	};

	/**
	 * Add more to the ReactClass base class. These are all legacy features and
	 * therefore not already part of the modern ReactComponent.
	 */
	var ReactClassMixin = {

	  /**
	   * TODO: This will be deprecated because state should always keep a consistent
	   * type signature and the only use case for this, is to avoid that.
	   */
	  replaceState: function(newState, callback) {
	    ReactUpdateQueue.enqueueReplaceState(this, newState);
	    if (callback) {
	      ReactUpdateQueue.enqueueCallback(this, callback);
	    }
	  },

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function() {
	    if ("production" !== process.env.NODE_ENV) {
	      var owner = ReactCurrentOwner.current;
	      if (owner !== null) {
	        ("production" !== process.env.NODE_ENV ? warning(
	          owner._warnedAboutRefsInRender,
	          '%s is accessing isMounted inside its render() function. ' +
	          'render() should be a pure function of props and state. It should ' +
	          'never access something that requires stale data from the previous ' +
	          'render, such as refs. Move this logic to componentDidMount and ' +
	          'componentDidUpdate instead.',
	          owner.getName() || 'A component'
	        ) : null);
	        owner._warnedAboutRefsInRender = true;
	      }
	    }
	    var internalInstance = ReactInstanceMap.get(this);
	    return (
	      internalInstance &&
	      internalInstance !== ReactLifeCycle.currentlyMountingInstance
	    );
	  },

	  /**
	   * Sets a subset of the props.
	   *
	   * @param {object} partialProps Subset of the next props.
	   * @param {?function} callback Called after props are updated.
	   * @final
	   * @public
	   * @deprecated
	   */
	  setProps: function(partialProps, callback) {
	    ReactUpdateQueue.enqueueSetProps(this, partialProps);
	    if (callback) {
	      ReactUpdateQueue.enqueueCallback(this, callback);
	    }
	  },

	  /**
	   * Replace all the props.
	   *
	   * @param {object} newProps Subset of the next props.
	   * @param {?function} callback Called after props are updated.
	   * @final
	   * @public
	   * @deprecated
	   */
	  replaceProps: function(newProps, callback) {
	    ReactUpdateQueue.enqueueReplaceProps(this, newProps);
	    if (callback) {
	      ReactUpdateQueue.enqueueCallback(this, callback);
	    }
	  }
	};

	var ReactClassComponent = function() {};
	assign(
	  ReactClassComponent.prototype,
	  ReactComponent.prototype,
	  ReactClassMixin
	);

	/**
	 * Module for creating composite components.
	 *
	 * @class ReactClass
	 */
	var ReactClass = {

	  /**
	   * Creates a composite component class given a class specification.
	   *
	   * @param {object} spec Class specification (which must define `render`).
	   * @return {function} Component constructor function.
	   * @public
	   */
	  createClass: function(spec) {
	    var Constructor = function(props, context) {
	      // This constructor is overridden by mocks. The argument is used
	      // by mocks to assert on what gets mounted.

	      if ("production" !== process.env.NODE_ENV) {
	        ("production" !== process.env.NODE_ENV ? warning(
	          this instanceof Constructor,
	          'Something is calling a React component directly. Use a factory or ' +
	          'JSX instead. See: https://fb.me/react-legacyfactory'
	        ) : null);
	      }

	      // Wire up auto-binding
	      if (this.__reactAutoBindMap) {
	        bindAutoBindMethods(this);
	      }

	      this.props = props;
	      this.context = context;
	      this.state = null;

	      // ReactClasses doesn't have constructors. Instead, they use the
	      // getInitialState and componentWillMount methods for initialization.

	      var initialState = this.getInitialState ? this.getInitialState() : null;
	      if ("production" !== process.env.NODE_ENV) {
	        // We allow auto-mocks to proceed as if they're returning null.
	        if (typeof initialState === 'undefined' &&
	            this.getInitialState._isMockFunction) {
	          // This is probably bad practice. Consider warning here and
	          // deprecating this convenience.
	          initialState = null;
	        }
	      }
	      ("production" !== process.env.NODE_ENV ? invariant(
	        typeof initialState === 'object' && !Array.isArray(initialState),
	        '%s.getInitialState(): must return an object or null',
	        Constructor.displayName || 'ReactCompositeComponent'
	      ) : invariant(typeof initialState === 'object' && !Array.isArray(initialState)));

	      this.state = initialState;
	    };
	    Constructor.prototype = new ReactClassComponent();
	    Constructor.prototype.constructor = Constructor;

	    injectedMixins.forEach(
	      mixSpecIntoComponent.bind(null, Constructor)
	    );

	    mixSpecIntoComponent(Constructor, spec);

	    // Initialize the defaultProps property after all mixins have been merged
	    if (Constructor.getDefaultProps) {
	      Constructor.defaultProps = Constructor.getDefaultProps();
	    }

	    if ("production" !== process.env.NODE_ENV) {
	      // This is a tag to indicate that the use of these method names is ok,
	      // since it's used with createClass. If it's not, then it's likely a
	      // mistake so we'll warn you to use the static property, property
	      // initializer or constructor respectively.
	      if (Constructor.getDefaultProps) {
	        Constructor.getDefaultProps.isReactClassApproved = {};
	      }
	      if (Constructor.prototype.getInitialState) {
	        Constructor.prototype.getInitialState.isReactClassApproved = {};
	      }
	    }

	    ("production" !== process.env.NODE_ENV ? invariant(
	      Constructor.prototype.render,
	      'createClass(...): Class specification must implement a `render` method.'
	    ) : invariant(Constructor.prototype.render));

	    if ("production" !== process.env.NODE_ENV) {
	      ("production" !== process.env.NODE_ENV ? warning(
	        !Constructor.prototype.componentShouldUpdate,
	        '%s has a method called ' +
	        'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +
	        'The name is phrased as a question because the function is ' +
	        'expected to return a value.',
	        spec.displayName || 'A component'
	      ) : null);
	    }

	    // Reduce time spent doing lookups by setting these on the prototype.
	    for (var methodName in ReactClassInterface) {
	      if (!Constructor.prototype[methodName]) {
	        Constructor.prototype[methodName] = null;
	      }
	    }

	    // Legacy hook
	    Constructor.type = Constructor;
	    if ("production" !== process.env.NODE_ENV) {
	      try {
	        Object.defineProperty(Constructor, 'type', typeDeprecationDescriptor);
	      } catch (x) {
	        // IE will fail on defineProperty (es5-shim/sham too)
	      }
	    }

	    return Constructor;
	  },

	  injection: {
	    injectMixin: function(mixin) {
	      injectedMixins.push(mixin);
	    }
	  }

	};

	module.exports = ReactClass;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 47 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactErrorUtils
	 * @typechecks
	 */

	"use strict";

	var ReactErrorUtils = {
	  /**
	   * Creates a guarded version of a function. This is supposed to make debugging
	   * of event handlers easier. To aid debugging with the browser's debugger,
	   * this currently simply returns the original function.
	   *
	   * @param {function} func Function to be executed
	   * @param {string} name The name of the guard
	   * @return {function}
	   */
	  guard: function(func, name) {
	    return func;
	  }
	};

	module.exports = ReactErrorUtils;


/***/ },
/* 48 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule keyOf
	 */

	/**
	 * Allows extraction of a minified key. Let's the build system minify keys
	 * without loosing the ability to dynamically use key strings as values
	 * themselves. Pass in an object with a single key/val pair and it will return
	 * you the string key of that single record. Suppose you want to grab the
	 * value for a key 'className' inside of an object. Key/val minification may
	 * have aliased that key to be 'xa12'. keyOf({className: null}) will return
	 * 'xa12' in that case. Resolve keys you want to use once at startup time, then
	 * reuse those resolutions.
	 */
	var keyOf = function(oneKeyObj) {
	  var key;
	  for (key in oneKeyObj) {
	    if (!oneKeyObj.hasOwnProperty(key)) {
	      continue;
	    }
	    return key;
	  }
	  return null;
	};


	module.exports = keyOf;


/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOM
	 * @typechecks static-only
	 */

	'use strict';

	var ReactElement = __webpack_require__(21);
	var ReactElementValidator = __webpack_require__(41);

	var mapObject = __webpack_require__(50);

	/**
	 * Create a factory that creates HTML tag elements.
	 *
	 * @param {string} tag Tag name (e.g. `div`).
	 * @private
	 */
	function createDOMFactory(tag) {
	  if ("production" !== process.env.NODE_ENV) {
	    return ReactElementValidator.createFactory(tag);
	  }
	  return ReactElement.createFactory(tag);
	}

	/**
	 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
	 * This is also accessible via `React.DOM`.
	 *
	 * @public
	 */
	var ReactDOM = mapObject({
	  a: 'a',
	  abbr: 'abbr',
	  address: 'address',
	  area: 'area',
	  article: 'article',
	  aside: 'aside',
	  audio: 'audio',
	  b: 'b',
	  base: 'base',
	  bdi: 'bdi',
	  bdo: 'bdo',
	  big: 'big',
	  blockquote: 'blockquote',
	  body: 'body',
	  br: 'br',
	  button: 'button',
	  canvas: 'canvas',
	  caption: 'caption',
	  cite: 'cite',
	  code: 'code',
	  col: 'col',
	  colgroup: 'colgroup',
	  data: 'data',
	  datalist: 'datalist',
	  dd: 'dd',
	  del: 'del',
	  details: 'details',
	  dfn: 'dfn',
	  dialog: 'dialog',
	  div: 'div',
	  dl: 'dl',
	  dt: 'dt',
	  em: 'em',
	  embed: 'embed',
	  fieldset: 'fieldset',
	  figcaption: 'figcaption',
	  figure: 'figure',
	  footer: 'footer',
	  form: 'form',
	  h1: 'h1',
	  h2: 'h2',
	  h3: 'h3',
	  h4: 'h4',
	  h5: 'h5',
	  h6: 'h6',
	  head: 'head',
	  header: 'header',
	  hr: 'hr',
	  html: 'html',
	  i: 'i',
	  iframe: 'iframe',
	  img: 'img',
	  input: 'input',
	  ins: 'ins',
	  kbd: 'kbd',
	  keygen: 'keygen',
	  label: 'label',
	  legend: 'legend',
	  li: 'li',
	  link: 'link',
	  main: 'main',
	  map: 'map',
	  mark: 'mark',
	  menu: 'menu',
	  menuitem: 'menuitem',
	  meta: 'meta',
	  meter: 'meter',
	  nav: 'nav',
	  noscript: 'noscript',
	  object: 'object',
	  ol: 'ol',
	  optgroup: 'optgroup',
	  option: 'option',
	  output: 'output',
	  p: 'p',
	  param: 'param',
	  picture: 'picture',
	  pre: 'pre',
	  progress: 'progress',
	  q: 'q',
	  rp: 'rp',
	  rt: 'rt',
	  ruby: 'ruby',
	  s: 's',
	  samp: 'samp',
	  script: 'script',
	  section: 'section',
	  select: 'select',
	  small: 'small',
	  source: 'source',
	  span: 'span',
	  strong: 'strong',
	  style: 'style',
	  sub: 'sub',
	  summary: 'summary',
	  sup: 'sup',
	  table: 'table',
	  tbody: 'tbody',
	  td: 'td',
	  textarea: 'textarea',
	  tfoot: 'tfoot',
	  th: 'th',
	  thead: 'thead',
	  time: 'time',
	  title: 'title',
	  tr: 'tr',
	  track: 'track',
	  u: 'u',
	  ul: 'ul',
	  'var': 'var',
	  video: 'video',
	  wbr: 'wbr',

	  // SVG
	  circle: 'circle',
	  clipPath: 'clipPath',
	  defs: 'defs',
	  ellipse: 'ellipse',
	  g: 'g',
	  line: 'line',
	  linearGradient: 'linearGradient',
	  mask: 'mask',
	  path: 'path',
	  pattern: 'pattern',
	  polygon: 'polygon',
	  polyline: 'polyline',
	  radialGradient: 'radialGradient',
	  rect: 'rect',
	  stop: 'stop',
	  svg: 'svg',
	  text: 'text',
	  tspan: 'tspan'

	}, createDOMFactory);

	module.exports = ReactDOM;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 50 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule mapObject
	 */

	'use strict';

	var hasOwnProperty = Object.prototype.hasOwnProperty;

	/**
	 * Executes the provided `callback` once for each enumerable own property in the
	 * object and constructs a new object from the results. The `callback` is
	 * invoked with three arguments:
	 *
	 *  - the property value
	 *  - the property name
	 *  - the object being traversed
	 *
	 * Properties that are added after the call to `mapObject` will not be visited
	 * by `callback`. If the values of existing properties are changed, the value
	 * passed to `callback` will be the value at the time `mapObject` visits them.
	 * Properties that are deleted before being visited are not visited.
	 *
	 * @grep function objectMap()
	 * @grep function objMap()
	 *
	 * @param {?object} object
	 * @param {function} callback
	 * @param {*} context
	 * @return {?object}
	 */
	function mapObject(object, callback, context) {
	  if (!object) {
	    return null;
	  }
	  var result = {};
	  for (var name in object) {
	    if (hasOwnProperty.call(object, name)) {
	      result[name] = callback.call(context, object[name], name, object);
	    }
	  }
	  return result;
	}

	module.exports = mapObject;


/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTextComponent
	 * @typechecks static-only
	 */

	'use strict';

	var DOMPropertyOperations = __webpack_require__(52);
	var ReactComponentBrowserEnvironment =
	  __webpack_require__(56);
	var ReactDOMComponent = __webpack_require__(96);

	var assign = __webpack_require__(10);
	var escapeTextContentForBrowser = __webpack_require__(55);

	/**
	 * Text nodes violate a couple assumptions that React makes about components:
	 *
	 *  - When mounting text into the DOM, adjacent text nodes are merged.
	 *  - Text nodes cannot be assigned a React root ID.
	 *
	 * This component is used to wrap strings in elements so that they can undergo
	 * the same reconciliation that is applied to elements.
	 *
	 * TODO: Investigate representing React components in the DOM with text nodes.
	 *
	 * @class ReactDOMTextComponent
	 * @extends ReactComponent
	 * @internal
	 */
	var ReactDOMTextComponent = function(props) {
	  // This constructor and its argument is currently used by mocks.
	};

	assign(ReactDOMTextComponent.prototype, {

	  /**
	   * @param {ReactText} text
	   * @internal
	   */
	  construct: function(text) {
	    // TODO: This is really a ReactText (ReactNode), not a ReactElement
	    this._currentElement = text;
	    this._stringText = '' + text;

	    // Properties
	    this._rootNodeID = null;
	    this._mountIndex = 0;
	  },

	  /**
	   * Creates the markup for this text node. This node is not intended to have
	   * any features besides containing text content.
	   *
	   * @param {string} rootID DOM ID of the root node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {string} Markup for this text node.
	   * @internal
	   */
	  mountComponent: function(rootID, transaction, context) {
	    this._rootNodeID = rootID;
	    var escapedText = escapeTextContentForBrowser(this._stringText);

	    if (transaction.renderToStaticMarkup) {
	      // Normally we'd wrap this in a `span` for the reasons stated above, but
	      // since this is a situation where React won't take over (static pages),
	      // we can simply return the text as it is.
	      return escapedText;
	    }

	    return (
	      '<span ' + DOMPropertyOperations.createMarkupForID(rootID) + '>' +
	        escapedText +
	      '</span>'
	    );
	  },

	  /**
	   * Updates this component by updating the text content.
	   *
	   * @param {ReactText} nextText The next text content
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  receiveComponent: function(nextText, transaction) {
	    if (nextText !== this._currentElement) {
	      this._currentElement = nextText;
	      var nextStringText = '' + nextText;
	      if (nextStringText !== this._stringText) {
	        // TODO: Save this as pending props and use performUpdateIfNecessary
	        // and/or updateComponent to do the actual update for consistency with
	        // other component types?
	        this._stringText = nextStringText;
	        ReactDOMComponent.BackendIDOperations.updateTextContentByID(
	          this._rootNodeID,
	          nextStringText
	        );
	      }
	    }
	  },

	  unmountComponent: function() {
	    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);
	  }

	});

	module.exports = ReactDOMTextComponent;


/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMPropertyOperations
	 * @typechecks static-only
	 */

	'use strict';

	var DOMProperty = __webpack_require__(53);

	var quoteAttributeValueForBrowser = __webpack_require__(54);
	var warning = __webpack_require__(24);

	function shouldIgnoreValue(name, value) {
	  return value == null ||
	    (DOMProperty.hasBooleanValue[name] && !value) ||
	    (DOMProperty.hasNumericValue[name] && isNaN(value)) ||
	    (DOMProperty.hasPositiveNumericValue[name] && (value < 1)) ||
	    (DOMProperty.hasOverloadedBooleanValue[name] && value === false);
	}

	if ("production" !== process.env.NODE_ENV) {
	  var reactProps = {
	    children: true,
	    dangerouslySetInnerHTML: true,
	    key: true,
	    ref: true
	  };
	  var warnedProperties = {};

	  var warnUnknownProperty = function(name) {
	    if (reactProps.hasOwnProperty(name) && reactProps[name] ||
	        warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
	      return;
	    }

	    warnedProperties[name] = true;
	    var lowerCasedName = name.toLowerCase();

	    // data-* attributes should be lowercase; suggest the lowercase version
	    var standardName = (
	      DOMProperty.isCustomAttribute(lowerCasedName) ?
	        lowerCasedName :
	      DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ?
	        DOMProperty.getPossibleStandardName[lowerCasedName] :
	        null
	    );

	    // For now, only warn when we have a suggested correction. This prevents
	    // logging too much when using transferPropsTo.
	    ("production" !== process.env.NODE_ENV ? warning(
	      standardName == null,
	      'Unknown DOM property %s. Did you mean %s?',
	      name,
	      standardName
	    ) : null);

	  };
	}

	/**
	 * Operations for dealing with DOM properties.
	 */
	var DOMPropertyOperations = {

	  /**
	   * Creates markup for the ID property.
	   *
	   * @param {string} id Unescaped ID.
	   * @return {string} Markup string.
	   */
	  createMarkupForID: function(id) {
	    return DOMProperty.ID_ATTRIBUTE_NAME + '=' +
	      quoteAttributeValueForBrowser(id);
	  },

	  /**
	   * Creates markup for a property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {?string} Markup string, or null if the property was invalid.
	   */
	  createMarkupForProperty: function(name, value) {
	    if (DOMProperty.isStandardName.hasOwnProperty(name) &&
	        DOMProperty.isStandardName[name]) {
	      if (shouldIgnoreValue(name, value)) {
	        return '';
	      }
	      var attributeName = DOMProperty.getAttributeName[name];
	      if (DOMProperty.hasBooleanValue[name] ||
	          (DOMProperty.hasOverloadedBooleanValue[name] && value === true)) {
	        return attributeName;
	      }
	      return attributeName + '=' + quoteAttributeValueForBrowser(value);
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      if (value == null) {
	        return '';
	      }
	      return name + '=' + quoteAttributeValueForBrowser(value);
	    } else if ("production" !== process.env.NODE_ENV) {
	      warnUnknownProperty(name);
	    }
	    return null;
	  },

	  /**
	   * Sets the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   * @param {*} value
	   */
	  setValueForProperty: function(node, name, value) {
	    if (DOMProperty.isStandardName.hasOwnProperty(name) &&
	        DOMProperty.isStandardName[name]) {
	      var mutationMethod = DOMProperty.getMutationMethod[name];
	      if (mutationMethod) {
	        mutationMethod(node, value);
	      } else if (shouldIgnoreValue(name, value)) {
	        this.deleteValueForProperty(node, name);
	      } else if (DOMProperty.mustUseAttribute[name]) {
	        // `setAttribute` with objects becomes only `[object]` in IE8/9,
	        // ('' + value) makes it output the correct toString()-value.
	        node.setAttribute(DOMProperty.getAttributeName[name], '' + value);
	      } else {
	        var propName = DOMProperty.getPropertyName[name];
	        // Must explicitly cast values for HAS_SIDE_EFFECTS-properties to the
	        // property type before comparing; only `value` does and is string.
	        if (!DOMProperty.hasSideEffects[name] ||
	            ('' + node[propName]) !== ('' + value)) {
	          // Contrary to `setAttribute`, object properties are properly
	          // `toString`ed by IE8/9.
	          node[propName] = value;
	        }
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      if (value == null) {
	        node.removeAttribute(name);
	      } else {
	        node.setAttribute(name, '' + value);
	      }
	    } else if ("production" !== process.env.NODE_ENV) {
	      warnUnknownProperty(name);
	    }
	  },

	  /**
	   * Deletes the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForProperty: function(node, name) {
	    if (DOMProperty.isStandardName.hasOwnProperty(name) &&
	        DOMProperty.isStandardName[name]) {
	      var mutationMethod = DOMProperty.getMutationMethod[name];
	      if (mutationMethod) {
	        mutationMethod(node, undefined);
	      } else if (DOMProperty.mustUseAttribute[name]) {
	        node.removeAttribute(DOMProperty.getAttributeName[name]);
	      } else {
	        var propName = DOMProperty.getPropertyName[name];
	        var defaultValue = DOMProperty.getDefaultValueForProperty(
	          node.nodeName,
	          propName
	        );
	        if (!DOMProperty.hasSideEffects[name] ||
	            ('' + node[propName]) !== defaultValue) {
	          node[propName] = defaultValue;
	        }
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      node.removeAttribute(name);
	    } else if ("production" !== process.env.NODE_ENV) {
	      warnUnknownProperty(name);
	    }
	  }

	};

	module.exports = DOMPropertyOperations;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMProperty
	 * @typechecks static-only
	 */

	/*jslint bitwise: true */

	'use strict';

	var invariant = __webpack_require__(17);

	function checkMask(value, bitmask) {
	  return (value & bitmask) === bitmask;
	}

	var DOMPropertyInjection = {
	  /**
	   * Mapping from normalized, camelcased property names to a configuration that
	   * specifies how the associated DOM property should be accessed or rendered.
	   */
	  MUST_USE_ATTRIBUTE: 0x1,
	  MUST_USE_PROPERTY: 0x2,
	  HAS_SIDE_EFFECTS: 0x4,
	  HAS_BOOLEAN_VALUE: 0x8,
	  HAS_NUMERIC_VALUE: 0x10,
	  HAS_POSITIVE_NUMERIC_VALUE: 0x20 | 0x10,
	  HAS_OVERLOADED_BOOLEAN_VALUE: 0x40,

	  /**
	   * Inject some specialized knowledge about the DOM. This takes a config object
	   * with the following properties:
	   *
	   * isCustomAttribute: function that given an attribute name will return true
	   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
	   * attributes where it's impossible to enumerate all of the possible
	   * attribute names,
	   *
	   * Properties: object mapping DOM property name to one of the
	   * DOMPropertyInjection constants or null. If your attribute isn't in here,
	   * it won't get written to the DOM.
	   *
	   * DOMAttributeNames: object mapping React attribute name to the DOM
	   * attribute name. Attribute names not specified use the **lowercase**
	   * normalized name.
	   *
	   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
	   * Property names not specified use the normalized name.
	   *
	   * DOMMutationMethods: Properties that require special mutation methods. If
	   * `value` is undefined, the mutation method should unset the property.
	   *
	   * @param {object} domPropertyConfig the config as described above.
	   */
	  injectDOMPropertyConfig: function(domPropertyConfig) {
	    var Properties = domPropertyConfig.Properties || {};
	    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
	    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
	    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};

	    if (domPropertyConfig.isCustomAttribute) {
	      DOMProperty._isCustomAttributeFunctions.push(
	        domPropertyConfig.isCustomAttribute
	      );
	    }

	    for (var propName in Properties) {
	      ("production" !== process.env.NODE_ENV ? invariant(
	        !DOMProperty.isStandardName.hasOwnProperty(propName),
	        'injectDOMPropertyConfig(...): You\'re trying to inject DOM property ' +
	        '\'%s\' which has already been injected. You may be accidentally ' +
	        'injecting the same DOM property config twice, or you may be ' +
	        'injecting two configs that have conflicting property names.',
	        propName
	      ) : invariant(!DOMProperty.isStandardName.hasOwnProperty(propName)));

	      DOMProperty.isStandardName[propName] = true;

	      var lowerCased = propName.toLowerCase();
	      DOMProperty.getPossibleStandardName[lowerCased] = propName;

	      if (DOMAttributeNames.hasOwnProperty(propName)) {
	        var attributeName = DOMAttributeNames[propName];
	        DOMProperty.getPossibleStandardName[attributeName] = propName;
	        DOMProperty.getAttributeName[propName] = attributeName;
	      } else {
	        DOMProperty.getAttributeName[propName] = lowerCased;
	      }

	      DOMProperty.getPropertyName[propName] =
	        DOMPropertyNames.hasOwnProperty(propName) ?
	          DOMPropertyNames[propName] :
	          propName;

	      if (DOMMutationMethods.hasOwnProperty(propName)) {
	        DOMProperty.getMutationMethod[propName] = DOMMutationMethods[propName];
	      } else {
	        DOMProperty.getMutationMethod[propName] = null;
	      }

	      var propConfig = Properties[propName];
	      DOMProperty.mustUseAttribute[propName] =
	        checkMask(propConfig, DOMPropertyInjection.MUST_USE_ATTRIBUTE);
	      DOMProperty.mustUseProperty[propName] =
	        checkMask(propConfig, DOMPropertyInjection.MUST_USE_PROPERTY);
	      DOMProperty.hasSideEffects[propName] =
	        checkMask(propConfig, DOMPropertyInjection.HAS_SIDE_EFFECTS);
	      DOMProperty.hasBooleanValue[propName] =
	        checkMask(propConfig, DOMPropertyInjection.HAS_BOOLEAN_VALUE);
	      DOMProperty.hasNumericValue[propName] =
	        checkMask(propConfig, DOMPropertyInjection.HAS_NUMERIC_VALUE);
	      DOMProperty.hasPositiveNumericValue[propName] =
	        checkMask(propConfig, DOMPropertyInjection.HAS_POSITIVE_NUMERIC_VALUE);
	      DOMProperty.hasOverloadedBooleanValue[propName] =
	        checkMask(propConfig, DOMPropertyInjection.HAS_OVERLOADED_BOOLEAN_VALUE);

	      ("production" !== process.env.NODE_ENV ? invariant(
	        !DOMProperty.mustUseAttribute[propName] ||
	          !DOMProperty.mustUseProperty[propName],
	        'DOMProperty: Cannot require using both attribute and property: %s',
	        propName
	      ) : invariant(!DOMProperty.mustUseAttribute[propName] ||
	        !DOMProperty.mustUseProperty[propName]));
	      ("production" !== process.env.NODE_ENV ? invariant(
	        DOMProperty.mustUseProperty[propName] ||
	          !DOMProperty.hasSideEffects[propName],
	        'DOMProperty: Properties that have side effects must use property: %s',
	        propName
	      ) : invariant(DOMProperty.mustUseProperty[propName] ||
	        !DOMProperty.hasSideEffects[propName]));
	      ("production" !== process.env.NODE_ENV ? invariant(
	        !!DOMProperty.hasBooleanValue[propName] +
	          !!DOMProperty.hasNumericValue[propName] +
	          !!DOMProperty.hasOverloadedBooleanValue[propName] <= 1,
	        'DOMProperty: Value can be one of boolean, overloaded boolean, or ' +
	        'numeric value, but not a combination: %s',
	        propName
	      ) : invariant(!!DOMProperty.hasBooleanValue[propName] +
	        !!DOMProperty.hasNumericValue[propName] +
	        !!DOMProperty.hasOverloadedBooleanValue[propName] <= 1));
	    }
	  }
	};
	var defaultValueCache = {};

	/**
	 * DOMProperty exports lookup objects that can be used like functions:
	 *
	 *   > DOMProperty.isValid['id']
	 *   true
	 *   > DOMProperty.isValid['foobar']
	 *   undefined
	 *
	 * Although this may be confusing, it performs better in general.
	 *
	 * @see http://jsperf.com/key-exists
	 * @see http://jsperf.com/key-missing
	 */
	var DOMProperty = {

	  ID_ATTRIBUTE_NAME: 'data-reactid',

	  /**
	   * Checks whether a property name is a standard property.
	   * @type {Object}
	   */
	  isStandardName: {},

	  /**
	   * Mapping from lowercase property names to the properly cased version, used
	   * to warn in the case of missing properties.
	   * @type {Object}
	   */
	  getPossibleStandardName: {},

	  /**
	   * Mapping from normalized names to attribute names that differ. Attribute
	   * names are used when rendering markup or with `*Attribute()`.
	   * @type {Object}
	   */
	  getAttributeName: {},

	  /**
	   * Mapping from normalized names to properties on DOM node instances.
	   * (This includes properties that mutate due to external factors.)
	   * @type {Object}
	   */
	  getPropertyName: {},

	  /**
	   * Mapping from normalized names to mutation methods. This will only exist if
	   * mutation cannot be set simply by the property or `setAttribute()`.
	   * @type {Object}
	   */
	  getMutationMethod: {},

	  /**
	   * Whether the property must be accessed and mutated as an object property.
	   * @type {Object}
	   */
	  mustUseAttribute: {},

	  /**
	   * Whether the property must be accessed and mutated using `*Attribute()`.
	   * (This includes anything that fails `<propName> in <element>`.)
	   * @type {Object}
	   */
	  mustUseProperty: {},

	  /**
	   * Whether or not setting a value causes side effects such as triggering
	   * resources to be loaded or text selection changes. We must ensure that
	   * the value is only set if it has changed.
	   * @type {Object}
	   */
	  hasSideEffects: {},

	  /**
	   * Whether the property should be removed when set to a falsey value.
	   * @type {Object}
	   */
	  hasBooleanValue: {},

	  /**
	   * Whether the property must be numeric or parse as a
	   * numeric and should be removed when set to a falsey value.
	   * @type {Object}
	   */
	  hasNumericValue: {},

	  /**
	   * Whether the property must be positive numeric or parse as a positive
	   * numeric and should be removed when set to a falsey value.
	   * @type {Object}
	   */
	  hasPositiveNumericValue: {},

	  /**
	   * Whether the property can be used as a flag as well as with a value. Removed
	   * when strictly equal to false; present without a value when strictly equal
	   * to true; present with a value otherwise.
	   * @type {Object}
	   */
	  hasOverloadedBooleanValue: {},

	  /**
	   * All of the isCustomAttribute() functions that have been injected.
	   */
	  _isCustomAttributeFunctions: [],

	  /**
	   * Checks whether a property name is a custom attribute.
	   * @method
	   */
	  isCustomAttribute: function(attributeName) {
	    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
	      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
	      if (isCustomAttributeFn(attributeName)) {
	        return true;
	      }
	    }
	    return false;
	  },

	  /**
	   * Returns the default property value for a DOM property (i.e., not an
	   * attribute). Most default values are '' or false, but not all. Worse yet,
	   * some (in particular, `type`) vary depending on the type of element.
	   *
	   * TODO: Is it better to grab all the possible properties when creating an
	   * element to avoid having to create the same element twice?
	   */
	  getDefaultValueForProperty: function(nodeName, prop) {
	    var nodeDefaults = defaultValueCache[nodeName];
	    var testElement;
	    if (!nodeDefaults) {
	      defaultValueCache[nodeName] = nodeDefaults = {};
	    }
	    if (!(prop in nodeDefaults)) {
	      testElement = document.createElement(nodeName);
	      nodeDefaults[prop] = testElement[prop];
	    }
	    return nodeDefaults[prop];
	  },

	  injection: DOMPropertyInjection
	};

	module.exports = DOMProperty;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule quoteAttributeValueForBrowser
	 */

	'use strict';

	var escapeTextContentForBrowser = __webpack_require__(55);

	/**
	 * Escapes attribute value to prevent scripting attacks.
	 *
	 * @param {*} value Value to escape.
	 * @return {string} An escaped string.
	 */
	function quoteAttributeValueForBrowser(value) {
	  return '"' + escapeTextContentForBrowser(value) + '"';
	}

	module.exports = quoteAttributeValueForBrowser;


/***/ },
/* 55 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule escapeTextContentForBrowser
	 */

	'use strict';

	var ESCAPE_LOOKUP = {
	  '&': '&amp;',
	  '>': '&gt;',
	  '<': '&lt;',
	  '"': '&quot;',
	  '\'': '&#x27;'
	};

	var ESCAPE_REGEX = /[&><"']/g;

	function escaper(match) {
	  return ESCAPE_LOOKUP[match];
	}

	/**
	 * Escapes text to prevent scripting attacks.
	 *
	 * @param {*} text Text value to escape.
	 * @return {string} An escaped string.
	 */
	function escapeTextContentForBrowser(text) {
	  return ('' + text).replace(ESCAPE_REGEX, escaper);
	}

	module.exports = escapeTextContentForBrowser;


/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentBrowserEnvironment
	 */

	/*jslint evil: true */

	'use strict';

	var ReactDOMIDOperations = __webpack_require__(57);
	var ReactMount = __webpack_require__(76);

	/**
	 * Abstracts away all functionality of the reconciler that requires knowledge of
	 * the browser context. TODO: These callers should be refactored to avoid the
	 * need for this injection.
	 */
	var ReactComponentBrowserEnvironment = {

	  processChildrenUpdates:
	    ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,

	  replaceNodeWithMarkupByID:
	    ReactDOMIDOperations.dangerouslyReplaceNodeWithMarkupByID,

	  /**
	   * If a particular environment requires that some resources be cleaned up,
	   * specify this in the injected Mixin. In the DOM, we would likely want to
	   * purge any cached node ID lookups.
	   *
	   * @private
	   */
	  unmountIDFromEnvironment: function(rootNodeID) {
	    ReactMount.purgeID(rootNodeID);
	  }

	};

	module.exports = ReactComponentBrowserEnvironment;


/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMIDOperations
	 * @typechecks static-only
	 */

	/*jslint evil: true */

	'use strict';

	var CSSPropertyOperations = __webpack_require__(58);
	var DOMChildrenOperations = __webpack_require__(67);
	var DOMPropertyOperations = __webpack_require__(52);
	var ReactMount = __webpack_require__(76);
	var ReactPerf = __webpack_require__(37);

	var invariant = __webpack_require__(17);
	var setInnerHTML = __webpack_require__(75);

	/**
	 * Errors for properties that should not be updated with `updatePropertyById()`.
	 *
	 * @type {object}
	 * @private
	 */
	var INVALID_PROPERTY_ERRORS = {
	  dangerouslySetInnerHTML:
	    '`dangerouslySetInnerHTML` must be set using `updateInnerHTMLByID()`.',
	  style: '`style` must be set using `updateStylesByID()`.'
	};

	/**
	 * Operations used to process updates to DOM nodes. This is made injectable via
	 * `ReactDOMComponent.BackendIDOperations`.
	 */
	var ReactDOMIDOperations = {

	  /**
	   * Updates a DOM node with new property values. This should only be used to
	   * update DOM properties in `DOMProperty`.
	   *
	   * @param {string} id ID of the node to update.
	   * @param {string} name A valid property name, see `DOMProperty`.
	   * @param {*} value New value of the property.
	   * @internal
	   */
	  updatePropertyByID: function(id, name, value) {
	    var node = ReactMount.getNode(id);
	    ("production" !== process.env.NODE_ENV ? invariant(
	      !INVALID_PROPERTY_ERRORS.hasOwnProperty(name),
	      'updatePropertyByID(...): %s',
	      INVALID_PROPERTY_ERRORS[name]
	    ) : invariant(!INVALID_PROPERTY_ERRORS.hasOwnProperty(name)));

	    // If we're updating to null or undefined, we should remove the property
	    // from the DOM node instead of inadvertantly setting to a string. This
	    // brings us in line with the same behavior we have on initial render.
	    if (value != null) {
	      DOMPropertyOperations.setValueForProperty(node, name, value);
	    } else {
	      DOMPropertyOperations.deleteValueForProperty(node, name);
	    }
	  },

	  /**
	   * Updates a DOM node to remove a property. This should only be used to remove
	   * DOM properties in `DOMProperty`.
	   *
	   * @param {string} id ID of the node to update.
	   * @param {string} name A property name to remove, see `DOMProperty`.
	   * @internal
	   */
	  deletePropertyByID: function(id, name, value) {
	    var node = ReactMount.getNode(id);
	    ("production" !== process.env.NODE_ENV ? invariant(
	      !INVALID_PROPERTY_ERRORS.hasOwnProperty(name),
	      'updatePropertyByID(...): %s',
	      INVALID_PROPERTY_ERRORS[name]
	    ) : invariant(!INVALID_PROPERTY_ERRORS.hasOwnProperty(name)));
	    DOMPropertyOperations.deleteValueForProperty(node, name, value);
	  },

	  /**
	   * Updates a DOM node with new style values. If a value is specified as '',
	   * the corresponding style property will be unset.
	   *
	   * @param {string} id ID of the node to update.
	   * @param {object} styles Mapping from styles to values.
	   * @internal
	   */
	  updateStylesByID: function(id, styles) {
	    var node = ReactMount.getNode(id);
	    CSSPropertyOperations.setValueForStyles(node, styles);
	  },

	  /**
	   * Updates a DOM node's innerHTML.
	   *
	   * @param {string} id ID of the node to update.
	   * @param {string} html An HTML string.
	   * @internal
	   */
	  updateInnerHTMLByID: function(id, html) {
	    var node = ReactMount.getNode(id);
	    setInnerHTML(node, html);
	  },

	  /**
	   * Updates a DOM node's text content set by `props.content`.
	   *
	   * @param {string} id ID of the node to update.
	   * @param {string} content Text content.
	   * @internal
	   */
	  updateTextContentByID: function(id, content) {
	    var node = ReactMount.getNode(id);
	    DOMChildrenOperations.updateTextContent(node, content);
	  },

	  /**
	   * Replaces a DOM node that exists in the document with markup.
	   *
	   * @param {string} id ID of child to be replaced.
	   * @param {string} markup Dangerous markup to inject in place of child.
	   * @internal
	   * @see {Danger.dangerouslyReplaceNodeWithMarkup}
	   */
	  dangerouslyReplaceNodeWithMarkupByID: function(id, markup) {
	    var node = ReactMount.getNode(id);
	    DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup(node, markup);
	  },

	  /**
	   * Updates a component's children by processing a series of updates.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @param {array<string>} markup List of markup strings.
	   * @internal
	   */
	  dangerouslyProcessChildrenUpdates: function(updates, markup) {
	    for (var i = 0; i < updates.length; i++) {
	      updates[i].parentNode = ReactMount.getNode(updates[i].parentID);
	    }
	    DOMChildrenOperations.processUpdates(updates, markup);
	  }
	};

	ReactPerf.measureMethods(ReactDOMIDOperations, 'ReactDOMIDOperations', {
	  updatePropertyByID: 'updatePropertyByID',
	  deletePropertyByID: 'deletePropertyByID',
	  updateStylesByID: 'updateStylesByID',
	  updateInnerHTMLByID: 'updateInnerHTMLByID',
	  updateTextContentByID: 'updateTextContentByID',
	  dangerouslyReplaceNodeWithMarkupByID: 'dangerouslyReplaceNodeWithMarkupByID',
	  dangerouslyProcessChildrenUpdates: 'dangerouslyProcessChildrenUpdates'
	});

	module.exports = ReactDOMIDOperations;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 58 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSPropertyOperations
	 * @typechecks static-only
	 */

	'use strict';

	var CSSProperty = __webpack_require__(59);
	var ExecutionEnvironment = __webpack_require__(60);

	var camelizeStyleName = __webpack_require__(61);
	var dangerousStyleValue = __webpack_require__(63);
	var hyphenateStyleName = __webpack_require__(64);
	var memoizeStringOnly = __webpack_require__(66);
	var warning = __webpack_require__(24);

	var processStyleName = memoizeStringOnly(function(styleName) {
	  return hyphenateStyleName(styleName);
	});

	var styleFloatAccessor = 'cssFloat';
	if (ExecutionEnvironment.canUseDOM) {
	  // IE8 only supports accessing cssFloat (standard) as styleFloat
	  if (document.documentElement.style.cssFloat === undefined) {
	    styleFloatAccessor = 'styleFloat';
	  }
	}

	if ("production" !== process.env.NODE_ENV) {
	  // 'msTransform' is correct, but the other prefixes should be capitalized
	  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

	  // style values shouldn't contain a semicolon
	  var badStyleValueWithSemicolonPattern = /;\s*$/;

	  var warnedStyleNames = {};
	  var warnedStyleValues = {};

	  var warnHyphenatedStyleName = function(name) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }

	    warnedStyleNames[name] = true;
	    ("production" !== process.env.NODE_ENV ? warning(
	      false,
	      'Unsupported style property %s. Did you mean %s?',
	      name,
	      camelizeStyleName(name)
	    ) : null);
	  };

	  var warnBadVendoredStyleName = function(name) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }

	    warnedStyleNames[name] = true;
	    ("production" !== process.env.NODE_ENV ? warning(
	      false,
	      'Unsupported vendor-prefixed style property %s. Did you mean %s?',
	      name,
	      name.charAt(0).toUpperCase() + name.slice(1)
	    ) : null);
	  };

	  var warnStyleValueWithSemicolon = function(name, value) {
	    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
	      return;
	    }

	    warnedStyleValues[value] = true;
	    ("production" !== process.env.NODE_ENV ? warning(
	      false,
	      'Style property values shouldn\'t contain a semicolon. ' +
	      'Try "%s: %s" instead.',
	      name,
	      value.replace(badStyleValueWithSemicolonPattern, '')
	    ) : null);
	  };

	  /**
	   * @param {string} name
	   * @param {*} value
	   */
	  var warnValidStyle = function(name, value) {
	    if (name.indexOf('-') > -1) {
	      warnHyphenatedStyleName(name);
	    } else if (badVendoredStyleNamePattern.test(name)) {
	      warnBadVendoredStyleName(name);
	    } else if (badStyleValueWithSemicolonPattern.test(value)) {
	      warnStyleValueWithSemicolon(name, value);
	    }
	  };
	}

	/**
	 * Operations for dealing with CSS properties.
	 */
	var CSSPropertyOperations = {

	  /**
	   * Serializes a mapping of style properties for use as inline styles:
	   *
	   *   > createMarkupForStyles({width: '200px', height: 0})
	   *   "width:200px;height:0;"
	   *
	   * Undefined values are ignored so that declarative programming is easier.
	   * The result should be HTML-escaped before insertion into the DOM.
	   *
	   * @param {object} styles
	   * @return {?string}
	   */
	  createMarkupForStyles: function(styles) {
	    var serialized = '';
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      var styleValue = styles[styleName];
	      if ("production" !== process.env.NODE_ENV) {
	        warnValidStyle(styleName, styleValue);
	      }
	      if (styleValue != null) {
	        serialized += processStyleName(styleName) + ':';
	        serialized += dangerousStyleValue(styleName, styleValue) + ';';
	      }
	    }
	    return serialized || null;
	  },

	  /**
	   * Sets the value for multiple styles on a node.  If a value is specified as
	   * '' (empty string), the corresponding style property will be unset.
	   *
	   * @param {DOMElement} node
	   * @param {object} styles
	   */
	  setValueForStyles: function(node, styles) {
	    var style = node.style;
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      if ("production" !== process.env.NODE_ENV) {
	        warnValidStyle(styleName, styles[styleName]);
	      }
	      var styleValue = dangerousStyleValue(styleName, styles[styleName]);
	      if (styleName === 'float') {
	        styleName = styleFloatAccessor;
	      }
	      if (styleValue) {
	        style[styleName] = styleValue;
	      } else {
	        var expansion = CSSProperty.shorthandPropertyExpansions[styleName];
	        if (expansion) {
	          // Shorthand property that IE8 won't like unsetting, so unset each
	          // component to placate it
	          for (var individualStyleName in expansion) {
	            style[individualStyleName] = '';
	          }
	        } else {
	          style[styleName] = '';
	        }
	      }
	    }
	  }

	};

	module.exports = CSSPropertyOperations;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 59 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSProperty
	 */

	'use strict';

	/**
	 * CSS properties which accept numbers but are not in units of "px".
	 */
	var isUnitlessNumber = {
	  boxFlex: true,
	  boxFlexGroup: true,
	  columnCount: true,
	  flex: true,
	  flexGrow: true,
	  flexPositive: true,
	  flexShrink: true,
	  flexNegative: true,
	  fontWeight: true,
	  lineClamp: true,
	  lineHeight: true,
	  opacity: true,
	  order: true,
	  orphans: true,
	  widows: true,
	  zIndex: true,
	  zoom: true,

	  // SVG-related properties
	  fillOpacity: true,
	  strokeDashoffset: true,
	  strokeOpacity: true,
	  strokeWidth: true
	};

	/**
	 * @param {string} prefix vendor-specific prefix, eg: Webkit
	 * @param {string} key style name, eg: transitionDuration
	 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
	 * WebkitTransitionDuration
	 */
	function prefixKey(prefix, key) {
	  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
	}

	/**
	 * Support style names that may come passed in prefixed by adding permutations
	 * of vendor prefixes.
	 */
	var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

	// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
	// infinite loop, because it iterates over the newly added props too.
	Object.keys(isUnitlessNumber).forEach(function(prop) {
	  prefixes.forEach(function(prefix) {
	    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
	  });
	});

	/**
	 * Most style properties can be unset by doing .style[prop] = '' but IE8
	 * doesn't like doing that with shorthand properties so for the properties that
	 * IE8 breaks on, which are listed here, we instead unset each of the
	 * individual properties. See http://bugs.jquery.com/ticket/12385.
	 * The 4-value 'clock' properties like margin, padding, border-width seem to
	 * behave without any problems. Curiously, list-style works too without any
	 * special prodding.
	 */
	var shorthandPropertyExpansions = {
	  background: {
	    backgroundImage: true,
	    backgroundPosition: true,
	    backgroundRepeat: true,
	    backgroundColor: true
	  },
	  border: {
	    borderWidth: true,
	    borderStyle: true,
	    borderColor: true
	  },
	  borderBottom: {
	    borderBottomWidth: true,
	    borderBottomStyle: true,
	    borderBottomColor: true
	  },
	  borderLeft: {
	    borderLeftWidth: true,
	    borderLeftStyle: true,
	    borderLeftColor: true
	  },
	  borderRight: {
	    borderRightWidth: true,
	    borderRightStyle: true,
	    borderRightColor: true
	  },
	  borderTop: {
	    borderTopWidth: true,
	    borderTopStyle: true,
	    borderTopColor: true
	  },
	  font: {
	    fontStyle: true,
	    fontVariant: true,
	    fontWeight: true,
	    fontSize: true,
	    lineHeight: true,
	    fontFamily: true
	  }
	};

	var CSSProperty = {
	  isUnitlessNumber: isUnitlessNumber,
	  shorthandPropertyExpansions: shorthandPropertyExpansions
	};

	module.exports = CSSProperty;


/***/ },
/* 60 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ExecutionEnvironment
	 */

	/*jslint evil: true */

	"use strict";

	var canUseDOM = !!(
	  (typeof window !== 'undefined' &&
	  window.document && window.document.createElement)
	);

	/**
	 * Simple, lightweight module assisting with the detection and context of
	 * Worker. Helps avoid circular dependencies and allows code to reason about
	 * whether or not they are in a Worker, even if they never include the main
	 * `ReactWorker` dependency.
	 */
	var ExecutionEnvironment = {

	  canUseDOM: canUseDOM,

	  canUseWorkers: typeof Worker !== 'undefined',

	  canUseEventListeners:
	    canUseDOM && !!(window.addEventListener || window.attachEvent),

	  canUseViewport: canUseDOM && !!window.screen,

	  isInWorker: !canUseDOM // For now, this is true - might change in the future.

	};

	module.exports = ExecutionEnvironment;


/***/ },
/* 61 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule camelizeStyleName
	 * @typechecks
	 */

	"use strict";

	var camelize = __webpack_require__(62);

	var msPattern = /^-ms-/;

	/**
	 * Camelcases a hyphenated CSS property name, for example:
	 *
	 *   > camelizeStyleName('background-color')
	 *   < "backgroundColor"
	 *   > camelizeStyleName('-moz-transition')
	 *   < "MozTransition"
	 *   > camelizeStyleName('-ms-transition')
	 *   < "msTransition"
	 *
	 * As Andi Smith suggests
	 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
	 * is converted to lowercase `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelizeStyleName(string) {
	  return camelize(string.replace(msPattern, 'ms-'));
	}

	module.exports = camelizeStyleName;


/***/ },
/* 62 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule camelize
	 * @typechecks
	 */

	var _hyphenPattern = /-(.)/g;

	/**
	 * Camelcases a hyphenated string, for example:
	 *
	 *   > camelize('background-color')
	 *   < "backgroundColor"
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelize(string) {
	  return string.replace(_hyphenPattern, function(_, character) {
	    return character.toUpperCase();
	  });
	}

	module.exports = camelize;


/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule dangerousStyleValue
	 * @typechecks static-only
	 */

	'use strict';

	var CSSProperty = __webpack_require__(59);

	var isUnitlessNumber = CSSProperty.isUnitlessNumber;

	/**
	 * Convert a value into the proper css writable value. The style name `name`
	 * should be logical (no hyphens), as specified
	 * in `CSSProperty.isUnitlessNumber`.
	 *
	 * @param {string} name CSS property name such as `topMargin`.
	 * @param {*} value CSS property value such as `10px`.
	 * @return {string} Normalized style value with dimensions applied.
	 */
	function dangerousStyleValue(name, value) {
	  // Note that we've removed escapeTextForBrowser() calls here since the
	  // whole string will be escaped when the attribute is injected into
	  // the markup. If you provide unsafe user data here they can inject
	  // arbitrary CSS which may be problematic (I couldn't repro this):
	  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
	  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
	  // This is not an XSS hole but instead a potential CSS injection issue
	  // which has lead to a greater discussion about how we're going to
	  // trust URLs moving forward. See #2115901

	  var isEmpty = value == null || typeof value === 'boolean' || value === '';
	  if (isEmpty) {
	    return '';
	  }

	  var isNonNumeric = isNaN(value);
	  if (isNonNumeric || value === 0 ||
	      isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
	    return '' + value; // cast to string
	  }

	  if (typeof value === 'string') {
	    value = value.trim();
	  }
	  return value + 'px';
	}

	module.exports = dangerousStyleValue;


/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule hyphenateStyleName
	 * @typechecks
	 */

	"use strict";

	var hyphenate = __webpack_require__(65);

	var msPattern = /^ms-/;

	/**
	 * Hyphenates a camelcased CSS property name, for example:
	 *
	 *   > hyphenateStyleName('backgroundColor')
	 *   < "background-color"
	 *   > hyphenateStyleName('MozTransition')
	 *   < "-moz-transition"
	 *   > hyphenateStyleName('msTransition')
	 *   < "-ms-transition"
	 *
	 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
	 * is converted to `-ms-`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenateStyleName(string) {
	  return hyphenate(string).replace(msPattern, '-ms-');
	}

	module.exports = hyphenateStyleName;


/***/ },
/* 65 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule hyphenate
	 * @typechecks
	 */

	var _uppercasePattern = /([A-Z])/g;

	/**
	 * Hyphenates a camelcased string, for example:
	 *
	 *   > hyphenate('backgroundColor')
	 *   < "background-color"
	 *
	 * For CSS style names, use `hyphenateStyleName` instead which works properly
	 * with all vendor prefixes, including `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenate(string) {
	  return string.replace(_uppercasePattern, '-$1').toLowerCase();
	}

	module.exports = hyphenate;


/***/ },
/* 66 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule memoizeStringOnly
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * Memoizes the return value of a function that accepts one string argument.
	 *
	 * @param {function} callback
	 * @return {function}
	 */
	function memoizeStringOnly(callback) {
	  var cache = {};
	  return function(string) {
	    if (!cache.hasOwnProperty(string)) {
	      cache[string] = callback.call(this, string);
	    }
	    return cache[string];
	  };
	}

	module.exports = memoizeStringOnly;


/***/ },
/* 67 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMChildrenOperations
	 * @typechecks static-only
	 */

	'use strict';

	var Danger = __webpack_require__(68);
	var ReactMultiChildUpdateTypes = __webpack_require__(73);

	var setTextContent = __webpack_require__(74);
	var invariant = __webpack_require__(17);

	/**
	 * Inserts `childNode` as a child of `parentNode` at the `index`.
	 *
	 * @param {DOMElement} parentNode Parent node in which to insert.
	 * @param {DOMElement} childNode Child node to insert.
	 * @param {number} index Index at which to insert the child.
	 * @internal
	 */
	function insertChildAt(parentNode, childNode, index) {
	  // By exploiting arrays returning `undefined` for an undefined index, we can
	  // rely exclusively on `insertBefore(node, null)` instead of also using
	  // `appendChild(node)`. However, using `undefined` is not allowed by all
	  // browsers so we must replace it with `null`.
	  parentNode.insertBefore(
	    childNode,
	    parentNode.childNodes[index] || null
	  );
	}

	/**
	 * Operations for updating with DOM children.
	 */
	var DOMChildrenOperations = {

	  dangerouslyReplaceNodeWithMarkup: Danger.dangerouslyReplaceNodeWithMarkup,

	  updateTextContent: setTextContent,

	  /**
	   * Updates a component's children by processing a series of updates. The
	   * update configurations are each expected to have a `parentNode` property.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @param {array<string>} markupList List of markup strings.
	   * @internal
	   */
	  processUpdates: function(updates, markupList) {
	    var update;
	    // Mapping from parent IDs to initial child orderings.
	    var initialChildren = null;
	    // List of children that will be moved or removed.
	    var updatedChildren = null;

	    for (var i = 0; i < updates.length; i++) {
	      update = updates[i];
	      if (update.type === ReactMultiChildUpdateTypes.MOVE_EXISTING ||
	          update.type === ReactMultiChildUpdateTypes.REMOVE_NODE) {
	        var updatedIndex = update.fromIndex;
	        var updatedChild = update.parentNode.childNodes[updatedIndex];
	        var parentID = update.parentID;

	        ("production" !== process.env.NODE_ENV ? invariant(
	          updatedChild,
	          'processUpdates(): Unable to find child %s of element. This ' +
	          'probably means the DOM was unexpectedly mutated (e.g., by the ' +
	          'browser), usually due to forgetting a <tbody> when using tables, ' +
	          'nesting tags like <form>, <p>, or <a>, or using non-SVG elements ' +
	          'in an <svg> parent. Try inspecting the child nodes of the element ' +
	          'with React ID `%s`.',
	          updatedIndex,
	          parentID
	        ) : invariant(updatedChild));

	        initialChildren = initialChildren || {};
	        initialChildren[parentID] = initialChildren[parentID] || [];
	        initialChildren[parentID][updatedIndex] = updatedChild;

	        updatedChildren = updatedChildren || [];
	        updatedChildren.push(updatedChild);
	      }
	    }

	    var renderedMarkup = Danger.dangerouslyRenderMarkup(markupList);

	    // Remove updated children first so that `toIndex` is consistent.
	    if (updatedChildren) {
	      for (var j = 0; j < updatedChildren.length; j++) {
	        updatedChildren[j].parentNode.removeChild(updatedChildren[j]);
	      }
	    }

	    for (var k = 0; k < updates.length; k++) {
	      update = updates[k];
	      switch (update.type) {
	        case ReactMultiChildUpdateTypes.INSERT_MARKUP:
	          insertChildAt(
	            update.parentNode,
	            renderedMarkup[update.markupIndex],
	            update.toIndex
	          );
	          break;
	        case ReactMultiChildUpdateTypes.MOVE_EXISTING:
	          insertChildAt(
	            update.parentNode,
	            initialChildren[update.parentID][update.fromIndex],
	            update.toIndex
	          );
	          break;
	        case ReactMultiChildUpdateTypes.TEXT_CONTENT:
	          setTextContent(
	            update.parentNode,
	            update.textContent
	          );
	          break;
	        case ReactMultiChildUpdateTypes.REMOVE_NODE:
	          // Already removed by the for-loop above.
	          break;
	      }
	    }
	  }

	};

	module.exports = DOMChildrenOperations;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Danger
	 * @typechecks static-only
	 */

	/*jslint evil: true, sub: true */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(60);

	var createNodesFromMarkup = __webpack_require__(69);
	var emptyFunction = __webpack_require__(25);
	var getMarkupWrap = __webpack_require__(72);
	var invariant = __webpack_require__(17);

	var OPEN_TAG_NAME_EXP = /^(<[^ \/>]+)/;
	var RESULT_INDEX_ATTR = 'data-danger-index';

	/**
	 * Extracts the `nodeName` from a string of markup.
	 *
	 * NOTE: Extracting the `nodeName` does not require a regular expression match
	 * because we make assumptions about React-generated markup (i.e. there are no
	 * spaces surrounding the opening tag and there is at least one attribute).
	 *
	 * @param {string} markup String of markup.
	 * @return {string} Node name of the supplied markup.
	 * @see http://jsperf.com/extract-nodename
	 */
	function getNodeName(markup) {
	  return markup.substring(1, markup.indexOf(' '));
	}

	var Danger = {

	  /**
	   * Renders markup into an array of nodes. The markup is expected to render
	   * into a list of root nodes. Also, the length of `resultList` and
	   * `markupList` should be the same.
	   *
	   * @param {array<string>} markupList List of markup strings to render.
	   * @return {array<DOMElement>} List of rendered nodes.
	   * @internal
	   */
	  dangerouslyRenderMarkup: function(markupList) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      ExecutionEnvironment.canUseDOM,
	      'dangerouslyRenderMarkup(...): Cannot render markup in a worker ' +
	      'thread. Make sure `window` and `document` are available globally ' +
	      'before requiring React when unit testing or use ' +
	      'React.renderToString for server rendering.'
	    ) : invariant(ExecutionEnvironment.canUseDOM));
	    var nodeName;
	    var markupByNodeName = {};
	    // Group markup by `nodeName` if a wrap is necessary, else by '*'.
	    for (var i = 0; i < markupList.length; i++) {
	      ("production" !== process.env.NODE_ENV ? invariant(
	        markupList[i],
	        'dangerouslyRenderMarkup(...): Missing markup.'
	      ) : invariant(markupList[i]));
	      nodeName = getNodeName(markupList[i]);
	      nodeName = getMarkupWrap(nodeName) ? nodeName : '*';
	      markupByNodeName[nodeName] = markupByNodeName[nodeName] || [];
	      markupByNodeName[nodeName][i] = markupList[i];
	    }
	    var resultList = [];
	    var resultListAssignmentCount = 0;
	    for (nodeName in markupByNodeName) {
	      if (!markupByNodeName.hasOwnProperty(nodeName)) {
	        continue;
	      }
	      var markupListByNodeName = markupByNodeName[nodeName];

	      // This for-in loop skips the holes of the sparse array. The order of
	      // iteration should follow the order of assignment, which happens to match
	      // numerical index order, but we don't rely on that.
	      var resultIndex;
	      for (resultIndex in markupListByNodeName) {
	        if (markupListByNodeName.hasOwnProperty(resultIndex)) {
	          var markup = markupListByNodeName[resultIndex];

	          // Push the requested markup with an additional RESULT_INDEX_ATTR
	          // attribute.  If the markup does not start with a < character, it
	          // will be discarded below (with an appropriate console.error).
	          markupListByNodeName[resultIndex] = markup.replace(
	            OPEN_TAG_NAME_EXP,
	            // This index will be parsed back out below.
	            '$1 ' + RESULT_INDEX_ATTR + '="' + resultIndex + '" '
	          );
	        }
	      }

	      // Render each group of markup with similar wrapping `nodeName`.
	      var renderNodes = createNodesFromMarkup(
	        markupListByNodeName.join(''),
	        emptyFunction // Do nothing special with <script> tags.
	      );

	      for (var j = 0; j < renderNodes.length; ++j) {
	        var renderNode = renderNodes[j];
	        if (renderNode.hasAttribute &&
	            renderNode.hasAttribute(RESULT_INDEX_ATTR)) {

	          resultIndex = +renderNode.getAttribute(RESULT_INDEX_ATTR);
	          renderNode.removeAttribute(RESULT_INDEX_ATTR);

	          ("production" !== process.env.NODE_ENV ? invariant(
	            !resultList.hasOwnProperty(resultIndex),
	            'Danger: Assigning to an already-occupied result index.'
	          ) : invariant(!resultList.hasOwnProperty(resultIndex)));

	          resultList[resultIndex] = renderNode;

	          // This should match resultList.length and markupList.length when
	          // we're done.
	          resultListAssignmentCount += 1;

	        } else if ("production" !== process.env.NODE_ENV) {
	          console.error(
	            'Danger: Discarding unexpected node:',
	            renderNode
	          );
	        }
	      }
	    }

	    // Although resultList was populated out of order, it should now be a dense
	    // array.
	    ("production" !== process.env.NODE_ENV ? invariant(
	      resultListAssignmentCount === resultList.length,
	      'Danger: Did not assign to every index of resultList.'
	    ) : invariant(resultListAssignmentCount === resultList.length));

	    ("production" !== process.env.NODE_ENV ? invariant(
	      resultList.length === markupList.length,
	      'Danger: Expected markup to render %s nodes, but rendered %s.',
	      markupList.length,
	      resultList.length
	    ) : invariant(resultList.length === markupList.length));

	    return resultList;
	  },

	  /**
	   * Replaces a node with a string of markup at its current position within its
	   * parent. The markup must render into a single root node.
	   *
	   * @param {DOMElement} oldChild Child node to replace.
	   * @param {string} markup Markup to render in place of the child node.
	   * @internal
	   */
	  dangerouslyReplaceNodeWithMarkup: function(oldChild, markup) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      ExecutionEnvironment.canUseDOM,
	      'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a ' +
	      'worker thread. Make sure `window` and `document` are available ' +
	      'globally before requiring React when unit testing or use ' +
	      'React.renderToString for server rendering.'
	    ) : invariant(ExecutionEnvironment.canUseDOM));
	    ("production" !== process.env.NODE_ENV ? invariant(markup, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : invariant(markup));
	    ("production" !== process.env.NODE_ENV ? invariant(
	      oldChild.tagName.toLowerCase() !== 'html',
	      'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the ' +
	      '<html> node. This is because browser quirks make this unreliable ' +
	      'and/or slow. If you want to render to the root you must use ' +
	      'server rendering. See React.renderToString().'
	    ) : invariant(oldChild.tagName.toLowerCase() !== 'html'));

	    var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
	    oldChild.parentNode.replaceChild(newChild, oldChild);
	  }

	};

	module.exports = Danger;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 69 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule createNodesFromMarkup
	 * @typechecks
	 */

	/*jslint evil: true, sub: true */

	var ExecutionEnvironment = __webpack_require__(60);

	var createArrayFromMixed = __webpack_require__(70);
	var getMarkupWrap = __webpack_require__(72);
	var invariant = __webpack_require__(17);

	/**
	 * Dummy container used to render all markup.
	 */
	var dummyNode =
	  ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

	/**
	 * Pattern used by `getNodeName`.
	 */
	var nodeNamePattern = /^\s*<(\w+)/;

	/**
	 * Extracts the `nodeName` of the first element in a string of markup.
	 *
	 * @param {string} markup String of markup.
	 * @return {?string} Node name of the supplied markup.
	 */
	function getNodeName(markup) {
	  var nodeNameMatch = markup.match(nodeNamePattern);
	  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
	}

	/**
	 * Creates an array containing the nodes rendered from the supplied markup. The
	 * optionally supplied `handleScript` function will be invoked once for each
	 * <script> element that is rendered. If no `handleScript` function is supplied,
	 * an exception is thrown if any <script> elements are rendered.
	 *
	 * @param {string} markup A string of valid HTML markup.
	 * @param {?function} handleScript Invoked once for each rendered <script>.
	 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
	 */
	function createNodesFromMarkup(markup, handleScript) {
	  var node = dummyNode;
	  ("production" !== process.env.NODE_ENV ? invariant(!!dummyNode, 'createNodesFromMarkup dummy not initialized') : invariant(!!dummyNode));
	  var nodeName = getNodeName(markup);

	  var wrap = nodeName && getMarkupWrap(nodeName);
	  if (wrap) {
	    node.innerHTML = wrap[1] + markup + wrap[2];

	    var wrapDepth = wrap[0];
	    while (wrapDepth--) {
	      node = node.lastChild;
	    }
	  } else {
	    node.innerHTML = markup;
	  }

	  var scripts = node.getElementsByTagName('script');
	  if (scripts.length) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      handleScript,
	      'createNodesFromMarkup(...): Unexpected <script> element rendered.'
	    ) : invariant(handleScript));
	    createArrayFromMixed(scripts).forEach(handleScript);
	  }

	  var nodes = createArrayFromMixed(node.childNodes);
	  while (node.lastChild) {
	    node.removeChild(node.lastChild);
	  }
	  return nodes;
	}

	module.exports = createNodesFromMarkup;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 70 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule createArrayFromMixed
	 * @typechecks
	 */

	var toArray = __webpack_require__(71);

	/**
	 * Perform a heuristic test to determine if an object is "array-like".
	 *
	 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
	 *   Joshu replied: "Mu."
	 *
	 * This function determines if its argument has "array nature": it returns
	 * true if the argument is an actual array, an `arguments' object, or an
	 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
	 *
	 * It will return false for other array-like objects like Filelist.
	 *
	 * @param {*} obj
	 * @return {boolean}
	 */
	function hasArrayNature(obj) {
	  return (
	    // not null/false
	    !!obj &&
	    // arrays are objects, NodeLists are functions in Safari
	    (typeof obj == 'object' || typeof obj == 'function') &&
	    // quacks like an array
	    ('length' in obj) &&
	    // not window
	    !('setInterval' in obj) &&
	    // no DOM node should be considered an array-like
	    // a 'select' element has 'length' and 'item' properties on IE8
	    (typeof obj.nodeType != 'number') &&
	    (
	      // a real array
	      (// HTMLCollection/NodeList
	      (Array.isArray(obj) ||
	      // arguments
	      ('callee' in obj) || 'item' in obj))
	    )
	  );
	}

	/**
	 * Ensure that the argument is an array by wrapping it in an array if it is not.
	 * Creates a copy of the argument if it is already an array.
	 *
	 * This is mostly useful idiomatically:
	 *
	 *   var createArrayFromMixed = require('createArrayFromMixed');
	 *
	 *   function takesOneOrMoreThings(things) {
	 *     things = createArrayFromMixed(things);
	 *     ...
	 *   }
	 *
	 * This allows you to treat `things' as an array, but accept scalars in the API.
	 *
	 * If you need to convert an array-like object, like `arguments`, into an array
	 * use toArray instead.
	 *
	 * @param {*} obj
	 * @return {array}
	 */
	function createArrayFromMixed(obj) {
	  if (!hasArrayNature(obj)) {
	    return [obj];
	  } else if (Array.isArray(obj)) {
	    return obj.slice();
	  } else {
	    return toArray(obj);
	  }
	}

	module.exports = createArrayFromMixed;


/***/ },
/* 71 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule toArray
	 * @typechecks
	 */

	var invariant = __webpack_require__(17);

	/**
	 * Convert array-like objects to arrays.
	 *
	 * This API assumes the caller knows the contents of the data type. For less
	 * well defined inputs use createArrayFromMixed.
	 *
	 * @param {object|function|filelist} obj
	 * @return {array}
	 */
	function toArray(obj) {
	  var length = obj.length;

	  // Some browse builtin objects can report typeof 'function' (e.g. NodeList in
	  // old versions of Safari).
	  ("production" !== process.env.NODE_ENV ? invariant(
	    !Array.isArray(obj) &&
	    (typeof obj === 'object' || typeof obj === 'function'),
	    'toArray: Array-like object expected'
	  ) : invariant(!Array.isArray(obj) &&
	  (typeof obj === 'object' || typeof obj === 'function')));

	  ("production" !== process.env.NODE_ENV ? invariant(
	    typeof length === 'number',
	    'toArray: Object needs a length property'
	  ) : invariant(typeof length === 'number'));

	  ("production" !== process.env.NODE_ENV ? invariant(
	    length === 0 ||
	    (length - 1) in obj,
	    'toArray: Object should have keys for indices'
	  ) : invariant(length === 0 ||
	  (length - 1) in obj));

	  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
	  // without method will throw during the slice call and skip straight to the
	  // fallback.
	  if (obj.hasOwnProperty) {
	    try {
	      return Array.prototype.slice.call(obj);
	    } catch (e) {
	      // IE < 9 does not support Array#slice on collections objects
	    }
	  }

	  // Fall back to copying key by key. This assumes all keys have a value,
	  // so will not preserve sparsely populated inputs.
	  var ret = Array(length);
	  for (var ii = 0; ii < length; ii++) {
	    ret[ii] = obj[ii];
	  }
	  return ret;
	}

	module.exports = toArray;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 72 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getMarkupWrap
	 */

	var ExecutionEnvironment = __webpack_require__(60);

	var invariant = __webpack_require__(17);

	/**
	 * Dummy container used to detect which wraps are necessary.
	 */
	var dummyNode =
	  ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

	/**
	 * Some browsers cannot use `innerHTML` to render certain elements standalone,
	 * so we wrap them, render the wrapped nodes, then extract the desired node.
	 *
	 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
	 */
	var shouldWrap = {
	  // Force wrapping for SVG elements because if they get created inside a <div>,
	  // they will be initialized in the wrong namespace (and will not display).
	  'circle': true,
	  'clipPath': true,
	  'defs': true,
	  'ellipse': true,
	  'g': true,
	  'line': true,
	  'linearGradient': true,
	  'path': true,
	  'polygon': true,
	  'polyline': true,
	  'radialGradient': true,
	  'rect': true,
	  'stop': true,
	  'text': true
	};

	var selectWrap = [1, '<select multiple="true">', '</select>'];
	var tableWrap = [1, '<table>', '</table>'];
	var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];

	var svgWrap = [1, '<svg>', '</svg>'];

	var markupWrap = {
	  '*': [1, '?<div>', '</div>'],

	  'area': [1, '<map>', '</map>'],
	  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
	  'legend': [1, '<fieldset>', '</fieldset>'],
	  'param': [1, '<object>', '</object>'],
	  'tr': [2, '<table><tbody>', '</tbody></table>'],

	  'optgroup': selectWrap,
	  'option': selectWrap,

	  'caption': tableWrap,
	  'colgroup': tableWrap,
	  'tbody': tableWrap,
	  'tfoot': tableWrap,
	  'thead': tableWrap,

	  'td': trWrap,
	  'th': trWrap,

	  'circle': svgWrap,
	  'clipPath': svgWrap,
	  'defs': svgWrap,
	  'ellipse': svgWrap,
	  'g': svgWrap,
	  'line': svgWrap,
	  'linearGradient': svgWrap,
	  'path': svgWrap,
	  'polygon': svgWrap,
	  'polyline': svgWrap,
	  'radialGradient': svgWrap,
	  'rect': svgWrap,
	  'stop': svgWrap,
	  'text': svgWrap
	};

	/**
	 * Gets the markup wrap configuration for the supplied `nodeName`.
	 *
	 * NOTE: This lazily detects which wraps are necessary for the current browser.
	 *
	 * @param {string} nodeName Lowercase `nodeName`.
	 * @return {?array} Markup wrap configuration, if applicable.
	 */
	function getMarkupWrap(nodeName) {
	  ("production" !== process.env.NODE_ENV ? invariant(!!dummyNode, 'Markup wrapping node not initialized') : invariant(!!dummyNode));
	  if (!markupWrap.hasOwnProperty(nodeName)) {
	    nodeName = '*';
	  }
	  if (!shouldWrap.hasOwnProperty(nodeName)) {
	    if (nodeName === '*') {
	      dummyNode.innerHTML = '<link />';
	    } else {
	      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
	    }
	    shouldWrap[nodeName] = !dummyNode.firstChild;
	  }
	  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
	}


	module.exports = getMarkupWrap;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 73 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMultiChildUpdateTypes
	 */

	'use strict';

	var keyMirror = __webpack_require__(16);

	/**
	 * When a component's children are updated, a series of update configuration
	 * objects are created in order to batch and serialize the required changes.
	 *
	 * Enumerates all the possible types of update configurations.
	 *
	 * @internal
	 */
	var ReactMultiChildUpdateTypes = keyMirror({
	  INSERT_MARKUP: null,
	  MOVE_EXISTING: null,
	  REMOVE_NODE: null,
	  TEXT_CONTENT: null
	});

	module.exports = ReactMultiChildUpdateTypes;


/***/ },
/* 74 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule setTextContent
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(60);
	var escapeTextContentForBrowser = __webpack_require__(55);
	var setInnerHTML = __webpack_require__(75);

	/**
	 * Set the textContent property of a node, ensuring that whitespace is preserved
	 * even in IE8. innerText is a poor substitute for textContent and, among many
	 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
	 * as it should.
	 *
	 * @param {DOMElement} node
	 * @param {string} text
	 * @internal
	 */
	var setTextContent = function(node, text) {
	  node.textContent = text;
	};

	if (ExecutionEnvironment.canUseDOM) {
	  if (!('textContent' in document.documentElement)) {
	    setTextContent = function(node, text) {
	      setInnerHTML(node, escapeTextContentForBrowser(text));
	    };
	  }
	}

	module.exports = setTextContent;


/***/ },
/* 75 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule setInnerHTML
	 */

	/* globals MSApp */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(60);

	var WHITESPACE_TEST = /^[ \r\n\t\f]/;
	var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;

	/**
	 * Set the innerHTML property of a node, ensuring that whitespace is preserved
	 * even in IE8.
	 *
	 * @param {DOMElement} node
	 * @param {string} html
	 * @internal
	 */
	var setInnerHTML = function(node, html) {
	  node.innerHTML = html;
	};

	// Win8 apps: Allow all html to be inserted
	if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
	  setInnerHTML = function(node, html) {
	    MSApp.execUnsafeLocalFunction(function() {
	      node.innerHTML = html;
	    });
	  };
	}

	if (ExecutionEnvironment.canUseDOM) {
	  // IE8: When updating a just created node with innerHTML only leading
	  // whitespace is removed. When updating an existing node with innerHTML
	  // whitespace in root TextNodes is also collapsed.
	  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html

	  // Feature detection; only IE8 is known to behave improperly like this.
	  var testElement = document.createElement('div');
	  testElement.innerHTML = ' ';
	  if (testElement.innerHTML === '') {
	    setInnerHTML = function(node, html) {
	      // Magic theory: IE8 supposedly differentiates between added and updated
	      // nodes when processing innerHTML, innerHTML on updated nodes suffers
	      // from worse whitespace behavior. Re-adding a node like this triggers
	      // the initial and more favorable whitespace behavior.
	      // TODO: What to do on a detached node?
	      if (node.parentNode) {
	        node.parentNode.replaceChild(node, node);
	      }

	      // We also implement a workaround for non-visible tags disappearing into
	      // thin air on IE8, this only happens if there is no visible text
	      // in-front of the non-visible tags. Piggyback on the whitespace fix
	      // and simply check if any non-visible tags appear in the source.
	      if (WHITESPACE_TEST.test(html) ||
	          html[0] === '<' && NONVISIBLE_TEST.test(html)) {
	        // Recover leading whitespace by temporarily prepending any character.
	        // \uFEFF has the potential advantage of being zero-width/invisible.
	        node.innerHTML = '\uFEFF' + html;

	        // deleteData leaves an empty `TextNode` which offsets the index of all
	        // children. Definitely want to avoid this.
	        var textNode = node.firstChild;
	        if (textNode.data.length === 1) {
	          node.removeChild(textNode);
	        } else {
	          textNode.deleteData(0, 1);
	        }
	      } else {
	        node.innerHTML = html;
	      }
	    };
	  }
	}

	module.exports = setInnerHTML;


/***/ },
/* 76 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMount
	 */

	'use strict';

	var DOMProperty = __webpack_require__(53);
	var ReactBrowserEventEmitter = __webpack_require__(77);
	var ReactCurrentOwner = __webpack_require__(26);
	var ReactElement = __webpack_require__(21);
	var ReactElementValidator = __webpack_require__(41);
	var ReactEmptyComponent = __webpack_require__(85);
	var ReactInstanceHandles = __webpack_require__(28);
	var ReactInstanceMap = __webpack_require__(34);
	var ReactMarkupChecksum = __webpack_require__(86);
	var ReactPerf = __webpack_require__(37);
	var ReactReconciler = __webpack_require__(38);
	var ReactUpdateQueue = __webpack_require__(32);
	var ReactUpdates = __webpack_require__(35);

	var emptyObject = __webpack_require__(23);
	var containsNode = __webpack_require__(88);
	var getReactRootElementInContainer = __webpack_require__(91);
	var instantiateReactComponent = __webpack_require__(92);
	var invariant = __webpack_require__(17);
	var setInnerHTML = __webpack_require__(75);
	var shouldUpdateReactComponent = __webpack_require__(95);
	var warning = __webpack_require__(24);

	var SEPARATOR = ReactInstanceHandles.SEPARATOR;

	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var nodeCache = {};

	var ELEMENT_NODE_TYPE = 1;
	var DOC_NODE_TYPE = 9;

	/** Mapping from reactRootID to React component instance. */
	var instancesByReactRootID = {};

	/** Mapping from reactRootID to `container` nodes. */
	var containersByReactRootID = {};

	if ("production" !== process.env.NODE_ENV) {
	  /** __DEV__-only mapping from reactRootID to root elements. */
	  var rootElementsByReactRootID = {};
	}

	// Used to store breadth-first search state in findComponentRoot.
	var findComponentRootReusableArray = [];

	/**
	 * Finds the index of the first character
	 * that's not common between the two given strings.
	 *
	 * @return {number} the index of the character where the strings diverge
	 */
	function firstDifferenceIndex(string1, string2) {
	  var minLen = Math.min(string1.length, string2.length);
	  for (var i = 0; i < minLen; i++) {
	    if (string1.charAt(i) !== string2.charAt(i)) {
	      return i;
	    }
	  }
	  return string1.length === string2.length ? -1 : minLen;
	}

	/**
	 * @param {DOMElement} container DOM element that may contain a React component.
	 * @return {?string} A "reactRoot" ID, if a React component is rendered.
	 */
	function getReactRootID(container) {
	  var rootElement = getReactRootElementInContainer(container);
	  return rootElement && ReactMount.getID(rootElement);
	}

	/**
	 * Accessing node[ATTR_NAME] or calling getAttribute(ATTR_NAME) on a form
	 * element can return its control whose name or ID equals ATTR_NAME. All
	 * DOM nodes support `getAttributeNode` but this can also get called on
	 * other objects so just return '' if we're given something other than a
	 * DOM node (such as window).
	 *
	 * @param {?DOMElement|DOMWindow|DOMDocument|DOMTextNode} node DOM node.
	 * @return {string} ID of the supplied `domNode`.
	 */
	function getID(node) {
	  var id = internalGetID(node);
	  if (id) {
	    if (nodeCache.hasOwnProperty(id)) {
	      var cached = nodeCache[id];
	      if (cached !== node) {
	        ("production" !== process.env.NODE_ENV ? invariant(
	          !isValid(cached, id),
	          'ReactMount: Two valid but unequal nodes with the same `%s`: %s',
	          ATTR_NAME, id
	        ) : invariant(!isValid(cached, id)));

	        nodeCache[id] = node;
	      }
	    } else {
	      nodeCache[id] = node;
	    }
	  }

	  return id;
	}

	function internalGetID(node) {
	  // If node is something like a window, document, or text node, none of
	  // which support attributes or a .getAttribute method, gracefully return
	  // the empty string, as if the attribute were missing.
	  return node && node.getAttribute && node.getAttribute(ATTR_NAME) || '';
	}

	/**
	 * Sets the React-specific ID of the given node.
	 *
	 * @param {DOMElement} node The DOM node whose ID will be set.
	 * @param {string} id The value of the ID attribute.
	 */
	function setID(node, id) {
	  var oldID = internalGetID(node);
	  if (oldID !== id) {
	    delete nodeCache[oldID];
	  }
	  node.setAttribute(ATTR_NAME, id);
	  nodeCache[id] = node;
	}

	/**
	 * Finds the node with the supplied React-generated DOM ID.
	 *
	 * @param {string} id A React-generated DOM ID.
	 * @return {DOMElement} DOM node with the suppled `id`.
	 * @internal
	 */
	function getNode(id) {
	  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {
	    nodeCache[id] = ReactMount.findReactNodeByID(id);
	  }
	  return nodeCache[id];
	}

	/**
	 * Finds the node with the supplied public React instance.
	 *
	 * @param {*} instance A public React instance.
	 * @return {?DOMElement} DOM node with the suppled `id`.
	 * @internal
	 */
	function getNodeFromInstance(instance) {
	  var id = ReactInstanceMap.get(instance)._rootNodeID;
	  if (ReactEmptyComponent.isNullComponentID(id)) {
	    return null;
	  }
	  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {
	    nodeCache[id] = ReactMount.findReactNodeByID(id);
	  }
	  return nodeCache[id];
	}

	/**
	 * A node is "valid" if it is contained by a currently mounted container.
	 *
	 * This means that the node does not have to be contained by a document in
	 * order to be considered valid.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @param {string} id The expected ID of the node.
	 * @return {boolean} Whether the node is contained by a mounted container.
	 */
	function isValid(node, id) {
	  if (node) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      internalGetID(node) === id,
	      'ReactMount: Unexpected modification of `%s`',
	      ATTR_NAME
	    ) : invariant(internalGetID(node) === id));

	    var container = ReactMount.findReactContainerForID(id);
	    if (container && containsNode(container, node)) {
	      return true;
	    }
	  }

	  return false;
	}

	/**
	 * Causes the cache to forget about one React-specific ID.
	 *
	 * @param {string} id The ID to forget.
	 */
	function purgeID(id) {
	  delete nodeCache[id];
	}

	var deepestNodeSoFar = null;
	function findDeepestCachedAncestorImpl(ancestorID) {
	  var ancestor = nodeCache[ancestorID];
	  if (ancestor && isValid(ancestor, ancestorID)) {
	    deepestNodeSoFar = ancestor;
	  } else {
	    // This node isn't populated in the cache, so presumably none of its
	    // descendants are. Break out of the loop.
	    return false;
	  }
	}

	/**
	 * Return the deepest cached node whose ID is a prefix of `targetID`.
	 */
	function findDeepestCachedAncestor(targetID) {
	  deepestNodeSoFar = null;
	  ReactInstanceHandles.traverseAncestors(
	    targetID,
	    findDeepestCachedAncestorImpl
	  );

	  var foundNode = deepestNodeSoFar;
	  deepestNodeSoFar = null;
	  return foundNode;
	}

	/**
	 * Mounts this component and inserts it into the DOM.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {string} rootID DOM ID of the root node.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {ReactReconcileTransaction} transaction
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function mountComponentIntoNode(
	    componentInstance,
	    rootID,
	    container,
	    transaction,
	    shouldReuseMarkup) {
	  var markup = ReactReconciler.mountComponent(
	    componentInstance, rootID, transaction, emptyObject
	  );
	  componentInstance._isTopLevel = true;
	  ReactMount._mountImageIntoNode(markup, container, shouldReuseMarkup);
	}

	/**
	 * Batched mount.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {string} rootID DOM ID of the root node.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function batchedMountComponentIntoNode(
	    componentInstance,
	    rootID,
	    container,
	    shouldReuseMarkup) {
	  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled();
	  transaction.perform(
	    mountComponentIntoNode,
	    null,
	    componentInstance,
	    rootID,
	    container,
	    transaction,
	    shouldReuseMarkup
	  );
	  ReactUpdates.ReactReconcileTransaction.release(transaction);
	}

	/**
	 * Mounting is the process of initializing a React component by creating its
	 * representative DOM elements and inserting them into a supplied `container`.
	 * Any prior content inside `container` is destroyed in the process.
	 *
	 *   ReactMount.render(
	 *     component,
	 *     document.getElementById('container')
	 *   );
	 *
	 *   <div id="container">                   <-- Supplied `container`.
	 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
	 *       // ...                                 component.
	 *     </div>
	 *   </div>
	 *
	 * Inside of `container`, the first element rendered is the "reactRoot".
	 */
	var ReactMount = {
	  /** Exposed for debugging purposes **/
	  _instancesByReactRootID: instancesByReactRootID,

	  /**
	   * This is a hook provided to support rendering React components while
	   * ensuring that the apparent scroll position of its `container` does not
	   * change.
	   *
	   * @param {DOMElement} container The `container` being rendered into.
	   * @param {function} renderCallback This must be called once to do the render.
	   */
	  scrollMonitor: function(container, renderCallback) {
	    renderCallback();
	  },

	  /**
	   * Take a component that's already mounted into the DOM and replace its props
	   * @param {ReactComponent} prevComponent component instance already in the DOM
	   * @param {ReactElement} nextElement component instance to render
	   * @param {DOMElement} container container to render into
	   * @param {?function} callback function triggered on completion
	   */
	  _updateRootComponent: function(
	      prevComponent,
	      nextElement,
	      container,
	      callback) {
	    if ("production" !== process.env.NODE_ENV) {
	      ReactElementValidator.checkAndWarnForMutatedProps(nextElement);
	    }

	    ReactMount.scrollMonitor(container, function() {
	      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement);
	      if (callback) {
	        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
	      }
	    });

	    if ("production" !== process.env.NODE_ENV) {
	      // Record the root element in case it later gets transplanted.
	      rootElementsByReactRootID[getReactRootID(container)] =
	        getReactRootElementInContainer(container);
	    }

	    return prevComponent;
	  },

	  /**
	   * Register a component into the instance map and starts scroll value
	   * monitoring
	   * @param {ReactComponent} nextComponent component instance to render
	   * @param {DOMElement} container container to render into
	   * @return {string} reactRoot ID prefix
	   */
	  _registerComponent: function(nextComponent, container) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      container && (
	        (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)
	      ),
	      '_registerComponent(...): Target container is not a DOM element.'
	    ) : invariant(container && (
	      (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)
	    )));

	    ReactBrowserEventEmitter.ensureScrollValueMonitoring();

	    var reactRootID = ReactMount.registerContainer(container);
	    instancesByReactRootID[reactRootID] = nextComponent;
	    return reactRootID;
	  },

	  /**
	   * Render a new component into the DOM.
	   * @param {ReactElement} nextElement element to render
	   * @param {DOMElement} container container to render into
	   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
	   * @return {ReactComponent} nextComponent
	   */
	  _renderNewRootComponent: function(
	    nextElement,
	    container,
	    shouldReuseMarkup
	  ) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case.
	    ("production" !== process.env.NODE_ENV ? warning(
	      ReactCurrentOwner.current == null,
	      '_renderNewRootComponent(): Render methods should be a pure function ' +
	      'of props and state; triggering nested component updates from ' +
	      'render is not allowed. If necessary, trigger nested updates in ' +
	      'componentDidUpdate.'
	    ) : null);

	    var componentInstance = instantiateReactComponent(nextElement, null);
	    var reactRootID = ReactMount._registerComponent(
	      componentInstance,
	      container
	    );

	    // The initial render is synchronous but any updates that happen during
	    // rendering, in componentWillMount or componentDidMount, will be batched
	    // according to the current batching strategy.

	    ReactUpdates.batchedUpdates(
	      batchedMountComponentIntoNode,
	      componentInstance,
	      reactRootID,
	      container,
	      shouldReuseMarkup
	    );

	    if ("production" !== process.env.NODE_ENV) {
	      // Record the root element in case it later gets transplanted.
	      rootElementsByReactRootID[reactRootID] =
	        getReactRootElementInContainer(container);
	    }

	    return componentInstance;
	  },

	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  render: function(nextElement, container, callback) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      ReactElement.isValidElement(nextElement),
	      'React.render(): Invalid component element.%s',
	      (
	        typeof nextElement === 'string' ?
	          ' Instead of passing an element string, make sure to instantiate ' +
	          'it by passing it to React.createElement.' :
	        typeof nextElement === 'function' ?
	          ' Instead of passing a component class, make sure to instantiate ' +
	          'it by passing it to React.createElement.' :
	        // Check if it quacks like an element
	        nextElement != null && nextElement.props !== undefined ?
	          ' This may be caused by unintentionally loading two independent ' +
	          'copies of React.' :
	          ''
	      )
	    ) : invariant(ReactElement.isValidElement(nextElement)));

	    var prevComponent = instancesByReactRootID[getReactRootID(container)];

	    if (prevComponent) {
	      var prevElement = prevComponent._currentElement;
	      if (shouldUpdateReactComponent(prevElement, nextElement)) {
	        return ReactMount._updateRootComponent(
	          prevComponent,
	          nextElement,
	          container,
	          callback
	        ).getPublicInstance();
	      } else {
	        ReactMount.unmountComponentAtNode(container);
	      }
	    }

	    var reactRootElement = getReactRootElementInContainer(container);
	    var containerHasReactMarkup =
	      reactRootElement && ReactMount.isRenderedByReact(reactRootElement);

	    if ("production" !== process.env.NODE_ENV) {
	      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
	        var rootElementSibling = reactRootElement;
	        while (rootElementSibling) {
	          if (ReactMount.isRenderedByReact(rootElementSibling)) {
	            ("production" !== process.env.NODE_ENV ? warning(
	              false,
	              'render(): Target node has markup rendered by React, but there ' +
	              'are unrelated nodes as well. This is most commonly caused by ' +
	              'white-space inserted around server-rendered markup.'
	            ) : null);
	            break;
	          }

	          rootElementSibling = rootElementSibling.nextSibling;
	        }
	      }
	    }

	    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent;

	    var component = ReactMount._renderNewRootComponent(
	      nextElement,
	      container,
	      shouldReuseMarkup
	    ).getPublicInstance();
	    if (callback) {
	      callback.call(component);
	    }
	    return component;
	  },

	  /**
	   * Constructs a component instance of `constructor` with `initialProps` and
	   * renders it into the supplied `container`.
	   *
	   * @param {function} constructor React component constructor.
	   * @param {?object} props Initial props of the component instance.
	   * @param {DOMElement} container DOM element to render into.
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  constructAndRenderComponent: function(constructor, props, container) {
	    var element = ReactElement.createElement(constructor, props);
	    return ReactMount.render(element, container);
	  },

	  /**
	   * Constructs a component instance of `constructor` with `initialProps` and
	   * renders it into a container node identified by supplied `id`.
	   *
	   * @param {function} componentConstructor React component constructor
	   * @param {?object} props Initial props of the component instance.
	   * @param {string} id ID of the DOM element to render into.
	   * @return {ReactComponent} Component instance rendered in the container node.
	   */
	  constructAndRenderComponentByID: function(constructor, props, id) {
	    var domNode = document.getElementById(id);
	    ("production" !== process.env.NODE_ENV ? invariant(
	      domNode,
	      'Tried to get element with id of "%s" but it is not present on the page.',
	      id
	    ) : invariant(domNode));
	    return ReactMount.constructAndRenderComponent(constructor, props, domNode);
	  },

	  /**
	   * Registers a container node into which React components will be rendered.
	   * This also creates the "reactRoot" ID that will be assigned to the element
	   * rendered within.
	   *
	   * @param {DOMElement} container DOM element to register as a container.
	   * @return {string} The "reactRoot" ID of elements rendered within.
	   */
	  registerContainer: function(container) {
	    var reactRootID = getReactRootID(container);
	    if (reactRootID) {
	      // If one exists, make sure it is a valid "reactRoot" ID.
	      reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID);
	    }
	    if (!reactRootID) {
	      // No valid "reactRoot" ID found, create one.
	      reactRootID = ReactInstanceHandles.createReactRootID();
	    }
	    containersByReactRootID[reactRootID] = container;
	    return reactRootID;
	  },

	  /**
	   * Unmounts and destroys the React component rendered in the `container`.
	   *
	   * @param {DOMElement} container DOM element containing a React component.
	   * @return {boolean} True if a component was found in and unmounted from
	   *                   `container`
	   */
	  unmountComponentAtNode: function(container) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case. (Strictly speaking, unmounting won't cause a
	    // render but we still don't expect to be in a render call here.)
	    ("production" !== process.env.NODE_ENV ? warning(
	      ReactCurrentOwner.current == null,
	      'unmountComponentAtNode(): Render methods should be a pure function of ' +
	      'props and state; triggering nested component updates from render is ' +
	      'not allowed. If necessary, trigger nested updates in ' +
	      'componentDidUpdate.'
	    ) : null);

	    ("production" !== process.env.NODE_ENV ? invariant(
	      container && (
	        (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)
	      ),
	      'unmountComponentAtNode(...): Target container is not a DOM element.'
	    ) : invariant(container && (
	      (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)
	    )));

	    var reactRootID = getReactRootID(container);
	    var component = instancesByReactRootID[reactRootID];
	    if (!component) {
	      return false;
	    }
	    ReactMount.unmountComponentFromNode(component, container);
	    delete instancesByReactRootID[reactRootID];
	    delete containersByReactRootID[reactRootID];
	    if ("production" !== process.env.NODE_ENV) {
	      delete rootElementsByReactRootID[reactRootID];
	    }
	    return true;
	  },

	  /**
	   * Unmounts a component and removes it from the DOM.
	   *
	   * @param {ReactComponent} instance React component instance.
	   * @param {DOMElement} container DOM element to unmount from.
	   * @final
	   * @internal
	   * @see {ReactMount.unmountComponentAtNode}
	   */
	  unmountComponentFromNode: function(instance, container) {
	    ReactReconciler.unmountComponent(instance);

	    if (container.nodeType === DOC_NODE_TYPE) {
	      container = container.documentElement;
	    }

	    // http://jsperf.com/emptying-a-node
	    while (container.lastChild) {
	      container.removeChild(container.lastChild);
	    }
	  },

	  /**
	   * Finds the container DOM element that contains React component to which the
	   * supplied DOM `id` belongs.
	   *
	   * @param {string} id The ID of an element rendered by a React component.
	   * @return {?DOMElement} DOM element that contains the `id`.
	   */
	  findReactContainerForID: function(id) {
	    var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(id);
	    var container = containersByReactRootID[reactRootID];

	    if ("production" !== process.env.NODE_ENV) {
	      var rootElement = rootElementsByReactRootID[reactRootID];
	      if (rootElement && rootElement.parentNode !== container) {
	        ("production" !== process.env.NODE_ENV ? invariant(
	          // Call internalGetID here because getID calls isValid which calls
	          // findReactContainerForID (this function).
	          internalGetID(rootElement) === reactRootID,
	          'ReactMount: Root element ID differed from reactRootID.'
	        ) : invariant(// Call internalGetID here because getID calls isValid which calls
	        // findReactContainerForID (this function).
	        internalGetID(rootElement) === reactRootID));

	        var containerChild = container.firstChild;
	        if (containerChild &&
	            reactRootID === internalGetID(containerChild)) {
	          // If the container has a new child with the same ID as the old
	          // root element, then rootElementsByReactRootID[reactRootID] is
	          // just stale and needs to be updated. The case that deserves a
	          // warning is when the container is empty.
	          rootElementsByReactRootID[reactRootID] = containerChild;
	        } else {
	          ("production" !== process.env.NODE_ENV ? warning(
	            false,
	            'ReactMount: Root element has been removed from its original ' +
	            'container. New container:', rootElement.parentNode
	          ) : null);
	        }
	      }
	    }

	    return container;
	  },

	  /**
	   * Finds an element rendered by React with the supplied ID.
	   *
	   * @param {string} id ID of a DOM node in the React component.
	   * @return {DOMElement} Root DOM node of the React component.
	   */
	  findReactNodeByID: function(id) {
	    var reactRoot = ReactMount.findReactContainerForID(id);
	    return ReactMount.findComponentRoot(reactRoot, id);
	  },

	  /**
	   * True if the supplied `node` is rendered by React.
	   *
	   * @param {*} node DOM Element to check.
	   * @return {boolean} True if the DOM Element appears to be rendered by React.
	   * @internal
	   */
	  isRenderedByReact: function(node) {
	    if (node.nodeType !== 1) {
	      // Not a DOMElement, therefore not a React component
	      return false;
	    }
	    var id = ReactMount.getID(node);
	    return id ? id.charAt(0) === SEPARATOR : false;
	  },

	  /**
	   * Traverses up the ancestors of the supplied node to find a node that is a
	   * DOM representation of a React component.
	   *
	   * @param {*} node
	   * @return {?DOMEventTarget}
	   * @internal
	   */
	  getFirstReactDOM: function(node) {
	    var current = node;
	    while (current && current.parentNode !== current) {
	      if (ReactMount.isRenderedByReact(current)) {
	        return current;
	      }
	      current = current.parentNode;
	    }
	    return null;
	  },

	  /**
	   * Finds a node with the supplied `targetID` inside of the supplied
	   * `ancestorNode`.  Exploits the ID naming scheme to perform the search
	   * quickly.
	   *
	   * @param {DOMEventTarget} ancestorNode Search from this root.
	   * @pararm {string} targetID ID of the DOM representation of the component.
	   * @return {DOMEventTarget} DOM node with the supplied `targetID`.
	   * @internal
	   */
	  findComponentRoot: function(ancestorNode, targetID) {
	    var firstChildren = findComponentRootReusableArray;
	    var childIndex = 0;

	    var deepestAncestor = findDeepestCachedAncestor(targetID) || ancestorNode;

	    firstChildren[0] = deepestAncestor.firstChild;
	    firstChildren.length = 1;

	    while (childIndex < firstChildren.length) {
	      var child = firstChildren[childIndex++];
	      var targetChild;

	      while (child) {
	        var childID = ReactMount.getID(child);
	        if (childID) {
	          // Even if we find the node we're looking for, we finish looping
	          // through its siblings to ensure they're cached so that we don't have
	          // to revisit this node again. Otherwise, we make n^2 calls to getID
	          // when visiting the many children of a single node in order.

	          if (targetID === childID) {
	            targetChild = child;
	          } else if (ReactInstanceHandles.isAncestorIDOf(childID, targetID)) {
	            // If we find a child whose ID is an ancestor of the given ID,
	            // then we can be sure that we only want to search the subtree
	            // rooted at this child, so we can throw out the rest of the
	            // search state.
	            firstChildren.length = childIndex = 0;
	            firstChildren.push(child.firstChild);
	          }

	        } else {
	          // If this child had no ID, then there's a chance that it was
	          // injected automatically by the browser, as when a `<table>`
	          // element sprouts an extra `<tbody>` child as a side effect of
	          // `.innerHTML` parsing. Optimistically continue down this
	          // branch, but not before examining the other siblings.
	          firstChildren.push(child.firstChild);
	        }

	        child = child.nextSibling;
	      }

	      if (targetChild) {
	        // Emptying firstChildren/findComponentRootReusableArray is
	        // not necessary for correctness, but it helps the GC reclaim
	        // any nodes that were left at the end of the search.
	        firstChildren.length = 0;

	        return targetChild;
	      }
	    }

	    firstChildren.length = 0;

	    ("production" !== process.env.NODE_ENV ? invariant(
	      false,
	      'findComponentRoot(..., %s): Unable to find element. This probably ' +
	      'means the DOM was unexpectedly mutated (e.g., by the browser), ' +
	      'usually due to forgetting a <tbody> when using tables, nesting tags ' +
	      'like <form>, <p>, or <a>, or using non-SVG elements in an <svg> ' +
	      'parent. ' +
	      'Try inspecting the child nodes of the element with React ID `%s`.',
	      targetID,
	      ReactMount.getID(ancestorNode)
	    ) : invariant(false));
	  },

	  _mountImageIntoNode: function(markup, container, shouldReuseMarkup) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      container && (
	        (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)
	      ),
	      'mountComponentIntoNode(...): Target container is not valid.'
	    ) : invariant(container && (
	      (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)
	    )));

	    if (shouldReuseMarkup) {
	      var rootElement = getReactRootElementInContainer(container);
	      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
	        return;
	      } else {
	        var checksum = rootElement.getAttribute(
	          ReactMarkupChecksum.CHECKSUM_ATTR_NAME
	        );
	        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

	        var rootMarkup = rootElement.outerHTML;
	        rootElement.setAttribute(
	          ReactMarkupChecksum.CHECKSUM_ATTR_NAME,
	          checksum
	        );

	        var diffIndex = firstDifferenceIndex(markup, rootMarkup);
	        var difference = ' (client) ' +
	          markup.substring(diffIndex - 20, diffIndex + 20) +
	          '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);

	        ("production" !== process.env.NODE_ENV ? invariant(
	          container.nodeType !== DOC_NODE_TYPE,
	          'You\'re trying to render a component to the document using ' +
	          'server rendering but the checksum was invalid. This usually ' +
	          'means you rendered a different component type or props on ' +
	          'the client from the one on the server, or your render() ' +
	          'methods are impure. React cannot handle this case due to ' +
	          'cross-browser quirks by rendering at the document root. You ' +
	          'should look for environment dependent code in your components ' +
	          'and ensure the props are the same client and server side:\n%s',
	          difference
	        ) : invariant(container.nodeType !== DOC_NODE_TYPE));

	        if ("production" !== process.env.NODE_ENV) {
	          ("production" !== process.env.NODE_ENV ? warning(
	            false,
	            'React attempted to reuse markup in a container but the ' +
	            'checksum was invalid. This generally means that you are ' +
	            'using server rendering and the markup generated on the ' +
	            'server was not what the client was expecting. React injected ' +
	            'new markup to compensate which works but you have lost many ' +
	            'of the benefits of server rendering. Instead, figure out ' +
	            'why the markup being generated is different on the client ' +
	            'or server:\n%s',
	            difference
	          ) : null);
	        }
	      }
	    }

	    ("production" !== process.env.NODE_ENV ? invariant(
	      container.nodeType !== DOC_NODE_TYPE,
	      'You\'re trying to render a component to the document but ' +
	        'you didn\'t use server rendering. We can\'t do this ' +
	        'without using server rendering due to cross-browser quirks. ' +
	        'See React.renderToString() for server rendering.'
	    ) : invariant(container.nodeType !== DOC_NODE_TYPE));

	    setInnerHTML(container, markup);
	  },

	  /**
	   * React ID utilities.
	   */

	  getReactRootID: getReactRootID,

	  getID: getID,

	  setID: setID,

	  getNode: getNode,

	  getNodeFromInstance: getNodeFromInstance,

	  purgeID: purgeID
	};

	ReactPerf.measureMethods(ReactMount, 'ReactMount', {
	  _renderNewRootComponent: '_renderNewRootComponent',
	  _mountImageIntoNode: '_mountImageIntoNode'
	});

	module.exports = ReactMount;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 77 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactBrowserEventEmitter
	 * @typechecks static-only
	 */

	'use strict';

	var EventConstants = __webpack_require__(15);
	var EventPluginHub = __webpack_require__(78);
	var EventPluginRegistry = __webpack_require__(79);
	var ReactEventEmitterMixin = __webpack_require__(82);
	var ViewportMetrics = __webpack_require__(83);

	var assign = __webpack_require__(10);
	var isEventSupported = __webpack_require__(84);

	/**
	 * Summary of `ReactBrowserEventEmitter` event handling:
	 *
	 *  - Top-level delegation is used to trap most native browser events. This
	 *    may only occur in the main thread and is the responsibility of
	 *    ReactEventListener, which is injected and can therefore support pluggable
	 *    event sources. This is the only work that occurs in the main thread.
	 *
	 *  - We normalize and de-duplicate events to account for browser quirks. This
	 *    may be done in the worker thread.
	 *
	 *  - Forward these native events (with the associated top-level type used to
	 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
	 *    to extract any synthetic events.
	 *
	 *  - The `EventPluginHub` will then process each event by annotating them with
	 *    "dispatches", a sequence of listeners and IDs that care about that event.
	 *
	 *  - The `EventPluginHub` then dispatches the events.
	 *
	 * Overview of React and the event system:
	 *
	 * +------------+    .
	 * |    DOM     |    .
	 * +------------+    .
	 *       |           .
	 *       v           .
	 * +------------+    .
	 * | ReactEvent |    .
	 * |  Listener  |    .
	 * +------------+    .                         +-----------+
	 *       |           .               +--------+|SimpleEvent|
	 *       |           .               |         |Plugin     |
	 * +-----|------+    .               v         +-----------+
	 * |     |      |    .    +--------------+                    +------------+
	 * |     +-----------.--->|EventPluginHub|                    |    Event   |
	 * |            |    .    |              |     +-----------+  | Propagators|
	 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
	 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
	 * |            |    .    |              |     +-----------+  |  utilities |
	 * |     +-----------.--->|              |                    +------------+
	 * |     |      |    .    +--------------+
	 * +-----|------+    .                ^        +-----------+
	 *       |           .                |        |Enter/Leave|
	 *       +           .                +-------+|Plugin     |
	 * +-------------+   .                         +-----------+
	 * | application |   .
	 * |-------------|   .
	 * |             |   .
	 * |             |   .
	 * +-------------+   .
	 *                   .
	 *    React Core     .  General Purpose Event Plugin System
	 */

	var alreadyListeningTo = {};
	var isMonitoringScrollValue = false;
	var reactTopListenersCounter = 0;

	// For events like 'submit' which don't consistently bubble (which we trap at a
	// lower node than `document`), binding at `document` would cause duplicate
	// events so we don't include them here
	var topEventMapping = {
	  topBlur: 'blur',
	  topChange: 'change',
	  topClick: 'click',
	  topCompositionEnd: 'compositionend',
	  topCompositionStart: 'compositionstart',
	  topCompositionUpdate: 'compositionupdate',
	  topContextMenu: 'contextmenu',
	  topCopy: 'copy',
	  topCut: 'cut',
	  topDoubleClick: 'dblclick',
	  topDrag: 'drag',
	  topDragEnd: 'dragend',
	  topDragEnter: 'dragenter',
	  topDragExit: 'dragexit',
	  topDragLeave: 'dragleave',
	  topDragOver: 'dragover',
	  topDragStart: 'dragstart',
	  topDrop: 'drop',
	  topFocus: 'focus',
	  topInput: 'input',
	  topKeyDown: 'keydown',
	  topKeyPress: 'keypress',
	  topKeyUp: 'keyup',
	  topMouseDown: 'mousedown',
	  topMouseMove: 'mousemove',
	  topMouseOut: 'mouseout',
	  topMouseOver: 'mouseover',
	  topMouseUp: 'mouseup',
	  topPaste: 'paste',
	  topScroll: 'scroll',
	  topSelectionChange: 'selectionchange',
	  topTextInput: 'textInput',
	  topTouchCancel: 'touchcancel',
	  topTouchEnd: 'touchend',
	  topTouchMove: 'touchmove',
	  topTouchStart: 'touchstart',
	  topWheel: 'wheel'
	};

	/**
	 * To ensure no conflicts with other potential React instances on the page
	 */
	var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);

	function getListeningForDocument(mountAt) {
	  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
	  // directly.
	  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
	    mountAt[topListenersIDKey] = reactTopListenersCounter++;
	    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
	  }
	  return alreadyListeningTo[mountAt[topListenersIDKey]];
	}

	/**
	 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
	 * example:
	 *
	 *   ReactBrowserEventEmitter.putListener('myID', 'onClick', myFunction);
	 *
	 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
	 *
	 * @internal
	 */
	var ReactBrowserEventEmitter = assign({}, ReactEventEmitterMixin, {

	  /**
	   * Injectable event backend
	   */
	  ReactEventListener: null,

	  injection: {
	    /**
	     * @param {object} ReactEventListener
	     */
	    injectReactEventListener: function(ReactEventListener) {
	      ReactEventListener.setHandleTopLevel(
	        ReactBrowserEventEmitter.handleTopLevel
	      );
	      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
	    }
	  },

	  /**
	   * Sets whether or not any created callbacks should be enabled.
	   *
	   * @param {boolean} enabled True if callbacks should be enabled.
	   */
	  setEnabled: function(enabled) {
	    if (ReactBrowserEventEmitter.ReactEventListener) {
	      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
	    }
	  },

	  /**
	   * @return {boolean} True if callbacks are enabled.
	   */
	  isEnabled: function() {
	    return !!(
	      (ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled())
	    );
	  },

	  /**
	   * We listen for bubbled touch events on the document object.
	   *
	   * Firefox v8.01 (and possibly others) exhibited strange behavior when
	   * mounting `onmousemove` events at some node that was not the document
	   * element. The symptoms were that if your mouse is not moving over something
	   * contained within that mount point (for example on the background) the
	   * top-level listeners for `onmousemove` won't be called. However, if you
	   * register the `mousemove` on the document object, then it will of course
	   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
	   * top-level listeners to the document object only, at least for these
	   * movement types of events and possibly all events.
	   *
	   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	   *
	   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
	   * they bubble to document.
	   *
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {object} contentDocumentHandle Document which owns the container
	   */
	  listenTo: function(registrationName, contentDocumentHandle) {
	    var mountAt = contentDocumentHandle;
	    var isListening = getListeningForDocument(mountAt);
	    var dependencies = EventPluginRegistry.
	      registrationNameDependencies[registrationName];

	    var topLevelTypes = EventConstants.topLevelTypes;
	    for (var i = 0, l = dependencies.length; i < l; i++) {
	      var dependency = dependencies[i];
	      if (!(
	            (isListening.hasOwnProperty(dependency) && isListening[dependency])
	          )) {
	        if (dependency === topLevelTypes.topWheel) {
	          if (isEventSupported('wheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
	              topLevelTypes.topWheel,
	              'wheel',
	              mountAt
	            );
	          } else if (isEventSupported('mousewheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
	              topLevelTypes.topWheel,
	              'mousewheel',
	              mountAt
	            );
	          } else {
	            // Firefox needs to capture a different mouse scroll event.
	            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
	              topLevelTypes.topWheel,
	              'DOMMouseScroll',
	              mountAt
	            );
	          }
	        } else if (dependency === topLevelTypes.topScroll) {

	          if (isEventSupported('scroll', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
	              topLevelTypes.topScroll,
	              'scroll',
	              mountAt
	            );
	          } else {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
	              topLevelTypes.topScroll,
	              'scroll',
	              ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE
	            );
	          }
	        } else if (dependency === topLevelTypes.topFocus ||
	            dependency === topLevelTypes.topBlur) {

	          if (isEventSupported('focus', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
	              topLevelTypes.topFocus,
	              'focus',
	              mountAt
	            );
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
	              topLevelTypes.topBlur,
	              'blur',
	              mountAt
	            );
	          } else if (isEventSupported('focusin')) {
	            // IE has `focusin` and `focusout` events which bubble.
	            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
	              topLevelTypes.topFocus,
	              'focusin',
	              mountAt
	            );
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
	              topLevelTypes.topBlur,
	              'focusout',
	              mountAt
	            );
	          }

	          // to make sure blur and focus event listeners are only attached once
	          isListening[topLevelTypes.topBlur] = true;
	          isListening[topLevelTypes.topFocus] = true;
	        } else if (topEventMapping.hasOwnProperty(dependency)) {
	          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
	            dependency,
	            topEventMapping[dependency],
	            mountAt
	          );
	        }

	        isListening[dependency] = true;
	      }
	    }
	  },

	  trapBubbledEvent: function(topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
	      topLevelType,
	      handlerBaseName,
	      handle
	    );
	  },

	  trapCapturedEvent: function(topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
	      topLevelType,
	      handlerBaseName,
	      handle
	    );
	  },

	  /**
	   * Listens to window scroll and resize events. We cache scroll values so that
	   * application code can access them without triggering reflows.
	   *
	   * NOTE: Scroll events do not bubble.
	   *
	   * @see http://www.quirksmode.org/dom/events/scroll.html
	   */
	  ensureScrollValueMonitoring: function() {
	    if (!isMonitoringScrollValue) {
	      var refresh = ViewportMetrics.refreshScrollValues;
	      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
	      isMonitoringScrollValue = true;
	    }
	  },

	  eventNameDispatchConfigs: EventPluginHub.eventNameDispatchConfigs,

	  registrationNameModules: EventPluginHub.registrationNameModules,

	  putListener: EventPluginHub.putListener,

	  getListener: EventPluginHub.getListener,

	  deleteListener: EventPluginHub.deleteListener,

	  deleteAllListeners: EventPluginHub.deleteAllListeners

	});

	module.exports = ReactBrowserEventEmitter;


/***/ },
/* 78 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginHub
	 */

	'use strict';

	var EventPluginRegistry = __webpack_require__(79);
	var EventPluginUtils = __webpack_require__(14);

	var accumulateInto = __webpack_require__(80);
	var forEachAccumulated = __webpack_require__(81);
	var invariant = __webpack_require__(17);

	/**
	 * Internal store for event listeners
	 */
	var listenerBank = {};

	/**
	 * Internal queue of events that have accumulated their dispatches and are
	 * waiting to have their dispatches executed.
	 */
	var eventQueue = null;

	/**
	 * Dispatches an event and releases it back into the pool, unless persistent.
	 *
	 * @param {?object} event Synthetic event to be dispatched.
	 * @private
	 */
	var executeDispatchesAndRelease = function(event) {
	  if (event) {
	    var executeDispatch = EventPluginUtils.executeDispatch;
	    // Plugins can provide custom behavior when dispatching events.
	    var PluginModule = EventPluginRegistry.getPluginModuleForEvent(event);
	    if (PluginModule && PluginModule.executeDispatch) {
	      executeDispatch = PluginModule.executeDispatch;
	    }
	    EventPluginUtils.executeDispatchesInOrder(event, executeDispatch);

	    if (!event.isPersistent()) {
	      event.constructor.release(event);
	    }
	  }
	};

	/**
	 * - `InstanceHandle`: [required] Module that performs logical traversals of DOM
	 *   hierarchy given ids of the logical DOM elements involved.
	 */
	var InstanceHandle = null;

	function validateInstanceHandle() {
	  var valid =
	    InstanceHandle &&
	    InstanceHandle.traverseTwoPhase &&
	    InstanceHandle.traverseEnterLeave;
	  ("production" !== process.env.NODE_ENV ? invariant(
	    valid,
	    'InstanceHandle not injected before use!'
	  ) : invariant(valid));
	}

	/**
	 * This is a unified interface for event plugins to be installed and configured.
	 *
	 * Event plugins can implement the following properties:
	 *
	 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
	 *     Required. When a top-level event is fired, this method is expected to
	 *     extract synthetic events that will in turn be queued and dispatched.
	 *
	 *   `eventTypes` {object}
	 *     Optional, plugins that fire events must publish a mapping of registration
	 *     names that are used to register listeners. Values of this mapping must
	 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
	 *
	 *   `executeDispatch` {function(object, function, string)}
	 *     Optional, allows plugins to override how an event gets dispatched. By
	 *     default, the listener is simply invoked.
	 *
	 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
	 *
	 * @public
	 */
	var EventPluginHub = {

	  /**
	   * Methods for injecting dependencies.
	   */
	  injection: {

	    /**
	     * @param {object} InjectedMount
	     * @public
	     */
	    injectMount: EventPluginUtils.injection.injectMount,

	    /**
	     * @param {object} InjectedInstanceHandle
	     * @public
	     */
	    injectInstanceHandle: function(InjectedInstanceHandle) {
	      InstanceHandle = InjectedInstanceHandle;
	      if ("production" !== process.env.NODE_ENV) {
	        validateInstanceHandle();
	      }
	    },

	    getInstanceHandle: function() {
	      if ("production" !== process.env.NODE_ENV) {
	        validateInstanceHandle();
	      }
	      return InstanceHandle;
	    },

	    /**
	     * @param {array} InjectedEventPluginOrder
	     * @public
	     */
	    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,

	    /**
	     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	     */
	    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName

	  },

	  eventNameDispatchConfigs: EventPluginRegistry.eventNameDispatchConfigs,

	  registrationNameModules: EventPluginRegistry.registrationNameModules,

	  /**
	   * Stores `listener` at `listenerBank[registrationName][id]`. Is idempotent.
	   *
	   * @param {string} id ID of the DOM element.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {?function} listener The callback to store.
	   */
	  putListener: function(id, registrationName, listener) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      !listener || typeof listener === 'function',
	      'Expected %s listener to be a function, instead got type %s',
	      registrationName, typeof listener
	    ) : invariant(!listener || typeof listener === 'function'));

	    var bankForRegistrationName =
	      listenerBank[registrationName] || (listenerBank[registrationName] = {});
	    bankForRegistrationName[id] = listener;
	  },

	  /**
	   * @param {string} id ID of the DOM element.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @return {?function} The stored callback.
	   */
	  getListener: function(id, registrationName) {
	    var bankForRegistrationName = listenerBank[registrationName];
	    return bankForRegistrationName && bankForRegistrationName[id];
	  },

	  /**
	   * Deletes a listener from the registration bank.
	   *
	   * @param {string} id ID of the DOM element.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   */
	  deleteListener: function(id, registrationName) {
	    var bankForRegistrationName = listenerBank[registrationName];
	    if (bankForRegistrationName) {
	      delete bankForRegistrationName[id];
	    }
	  },

	  /**
	   * Deletes all listeners for the DOM element with the supplied ID.
	   *
	   * @param {string} id ID of the DOM element.
	   */
	  deleteAllListeners: function(id) {
	    for (var registrationName in listenerBank) {
	      delete listenerBank[registrationName][id];
	    }
	  },

	  /**
	   * Allows registered plugins an opportunity to extract events from top-level
	   * native browser events.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @internal
	   */
	  extractEvents: function(
	      topLevelType,
	      topLevelTarget,
	      topLevelTargetID,
	      nativeEvent) {
	    var events;
	    var plugins = EventPluginRegistry.plugins;
	    for (var i = 0, l = plugins.length; i < l; i++) {
	      // Not every plugin in the ordering may be loaded at runtime.
	      var possiblePlugin = plugins[i];
	      if (possiblePlugin) {
	        var extractedEvents = possiblePlugin.extractEvents(
	          topLevelType,
	          topLevelTarget,
	          topLevelTargetID,
	          nativeEvent
	        );
	        if (extractedEvents) {
	          events = accumulateInto(events, extractedEvents);
	        }
	      }
	    }
	    return events;
	  },

	  /**
	   * Enqueues a synthetic event that should be dispatched when
	   * `processEventQueue` is invoked.
	   *
	   * @param {*} events An accumulation of synthetic events.
	   * @internal
	   */
	  enqueueEvents: function(events) {
	    if (events) {
	      eventQueue = accumulateInto(eventQueue, events);
	    }
	  },

	  /**
	   * Dispatches all synthetic events on the event queue.
	   *
	   * @internal
	   */
	  processEventQueue: function() {
	    // Set `eventQueue` to null before processing it so that we can tell if more
	    // events get enqueued while processing.
	    var processingEventQueue = eventQueue;
	    eventQueue = null;
	    forEachAccumulated(processingEventQueue, executeDispatchesAndRelease);
	    ("production" !== process.env.NODE_ENV ? invariant(
	      !eventQueue,
	      'processEventQueue(): Additional events were enqueued while processing ' +
	      'an event queue. Support for this has not yet been implemented.'
	    ) : invariant(!eventQueue));
	  },

	  /**
	   * These are needed for tests only. Do not use!
	   */
	  __purge: function() {
	    listenerBank = {};
	  },

	  __getListenerBank: function() {
	    return listenerBank;
	  }

	};

	module.exports = EventPluginHub;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 79 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginRegistry
	 * @typechecks static-only
	 */

	'use strict';

	var invariant = __webpack_require__(17);

	/**
	 * Injectable ordering of event plugins.
	 */
	var EventPluginOrder = null;

	/**
	 * Injectable mapping from names to event plugin modules.
	 */
	var namesToPlugins = {};

	/**
	 * Recomputes the plugin list using the injected plugins and plugin ordering.
	 *
	 * @private
	 */
	function recomputePluginOrdering() {
	  if (!EventPluginOrder) {
	    // Wait until an `EventPluginOrder` is injected.
	    return;
	  }
	  for (var pluginName in namesToPlugins) {
	    var PluginModule = namesToPlugins[pluginName];
	    var pluginIndex = EventPluginOrder.indexOf(pluginName);
	    ("production" !== process.env.NODE_ENV ? invariant(
	      pluginIndex > -1,
	      'EventPluginRegistry: Cannot inject event plugins that do not exist in ' +
	      'the plugin ordering, `%s`.',
	      pluginName
	    ) : invariant(pluginIndex > -1));
	    if (EventPluginRegistry.plugins[pluginIndex]) {
	      continue;
	    }
	    ("production" !== process.env.NODE_ENV ? invariant(
	      PluginModule.extractEvents,
	      'EventPluginRegistry: Event plugins must implement an `extractEvents` ' +
	      'method, but `%s` does not.',
	      pluginName
	    ) : invariant(PluginModule.extractEvents));
	    EventPluginRegistry.plugins[pluginIndex] = PluginModule;
	    var publishedEvents = PluginModule.eventTypes;
	    for (var eventName in publishedEvents) {
	      ("production" !== process.env.NODE_ENV ? invariant(
	        publishEventForPlugin(
	          publishedEvents[eventName],
	          PluginModule,
	          eventName
	        ),
	        'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.',
	        eventName,
	        pluginName
	      ) : invariant(publishEventForPlugin(
	        publishedEvents[eventName],
	        PluginModule,
	        eventName
	      )));
	    }
	  }
	}

	/**
	 * Publishes an event so that it can be dispatched by the supplied plugin.
	 *
	 * @param {object} dispatchConfig Dispatch configuration for the event.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @return {boolean} True if the event was successfully published.
	 * @private
	 */
	function publishEventForPlugin(dispatchConfig, PluginModule, eventName) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    !EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName),
	    'EventPluginHub: More than one plugin attempted to publish the same ' +
	    'event name, `%s`.',
	    eventName
	  ) : invariant(!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName)));
	  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

	  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
	  if (phasedRegistrationNames) {
	    for (var phaseName in phasedRegistrationNames) {
	      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
	        var phasedRegistrationName = phasedRegistrationNames[phaseName];
	        publishRegistrationName(
	          phasedRegistrationName,
	          PluginModule,
	          eventName
	        );
	      }
	    }
	    return true;
	  } else if (dispatchConfig.registrationName) {
	    publishRegistrationName(
	      dispatchConfig.registrationName,
	      PluginModule,
	      eventName
	    );
	    return true;
	  }
	  return false;
	}

	/**
	 * Publishes a registration name that is used to identify dispatched events and
	 * can be used with `EventPluginHub.putListener` to register listeners.
	 *
	 * @param {string} registrationName Registration name to add.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @private
	 */
	function publishRegistrationName(registrationName, PluginModule, eventName) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    !EventPluginRegistry.registrationNameModules[registrationName],
	    'EventPluginHub: More than one plugin attempted to publish the same ' +
	    'registration name, `%s`.',
	    registrationName
	  ) : invariant(!EventPluginRegistry.registrationNameModules[registrationName]));
	  EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;
	  EventPluginRegistry.registrationNameDependencies[registrationName] =
	    PluginModule.eventTypes[eventName].dependencies;
	}

	/**
	 * Registers plugins so that they can extract and dispatch events.
	 *
	 * @see {EventPluginHub}
	 */
	var EventPluginRegistry = {

	  /**
	   * Ordered list of injected plugins.
	   */
	  plugins: [],

	  /**
	   * Mapping from event name to dispatch config
	   */
	  eventNameDispatchConfigs: {},

	  /**
	   * Mapping from registration name to plugin module
	   */
	  registrationNameModules: {},

	  /**
	   * Mapping from registration name to event name
	   */
	  registrationNameDependencies: {},

	  /**
	   * Injects an ordering of plugins (by plugin name). This allows the ordering
	   * to be decoupled from injection of the actual plugins so that ordering is
	   * always deterministic regardless of packaging, on-the-fly injection, etc.
	   *
	   * @param {array} InjectedEventPluginOrder
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginOrder}
	   */
	  injectEventPluginOrder: function(InjectedEventPluginOrder) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      !EventPluginOrder,
	      'EventPluginRegistry: Cannot inject event plugin ordering more than ' +
	      'once. You are likely trying to load more than one copy of React.'
	    ) : invariant(!EventPluginOrder));
	    // Clone the ordering so it cannot be dynamically mutated.
	    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
	    recomputePluginOrdering();
	  },

	  /**
	   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
	   * in the ordering injected by `injectEventPluginOrder`.
	   *
	   * Plugins can be injected as part of page initialization or on-the-fly.
	   *
	   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginsByName}
	   */
	  injectEventPluginsByName: function(injectedNamesToPlugins) {
	    var isOrderingDirty = false;
	    for (var pluginName in injectedNamesToPlugins) {
	      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
	        continue;
	      }
	      var PluginModule = injectedNamesToPlugins[pluginName];
	      if (!namesToPlugins.hasOwnProperty(pluginName) ||
	          namesToPlugins[pluginName] !== PluginModule) {
	        ("production" !== process.env.NODE_ENV ? invariant(
	          !namesToPlugins[pluginName],
	          'EventPluginRegistry: Cannot inject two different event plugins ' +
	          'using the same name, `%s`.',
	          pluginName
	        ) : invariant(!namesToPlugins[pluginName]));
	        namesToPlugins[pluginName] = PluginModule;
	        isOrderingDirty = true;
	      }
	    }
	    if (isOrderingDirty) {
	      recomputePluginOrdering();
	    }
	  },

	  /**
	   * Looks up the plugin for the supplied event.
	   *
	   * @param {object} event A synthetic event.
	   * @return {?object} The plugin that created the supplied event.
	   * @internal
	   */
	  getPluginModuleForEvent: function(event) {
	    var dispatchConfig = event.dispatchConfig;
	    if (dispatchConfig.registrationName) {
	      return EventPluginRegistry.registrationNameModules[
	        dispatchConfig.registrationName
	      ] || null;
	    }
	    for (var phase in dispatchConfig.phasedRegistrationNames) {
	      if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {
	        continue;
	      }
	      var PluginModule = EventPluginRegistry.registrationNameModules[
	        dispatchConfig.phasedRegistrationNames[phase]
	      ];
	      if (PluginModule) {
	        return PluginModule;
	      }
	    }
	    return null;
	  },

	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _resetEventPlugins: function() {
	    EventPluginOrder = null;
	    for (var pluginName in namesToPlugins) {
	      if (namesToPlugins.hasOwnProperty(pluginName)) {
	        delete namesToPlugins[pluginName];
	      }
	    }
	    EventPluginRegistry.plugins.length = 0;

	    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
	    for (var eventName in eventNameDispatchConfigs) {
	      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
	        delete eventNameDispatchConfigs[eventName];
	      }
	    }

	    var registrationNameModules = EventPluginRegistry.registrationNameModules;
	    for (var registrationName in registrationNameModules) {
	      if (registrationNameModules.hasOwnProperty(registrationName)) {
	        delete registrationNameModules[registrationName];
	      }
	    }
	  }

	};

	module.exports = EventPluginRegistry;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 80 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule accumulateInto
	 */

	'use strict';

	var invariant = __webpack_require__(17);

	/**
	 *
	 * Accumulates items that must not be null or undefined into the first one. This
	 * is used to conserve memory by avoiding array allocations, and thus sacrifices
	 * API cleanness. Since `current` can be null before being passed in and not
	 * null after this function, make sure to assign it back to `current`:
	 *
	 * `a = accumulateInto(a, b);`
	 *
	 * This API should be sparingly used. Try `accumulate` for something cleaner.
	 *
	 * @return {*|array<*>} An accumulation of items.
	 */

	function accumulateInto(current, next) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    next != null,
	    'accumulateInto(...): Accumulated items must not be null or undefined.'
	  ) : invariant(next != null));
	  if (current == null) {
	    return next;
	  }

	  // Both are not empty. Warning: Never call x.concat(y) when you are not
	  // certain that x is an Array (x could be a string with concat method).
	  var currentIsArray = Array.isArray(current);
	  var nextIsArray = Array.isArray(next);

	  if (currentIsArray && nextIsArray) {
	    current.push.apply(current, next);
	    return current;
	  }

	  if (currentIsArray) {
	    current.push(next);
	    return current;
	  }

	  if (nextIsArray) {
	    // A bit too dangerous to mutate `next`.
	    return [current].concat(next);
	  }

	  return [current, next];
	}

	module.exports = accumulateInto;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 81 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule forEachAccumulated
	 */

	'use strict';

	/**
	 * @param {array} an "accumulation" of items which is either an Array or
	 * a single item. Useful when paired with the `accumulate` module. This is a
	 * simple utility that allows us to reason about a collection of items, but
	 * handling the case when there is exactly one item (and we do not need to
	 * allocate an array).
	 */
	var forEachAccumulated = function(arr, cb, scope) {
	  if (Array.isArray(arr)) {
	    arr.forEach(cb, scope);
	  } else if (arr) {
	    cb.call(scope, arr);
	  }
	};

	module.exports = forEachAccumulated;


/***/ },
/* 82 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEventEmitterMixin
	 */

	'use strict';

	var EventPluginHub = __webpack_require__(78);

	function runEventQueueInBatch(events) {
	  EventPluginHub.enqueueEvents(events);
	  EventPluginHub.processEventQueue();
	}

	var ReactEventEmitterMixin = {

	  /**
	   * Streams a fired top-level event to `EventPluginHub` where plugins have the
	   * opportunity to create `ReactEvent`s to be dispatched.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {object} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native environment event.
	   */
	  handleTopLevel: function(
	      topLevelType,
	      topLevelTarget,
	      topLevelTargetID,
	      nativeEvent) {
	    var events = EventPluginHub.extractEvents(
	      topLevelType,
	      topLevelTarget,
	      topLevelTargetID,
	      nativeEvent
	    );

	    runEventQueueInBatch(events);
	  }
	};

	module.exports = ReactEventEmitterMixin;


/***/ },
/* 83 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ViewportMetrics
	 */

	'use strict';

	var ViewportMetrics = {

	  currentScrollLeft: 0,

	  currentScrollTop: 0,

	  refreshScrollValues: function(scrollPosition) {
	    ViewportMetrics.currentScrollLeft = scrollPosition.x;
	    ViewportMetrics.currentScrollTop = scrollPosition.y;
	  }

	};

	module.exports = ViewportMetrics;


/***/ },
/* 84 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isEventSupported
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(60);

	var useHasFeature;
	if (ExecutionEnvironment.canUseDOM) {
	  useHasFeature =
	    document.implementation &&
	    document.implementation.hasFeature &&
	    // always returns true in newer browsers as per the standard.
	    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
	    document.implementation.hasFeature('', '') !== true;
	}

	/**
	 * Checks if an event is supported in the current execution environment.
	 *
	 * NOTE: This will not work correctly for non-generic events such as `change`,
	 * `reset`, `load`, `error`, and `select`.
	 *
	 * Borrows from Modernizr.
	 *
	 * @param {string} eventNameSuffix Event name, e.g. "click".
	 * @param {?boolean} capture Check if the capture phase is supported.
	 * @return {boolean} True if the event is supported.
	 * @internal
	 * @license Modernizr 3.0.0pre (Custom Build) | MIT
	 */
	function isEventSupported(eventNameSuffix, capture) {
	  if (!ExecutionEnvironment.canUseDOM ||
	      capture && !('addEventListener' in document)) {
	    return false;
	  }

	  var eventName = 'on' + eventNameSuffix;
	  var isSupported = eventName in document;

	  if (!isSupported) {
	    var element = document.createElement('div');
	    element.setAttribute(eventName, 'return;');
	    isSupported = typeof element[eventName] === 'function';
	  }

	  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
	    // This is the only way to test support for the `wheel` event in IE9+.
	    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
	  }

	  return isSupported;
	}

	module.exports = isEventSupported;


/***/ },
/* 85 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEmptyComponent
	 */

	'use strict';

	var ReactElement = __webpack_require__(21);
	var ReactInstanceMap = __webpack_require__(34);

	var invariant = __webpack_require__(17);

	var component;
	// This registry keeps track of the React IDs of the components that rendered to
	// `null` (in reality a placeholder such as `noscript`)
	var nullComponentIDsRegistry = {};

	var ReactEmptyComponentInjection = {
	  injectEmptyComponent: function(emptyComponent) {
	    component = ReactElement.createFactory(emptyComponent);
	  }
	};

	var ReactEmptyComponentType = function() {};
	ReactEmptyComponentType.prototype.componentDidMount = function() {
	  var internalInstance = ReactInstanceMap.get(this);
	  // TODO: Make sure we run these methods in the correct order, we shouldn't
	  // need this check. We're going to assume if we're here it means we ran
	  // componentWillUnmount already so there is no internal instance (it gets
	  // removed as part of the unmounting process).
	  if (!internalInstance) {
	    return;
	  }
	  registerNullComponentID(internalInstance._rootNodeID);
	};
	ReactEmptyComponentType.prototype.componentWillUnmount = function() {
	  var internalInstance = ReactInstanceMap.get(this);
	  // TODO: Get rid of this check. See TODO in componentDidMount.
	  if (!internalInstance) {
	    return;
	  }
	  deregisterNullComponentID(internalInstance._rootNodeID);
	};
	ReactEmptyComponentType.prototype.render = function() {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    component,
	    'Trying to return null from a render, but no null placeholder component ' +
	    'was injected.'
	  ) : invariant(component));
	  return component();
	};

	var emptyElement = ReactElement.createElement(ReactEmptyComponentType);

	/**
	 * Mark the component as having rendered to null.
	 * @param {string} id Component's `_rootNodeID`.
	 */
	function registerNullComponentID(id) {
	  nullComponentIDsRegistry[id] = true;
	}

	/**
	 * Unmark the component as having rendered to null: it renders to something now.
	 * @param {string} id Component's `_rootNodeID`.
	 */
	function deregisterNullComponentID(id) {
	  delete nullComponentIDsRegistry[id];
	}

	/**
	 * @param {string} id Component's `_rootNodeID`.
	 * @return {boolean} True if the component is rendered to null.
	 */
	function isNullComponentID(id) {
	  return !!nullComponentIDsRegistry[id];
	}

	var ReactEmptyComponent = {
	  emptyElement: emptyElement,
	  injection: ReactEmptyComponentInjection,
	  isNullComponentID: isNullComponentID
	};

	module.exports = ReactEmptyComponent;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 86 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMarkupChecksum
	 */

	'use strict';

	var adler32 = __webpack_require__(87);

	var ReactMarkupChecksum = {
	  CHECKSUM_ATTR_NAME: 'data-react-checksum',

	  /**
	   * @param {string} markup Markup string
	   * @return {string} Markup string with checksum attribute attached
	   */
	  addChecksumToMarkup: function(markup) {
	    var checksum = adler32(markup);
	    return markup.replace(
	      '>',
	      ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '">'
	    );
	  },

	  /**
	   * @param {string} markup to use
	   * @param {DOMElement} element root React element
	   * @returns {boolean} whether or not the markup is the same
	   */
	  canReuseMarkup: function(markup, element) {
	    var existingChecksum = element.getAttribute(
	      ReactMarkupChecksum.CHECKSUM_ATTR_NAME
	    );
	    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
	    var markupChecksum = adler32(markup);
	    return markupChecksum === existingChecksum;
	  }
	};

	module.exports = ReactMarkupChecksum;


/***/ },
/* 87 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule adler32
	 */

	/* jslint bitwise:true */

	'use strict';

	var MOD = 65521;

	// This is a clean-room implementation of adler32 designed for detecting
	// if markup is not what we expect it to be. It does not need to be
	// cryptographically strong, only reasonably good at detecting if markup
	// generated on the server is different than that on the client.
	function adler32(data) {
	  var a = 1;
	  var b = 0;
	  for (var i = 0; i < data.length; i++) {
	    a = (a + data.charCodeAt(i)) % MOD;
	    b = (b + a) % MOD;
	  }
	  return a | (b << 16);
	}

	module.exports = adler32;


/***/ },
/* 88 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule containsNode
	 * @typechecks
	 */

	var isTextNode = __webpack_require__(89);

	/*jslint bitwise:true */

	/**
	 * Checks if a given DOM node contains or is another DOM node.
	 *
	 * @param {?DOMNode} outerNode Outer DOM node.
	 * @param {?DOMNode} innerNode Inner DOM node.
	 * @return {boolean} True if `outerNode` contains or is `innerNode`.
	 */
	function containsNode(outerNode, innerNode) {
	  if (!outerNode || !innerNode) {
	    return false;
	  } else if (outerNode === innerNode) {
	    return true;
	  } else if (isTextNode(outerNode)) {
	    return false;
	  } else if (isTextNode(innerNode)) {
	    return containsNode(outerNode, innerNode.parentNode);
	  } else if (outerNode.contains) {
	    return outerNode.contains(innerNode);
	  } else if (outerNode.compareDocumentPosition) {
	    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
	  } else {
	    return false;
	  }
	}

	module.exports = containsNode;


/***/ },
/* 89 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isTextNode
	 * @typechecks
	 */

	var isNode = __webpack_require__(90);

	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM text node.
	 */
	function isTextNode(object) {
	  return isNode(object) && object.nodeType == 3;
	}

	module.exports = isTextNode;


/***/ },
/* 90 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isNode
	 * @typechecks
	 */

	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM node.
	 */
	function isNode(object) {
	  return !!(object && (
	    ((typeof Node === 'function' ? object instanceof Node : typeof object === 'object' &&
	    typeof object.nodeType === 'number' &&
	    typeof object.nodeName === 'string'))
	  ));
	}

	module.exports = isNode;


/***/ },
/* 91 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getReactRootElementInContainer
	 */

	'use strict';

	var DOC_NODE_TYPE = 9;

	/**
	 * @param {DOMElement|DOMDocument} container DOM element that may contain
	 *                                           a React component
	 * @return {?*} DOM element that may have the reactRoot ID, or null.
	 */
	function getReactRootElementInContainer(container) {
	  if (!container) {
	    return null;
	  }

	  if (container.nodeType === DOC_NODE_TYPE) {
	    return container.documentElement;
	  } else {
	    return container.firstChild;
	  }
	}

	module.exports = getReactRootElementInContainer;


/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule instantiateReactComponent
	 * @typechecks static-only
	 */

	'use strict';

	var ReactCompositeComponent = __webpack_require__(93);
	var ReactEmptyComponent = __webpack_require__(85);
	var ReactNativeComponent = __webpack_require__(44);

	var assign = __webpack_require__(10);
	var invariant = __webpack_require__(17);
	var warning = __webpack_require__(24);

	// To avoid a cyclic dependency, we create the final class in this module
	var ReactCompositeComponentWrapper = function() { };
	assign(
	  ReactCompositeComponentWrapper.prototype,
	  ReactCompositeComponent.Mixin,
	  {
	    _instantiateReactComponent: instantiateReactComponent
	  }
	);

	/**
	 * Check if the type reference is a known internal type. I.e. not a user
	 * provided composite type.
	 *
	 * @param {function} type
	 * @return {boolean} Returns true if this is a valid internal type.
	 */
	function isInternalComponentType(type) {
	  return (
	    typeof type === 'function' &&
	    typeof type.prototype !== 'undefined' &&
	    typeof type.prototype.mountComponent === 'function' &&
	    typeof type.prototype.receiveComponent === 'function'
	  );
	}

	/**
	 * Given a ReactNode, create an instance that will actually be mounted.
	 *
	 * @param {ReactNode} node
	 * @param {*} parentCompositeType The composite type that resolved this.
	 * @return {object} A new instance of the element's constructor.
	 * @protected
	 */
	function instantiateReactComponent(node, parentCompositeType) {
	  var instance;

	  if (node === null || node === false) {
	    node = ReactEmptyComponent.emptyElement;
	  }

	  if (typeof node === 'object') {
	    var element = node;
	    if ("production" !== process.env.NODE_ENV) {
	      ("production" !== process.env.NODE_ENV ? warning(
	        element && (typeof element.type === 'function' ||
	                    typeof element.type === 'string'),
	        'Only functions or strings can be mounted as React components.'
	      ) : null);
	    }

	    // Special case string values
	    if (parentCompositeType === element.type &&
	        typeof element.type === 'string') {
	      // Avoid recursion if the wrapper renders itself.
	      instance = ReactNativeComponent.createInternalComponent(element);
	      // All native components are currently wrapped in a composite so we're
	      // safe to assume that this is what we should instantiate.
	    } else if (isInternalComponentType(element.type)) {
	      // This is temporarily available for custom components that are not string
	      // represenations. I.e. ART. Once those are updated to use the string
	      // representation, we can drop this code path.
	      instance = new element.type(element);
	    } else {
	      instance = new ReactCompositeComponentWrapper();
	    }
	  } else if (typeof node === 'string' || typeof node === 'number') {
	    instance = ReactNativeComponent.createInstanceForText(node);
	  } else {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      false,
	      'Encountered invalid React node of type %s',
	      typeof node
	    ) : invariant(false));
	  }

	  if ("production" !== process.env.NODE_ENV) {
	    ("production" !== process.env.NODE_ENV ? warning(
	      typeof instance.construct === 'function' &&
	      typeof instance.mountComponent === 'function' &&
	      typeof instance.receiveComponent === 'function' &&
	      typeof instance.unmountComponent === 'function',
	      'Only React Components can be mounted.'
	    ) : null);
	  }

	  // Sets up the instance. This can probably just move into the constructor now.
	  instance.construct(node);

	  // These two fields are used by the DOM and ART diffing algorithms
	  // respectively. Instead of using expandos on components, we should be
	  // storing the state needed by the diffing algorithms elsewhere.
	  instance._mountIndex = 0;
	  instance._mountImage = null;

	  if ("production" !== process.env.NODE_ENV) {
	    instance._isOwnerNecessary = false;
	    instance._warnedAboutRefsInRender = false;
	  }

	  // Internal instances should fully constructed at this point, so they should
	  // not get any new fields added to them at this point.
	  if ("production" !== process.env.NODE_ENV) {
	    if (Object.preventExtensions) {
	      Object.preventExtensions(instance);
	    }
	  }

	  return instance;
	}

	module.exports = instantiateReactComponent;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 93 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCompositeComponent
	 */

	'use strict';

	var ReactComponentEnvironment = __webpack_require__(94);
	var ReactContext = __webpack_require__(22);
	var ReactCurrentOwner = __webpack_require__(26);
	var ReactElement = __webpack_require__(21);
	var ReactElementValidator = __webpack_require__(41);
	var ReactInstanceMap = __webpack_require__(34);
	var ReactLifeCycle = __webpack_require__(33);
	var ReactNativeComponent = __webpack_require__(44);
	var ReactPerf = __webpack_require__(37);
	var ReactPropTypeLocations = __webpack_require__(42);
	var ReactPropTypeLocationNames = __webpack_require__(43);
	var ReactReconciler = __webpack_require__(38);
	var ReactUpdates = __webpack_require__(35);

	var assign = __webpack_require__(10);
	var emptyObject = __webpack_require__(23);
	var invariant = __webpack_require__(17);
	var shouldUpdateReactComponent = __webpack_require__(95);
	var warning = __webpack_require__(24);

	function getDeclarationErrorAddendum(component) {
	  var owner = component._currentElement._owner || null;
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	/**
	 * ------------------ The Life-Cycle of a Composite Component ------------------
	 *
	 * - constructor: Initialization of state. The instance is now retained.
	 *   - componentWillMount
	 *   - render
	 *   - [children's constructors]
	 *     - [children's componentWillMount and render]
	 *     - [children's componentDidMount]
	 *     - componentDidMount
	 *
	 *       Update Phases:
	 *       - componentWillReceiveProps (only called if parent updated)
	 *       - shouldComponentUpdate
	 *         - componentWillUpdate
	 *           - render
	 *           - [children's constructors or receive props phases]
	 *         - componentDidUpdate
	 *
	 *     - componentWillUnmount
	 *     - [children's componentWillUnmount]
	 *   - [children destroyed]
	 * - (destroyed): The instance is now blank, released by React and ready for GC.
	 *
	 * -----------------------------------------------------------------------------
	 */

	/**
	 * An incrementing ID assigned to each component when it is mounted. This is
	 * used to enforce the order in which `ReactUpdates` updates dirty components.
	 *
	 * @private
	 */
	var nextMountID = 1;

	/**
	 * @lends {ReactCompositeComponent.prototype}
	 */
	var ReactCompositeComponentMixin = {

	  /**
	   * Base constructor for all composite component.
	   *
	   * @param {ReactElement} element
	   * @final
	   * @internal
	   */
	  construct: function(element) {
	    this._currentElement = element;
	    this._rootNodeID = null;
	    this._instance = null;

	    // See ReactUpdateQueue
	    this._pendingElement = null;
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;

	    this._renderedComponent = null;

	    this._context = null;
	    this._mountOrder = 0;
	    this._isTopLevel = false;

	    // See ReactUpdates and ReactUpdateQueue.
	    this._pendingCallbacks = null;
	  },

	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {string} rootID DOM ID of the root node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function(rootID, transaction, context) {
	    this._context = context;
	    this._mountOrder = nextMountID++;
	    this._rootNodeID = rootID;

	    var publicProps = this._processProps(this._currentElement.props);
	    var publicContext = this._processContext(this._currentElement._context);

	    var Component = ReactNativeComponent.getComponentClassForElement(
	      this._currentElement
	    );

	    // Initialize the public class
	    var inst = new Component(publicProps, publicContext);

	    if ("production" !== process.env.NODE_ENV) {
	      // This will throw later in _renderValidatedComponent, but add an early
	      // warning now to help debugging
	      ("production" !== process.env.NODE_ENV ? warning(
	        inst.render != null,
	        '%s(...): No `render` method found on the returned component ' +
	        'instance: you may have forgotten to define `render` in your ' +
	        'component or you may have accidentally tried to render an element ' +
	        'whose type is a function that isn\'t a React component.',
	        Component.displayName || Component.name || 'Component'
	      ) : null);
	    }

	    // These should be set up in the constructor, but as a convenience for
	    // simpler class abstractions, we set them up after the fact.
	    inst.props = publicProps;
	    inst.context = publicContext;
	    inst.refs = emptyObject;

	    this._instance = inst;

	    // Store a reference from the instance back to the internal representation
	    ReactInstanceMap.set(inst, this);

	    if ("production" !== process.env.NODE_ENV) {
	      this._warnIfContextsDiffer(this._currentElement._context, context);
	    }

	    if ("production" !== process.env.NODE_ENV) {
	      // Since plain JS classes are defined without any special initialization
	      // logic, we can not catch common errors early. Therefore, we have to
	      // catch them here, at initialization time, instead.
	      ("production" !== process.env.NODE_ENV ? warning(
	        !inst.getInitialState ||
	        inst.getInitialState.isReactClassApproved,
	        'getInitialState was defined on %s, a plain JavaScript class. ' +
	        'This is only supported for classes created using React.createClass. ' +
	        'Did you mean to define a state property instead?',
	        this.getName() || 'a component'
	      ) : null);
	      ("production" !== process.env.NODE_ENV ? warning(
	        !inst.getDefaultProps ||
	        inst.getDefaultProps.isReactClassApproved,
	        'getDefaultProps was defined on %s, a plain JavaScript class. ' +
	        'This is only supported for classes created using React.createClass. ' +
	        'Use a static property to define defaultProps instead.',
	        this.getName() || 'a component'
	      ) : null);
	      ("production" !== process.env.NODE_ENV ? warning(
	        !inst.propTypes,
	        'propTypes was defined as an instance property on %s. Use a static ' +
	        'property to define propTypes instead.',
	        this.getName() || 'a component'
	      ) : null);
	      ("production" !== process.env.NODE_ENV ? warning(
	        !inst.contextTypes,
	        'contextTypes was defined as an instance property on %s. Use a ' +
	        'static property to define contextTypes instead.',
	        this.getName() || 'a component'
	      ) : null);
	      ("production" !== process.env.NODE_ENV ? warning(
	        typeof inst.componentShouldUpdate !== 'function',
	        '%s has a method called ' +
	        'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +
	        'The name is phrased as a question because the function is ' +
	        'expected to return a value.',
	        (this.getName() || 'A component')
	      ) : null);
	    }

	    var initialState = inst.state;
	    if (initialState === undefined) {
	      inst.state = initialState = null;
	    }
	    ("production" !== process.env.NODE_ENV ? invariant(
	      typeof initialState === 'object' && !Array.isArray(initialState),
	      '%s.state: must be set to an object or null',
	      this.getName() || 'ReactCompositeComponent'
	    ) : invariant(typeof initialState === 'object' && !Array.isArray(initialState)));

	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;

	    var childContext;
	    var renderedElement;

	    var previouslyMounting = ReactLifeCycle.currentlyMountingInstance;
	    ReactLifeCycle.currentlyMountingInstance = this;
	    try {
	      if (inst.componentWillMount) {
	        inst.componentWillMount();
	        // When mounting, calls to `setState` by `componentWillMount` will set
	        // `this._pendingStateQueue` without triggering a re-render.
	        if (this._pendingStateQueue) {
	          inst.state = this._processPendingState(inst.props, inst.context);
	        }
	      }

	      childContext = this._getValidatedChildContext(context);
	      renderedElement = this._renderValidatedComponent(childContext);
	    } finally {
	      ReactLifeCycle.currentlyMountingInstance = previouslyMounting;
	    }

	    this._renderedComponent = this._instantiateReactComponent(
	      renderedElement,
	      this._currentElement.type // The wrapping type
	    );

	    var markup = ReactReconciler.mountComponent(
	      this._renderedComponent,
	      rootID,
	      transaction,
	      this._mergeChildContext(context, childContext)
	    );
	    if (inst.componentDidMount) {
	      transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
	    }

	    return markup;
	  },

	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function() {
	    var inst = this._instance;

	    if (inst.componentWillUnmount) {
	      var previouslyUnmounting = ReactLifeCycle.currentlyUnmountingInstance;
	      ReactLifeCycle.currentlyUnmountingInstance = this;
	      try {
	        inst.componentWillUnmount();
	      } finally {
	        ReactLifeCycle.currentlyUnmountingInstance = previouslyUnmounting;
	      }
	    }

	    ReactReconciler.unmountComponent(this._renderedComponent);
	    this._renderedComponent = null;

	    // Reset pending fields
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	    this._pendingCallbacks = null;
	    this._pendingElement = null;

	    // These fields do not really need to be reset since this object is no
	    // longer accessible.
	    this._context = null;
	    this._rootNodeID = null;

	    // Delete the reference from the instance to this internal representation
	    // which allow the internals to be properly cleaned up even if the user
	    // leaks a reference to the public instance.
	    ReactInstanceMap.remove(inst);

	    // Some existing components rely on inst.props even after they've been
	    // destroyed (in event handlers).
	    // TODO: inst.props = null;
	    // TODO: inst.state = null;
	    // TODO: inst.context = null;
	  },

	  /**
	   * Schedule a partial update to the props. Only used for internal testing.
	   *
	   * @param {object} partialProps Subset of the next props.
	   * @param {?function} callback Called after props are updated.
	   * @final
	   * @internal
	   */
	  _setPropsInternal: function(partialProps, callback) {
	    // This is a deoptimized path. We optimize for always having an element.
	    // This creates an extra internal element.
	    var element = this._pendingElement || this._currentElement;
	    this._pendingElement = ReactElement.cloneAndReplaceProps(
	      element,
	      assign({}, element.props, partialProps)
	    );
	    ReactUpdates.enqueueUpdate(this, callback);
	  },

	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _maskContext: function(context) {
	    var maskedContext = null;
	    // This really should be getting the component class for the element,
	    // but we know that we're not going to need it for built-ins.
	    if (typeof this._currentElement.type === 'string') {
	      return emptyObject;
	    }
	    var contextTypes = this._currentElement.type.contextTypes;
	    if (!contextTypes) {
	      return emptyObject;
	    }
	    maskedContext = {};
	    for (var contextName in contextTypes) {
	      maskedContext[contextName] = context[contextName];
	    }
	    return maskedContext;
	  },

	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`, and asserts that they are valid.
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _processContext: function(context) {
	    var maskedContext = this._maskContext(context);
	    if ("production" !== process.env.NODE_ENV) {
	      var Component = ReactNativeComponent.getComponentClassForElement(
	        this._currentElement
	      );
	      if (Component.contextTypes) {
	        this._checkPropTypes(
	          Component.contextTypes,
	          maskedContext,
	          ReactPropTypeLocations.context
	        );
	      }
	    }
	    return maskedContext;
	  },

	  /**
	   * @param {object} currentContext
	   * @return {object}
	   * @private
	   */
	  _getValidatedChildContext: function(currentContext) {
	    var inst = this._instance;
	    var childContext = inst.getChildContext && inst.getChildContext();
	    if (childContext) {
	      ("production" !== process.env.NODE_ENV ? invariant(
	        typeof inst.constructor.childContextTypes === 'object',
	        '%s.getChildContext(): childContextTypes must be defined in order to ' +
	        'use getChildContext().',
	        this.getName() || 'ReactCompositeComponent'
	      ) : invariant(typeof inst.constructor.childContextTypes === 'object'));
	      if ("production" !== process.env.NODE_ENV) {
	        this._checkPropTypes(
	          inst.constructor.childContextTypes,
	          childContext,
	          ReactPropTypeLocations.childContext
	        );
	      }
	      for (var name in childContext) {
	        ("production" !== process.env.NODE_ENV ? invariant(
	          name in inst.constructor.childContextTypes,
	          '%s.getChildContext(): key "%s" is not defined in childContextTypes.',
	          this.getName() || 'ReactCompositeComponent',
	          name
	        ) : invariant(name in inst.constructor.childContextTypes));
	      }
	      return childContext;
	    }
	    return null;
	  },

	  _mergeChildContext: function(currentContext, childContext) {
	    if (childContext) {
	      return assign({}, currentContext, childContext);
	    }
	    return currentContext;
	  },

	  /**
	   * Processes props by setting default values for unspecified props and
	   * asserting that the props are valid. Does not mutate its argument; returns
	   * a new props object with defaults merged in.
	   *
	   * @param {object} newProps
	   * @return {object}
	   * @private
	   */
	  _processProps: function(newProps) {
	    if ("production" !== process.env.NODE_ENV) {
	      var Component = ReactNativeComponent.getComponentClassForElement(
	        this._currentElement
	      );
	      if (Component.propTypes) {
	        this._checkPropTypes(
	          Component.propTypes,
	          newProps,
	          ReactPropTypeLocations.prop
	        );
	      }
	    }
	    return newProps;
	  },

	  /**
	   * Assert that the props are valid
	   *
	   * @param {object} propTypes Map of prop name to a ReactPropType
	   * @param {object} props
	   * @param {string} location e.g. "prop", "context", "child context"
	   * @private
	   */
	  _checkPropTypes: function(propTypes, props, location) {
	    // TODO: Stop validating prop types here and only use the element
	    // validation.
	    var componentName = this.getName();
	    for (var propName in propTypes) {
	      if (propTypes.hasOwnProperty(propName)) {
	        var error;
	        try {
	          // This is intentionally an invariant that gets caught. It's the same
	          // behavior as without this statement except with a better message.
	          ("production" !== process.env.NODE_ENV ? invariant(
	            typeof propTypes[propName] === 'function',
	            '%s: %s type `%s` is invalid; it must be a function, usually ' +
	            'from React.PropTypes.',
	            componentName || 'React class',
	            ReactPropTypeLocationNames[location],
	            propName
	          ) : invariant(typeof propTypes[propName] === 'function'));
	          error = propTypes[propName](props, propName, componentName, location);
	        } catch (ex) {
	          error = ex;
	        }
	        if (error instanceof Error) {
	          // We may want to extend this logic for similar errors in
	          // React.render calls, so I'm abstracting it away into
	          // a function to minimize refactoring in the future
	          var addendum = getDeclarationErrorAddendum(this);

	          if (location === ReactPropTypeLocations.prop) {
	            // Preface gives us something to blacklist in warning module
	            ("production" !== process.env.NODE_ENV ? warning(
	              false,
	              'Failed Composite propType: %s%s',
	              error.message,
	              addendum
	            ) : null);
	          } else {
	            ("production" !== process.env.NODE_ENV ? warning(
	              false,
	              'Failed Context Types: %s%s',
	              error.message,
	              addendum
	            ) : null);
	          }
	        }
	      }
	    }
	  },

	  receiveComponent: function(nextElement, transaction, nextContext) {
	    var prevElement = this._currentElement;
	    var prevContext = this._context;

	    this._pendingElement = null;

	    this.updateComponent(
	      transaction,
	      prevElement,
	      nextElement,
	      prevContext,
	      nextContext
	    );
	  },

	  /**
	   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
	   * is set, update the component.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function(transaction) {
	    if (this._pendingElement != null) {
	      ReactReconciler.receiveComponent(
	        this,
	        this._pendingElement || this._currentElement,
	        transaction,
	        this._context
	      );
	    }

	    if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
	      if ("production" !== process.env.NODE_ENV) {
	        ReactElementValidator.checkAndWarnForMutatedProps(
	          this._currentElement
	        );
	      }

	      this.updateComponent(
	        transaction,
	        this._currentElement,
	        this._currentElement,
	        this._context,
	        this._context
	      );
	    }
	  },

	  /**
	   * Compare two contexts, warning if they are different
	   * TODO: Remove this check when owner-context is removed
	   */
	   _warnIfContextsDiffer: function(ownerBasedContext, parentBasedContext) {
	    ownerBasedContext = this._maskContext(ownerBasedContext);
	    parentBasedContext = this._maskContext(parentBasedContext);
	    var parentKeys = Object.keys(parentBasedContext).sort();
	    var displayName = this.getName() || 'ReactCompositeComponent';
	    for (var i = 0; i < parentKeys.length; i++) {
	      var key = parentKeys[i];
	      ("production" !== process.env.NODE_ENV ? warning(
	        ownerBasedContext[key] === parentBasedContext[key],
	        'owner-based and parent-based contexts differ '  +
	        '(values: `%s` vs `%s`) for key (%s) while mounting %s ' +
	        '(see: http://fb.me/react-context-by-parent)',
	        ownerBasedContext[key],
	        parentBasedContext[key],
	        key,
	        displayName
	      ) : null);
	    }
	  },

	  /**
	   * Perform an update to a mounted component. The componentWillReceiveProps and
	   * shouldComponentUpdate methods are called, then (assuming the update isn't
	   * skipped) the remaining update lifecycle methods are called and the DOM
	   * representation is updated.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevParentElement
	   * @param {ReactElement} nextParentElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function(
	    transaction,
	    prevParentElement,
	    nextParentElement,
	    prevUnmaskedContext,
	    nextUnmaskedContext
	  ) {
	    var inst = this._instance;

	    var nextContext = inst.context;
	    var nextProps = inst.props;

	    // Distinguish between a props update versus a simple state update
	    if (prevParentElement !== nextParentElement) {
	      nextContext = this._processContext(nextParentElement._context);
	      nextProps = this._processProps(nextParentElement.props);

	      if ("production" !== process.env.NODE_ENV) {
	        if (nextUnmaskedContext != null) {
	          this._warnIfContextsDiffer(
	            nextParentElement._context,
	            nextUnmaskedContext
	          );
	        }
	      }

	      // An update here will schedule an update but immediately set
	      // _pendingStateQueue which will ensure that any state updates gets
	      // immediately reconciled instead of waiting for the next batch.

	      if (inst.componentWillReceiveProps) {
	        inst.componentWillReceiveProps(nextProps, nextContext);
	      }
	    }

	    var nextState = this._processPendingState(nextProps, nextContext);

	    var shouldUpdate =
	      this._pendingForceUpdate ||
	      !inst.shouldComponentUpdate ||
	      inst.shouldComponentUpdate(nextProps, nextState, nextContext);

	    if ("production" !== process.env.NODE_ENV) {
	      ("production" !== process.env.NODE_ENV ? warning(
	        typeof shouldUpdate !== 'undefined',
	        '%s.shouldComponentUpdate(): Returned undefined instead of a ' +
	        'boolean value. Make sure to return true or false.',
	        this.getName() || 'ReactCompositeComponent'
	      ) : null);
	    }

	    if (shouldUpdate) {
	      this._pendingForceUpdate = false;
	      // Will set `this.props`, `this.state` and `this.context`.
	      this._performComponentUpdate(
	        nextParentElement,
	        nextProps,
	        nextState,
	        nextContext,
	        transaction,
	        nextUnmaskedContext
	      );
	    } else {
	      // If it's determined that a component should not update, we still want
	      // to set props and state but we shortcut the rest of the update.
	      this._currentElement = nextParentElement;
	      this._context = nextUnmaskedContext;
	      inst.props = nextProps;
	      inst.state = nextState;
	      inst.context = nextContext;
	    }
	  },

	  _processPendingState: function(props, context) {
	    var inst = this._instance;
	    var queue = this._pendingStateQueue;
	    var replace = this._pendingReplaceState;
	    this._pendingReplaceState = false;
	    this._pendingStateQueue = null;

	    if (!queue) {
	      return inst.state;
	    }

	    if (replace && queue.length === 1) {
	      return queue[0];
	    }

	    var nextState = assign({}, replace ? queue[0] : inst.state);
	    for (var i = replace ? 1 : 0; i < queue.length; i++) {
	      var partial = queue[i];
	      assign(
	        nextState,
	        typeof partial === 'function' ?
	          partial.call(inst, nextState, props, context) :
	          partial
	      );
	    }

	    return nextState;
	  },

	  /**
	   * Merges new props and state, notifies delegate methods of update and
	   * performs update.
	   *
	   * @param {ReactElement} nextElement Next element
	   * @param {object} nextProps Next public object to set as properties.
	   * @param {?object} nextState Next object to set as state.
	   * @param {?object} nextContext Next public object to set as context.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {?object} unmaskedContext
	   * @private
	   */
	  _performComponentUpdate: function(
	    nextElement,
	    nextProps,
	    nextState,
	    nextContext,
	    transaction,
	    unmaskedContext
	  ) {
	    var inst = this._instance;

	    var prevProps = inst.props;
	    var prevState = inst.state;
	    var prevContext = inst.context;

	    if (inst.componentWillUpdate) {
	      inst.componentWillUpdate(nextProps, nextState, nextContext);
	    }

	    this._currentElement = nextElement;
	    this._context = unmaskedContext;
	    inst.props = nextProps;
	    inst.state = nextState;
	    inst.context = nextContext;

	    this._updateRenderedComponent(transaction, unmaskedContext);

	    if (inst.componentDidUpdate) {
	      transaction.getReactMountReady().enqueue(
	        inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext),
	        inst
	      );
	    }
	  },

	  /**
	   * Call the component's `render` method and update the DOM accordingly.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  _updateRenderedComponent: function(transaction, context) {
	    var prevComponentInstance = this._renderedComponent;
	    var prevRenderedElement = prevComponentInstance._currentElement;
	    var childContext = this._getValidatedChildContext();
	    var nextRenderedElement = this._renderValidatedComponent(childContext);
	    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
	      ReactReconciler.receiveComponent(
	        prevComponentInstance,
	        nextRenderedElement,
	        transaction,
	        this._mergeChildContext(context, childContext)
	      );
	    } else {
	      // These two IDs are actually the same! But nothing should rely on that.
	      var thisID = this._rootNodeID;
	      var prevComponentID = prevComponentInstance._rootNodeID;
	      ReactReconciler.unmountComponent(prevComponentInstance);

	      this._renderedComponent = this._instantiateReactComponent(
	        nextRenderedElement,
	        this._currentElement.type
	      );
	      var nextMarkup = ReactReconciler.mountComponent(
	        this._renderedComponent,
	        thisID,
	        transaction,
	        this._mergeChildContext(context, childContext)
	      );
	      this._replaceNodeWithMarkupByID(prevComponentID, nextMarkup);
	    }
	  },

	  /**
	   * @protected
	   */
	  _replaceNodeWithMarkupByID: function(prevComponentID, nextMarkup) {
	    ReactComponentEnvironment.replaceNodeWithMarkupByID(
	      prevComponentID,
	      nextMarkup
	    );
	  },

	  /**
	   * @protected
	   */
	  _renderValidatedComponentWithoutOwnerOrContext: function() {
	    var inst = this._instance;
	    var renderedComponent = inst.render();
	    if ("production" !== process.env.NODE_ENV) {
	      // We allow auto-mocks to proceed as if they're returning null.
	      if (typeof renderedComponent === 'undefined' &&
	          inst.render._isMockFunction) {
	        // This is probably bad practice. Consider warning here and
	        // deprecating this convenience.
	        renderedComponent = null;
	      }
	    }

	    return renderedComponent;
	  },

	  /**
	   * @private
	   */
	  _renderValidatedComponent: function(childContext) {
	    var renderedComponent;
	    var previousContext = ReactContext.current;
	    ReactContext.current = this._mergeChildContext(
	      this._currentElement._context,
	      childContext
	    );
	    ReactCurrentOwner.current = this;
	    try {
	      renderedComponent =
	        this._renderValidatedComponentWithoutOwnerOrContext();
	    } finally {
	      ReactContext.current = previousContext;
	      ReactCurrentOwner.current = null;
	    }
	    ("production" !== process.env.NODE_ENV ? invariant(
	      // TODO: An `isValidNode` function would probably be more appropriate
	      renderedComponent === null || renderedComponent === false ||
	      ReactElement.isValidElement(renderedComponent),
	      '%s.render(): A valid ReactComponent must be returned. You may have ' +
	        'returned undefined, an array or some other invalid object.',
	      this.getName() || 'ReactCompositeComponent'
	    ) : invariant(// TODO: An `isValidNode` function would probably be more appropriate
	    renderedComponent === null || renderedComponent === false ||
	    ReactElement.isValidElement(renderedComponent)));
	    return renderedComponent;
	  },

	  /**
	   * Lazily allocates the refs object and stores `component` as `ref`.
	   *
	   * @param {string} ref Reference name.
	   * @param {component} component Component to store as `ref`.
	   * @final
	   * @private
	   */
	  attachRef: function(ref, component) {
	    var inst = this.getPublicInstance();
	    var refs = inst.refs === emptyObject ? (inst.refs = {}) : inst.refs;
	    refs[ref] = component.getPublicInstance();
	  },

	  /**
	   * Detaches a reference name.
	   *
	   * @param {string} ref Name to dereference.
	   * @final
	   * @private
	   */
	  detachRef: function(ref) {
	    var refs = this.getPublicInstance().refs;
	    delete refs[ref];
	  },

	  /**
	   * Get a text description of the component that can be used to identify it
	   * in error messages.
	   * @return {string} The name or null.
	   * @internal
	   */
	  getName: function() {
	    var type = this._currentElement.type;
	    var constructor = this._instance && this._instance.constructor;
	    return (
	      type.displayName || (constructor && constructor.displayName) ||
	      type.name || (constructor && constructor.name) ||
	      null
	    );
	  },

	  /**
	   * Get the publicly accessible representation of this component - i.e. what
	   * is exposed by refs and returned by React.render. Can be null for stateless
	   * components.
	   *
	   * @return {ReactComponent} the public component instance.
	   * @internal
	   */
	  getPublicInstance: function() {
	    return this._instance;
	  },

	  // Stub
	  _instantiateReactComponent: null

	};

	ReactPerf.measureMethods(
	  ReactCompositeComponentMixin,
	  'ReactCompositeComponent',
	  {
	    mountComponent: 'mountComponent',
	    updateComponent: 'updateComponent',
	    _renderValidatedComponent: '_renderValidatedComponent'
	  }
	);

	var ReactCompositeComponent = {

	  Mixin: ReactCompositeComponentMixin

	};

	module.exports = ReactCompositeComponent;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 94 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentEnvironment
	 */

	'use strict';

	var invariant = __webpack_require__(17);

	var injected = false;

	var ReactComponentEnvironment = {

	  /**
	   * Optionally injectable environment dependent cleanup hook. (server vs.
	   * browser etc). Example: A browser system caches DOM nodes based on component
	   * ID and must remove that cache entry when this instance is unmounted.
	   */
	  unmountIDFromEnvironment: null,

	  /**
	   * Optionally injectable hook for swapping out mount images in the middle of
	   * the tree.
	   */
	  replaceNodeWithMarkupByID: null,

	  /**
	   * Optionally injectable hook for processing a queue of child updates. Will
	   * later move into MultiChildComponents.
	   */
	  processChildrenUpdates: null,

	  injection: {
	    injectEnvironment: function(environment) {
	      ("production" !== process.env.NODE_ENV ? invariant(
	        !injected,
	        'ReactCompositeComponent: injectEnvironment() can only be called once.'
	      ) : invariant(!injected));
	      ReactComponentEnvironment.unmountIDFromEnvironment =
	        environment.unmountIDFromEnvironment;
	      ReactComponentEnvironment.replaceNodeWithMarkupByID =
	        environment.replaceNodeWithMarkupByID;
	      ReactComponentEnvironment.processChildrenUpdates =
	        environment.processChildrenUpdates;
	      injected = true;
	    }
	  }

	};

	module.exports = ReactComponentEnvironment;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 95 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule shouldUpdateReactComponent
	 * @typechecks static-only
	 */

	'use strict';

	var warning = __webpack_require__(24);

	/**
	 * Given a `prevElement` and `nextElement`, determines if the existing
	 * instance should be updated as opposed to being destroyed or replaced by a new
	 * instance. Both arguments are elements. This ensures that this logic can
	 * operate on stateless trees without any backing instance.
	 *
	 * @param {?object} prevElement
	 * @param {?object} nextElement
	 * @return {boolean} True if the existing instance should be updated.
	 * @protected
	 */
	function shouldUpdateReactComponent(prevElement, nextElement) {
	  if (prevElement != null && nextElement != null) {
	    var prevType = typeof prevElement;
	    var nextType = typeof nextElement;
	    if (prevType === 'string' || prevType === 'number') {
	      return (nextType === 'string' || nextType === 'number');
	    } else {
	      if (nextType === 'object' &&
	          prevElement.type === nextElement.type &&
	          prevElement.key === nextElement.key) {
	        var ownersMatch = prevElement._owner === nextElement._owner;
	        var prevName = null;
	        var nextName = null;
	        var nextDisplayName = null;
	        if ("production" !== process.env.NODE_ENV) {
	          if (!ownersMatch) {
	            if (prevElement._owner != null &&
	                prevElement._owner.getPublicInstance() != null &&
	                prevElement._owner.getPublicInstance().constructor != null) {
	              prevName =
	                prevElement._owner.getPublicInstance().constructor.displayName;
	            }
	            if (nextElement._owner != null &&
	                nextElement._owner.getPublicInstance() != null &&
	                nextElement._owner.getPublicInstance().constructor != null) {
	              nextName =
	                nextElement._owner.getPublicInstance().constructor.displayName;
	            }
	            if (nextElement.type != null &&
	                nextElement.type.displayName != null) {
	              nextDisplayName = nextElement.type.displayName;
	            }
	            if (nextElement.type != null && typeof nextElement.type === 'string') {
	              nextDisplayName = nextElement.type;
	            }
	            if (typeof nextElement.type !== 'string' ||
	                nextElement.type === 'input' ||
	                nextElement.type === 'textarea') {
	              if ((prevElement._owner != null &&
	                  prevElement._owner._isOwnerNecessary === false) ||
	                  (nextElement._owner != null &&
	                  nextElement._owner._isOwnerNecessary === false)) {
	                if (prevElement._owner != null) {
	                  prevElement._owner._isOwnerNecessary = true;
	                }
	                if (nextElement._owner != null) {
	                  nextElement._owner._isOwnerNecessary = true;
	                }
	                ("production" !== process.env.NODE_ENV ? warning(
	                  false,
	                  '<%s /> is being rendered by both %s and %s using the same ' +
	                  'key (%s) in the same place. Currently, this means that ' +
	                  'they don\'t preserve state. This behavior should be very ' +
	                  'rare so we\'re considering deprecating it. Please contact ' +
	                  'the React team and explain your use case so that we can ' +
	                  'take that into consideration.',
	                  nextDisplayName || 'Unknown Component',
	                  prevName || '[Unknown]',
	                  nextName || '[Unknown]',
	                  prevElement.key
	                ) : null);
	              }
	            }
	          }
	        }
	        return ownersMatch;
	      }
	    }
	  }
	  return false;
	}

	module.exports = shouldUpdateReactComponent;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 96 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMComponent
	 * @typechecks static-only
	 */

	/* global hasOwnProperty:true */

	'use strict';

	var CSSPropertyOperations = __webpack_require__(58);
	var DOMProperty = __webpack_require__(53);
	var DOMPropertyOperations = __webpack_require__(52);
	var ReactBrowserEventEmitter = __webpack_require__(77);
	var ReactComponentBrowserEnvironment =
	  __webpack_require__(56);
	var ReactMount = __webpack_require__(76);
	var ReactMultiChild = __webpack_require__(97);
	var ReactPerf = __webpack_require__(37);

	var assign = __webpack_require__(10);
	var escapeTextContentForBrowser = __webpack_require__(55);
	var invariant = __webpack_require__(17);
	var isEventSupported = __webpack_require__(84);
	var keyOf = __webpack_require__(48);
	var warning = __webpack_require__(24);

	var deleteListener = ReactBrowserEventEmitter.deleteListener;
	var listenTo = ReactBrowserEventEmitter.listenTo;
	var registrationNameModules = ReactBrowserEventEmitter.registrationNameModules;

	// For quickly matching children type, to test if can be treated as content.
	var CONTENT_TYPES = {'string': true, 'number': true};

	var STYLE = keyOf({style: null});

	var ELEMENT_NODE_TYPE = 1;

	/**
	 * Optionally injectable operations for mutating the DOM
	 */
	var BackendIDOperations = null;

	/**
	 * @param {?object} props
	 */
	function assertValidProps(props) {
	  if (!props) {
	    return;
	  }
	  // Note the use of `==` which checks for null or undefined.
	  if (props.dangerouslySetInnerHTML != null) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      props.children == null,
	      'Can only set one of `children` or `props.dangerouslySetInnerHTML`.'
	    ) : invariant(props.children == null));
	    ("production" !== process.env.NODE_ENV ? invariant(
	      typeof props.dangerouslySetInnerHTML === 'object' &&
	      '__html' in props.dangerouslySetInnerHTML,
	      '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' +
	      'Please visit https://fb.me/react-invariant-dangerously-set-inner-html ' +
	      'for more information.'
	    ) : invariant(typeof props.dangerouslySetInnerHTML === 'object' &&
	    '__html' in props.dangerouslySetInnerHTML));
	  }
	  if ("production" !== process.env.NODE_ENV) {
	    ("production" !== process.env.NODE_ENV ? warning(
	      props.innerHTML == null,
	      'Directly setting property `innerHTML` is not permitted. ' +
	      'For more information, lookup documentation on `dangerouslySetInnerHTML`.'
	    ) : null);
	    ("production" !== process.env.NODE_ENV ? warning(
	      !props.contentEditable || props.children == null,
	      'A component is `contentEditable` and contains `children` managed by ' +
	      'React. It is now your responsibility to guarantee that none of ' +
	      'those nodes are unexpectedly modified or duplicated. This is ' +
	      'probably not intentional.'
	    ) : null);
	  }
	  ("production" !== process.env.NODE_ENV ? invariant(
	    props.style == null || typeof props.style === 'object',
	    'The `style` prop expects a mapping from style properties to values, ' +
	    'not a string. For example, style={{marginRight: spacing + \'em\'}} when ' +
	    'using JSX.'
	  ) : invariant(props.style == null || typeof props.style === 'object'));
	}

	function putListener(id, registrationName, listener, transaction) {
	  if ("production" !== process.env.NODE_ENV) {
	    // IE8 has no API for event capturing and the `onScroll` event doesn't
	    // bubble.
	    ("production" !== process.env.NODE_ENV ? warning(
	      registrationName !== 'onScroll' || isEventSupported('scroll', true),
	      'This browser doesn\'t support the `onScroll` event'
	    ) : null);
	  }
	  var container = ReactMount.findReactContainerForID(id);
	  if (container) {
	    var doc = container.nodeType === ELEMENT_NODE_TYPE ?
	      container.ownerDocument :
	      container;
	    listenTo(registrationName, doc);
	  }
	  transaction.getPutListenerQueue().enqueuePutListener(
	    id,
	    registrationName,
	    listener
	  );
	}

	// For HTML, certain tags should omit their close tag. We keep a whitelist for
	// those special cased tags.

	var omittedCloseTags = {
	  'area': true,
	  'base': true,
	  'br': true,
	  'col': true,
	  'embed': true,
	  'hr': true,
	  'img': true,
	  'input': true,
	  'keygen': true,
	  'link': true,
	  'meta': true,
	  'param': true,
	  'source': true,
	  'track': true,
	  'wbr': true
	  // NOTE: menuitem's close tag should be omitted, but that causes problems.
	};

	// We accept any tag to be rendered but since this gets injected into abitrary
	// HTML, we want to make sure that it's a safe tag.
	// http://www.w3.org/TR/REC-xml/#NT-Name

	var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
	var validatedTagCache = {};
	var hasOwnProperty = {}.hasOwnProperty;

	function validateDangerousTag(tag) {
	  if (!hasOwnProperty.call(validatedTagCache, tag)) {
	    ("production" !== process.env.NODE_ENV ? invariant(VALID_TAG_REGEX.test(tag), 'Invalid tag: %s', tag) : invariant(VALID_TAG_REGEX.test(tag)));
	    validatedTagCache[tag] = true;
	  }
	}

	/**
	 * Creates a new React class that is idempotent and capable of containing other
	 * React components. It accepts event listeners and DOM properties that are
	 * valid according to `DOMProperty`.
	 *
	 *  - Event listeners: `onClick`, `onMouseDown`, etc.
	 *  - DOM properties: `className`, `name`, `title`, etc.
	 *
	 * The `style` property functions differently from the DOM API. It accepts an
	 * object mapping of style properties to values.
	 *
	 * @constructor ReactDOMComponent
	 * @extends ReactMultiChild
	 */
	function ReactDOMComponent(tag) {
	  validateDangerousTag(tag);
	  this._tag = tag;
	  this._renderedChildren = null;
	  this._previousStyleCopy = null;
	  this._rootNodeID = null;
	}

	ReactDOMComponent.displayName = 'ReactDOMComponent';

	ReactDOMComponent.Mixin = {

	  construct: function(element) {
	    this._currentElement = element;
	  },

	  /**
	   * Generates root tag markup then recurses. This method has side effects and
	   * is not idempotent.
	   *
	   * @internal
	   * @param {string} rootID The root DOM ID for this node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {string} The computed markup.
	   */
	  mountComponent: function(rootID, transaction, context) {
	    this._rootNodeID = rootID;
	    assertValidProps(this._currentElement.props);
	    var closeTag = omittedCloseTags[this._tag] ? '' : '</' + this._tag + '>';
	    return (
	      this._createOpenTagMarkupAndPutListeners(transaction) +
	      this._createContentMarkup(transaction, context) +
	      closeTag
	    );
	  },

	  /**
	   * Creates markup for the open tag and all attributes.
	   *
	   * This method has side effects because events get registered.
	   *
	   * Iterating over object properties is faster than iterating over arrays.
	   * @see http://jsperf.com/obj-vs-arr-iteration
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {string} Markup of opening tag.
	   */
	  _createOpenTagMarkupAndPutListeners: function(transaction) {
	    var props = this._currentElement.props;
	    var ret = '<' + this._tag;

	    for (var propKey in props) {
	      if (!props.hasOwnProperty(propKey)) {
	        continue;
	      }
	      var propValue = props[propKey];
	      if (propValue == null) {
	        continue;
	      }
	      if (registrationNameModules.hasOwnProperty(propKey)) {
	        putListener(this._rootNodeID, propKey, propValue, transaction);
	      } else {
	        if (propKey === STYLE) {
	          if (propValue) {
	            propValue = this._previousStyleCopy = assign({}, props.style);
	          }
	          propValue = CSSPropertyOperations.createMarkupForStyles(propValue);
	        }
	        var markup =
	          DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
	        if (markup) {
	          ret += ' ' + markup;
	        }
	      }
	    }

	    // For static pages, no need to put React ID and checksum. Saves lots of
	    // bytes.
	    if (transaction.renderToStaticMarkup) {
	      return ret + '>';
	    }

	    var markupForID = DOMPropertyOperations.createMarkupForID(this._rootNodeID);
	    return ret + ' ' + markupForID + '>';
	  },

	  /**
	   * Creates markup for the content between the tags.
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} context
	   * @return {string} Content markup.
	   */
	  _createContentMarkup: function(transaction, context) {
	    var prefix = '';
	    if (this._tag === 'listing' ||
	        this._tag === 'pre' ||
	        this._tag === 'textarea') {
	      // Add an initial newline because browsers ignore the first newline in
	      // a <listing>, <pre>, or <textarea> as an "authoring convenience" -- see
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody.
	      prefix = '\n';
	    }

	    var props = this._currentElement.props;

	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        return prefix + innerHTML.__html;
	      }
	    } else {
	      var contentToUse =
	        CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        return prefix + escapeTextContentForBrowser(contentToUse);
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(
	          childrenToUse,
	          transaction,
	          context
	        );
	        return prefix + mountImages.join('');
	      }
	    }
	    return prefix;
	  },

	  receiveComponent: function(nextElement, transaction, context) {
	    var prevElement = this._currentElement;
	    this._currentElement = nextElement;
	    this.updateComponent(transaction, prevElement, nextElement, context);
	  },

	  /**
	   * Updates a native DOM component after it has already been allocated and
	   * attached to the DOM. Reconciles the root DOM node, then recurses.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevElement
	   * @param {ReactElement} nextElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function(transaction, prevElement, nextElement, context) {
	    assertValidProps(this._currentElement.props);
	    this._updateDOMProperties(prevElement.props, transaction);
	    this._updateDOMChildren(prevElement.props, transaction, context);
	  },

	  /**
	   * Reconciles the properties by detecting differences in property values and
	   * updating the DOM as necessary. This function is probably the single most
	   * critical path for performance optimization.
	   *
	   * TODO: Benchmark whether checking for changed values in memory actually
	   *       improves performance (especially statically positioned elements).
	   * TODO: Benchmark the effects of putting this at the top since 99% of props
	   *       do not change for a given reconciliation.
	   * TODO: Benchmark areas that can be improved with caching.
	   *
	   * @private
	   * @param {object} lastProps
	   * @param {ReactReconcileTransaction} transaction
	   */
	  _updateDOMProperties: function(lastProps, transaction) {
	    var nextProps = this._currentElement.props;
	    var propKey;
	    var styleName;
	    var styleUpdates;
	    for (propKey in lastProps) {
	      if (nextProps.hasOwnProperty(propKey) ||
	         !lastProps.hasOwnProperty(propKey)) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        var lastStyle = this._previousStyleCopy;
	        for (styleName in lastStyle) {
	          if (lastStyle.hasOwnProperty(styleName)) {
	            styleUpdates = styleUpdates || {};
	            styleUpdates[styleName] = '';
	          }
	        }
	        this._previousStyleCopy = null;
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        deleteListener(this._rootNodeID, propKey);
	      } else if (
	          DOMProperty.isStandardName[propKey] ||
	          DOMProperty.isCustomAttribute(propKey)) {
	        BackendIDOperations.deletePropertyByID(
	          this._rootNodeID,
	          propKey
	        );
	      }
	    }
	    for (propKey in nextProps) {
	      var nextProp = nextProps[propKey];
	      var lastProp = propKey === STYLE ?
	        this._previousStyleCopy :
	        lastProps[propKey];
	      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        if (nextProp) {
	          nextProp = this._previousStyleCopy = assign({}, nextProp);
	        } else {
	          this._previousStyleCopy = null;
	        }
	        if (lastProp) {
	          // Unset styles on `lastProp` but not on `nextProp`.
	          for (styleName in lastProp) {
	            if (lastProp.hasOwnProperty(styleName) &&
	                (!nextProp || !nextProp.hasOwnProperty(styleName))) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = '';
	            }
	          }
	          // Update styles that changed since `lastProp`.
	          for (styleName in nextProp) {
	            if (nextProp.hasOwnProperty(styleName) &&
	                lastProp[styleName] !== nextProp[styleName]) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = nextProp[styleName];
	            }
	          }
	        } else {
	          // Relies on `updateStylesByID` not mutating `styleUpdates`.
	          styleUpdates = nextProp;
	        }
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        putListener(this._rootNodeID, propKey, nextProp, transaction);
	      } else if (
	          DOMProperty.isStandardName[propKey] ||
	          DOMProperty.isCustomAttribute(propKey)) {
	        BackendIDOperations.updatePropertyByID(
	          this._rootNodeID,
	          propKey,
	          nextProp
	        );
	      }
	    }
	    if (styleUpdates) {
	      BackendIDOperations.updateStylesByID(
	        this._rootNodeID,
	        styleUpdates
	      );
	    }
	  },

	  /**
	   * Reconciles the children with the various properties that affect the
	   * children content.
	   *
	   * @param {object} lastProps
	   * @param {ReactReconcileTransaction} transaction
	   */
	  _updateDOMChildren: function(lastProps, transaction, context) {
	    var nextProps = this._currentElement.props;

	    var lastContent =
	      CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
	    var nextContent =
	      CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;

	    var lastHtml =
	      lastProps.dangerouslySetInnerHTML &&
	      lastProps.dangerouslySetInnerHTML.__html;
	    var nextHtml =
	      nextProps.dangerouslySetInnerHTML &&
	      nextProps.dangerouslySetInnerHTML.__html;

	    // Note the use of `!=` which checks for null or undefined.
	    var lastChildren = lastContent != null ? null : lastProps.children;
	    var nextChildren = nextContent != null ? null : nextProps.children;

	    // If we're switching from children to content/html or vice versa, remove
	    // the old content
	    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
	    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
	    if (lastChildren != null && nextChildren == null) {
	      this.updateChildren(null, transaction, context);
	    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
	      this.updateTextContent('');
	    }

	    if (nextContent != null) {
	      if (lastContent !== nextContent) {
	        this.updateTextContent('' + nextContent);
	      }
	    } else if (nextHtml != null) {
	      if (lastHtml !== nextHtml) {
	        BackendIDOperations.updateInnerHTMLByID(
	          this._rootNodeID,
	          nextHtml
	        );
	      }
	    } else if (nextChildren != null) {
	      this.updateChildren(nextChildren, transaction, context);
	    }
	  },

	  /**
	   * Destroys all event registrations for this instance. Does not remove from
	   * the DOM. That must be done by the parent.
	   *
	   * @internal
	   */
	  unmountComponent: function() {
	    this.unmountChildren();
	    ReactBrowserEventEmitter.deleteAllListeners(this._rootNodeID);
	    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);
	    this._rootNodeID = null;
	  }

	};

	ReactPerf.measureMethods(ReactDOMComponent, 'ReactDOMComponent', {
	  mountComponent: 'mountComponent',
	  updateComponent: 'updateComponent'
	});

	assign(
	  ReactDOMComponent.prototype,
	  ReactDOMComponent.Mixin,
	  ReactMultiChild.Mixin
	);

	ReactDOMComponent.injection = {
	  injectIDOperations: function(IDOperations) {
	    ReactDOMComponent.BackendIDOperations = BackendIDOperations = IDOperations;
	  }
	};

	module.exports = ReactDOMComponent;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 97 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMultiChild
	 * @typechecks static-only
	 */

	'use strict';

	var ReactComponentEnvironment = __webpack_require__(94);
	var ReactMultiChildUpdateTypes = __webpack_require__(73);

	var ReactReconciler = __webpack_require__(38);
	var ReactChildReconciler = __webpack_require__(98);

	/**
	 * Updating children of a component may trigger recursive updates. The depth is
	 * used to batch recursive updates to render markup more efficiently.
	 *
	 * @type {number}
	 * @private
	 */
	var updateDepth = 0;

	/**
	 * Queue of update configuration objects.
	 *
	 * Each object has a `type` property that is in `ReactMultiChildUpdateTypes`.
	 *
	 * @type {array<object>}
	 * @private
	 */
	var updateQueue = [];

	/**
	 * Queue of markup to be rendered.
	 *
	 * @type {array<string>}
	 * @private
	 */
	var markupQueue = [];

	/**
	 * Enqueues markup to be rendered and inserted at a supplied index.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {string} markup Markup that renders into an element.
	 * @param {number} toIndex Destination index.
	 * @private
	 */
	function enqueueMarkup(parentID, markup, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.INSERT_MARKUP,
	    markupIndex: markupQueue.push(markup) - 1,
	    textContent: null,
	    fromIndex: null,
	    toIndex: toIndex
	  });
	}

	/**
	 * Enqueues moving an existing element to another index.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {number} fromIndex Source index of the existing element.
	 * @param {number} toIndex Destination index of the element.
	 * @private
	 */
	function enqueueMove(parentID, fromIndex, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.MOVE_EXISTING,
	    markupIndex: null,
	    textContent: null,
	    fromIndex: fromIndex,
	    toIndex: toIndex
	  });
	}

	/**
	 * Enqueues removing an element at an index.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {number} fromIndex Index of the element to remove.
	 * @private
	 */
	function enqueueRemove(parentID, fromIndex) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.REMOVE_NODE,
	    markupIndex: null,
	    textContent: null,
	    fromIndex: fromIndex,
	    toIndex: null
	  });
	}

	/**
	 * Enqueues setting the text content.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {string} textContent Text content to set.
	 * @private
	 */
	function enqueueTextContent(parentID, textContent) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.TEXT_CONTENT,
	    markupIndex: null,
	    textContent: textContent,
	    fromIndex: null,
	    toIndex: null
	  });
	}

	/**
	 * Processes any enqueued updates.
	 *
	 * @private
	 */
	function processQueue() {
	  if (updateQueue.length) {
	    ReactComponentEnvironment.processChildrenUpdates(
	      updateQueue,
	      markupQueue
	    );
	    clearQueue();
	  }
	}

	/**
	 * Clears any enqueued updates.
	 *
	 * @private
	 */
	function clearQueue() {
	  updateQueue.length = 0;
	  markupQueue.length = 0;
	}

	/**
	 * ReactMultiChild are capable of reconciling multiple children.
	 *
	 * @class ReactMultiChild
	 * @internal
	 */
	var ReactMultiChild = {

	  /**
	   * Provides common functionality for components that must reconcile multiple
	   * children. This is used by `ReactDOMComponent` to mount, update, and
	   * unmount child components.
	   *
	   * @lends {ReactMultiChild.prototype}
	   */
	  Mixin: {

	    /**
	     * Generates a "mount image" for each of the supplied children. In the case
	     * of `ReactDOMComponent`, a mount image is a string of markup.
	     *
	     * @param {?object} nestedChildren Nested child maps.
	     * @return {array} An array of mounted representations.
	     * @internal
	     */
	    mountChildren: function(nestedChildren, transaction, context) {
	      var children = ReactChildReconciler.instantiateChildren(
	        nestedChildren, transaction, context
	      );
	      this._renderedChildren = children;
	      var mountImages = [];
	      var index = 0;
	      for (var name in children) {
	        if (children.hasOwnProperty(name)) {
	          var child = children[name];
	          // Inlined for performance, see `ReactInstanceHandles.createReactID`.
	          var rootID = this._rootNodeID + name;
	          var mountImage = ReactReconciler.mountComponent(
	            child,
	            rootID,
	            transaction,
	            context
	          );
	          child._mountIndex = index;
	          mountImages.push(mountImage);
	          index++;
	        }
	      }
	      return mountImages;
	    },

	    /**
	     * Replaces any rendered children with a text content string.
	     *
	     * @param {string} nextContent String of content.
	     * @internal
	     */
	    updateTextContent: function(nextContent) {
	      updateDepth++;
	      var errorThrown = true;
	      try {
	        var prevChildren = this._renderedChildren;
	        // Remove any rendered children.
	        ReactChildReconciler.unmountChildren(prevChildren);
	        // TODO: The setTextContent operation should be enough
	        for (var name in prevChildren) {
	          if (prevChildren.hasOwnProperty(name)) {
	            this._unmountChildByName(prevChildren[name], name);
	          }
	        }
	        // Set new text content.
	        this.setTextContent(nextContent);
	        errorThrown = false;
	      } finally {
	        updateDepth--;
	        if (!updateDepth) {
	          if (errorThrown) {
	            clearQueue();
	          } else {
	            processQueue();
	          }
	        }
	      }
	    },

	    /**
	     * Updates the rendered children with new children.
	     *
	     * @param {?object} nextNestedChildren Nested child maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @internal
	     */
	    updateChildren: function(nextNestedChildren, transaction, context) {
	      updateDepth++;
	      var errorThrown = true;
	      try {
	        this._updateChildren(nextNestedChildren, transaction, context);
	        errorThrown = false;
	      } finally {
	        updateDepth--;
	        if (!updateDepth) {
	          if (errorThrown) {
	            clearQueue();
	          } else {
	            processQueue();
	          }
	        }

	      }
	    },

	    /**
	     * Improve performance by isolating this hot code path from the try/catch
	     * block in `updateChildren`.
	     *
	     * @param {?object} nextNestedChildren Nested child maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @final
	     * @protected
	     */
	    _updateChildren: function(nextNestedChildren, transaction, context) {
	      var prevChildren = this._renderedChildren;
	      var nextChildren = ReactChildReconciler.updateChildren(
	        prevChildren, nextNestedChildren, transaction, context
	      );
	      this._renderedChildren = nextChildren;
	      if (!nextChildren && !prevChildren) {
	        return;
	      }
	      var name;
	      // `nextIndex` will increment for each child in `nextChildren`, but
	      // `lastIndex` will be the last index visited in `prevChildren`.
	      var lastIndex = 0;
	      var nextIndex = 0;
	      for (name in nextChildren) {
	        if (!nextChildren.hasOwnProperty(name)) {
	          continue;
	        }
	        var prevChild = prevChildren && prevChildren[name];
	        var nextChild = nextChildren[name];
	        if (prevChild === nextChild) {
	          this.moveChild(prevChild, nextIndex, lastIndex);
	          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	          prevChild._mountIndex = nextIndex;
	        } else {
	          if (prevChild) {
	            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
	            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	            this._unmountChildByName(prevChild, name);
	          }
	          // The child must be instantiated before it's mounted.
	          this._mountChildByNameAtIndex(
	            nextChild, name, nextIndex, transaction, context
	          );
	        }
	        nextIndex++;
	      }
	      // Remove children that are no longer present.
	      for (name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name) &&
	            !(nextChildren && nextChildren.hasOwnProperty(name))) {
	          this._unmountChildByName(prevChildren[name], name);
	        }
	      }
	    },

	    /**
	     * Unmounts all rendered children. This should be used to clean up children
	     * when this component is unmounted.
	     *
	     * @internal
	     */
	    unmountChildren: function() {
	      var renderedChildren = this._renderedChildren;
	      ReactChildReconciler.unmountChildren(renderedChildren);
	      this._renderedChildren = null;
	    },

	    /**
	     * Moves a child component to the supplied index.
	     *
	     * @param {ReactComponent} child Component to move.
	     * @param {number} toIndex Destination index of the element.
	     * @param {number} lastIndex Last index visited of the siblings of `child`.
	     * @protected
	     */
	    moveChild: function(child, toIndex, lastIndex) {
	      // If the index of `child` is less than `lastIndex`, then it needs to
	      // be moved. Otherwise, we do not need to move it because a child will be
	      // inserted or moved before `child`.
	      if (child._mountIndex < lastIndex) {
	        enqueueMove(this._rootNodeID, child._mountIndex, toIndex);
	      }
	    },

	    /**
	     * Creates a child component.
	     *
	     * @param {ReactComponent} child Component to create.
	     * @param {string} mountImage Markup to insert.
	     * @protected
	     */
	    createChild: function(child, mountImage) {
	      enqueueMarkup(this._rootNodeID, mountImage, child._mountIndex);
	    },

	    /**
	     * Removes a child component.
	     *
	     * @param {ReactComponent} child Child to remove.
	     * @protected
	     */
	    removeChild: function(child) {
	      enqueueRemove(this._rootNodeID, child._mountIndex);
	    },

	    /**
	     * Sets this text content string.
	     *
	     * @param {string} textContent Text content to set.
	     * @protected
	     */
	    setTextContent: function(textContent) {
	      enqueueTextContent(this._rootNodeID, textContent);
	    },

	    /**
	     * Mounts a child with the supplied name.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to mount.
	     * @param {string} name Name of the child.
	     * @param {number} index Index at which to insert the child.
	     * @param {ReactReconcileTransaction} transaction
	     * @private
	     */
	    _mountChildByNameAtIndex: function(
	      child,
	      name,
	      index,
	      transaction,
	      context) {
	      // Inlined for performance, see `ReactInstanceHandles.createReactID`.
	      var rootID = this._rootNodeID + name;
	      var mountImage = ReactReconciler.mountComponent(
	        child,
	        rootID,
	        transaction,
	        context
	      );
	      child._mountIndex = index;
	      this.createChild(child, mountImage);
	    },

	    /**
	     * Unmounts a rendered child by name.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to unmount.
	     * @param {string} name Name of the child in `this._renderedChildren`.
	     * @private
	     */
	    _unmountChildByName: function(child, name) {
	      this.removeChild(child);
	      child._mountIndex = null;
	    }

	  }

	};

	module.exports = ReactMultiChild;


/***/ },
/* 98 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildReconciler
	 * @typechecks static-only
	 */

	'use strict';

	var ReactReconciler = __webpack_require__(38);

	var flattenChildren = __webpack_require__(99);
	var instantiateReactComponent = __webpack_require__(92);
	var shouldUpdateReactComponent = __webpack_require__(95);

	/**
	 * ReactChildReconciler provides helpers for initializing or updating a set of
	 * children. Its output is suitable for passing it onto ReactMultiChild which
	 * does diffed reordering and insertion.
	 */
	var ReactChildReconciler = {

	  /**
	   * Generates a "mount image" for each of the supplied children. In the case
	   * of `ReactDOMComponent`, a mount image is a string of markup.
	   *
	   * @param {?object} nestedChildNodes Nested child maps.
	   * @return {?object} A set of child instances.
	   * @internal
	   */
	  instantiateChildren: function(nestedChildNodes, transaction, context) {
	    var children = flattenChildren(nestedChildNodes);
	    for (var name in children) {
	      if (children.hasOwnProperty(name)) {
	        var child = children[name];
	        // The rendered children must be turned into instances as they're
	        // mounted.
	        var childInstance = instantiateReactComponent(child, null);
	        children[name] = childInstance;
	      }
	    }
	    return children;
	  },

	  /**
	   * Updates the rendered children and returns a new set of children.
	   *
	   * @param {?object} prevChildren Previously initialized set of children.
	   * @param {?object} nextNestedChildNodes Nested child maps.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @return {?object} A new set of child instances.
	   * @internal
	   */
	  updateChildren: function(
	    prevChildren,
	    nextNestedChildNodes,
	    transaction,
	    context) {
	    // We currently don't have a way to track moves here but if we use iterators
	    // instead of for..in we can zip the iterators and check if an item has
	    // moved.
	    // TODO: If nothing has changed, return the prevChildren object so that we
	    // can quickly bailout if nothing has changed.
	    var nextChildren = flattenChildren(nextNestedChildNodes);
	    if (!nextChildren && !prevChildren) {
	      return null;
	    }
	    var name;
	    for (name in nextChildren) {
	      if (!nextChildren.hasOwnProperty(name)) {
	        continue;
	      }
	      var prevChild = prevChildren && prevChildren[name];
	      var prevElement = prevChild && prevChild._currentElement;
	      var nextElement = nextChildren[name];
	      if (shouldUpdateReactComponent(prevElement, nextElement)) {
	        ReactReconciler.receiveComponent(
	          prevChild, nextElement, transaction, context
	        );
	        nextChildren[name] = prevChild;
	      } else {
	        if (prevChild) {
	          ReactReconciler.unmountComponent(prevChild, name);
	        }
	        // The child must be instantiated before it's mounted.
	        var nextChildInstance = instantiateReactComponent(
	          nextElement,
	          null
	        );
	        nextChildren[name] = nextChildInstance;
	      }
	    }
	    // Unmount children that are no longer present.
	    for (name in prevChildren) {
	      if (prevChildren.hasOwnProperty(name) &&
	          !(nextChildren && nextChildren.hasOwnProperty(name))) {
	        ReactReconciler.unmountComponent(prevChildren[name]);
	      }
	    }
	    return nextChildren;
	  },

	  /**
	   * Unmounts all rendered children. This should be used to clean up children
	   * when this component is unmounted.
	   *
	   * @param {?object} renderedChildren Previously initialized set of children.
	   * @internal
	   */
	  unmountChildren: function(renderedChildren) {
	    for (var name in renderedChildren) {
	      var renderedChild = renderedChildren[name];
	      ReactReconciler.unmountComponent(renderedChild);
	    }
	  }

	};

	module.exports = ReactChildReconciler;


/***/ },
/* 99 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule flattenChildren
	 */

	'use strict';

	var traverseAllChildren = __webpack_require__(27);
	var warning = __webpack_require__(24);

	/**
	 * @param {function} traverseContext Context passed through traversal.
	 * @param {?ReactComponent} child React child component.
	 * @param {!string} name String name of key path to child.
	 */
	function flattenSingleChildIntoContext(traverseContext, child, name) {
	  // We found a component instance.
	  var result = traverseContext;
	  var keyUnique = !result.hasOwnProperty(name);
	  if ("production" !== process.env.NODE_ENV) {
	    ("production" !== process.env.NODE_ENV ? warning(
	      keyUnique,
	      'flattenChildren(...): Encountered two children with the same key, ' +
	      '`%s`. Child keys must be unique; when two children share a key, only ' +
	      'the first child will be used.',
	      name
	    ) : null);
	  }
	  if (keyUnique && child != null) {
	    result[name] = child;
	  }
	}

	/**
	 * Flattens children that are typically specified as `props.children`. Any null
	 * children will not be included in the resulting object.
	 * @return {!object} flattened children keyed by name.
	 */
	function flattenChildren(children) {
	  if (children == null) {
	    return children;
	  }
	  var result = {};
	  traverseAllChildren(children, flattenSingleChildIntoContext, result);
	  return result;
	}

	module.exports = flattenChildren;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 100 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultInjection
	 */

	'use strict';

	var BeforeInputEventPlugin = __webpack_require__(101);
	var ChangeEventPlugin = __webpack_require__(109);
	var ClientReactRootIndex = __webpack_require__(111);
	var DefaultEventPluginOrder = __webpack_require__(112);
	var EnterLeaveEventPlugin = __webpack_require__(113);
	var ExecutionEnvironment = __webpack_require__(60);
	var HTMLDOMPropertyConfig = __webpack_require__(117);
	var MobileSafariClickEventPlugin = __webpack_require__(118);
	var ReactBrowserComponentMixin = __webpack_require__(119);
	var ReactClass = __webpack_require__(46);
	var ReactComponentBrowserEnvironment =
	  __webpack_require__(56);
	var ReactDefaultBatchingStrategy = __webpack_require__(121);
	var ReactDOMComponent = __webpack_require__(96);
	var ReactDOMButton = __webpack_require__(122);
	var ReactDOMForm = __webpack_require__(125);
	var ReactDOMImg = __webpack_require__(127);
	var ReactDOMIDOperations = __webpack_require__(57);
	var ReactDOMIframe = __webpack_require__(128);
	var ReactDOMInput = __webpack_require__(129);
	var ReactDOMOption = __webpack_require__(132);
	var ReactDOMSelect = __webpack_require__(133);
	var ReactDOMTextarea = __webpack_require__(134);
	var ReactDOMTextComponent = __webpack_require__(51);
	var ReactElement = __webpack_require__(21);
	var ReactEventListener = __webpack_require__(135);
	var ReactInjection = __webpack_require__(138);
	var ReactInstanceHandles = __webpack_require__(28);
	var ReactMount = __webpack_require__(76);
	var ReactReconcileTransaction = __webpack_require__(139);
	var SelectEventPlugin = __webpack_require__(145);
	var ServerReactRootIndex = __webpack_require__(147);
	var SimpleEventPlugin = __webpack_require__(148);
	var SVGDOMPropertyConfig = __webpack_require__(157);

	var createFullPageComponent = __webpack_require__(158);

	function autoGenerateWrapperClass(type) {
	  return ReactClass.createClass({
	    tagName: type.toUpperCase(),
	    render: function() {
	      return new ReactElement(
	        type,
	        null,
	        null,
	        null,
	        null,
	        this.props
	      );
	    }
	  });
	}

	function inject() {
	  ReactInjection.EventEmitter.injectReactEventListener(
	    ReactEventListener
	  );

	  /**
	   * Inject modules for resolving DOM hierarchy and plugin ordering.
	   */
	  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
	  ReactInjection.EventPluginHub.injectInstanceHandle(ReactInstanceHandles);
	  ReactInjection.EventPluginHub.injectMount(ReactMount);

	  /**
	   * Some important event plugins included by default (without having to require
	   * them).
	   */
	  ReactInjection.EventPluginHub.injectEventPluginsByName({
	    SimpleEventPlugin: SimpleEventPlugin,
	    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
	    ChangeEventPlugin: ChangeEventPlugin,
	    MobileSafariClickEventPlugin: MobileSafariClickEventPlugin,
	    SelectEventPlugin: SelectEventPlugin,
	    BeforeInputEventPlugin: BeforeInputEventPlugin
	  });

	  ReactInjection.NativeComponent.injectGenericComponentClass(
	    ReactDOMComponent
	  );

	  ReactInjection.NativeComponent.injectTextComponentClass(
	    ReactDOMTextComponent
	  );

	  ReactInjection.NativeComponent.injectAutoWrapper(
	    autoGenerateWrapperClass
	  );

	  // This needs to happen before createFullPageComponent() otherwise the mixin
	  // won't be included.
	  ReactInjection.Class.injectMixin(ReactBrowserComponentMixin);

	  ReactInjection.NativeComponent.injectComponentClasses({
	    'button': ReactDOMButton,
	    'form': ReactDOMForm,
	    'iframe': ReactDOMIframe,
	    'img': ReactDOMImg,
	    'input': ReactDOMInput,
	    'option': ReactDOMOption,
	    'select': ReactDOMSelect,
	    'textarea': ReactDOMTextarea,

	    'html': createFullPageComponent('html'),
	    'head': createFullPageComponent('head'),
	    'body': createFullPageComponent('body')
	  });

	  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);

	  ReactInjection.EmptyComponent.injectEmptyComponent('noscript');

	  ReactInjection.Updates.injectReconcileTransaction(
	    ReactReconcileTransaction
	  );
	  ReactInjection.Updates.injectBatchingStrategy(
	    ReactDefaultBatchingStrategy
	  );

	  ReactInjection.RootIndex.injectCreateReactRootIndex(
	    ExecutionEnvironment.canUseDOM ?
	      ClientReactRootIndex.createReactRootIndex :
	      ServerReactRootIndex.createReactRootIndex
	  );

	  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
	  ReactInjection.DOMComponent.injectIDOperations(ReactDOMIDOperations);

	  if ("production" !== process.env.NODE_ENV) {
	    var url = (ExecutionEnvironment.canUseDOM && window.location.href) || '';
	    if ((/[?&]react_perf\b/).test(url)) {
	      var ReactDefaultPerf = __webpack_require__(159);
	      ReactDefaultPerf.start();
	    }
	  }
	}

	module.exports = {
	  inject: inject
	};

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 101 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015 Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule BeforeInputEventPlugin
	 * @typechecks static-only
	 */

	'use strict';

	var EventConstants = __webpack_require__(15);
	var EventPropagators = __webpack_require__(102);
	var ExecutionEnvironment = __webpack_require__(60);
	var FallbackCompositionState = __webpack_require__(103);
	var SyntheticCompositionEvent = __webpack_require__(105);
	var SyntheticInputEvent = __webpack_require__(108);

	var keyOf = __webpack_require__(48);

	var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
	var START_KEYCODE = 229;

	var canUseCompositionEvent = (
	  ExecutionEnvironment.canUseDOM &&
	  'CompositionEvent' in window
	);

	var documentMode = null;
	if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
	  documentMode = document.documentMode;
	}

	// Webkit offers a very useful `textInput` event that can be used to
	// directly represent `beforeInput`. The IE `textinput` event is not as
	// useful, so we don't use it.
	var canUseTextInputEvent = (
	  ExecutionEnvironment.canUseDOM &&
	  'TextEvent' in window &&
	  !documentMode &&
	  !isPresto()
	);

	// In IE9+, we have access to composition events, but the data supplied
	// by the native compositionend event may be incorrect. Japanese ideographic
	// spaces, for instance (\u3000) are not recorded correctly.
	var useFallbackCompositionData = (
	  ExecutionEnvironment.canUseDOM &&
	  (
	    (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11)
	  )
	);

	/**
	 * Opera <= 12 includes TextEvent in window, but does not fire
	 * text input events. Rely on keypress instead.
	 */
	function isPresto() {
	  var opera = window.opera;
	  return (
	    typeof opera === 'object' &&
	    typeof opera.version === 'function' &&
	    parseInt(opera.version(), 10) <= 12
	  );
	}

	var SPACEBAR_CODE = 32;
	var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

	var topLevelTypes = EventConstants.topLevelTypes;

	// Events and their corresponding property names.
	var eventTypes = {
	  beforeInput: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onBeforeInput: null}),
	      captured: keyOf({onBeforeInputCapture: null})
	    },
	    dependencies: [
	      topLevelTypes.topCompositionEnd,
	      topLevelTypes.topKeyPress,
	      topLevelTypes.topTextInput,
	      topLevelTypes.topPaste
	    ]
	  },
	  compositionEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onCompositionEnd: null}),
	      captured: keyOf({onCompositionEndCapture: null})
	    },
	    dependencies: [
	      topLevelTypes.topBlur,
	      topLevelTypes.topCompositionEnd,
	      topLevelTypes.topKeyDown,
	      topLevelTypes.topKeyPress,
	      topLevelTypes.topKeyUp,
	      topLevelTypes.topMouseDown
	    ]
	  },
	  compositionStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onCompositionStart: null}),
	      captured: keyOf({onCompositionStartCapture: null})
	    },
	    dependencies: [
	      topLevelTypes.topBlur,
	      topLevelTypes.topCompositionStart,
	      topLevelTypes.topKeyDown,
	      topLevelTypes.topKeyPress,
	      topLevelTypes.topKeyUp,
	      topLevelTypes.topMouseDown
	    ]
	  },
	  compositionUpdate: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onCompositionUpdate: null}),
	      captured: keyOf({onCompositionUpdateCapture: null})
	    },
	    dependencies: [
	      topLevelTypes.topBlur,
	      topLevelTypes.topCompositionUpdate,
	      topLevelTypes.topKeyDown,
	      topLevelTypes.topKeyPress,
	      topLevelTypes.topKeyUp,
	      topLevelTypes.topMouseDown
	    ]
	  }
	};

	// Track whether we've ever handled a keypress on the space key.
	var hasSpaceKeypress = false;

	/**
	 * Return whether a native keypress event is assumed to be a command.
	 * This is required because Firefox fires `keypress` events for key commands
	 * (cut, copy, select-all, etc.) even though no character is inserted.
	 */
	function isKeypressCommand(nativeEvent) {
	  return (
	    (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
	    // ctrlKey && altKey is equivalent to AltGr, and is not a command.
	    !(nativeEvent.ctrlKey && nativeEvent.altKey)
	  );
	}


	/**
	 * Translate native top level events into event types.
	 *
	 * @param {string} topLevelType
	 * @return {object}
	 */
	function getCompositionEventType(topLevelType) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionStart:
	      return eventTypes.compositionStart;
	    case topLevelTypes.topCompositionEnd:
	      return eventTypes.compositionEnd;
	    case topLevelTypes.topCompositionUpdate:
	      return eventTypes.compositionUpdate;
	  }
	}

	/**
	 * Does our fallback best-guess model think this event signifies that
	 * composition has begun?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionStart(topLevelType, nativeEvent) {
	  return (
	    topLevelType === topLevelTypes.topKeyDown &&
	    nativeEvent.keyCode === START_KEYCODE
	  );
	}

	/**
	 * Does our fallback mode think that this event is the end of composition?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionEnd(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topKeyUp:
	      // Command keys insert or clear IME input.
	      return (END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1);
	    case topLevelTypes.topKeyDown:
	      // Expect IME keyCode on each keydown. If we get any other
	      // code we must have exited earlier.
	      return (nativeEvent.keyCode !== START_KEYCODE);
	    case topLevelTypes.topKeyPress:
	    case topLevelTypes.topMouseDown:
	    case topLevelTypes.topBlur:
	      // Events are not possible without cancelling IME.
	      return true;
	    default:
	      return false;
	  }
	}

	/**
	 * Google Input Tools provides composition data via a CustomEvent,
	 * with the `data` property populated in the `detail` object. If this
	 * is available on the event object, use it. If not, this is a plain
	 * composition event and we have nothing special to extract.
	 *
	 * @param {object} nativeEvent
	 * @return {?string}
	 */
	function getDataFromCustomEvent(nativeEvent) {
	  var detail = nativeEvent.detail;
	  if (typeof detail === 'object' && 'data' in detail) {
	    return detail.data;
	  }
	  return null;
	}

	// Track the current IME composition fallback object, if any.
	var currentComposition = null;

	/**
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {DOMEventTarget} topLevelTarget The listening component root node.
	 * @param {string} topLevelTargetID ID of `topLevelTarget`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?object} A SyntheticCompositionEvent.
	 */
	function extractCompositionEvent(
	  topLevelType,
	  topLevelTarget,
	  topLevelTargetID,
	  nativeEvent
	) {
	  var eventType;
	  var fallbackData;

	  if (canUseCompositionEvent) {
	    eventType = getCompositionEventType(topLevelType);
	  } else if (!currentComposition) {
	    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
	      eventType = eventTypes.compositionStart;
	    }
	  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	    eventType = eventTypes.compositionEnd;
	  }

	  if (!eventType) {
	    return null;
	  }

	  if (useFallbackCompositionData) {
	    // The current composition is stored statically and must not be
	    // overwritten while composition continues.
	    if (!currentComposition && eventType === eventTypes.compositionStart) {
	      currentComposition = FallbackCompositionState.getPooled(topLevelTarget);
	    } else if (eventType === eventTypes.compositionEnd) {
	      if (currentComposition) {
	        fallbackData = currentComposition.getData();
	      }
	    }
	  }

	  var event = SyntheticCompositionEvent.getPooled(
	    eventType,
	    topLevelTargetID,
	    nativeEvent
	  );

	  if (fallbackData) {
	    // Inject data generated from fallback path into the synthetic event.
	    // This matches the property of native CompositionEventInterface.
	    event.data = fallbackData;
	  } else {
	    var customData = getDataFromCustomEvent(nativeEvent);
	    if (customData !== null) {
	      event.data = customData;
	    }
	  }

	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}

	/**
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The string corresponding to this `beforeInput` event.
	 */
	function getNativeBeforeInputChars(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionEnd:
	      return getDataFromCustomEvent(nativeEvent);
	    case topLevelTypes.topKeyPress:
	      /**
	       * If native `textInput` events are available, our goal is to make
	       * use of them. However, there is a special case: the spacebar key.
	       * In Webkit, preventing default on a spacebar `textInput` event
	       * cancels character insertion, but it *also* causes the browser
	       * to fall back to its default spacebar behavior of scrolling the
	       * page.
	       *
	       * Tracking at:
	       * https://code.google.com/p/chromium/issues/detail?id=355103
	       *
	       * To avoid this issue, use the keypress event as if no `textInput`
	       * event is available.
	       */
	      var which = nativeEvent.which;
	      if (which !== SPACEBAR_CODE) {
	        return null;
	      }

	      hasSpaceKeypress = true;
	      return SPACEBAR_CHAR;

	    case topLevelTypes.topTextInput:
	      // Record the characters to be added to the DOM.
	      var chars = nativeEvent.data;

	      // If it's a spacebar character, assume that we have already handled
	      // it at the keypress level and bail immediately. Android Chrome
	      // doesn't give us keycodes, so we need to blacklist it.
	      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
	        return null;
	      }

	      return chars;

	    default:
	      // For other native event types, do nothing.
	      return null;
	  }
	}

	/**
	 * For browsers that do not provide the `textInput` event, extract the
	 * appropriate string to use for SyntheticInputEvent.
	 *
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The fallback string for this `beforeInput` event.
	 */
	function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
	  // If we are currently composing (IME) and using a fallback to do so,
	  // try to extract the composed characters from the fallback object.
	  if (currentComposition) {
	    if (
	      topLevelType === topLevelTypes.topCompositionEnd ||
	      isFallbackCompositionEnd(topLevelType, nativeEvent)
	    ) {
	      var chars = currentComposition.getData();
	      FallbackCompositionState.release(currentComposition);
	      currentComposition = null;
	      return chars;
	    }
	    return null;
	  }

	  switch (topLevelType) {
	    case topLevelTypes.topPaste:
	      // If a paste event occurs after a keypress, throw out the input
	      // chars. Paste events should not lead to BeforeInput events.
	      return null;
	    case topLevelTypes.topKeyPress:
	      /**
	       * As of v27, Firefox may fire keypress events even when no character
	       * will be inserted. A few possibilities:
	       *
	       * - `which` is `0`. Arrow keys, Esc key, etc.
	       *
	       * - `which` is the pressed key code, but no char is available.
	       *   Ex: 'AltGr + d` in Polish. There is no modified character for
	       *   this key combination and no character is inserted into the
	       *   document, but FF fires the keypress for char code `100` anyway.
	       *   No `input` event will occur.
	       *
	       * - `which` is the pressed key code, but a command combination is
	       *   being used. Ex: `Cmd+C`. No character is inserted, and no
	       *   `input` event will occur.
	       */
	      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
	        return String.fromCharCode(nativeEvent.which);
	      }
	      return null;
	    case topLevelTypes.topCompositionEnd:
	      return useFallbackCompositionData ? null : nativeEvent.data;
	    default:
	      return null;
	  }
	}

	/**
	 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
	 * `textInput` or fallback behavior.
	 *
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {DOMEventTarget} topLevelTarget The listening component root node.
	 * @param {string} topLevelTargetID ID of `topLevelTarget`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?object} A SyntheticInputEvent.
	 */
	function extractBeforeInputEvent(
	  topLevelType,
	  topLevelTarget,
	  topLevelTargetID,
	  nativeEvent
	) {
	  var chars;

	  if (canUseTextInputEvent) {
	    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
	  } else {
	    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
	  }

	  // If no characters are being inserted, no BeforeInput event should
	  // be fired.
	  if (!chars) {
	    return null;
	  }

	  var event = SyntheticInputEvent.getPooled(
	    eventTypes.beforeInput,
	    topLevelTargetID,
	    nativeEvent
	  );

	  event.data = chars;
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}

	/**
	 * Create an `onBeforeInput` event to match
	 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
	 *
	 * This event plugin is based on the native `textInput` event
	 * available in Chrome, Safari, Opera, and IE. This event fires after
	 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
	 *
	 * `beforeInput` is spec'd but not implemented in any browsers, and
	 * the `input` event does not provide any useful information about what has
	 * actually been added, contrary to the spec. Thus, `textInput` is the best
	 * available event to identify the characters that have actually been inserted
	 * into the target node.
	 *
	 * This plugin is also responsible for emitting `composition` events, thus
	 * allowing us to share composition fallback code for both `beforeInput` and
	 * `composition` event types.
	 */
	var BeforeInputEventPlugin = {

	  eventTypes: eventTypes,

	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function(
	    topLevelType,
	    topLevelTarget,
	    topLevelTargetID,
	    nativeEvent
	  ) {
	    return [
	      extractCompositionEvent(
	        topLevelType,
	        topLevelTarget,
	        topLevelTargetID,
	        nativeEvent
	      ),
	      extractBeforeInputEvent(
	        topLevelType,
	        topLevelTarget,
	        topLevelTargetID,
	        nativeEvent
	      )
	    ];
	  }
	};

	module.exports = BeforeInputEventPlugin;


/***/ },
/* 102 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPropagators
	 */

	'use strict';

	var EventConstants = __webpack_require__(15);
	var EventPluginHub = __webpack_require__(78);

	var accumulateInto = __webpack_require__(80);
	var forEachAccumulated = __webpack_require__(81);

	var PropagationPhases = EventConstants.PropagationPhases;
	var getListener = EventPluginHub.getListener;

	/**
	 * Some event types have a notion of different registration names for different
	 * "phases" of propagation. This finds listeners by a given phase.
	 */
	function listenerAtPhase(id, event, propagationPhase) {
	  var registrationName =
	    event.dispatchConfig.phasedRegistrationNames[propagationPhase];
	  return getListener(id, registrationName);
	}

	/**
	 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
	 * here, allows us to not have to bind or create functions for each event.
	 * Mutating the event's members allows us to not have to create a wrapping
	 * "dispatch" object that pairs the event with the listener.
	 */
	function accumulateDirectionalDispatches(domID, upwards, event) {
	  if ("production" !== process.env.NODE_ENV) {
	    if (!domID) {
	      throw new Error('Dispatching id must not be null');
	    }
	  }
	  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;
	  var listener = listenerAtPhase(domID, event, phase);
	  if (listener) {
	    event._dispatchListeners =
	      accumulateInto(event._dispatchListeners, listener);
	    event._dispatchIDs = accumulateInto(event._dispatchIDs, domID);
	  }
	}

	/**
	 * Collect dispatches (must be entirely collected before dispatching - see unit
	 * tests). Lazily allocate the array to conserve memory.  We must loop through
	 * each event and perform the traversal for each one. We can not perform a
	 * single traversal for the entire collection of events because each event may
	 * have a different target.
	 */
	function accumulateTwoPhaseDispatchesSingle(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    EventPluginHub.injection.getInstanceHandle().traverseTwoPhase(
	      event.dispatchMarker,
	      accumulateDirectionalDispatches,
	      event
	    );
	  }
	}


	/**
	 * Accumulates without regard to direction, does not look for phased
	 * registration names. Same as `accumulateDirectDispatchesSingle` but without
	 * requiring that the `dispatchMarker` be the same as the dispatched ID.
	 */
	function accumulateDispatches(id, ignoredDirection, event) {
	  if (event && event.dispatchConfig.registrationName) {
	    var registrationName = event.dispatchConfig.registrationName;
	    var listener = getListener(id, registrationName);
	    if (listener) {
	      event._dispatchListeners =
	        accumulateInto(event._dispatchListeners, listener);
	      event._dispatchIDs = accumulateInto(event._dispatchIDs, id);
	    }
	  }
	}

	/**
	 * Accumulates dispatches on an `SyntheticEvent`, but only for the
	 * `dispatchMarker`.
	 * @param {SyntheticEvent} event
	 */
	function accumulateDirectDispatchesSingle(event) {
	  if (event && event.dispatchConfig.registrationName) {
	    accumulateDispatches(event.dispatchMarker, null, event);
	  }
	}

	function accumulateTwoPhaseDispatches(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
	}

	function accumulateEnterLeaveDispatches(leave, enter, fromID, toID) {
	  EventPluginHub.injection.getInstanceHandle().traverseEnterLeave(
	    fromID,
	    toID,
	    accumulateDispatches,
	    leave,
	    enter
	  );
	}


	function accumulateDirectDispatches(events) {
	  forEachAccumulated(events, accumulateDirectDispatchesSingle);
	}



	/**
	 * A small set of propagation patterns, each of which will accept a small amount
	 * of information, and generate a set of "dispatch ready event objects" - which
	 * are sets of events that have already been annotated with a set of dispatched
	 * listener functions/ids. The API is designed this way to discourage these
	 * propagation strategies from actually executing the dispatches, since we
	 * always want to collect the entire set of dispatches before executing event a
	 * single one.
	 *
	 * @constructor EventPropagators
	 */
	var EventPropagators = {
	  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
	  accumulateDirectDispatches: accumulateDirectDispatches,
	  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
	};

	module.exports = EventPropagators;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 103 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule FallbackCompositionState
	 * @typechecks static-only
	 */

	'use strict';

	var PooledClass = __webpack_require__(19);

	var assign = __webpack_require__(10);
	var getTextContentAccessor = __webpack_require__(104);

	/**
	 * This helper class stores information about text content of a target node,
	 * allowing comparison of content before and after a given event.
	 *
	 * Identify the node where selection currently begins, then observe
	 * both its text content and its current position in the DOM. Since the
	 * browser may natively replace the target node during composition, we can
	 * use its position to find its replacement.
	 *
	 * @param {DOMEventTarget} root
	 */
	function FallbackCompositionState(root) {
	  this._root = root;
	  this._startText = this.getText();
	  this._fallbackText = null;
	}

	assign(FallbackCompositionState.prototype, {
	  /**
	   * Get current text of input.
	   *
	   * @return {string}
	   */
	  getText: function() {
	    if ('value' in this._root) {
	      return this._root.value;
	    }
	    return this._root[getTextContentAccessor()];
	  },

	  /**
	   * Determine the differing substring between the initially stored
	   * text content and the current content.
	   *
	   * @return {string}
	   */
	  getData: function() {
	    if (this._fallbackText) {
	      return this._fallbackText;
	    }

	    var start;
	    var startValue = this._startText;
	    var startLength = startValue.length;
	    var end;
	    var endValue = this.getText();
	    var endLength = endValue.length;

	    for (start = 0; start < startLength; start++) {
	      if (startValue[start] !== endValue[start]) {
	        break;
	      }
	    }

	    var minEnd = startLength - start;
	    for (end = 1; end <= minEnd; end++) {
	      if (startValue[startLength - end] !== endValue[endLength - end]) {
	        break;
	      }
	    }

	    var sliceTail = end > 1 ? 1 - end : undefined;
	    this._fallbackText = endValue.slice(start, sliceTail);
	    return this._fallbackText;
	  }
	});

	PooledClass.addPoolingTo(FallbackCompositionState);

	module.exports = FallbackCompositionState;


/***/ },
/* 104 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getTextContentAccessor
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(60);

	var contentKey = null;

	/**
	 * Gets the key used to access text content on a DOM node.
	 *
	 * @return {?string} Key used to access text content.
	 * @internal
	 */
	function getTextContentAccessor() {
	  if (!contentKey && ExecutionEnvironment.canUseDOM) {
	    // Prefer textContent to innerText because many browsers support both but
	    // SVG <text> elements don't support innerText even when <div> does.
	    contentKey = 'textContent' in document.documentElement ?
	      'textContent' :
	      'innerText';
	  }
	  return contentKey;
	}

	module.exports = getTextContentAccessor;


/***/ },
/* 105 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticCompositionEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(106);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
	 */
	var CompositionEventInterface = {
	  data: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticCompositionEvent(
	  dispatchConfig,
	  dispatchMarker,
	  nativeEvent) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
	}

	SyntheticEvent.augmentClass(
	  SyntheticCompositionEvent,
	  CompositionEventInterface
	);

	module.exports = SyntheticCompositionEvent;


/***/ },
/* 106 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticEvent
	 * @typechecks static-only
	 */

	'use strict';

	var PooledClass = __webpack_require__(19);

	var assign = __webpack_require__(10);
	var emptyFunction = __webpack_require__(25);
	var getEventTarget = __webpack_require__(107);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var EventInterface = {
	  type: null,
	  target: getEventTarget,
	  // currentTarget is set when dispatching; no use in copying it here
	  currentTarget: emptyFunction.thatReturnsNull,
	  eventPhase: null,
	  bubbles: null,
	  cancelable: null,
	  timeStamp: function(event) {
	    return event.timeStamp || Date.now();
	  },
	  defaultPrevented: null,
	  isTrusted: null
	};

	/**
	 * Synthetic events are dispatched by event plugins, typically in response to a
	 * top-level event delegation handler.
	 *
	 * These systems should generally use pooling to reduce the frequency of garbage
	 * collection. The system should check `isPersistent` to determine whether the
	 * event should be released into the pool after being dispatched. Users that
	 * need a persisted event should invoke `persist`.
	 *
	 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
	 * normalizing browser quirks. Subclasses do not necessarily have to implement a
	 * DOM interface; custom application-specific events can also subclass this.
	 *
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 */
	function SyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent) {
	  this.dispatchConfig = dispatchConfig;
	  this.dispatchMarker = dispatchMarker;
	  this.nativeEvent = nativeEvent;

	  var Interface = this.constructor.Interface;
	  for (var propName in Interface) {
	    if (!Interface.hasOwnProperty(propName)) {
	      continue;
	    }
	    var normalize = Interface[propName];
	    if (normalize) {
	      this[propName] = normalize(nativeEvent);
	    } else {
	      this[propName] = nativeEvent[propName];
	    }
	  }

	  var defaultPrevented = nativeEvent.defaultPrevented != null ?
	    nativeEvent.defaultPrevented :
	    nativeEvent.returnValue === false;
	  if (defaultPrevented) {
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  } else {
	    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
	  }
	  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
	}

	assign(SyntheticEvent.prototype, {

	  preventDefault: function() {
	    this.defaultPrevented = true;
	    var event = this.nativeEvent;
	    if (event.preventDefault) {
	      event.preventDefault();
	    } else {
	      event.returnValue = false;
	    }
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  },

	  stopPropagation: function() {
	    var event = this.nativeEvent;
	    if (event.stopPropagation) {
	      event.stopPropagation();
	    } else {
	      event.cancelBubble = true;
	    }
	    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
	  },

	  /**
	   * We release all dispatched `SyntheticEvent`s after each event loop, adding
	   * them back into the pool. This allows a way to hold onto a reference that
	   * won't be added back into the pool.
	   */
	  persist: function() {
	    this.isPersistent = emptyFunction.thatReturnsTrue;
	  },

	  /**
	   * Checks if this event should be released back into the pool.
	   *
	   * @return {boolean} True if this should not be released, false otherwise.
	   */
	  isPersistent: emptyFunction.thatReturnsFalse,

	  /**
	   * `PooledClass` looks for `destructor` on each instance it releases.
	   */
	  destructor: function() {
	    var Interface = this.constructor.Interface;
	    for (var propName in Interface) {
	      this[propName] = null;
	    }
	    this.dispatchConfig = null;
	    this.dispatchMarker = null;
	    this.nativeEvent = null;
	  }

	});

	SyntheticEvent.Interface = EventInterface;

	/**
	 * Helper to reduce boilerplate when creating subclasses.
	 *
	 * @param {function} Class
	 * @param {?object} Interface
	 */
	SyntheticEvent.augmentClass = function(Class, Interface) {
	  var Super = this;

	  var prototype = Object.create(Super.prototype);
	  assign(prototype, Class.prototype);
	  Class.prototype = prototype;
	  Class.prototype.constructor = Class;

	  Class.Interface = assign({}, Super.Interface, Interface);
	  Class.augmentClass = Super.augmentClass;

	  PooledClass.addPoolingTo(Class, PooledClass.threeArgumentPooler);
	};

	PooledClass.addPoolingTo(SyntheticEvent, PooledClass.threeArgumentPooler);

	module.exports = SyntheticEvent;


/***/ },
/* 107 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventTarget
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * Gets the target node from a native browser event by accounting for
	 * inconsistencies in browser DOM APIs.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {DOMEventTarget} Target node.
	 */
	function getEventTarget(nativeEvent) {
	  var target = nativeEvent.target || nativeEvent.srcElement || window;
	  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
	  // @see http://www.quirksmode.org/js/events_properties.html
	  return target.nodeType === 3 ? target.parentNode : target;
	}

	module.exports = getEventTarget;


/***/ },
/* 108 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticInputEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(106);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
	 *      /#events-inputevents
	 */
	var InputEventInterface = {
	  data: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticInputEvent(
	  dispatchConfig,
	  dispatchMarker,
	  nativeEvent) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
	}

	SyntheticEvent.augmentClass(
	  SyntheticInputEvent,
	  InputEventInterface
	);

	module.exports = SyntheticInputEvent;


/***/ },
/* 109 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ChangeEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(15);
	var EventPluginHub = __webpack_require__(78);
	var EventPropagators = __webpack_require__(102);
	var ExecutionEnvironment = __webpack_require__(60);
	var ReactUpdates = __webpack_require__(35);
	var SyntheticEvent = __webpack_require__(106);

	var isEventSupported = __webpack_require__(84);
	var isTextInputElement = __webpack_require__(110);
	var keyOf = __webpack_require__(48);

	var topLevelTypes = EventConstants.topLevelTypes;

	var eventTypes = {
	  change: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onChange: null}),
	      captured: keyOf({onChangeCapture: null})
	    },
	    dependencies: [
	      topLevelTypes.topBlur,
	      topLevelTypes.topChange,
	      topLevelTypes.topClick,
	      topLevelTypes.topFocus,
	      topLevelTypes.topInput,
	      topLevelTypes.topKeyDown,
	      topLevelTypes.topKeyUp,
	      topLevelTypes.topSelectionChange
	    ]
	  }
	};

	/**
	 * For IE shims
	 */
	var activeElement = null;
	var activeElementID = null;
	var activeElementValue = null;
	var activeElementValueProp = null;

	/**
	 * SECTION: handle `change` event
	 */
	function shouldUseChangeEvent(elem) {
	  return (
	    elem.nodeName === 'SELECT' ||
	    (elem.nodeName === 'INPUT' && elem.type === 'file')
	  );
	}

	var doesChangeEventBubble = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // See `handleChange` comment below
	  doesChangeEventBubble = isEventSupported('change') && (
	    (!('documentMode' in document) || document.documentMode > 8)
	  );
	}

	function manualDispatchChangeEvent(nativeEvent) {
	  var event = SyntheticEvent.getPooled(
	    eventTypes.change,
	    activeElementID,
	    nativeEvent
	  );
	  EventPropagators.accumulateTwoPhaseDispatches(event);

	  // If change and propertychange bubbled, we'd just bind to it like all the
	  // other events and have it go through ReactBrowserEventEmitter. Since it
	  // doesn't, we manually listen for the events and so we have to enqueue and
	  // process the abstract event manually.
	  //
	  // Batching is necessary here in order to ensure that all event handlers run
	  // before the next rerender (including event handlers attached to ancestor
	  // elements instead of directly on the input). Without this, controlled
	  // components don't work properly in conjunction with event bubbling because
	  // the component is rerendered and the value reverted before all the event
	  // handlers can run. See https://github.com/facebook/react/issues/708.
	  ReactUpdates.batchedUpdates(runEventInBatch, event);
	}

	function runEventInBatch(event) {
	  EventPluginHub.enqueueEvents(event);
	  EventPluginHub.processEventQueue();
	}

	function startWatchingForChangeEventIE8(target, targetID) {
	  activeElement = target;
	  activeElementID = targetID;
	  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
	}

	function stopWatchingForChangeEventIE8() {
	  if (!activeElement) {
	    return;
	  }
	  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
	  activeElement = null;
	  activeElementID = null;
	}

	function getTargetIDForChangeEvent(
	    topLevelType,
	    topLevelTarget,
	    topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topChange) {
	    return topLevelTargetID;
	  }
	}
	function handleEventsForChangeEventIE8(
	    topLevelType,
	    topLevelTarget,
	    topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForChangeEventIE8();
	    startWatchingForChangeEventIE8(topLevelTarget, topLevelTargetID);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForChangeEventIE8();
	  }
	}


	/**
	 * SECTION: handle `input` event
	 */
	var isInputEventSupported = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // IE9 claims to support the input event but fails to trigger it when
	  // deleting text, so we ignore its input events
	  isInputEventSupported = isEventSupported('input') && (
	    (!('documentMode' in document) || document.documentMode > 9)
	  );
	}

	/**
	 * (For old IE.) Replacement getter/setter for the `value` property that gets
	 * set on the active element.
	 */
	var newValueProp =  {
	  get: function() {
	    return activeElementValueProp.get.call(this);
	  },
	  set: function(val) {
	    // Cast to a string so we can do equality checks.
	    activeElementValue = '' + val;
	    activeElementValueProp.set.call(this, val);
	  }
	};

	/**
	 * (For old IE.) Starts tracking propertychange events on the passed-in element
	 * and override the value property so that we can distinguish user events from
	 * value changes in JS.
	 */
	function startWatchingForValueChange(target, targetID) {
	  activeElement = target;
	  activeElementID = targetID;
	  activeElementValue = target.value;
	  activeElementValueProp = Object.getOwnPropertyDescriptor(
	    target.constructor.prototype,
	    'value'
	  );

	  Object.defineProperty(activeElement, 'value', newValueProp);
	  activeElement.attachEvent('onpropertychange', handlePropertyChange);
	}

	/**
	 * (For old IE.) Removes the event listeners from the currently-tracked element,
	 * if any exists.
	 */
	function stopWatchingForValueChange() {
	  if (!activeElement) {
	    return;
	  }

	  // delete restores the original property definition
	  delete activeElement.value;
	  activeElement.detachEvent('onpropertychange', handlePropertyChange);

	  activeElement = null;
	  activeElementID = null;
	  activeElementValue = null;
	  activeElementValueProp = null;
	}

	/**
	 * (For old IE.) Handles a propertychange event, sending a `change` event if
	 * the value of the active element has changed.
	 */
	function handlePropertyChange(nativeEvent) {
	  if (nativeEvent.propertyName !== 'value') {
	    return;
	  }
	  var value = nativeEvent.srcElement.value;
	  if (value === activeElementValue) {
	    return;
	  }
	  activeElementValue = value;

	  manualDispatchChangeEvent(nativeEvent);
	}

	/**
	 * If a `change` event should be fired, returns the target's ID.
	 */
	function getTargetIDForInputEvent(
	    topLevelType,
	    topLevelTarget,
	    topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topInput) {
	    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
	    // what we want so fall through here and trigger an abstract event
	    return topLevelTargetID;
	  }
	}

	// For IE8 and IE9.
	function handleEventsForInputEventIE(
	    topLevelType,
	    topLevelTarget,
	    topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // In IE8, we can capture almost all .value changes by adding a
	    // propertychange handler and looking for events with propertyName
	    // equal to 'value'
	    // In IE9, propertychange fires for most input events but is buggy and
	    // doesn't fire when text is deleted, but conveniently, selectionchange
	    // appears to fire in all of the remaining cases so we catch those and
	    // forward the event if the value has changed
	    // In either case, we don't want to call the event handler if the value
	    // is changed from JS so we redefine a setter for `.value` that updates
	    // our activeElementValue variable, allowing us to ignore those changes
	    //
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForValueChange();
	    startWatchingForValueChange(topLevelTarget, topLevelTargetID);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForValueChange();
	  }
	}

	// For IE8 and IE9.
	function getTargetIDForInputEventIE(
	    topLevelType,
	    topLevelTarget,
	    topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topSelectionChange ||
	      topLevelType === topLevelTypes.topKeyUp ||
	      topLevelType === topLevelTypes.topKeyDown) {
	    // On the selectionchange event, the target is just document which isn't
	    // helpful for us so just check activeElement instead.
	    //
	    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
	    // propertychange on the first input event after setting `value` from a
	    // script and fires only keydown, keypress, keyup. Catching keyup usually
	    // gets it and catching keydown lets us fire an event for the first
	    // keystroke if user does a key repeat (it'll be a little delayed: right
	    // before the second keystroke). Other input methods (e.g., paste) seem to
	    // fire selectionchange normally.
	    if (activeElement && activeElement.value !== activeElementValue) {
	      activeElementValue = activeElement.value;
	      return activeElementID;
	    }
	  }
	}


	/**
	 * SECTION: handle `click` event
	 */
	function shouldUseClickEvent(elem) {
	  // Use the `click` event to detect changes to checkbox and radio inputs.
	  // This approach works across all browsers, whereas `change` does not fire
	  // until `blur` in IE8.
	  return (
	    elem.nodeName === 'INPUT' &&
	    (elem.type === 'checkbox' || elem.type === 'radio')
	  );
	}

	function getTargetIDForClickEvent(
	    topLevelType,
	    topLevelTarget,
	    topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topClick) {
	    return topLevelTargetID;
	  }
	}

	/**
	 * This plugin creates an `onChange` event that normalizes change events
	 * across form elements. This event fires at a time when it's possible to
	 * change the element's value without seeing a flicker.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - select
	 */
	var ChangeEventPlugin = {

	  eventTypes: eventTypes,

	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function(
	      topLevelType,
	      topLevelTarget,
	      topLevelTargetID,
	      nativeEvent) {

	    var getTargetIDFunc, handleEventFunc;
	    if (shouldUseChangeEvent(topLevelTarget)) {
	      if (doesChangeEventBubble) {
	        getTargetIDFunc = getTargetIDForChangeEvent;
	      } else {
	        handleEventFunc = handleEventsForChangeEventIE8;
	      }
	    } else if (isTextInputElement(topLevelTarget)) {
	      if (isInputEventSupported) {
	        getTargetIDFunc = getTargetIDForInputEvent;
	      } else {
	        getTargetIDFunc = getTargetIDForInputEventIE;
	        handleEventFunc = handleEventsForInputEventIE;
	      }
	    } else if (shouldUseClickEvent(topLevelTarget)) {
	      getTargetIDFunc = getTargetIDForClickEvent;
	    }

	    if (getTargetIDFunc) {
	      var targetID = getTargetIDFunc(
	        topLevelType,
	        topLevelTarget,
	        topLevelTargetID
	      );
	      if (targetID) {
	        var event = SyntheticEvent.getPooled(
	          eventTypes.change,
	          targetID,
	          nativeEvent
	        );
	        EventPropagators.accumulateTwoPhaseDispatches(event);
	        return event;
	      }
	    }

	    if (handleEventFunc) {
	      handleEventFunc(
	        topLevelType,
	        topLevelTarget,
	        topLevelTargetID
	      );
	    }
	  }

	};

	module.exports = ChangeEventPlugin;


/***/ },
/* 110 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isTextInputElement
	 */

	'use strict';

	/**
	 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
	 */
	var supportedInputTypes = {
	  'color': true,
	  'date': true,
	  'datetime': true,
	  'datetime-local': true,
	  'email': true,
	  'month': true,
	  'number': true,
	  'password': true,
	  'range': true,
	  'search': true,
	  'tel': true,
	  'text': true,
	  'time': true,
	  'url': true,
	  'week': true
	};

	function isTextInputElement(elem) {
	  return elem && (
	    (elem.nodeName === 'INPUT' && supportedInputTypes[elem.type] || elem.nodeName === 'TEXTAREA')
	  );
	}

	module.exports = isTextInputElement;


/***/ },
/* 111 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ClientReactRootIndex
	 * @typechecks
	 */

	'use strict';

	var nextReactRootIndex = 0;

	var ClientReactRootIndex = {
	  createReactRootIndex: function() {
	    return nextReactRootIndex++;
	  }
	};

	module.exports = ClientReactRootIndex;


/***/ },
/* 112 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DefaultEventPluginOrder
	 */

	'use strict';

	var keyOf = __webpack_require__(48);

	/**
	 * Module that is injectable into `EventPluginHub`, that specifies a
	 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
	 * plugins, without having to package every one of them. This is better than
	 * having plugins be ordered in the same order that they are injected because
	 * that ordering would be influenced by the packaging order.
	 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
	 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
	 */
	var DefaultEventPluginOrder = [
	  keyOf({ResponderEventPlugin: null}),
	  keyOf({SimpleEventPlugin: null}),
	  keyOf({TapEventPlugin: null}),
	  keyOf({EnterLeaveEventPlugin: null}),
	  keyOf({ChangeEventPlugin: null}),
	  keyOf({SelectEventPlugin: null}),
	  keyOf({BeforeInputEventPlugin: null}),
	  keyOf({AnalyticsEventPlugin: null}),
	  keyOf({MobileSafariClickEventPlugin: null})
	];

	module.exports = DefaultEventPluginOrder;


/***/ },
/* 113 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EnterLeaveEventPlugin
	 * @typechecks static-only
	 */

	'use strict';

	var EventConstants = __webpack_require__(15);
	var EventPropagators = __webpack_require__(102);
	var SyntheticMouseEvent = __webpack_require__(114);

	var ReactMount = __webpack_require__(76);
	var keyOf = __webpack_require__(48);

	var topLevelTypes = EventConstants.topLevelTypes;
	var getFirstReactDOM = ReactMount.getFirstReactDOM;

	var eventTypes = {
	  mouseEnter: {
	    registrationName: keyOf({onMouseEnter: null}),
	    dependencies: [
	      topLevelTypes.topMouseOut,
	      topLevelTypes.topMouseOver
	    ]
	  },
	  mouseLeave: {
	    registrationName: keyOf({onMouseLeave: null}),
	    dependencies: [
	      topLevelTypes.topMouseOut,
	      topLevelTypes.topMouseOver
	    ]
	  }
	};

	var extractedEvents = [null, null];

	var EnterLeaveEventPlugin = {

	  eventTypes: eventTypes,

	  /**
	   * For almost every interaction we care about, there will be both a top-level
	   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
	   * we do not extract duplicate events. However, moving the mouse into the
	   * browser from outside will not fire a `mouseout` event. In this case, we use
	   * the `mouseover` top-level event.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function(
	      topLevelType,
	      topLevelTarget,
	      topLevelTargetID,
	      nativeEvent) {
	    if (topLevelType === topLevelTypes.topMouseOver &&
	        (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
	      return null;
	    }
	    if (topLevelType !== topLevelTypes.topMouseOut &&
	        topLevelType !== topLevelTypes.topMouseOver) {
	      // Must not be a mouse in or mouse out - ignoring.
	      return null;
	    }

	    var win;
	    if (topLevelTarget.window === topLevelTarget) {
	      // `topLevelTarget` is probably a window object.
	      win = topLevelTarget;
	    } else {
	      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	      var doc = topLevelTarget.ownerDocument;
	      if (doc) {
	        win = doc.defaultView || doc.parentWindow;
	      } else {
	        win = window;
	      }
	    }

	    var from, to;
	    if (topLevelType === topLevelTypes.topMouseOut) {
	      from = topLevelTarget;
	      to =
	        getFirstReactDOM(nativeEvent.relatedTarget || nativeEvent.toElement) ||
	        win;
	    } else {
	      from = win;
	      to = topLevelTarget;
	    }

	    if (from === to) {
	      // Nothing pertains to our managed components.
	      return null;
	    }

	    var fromID = from ? ReactMount.getID(from) : '';
	    var toID = to ? ReactMount.getID(to) : '';

	    var leave = SyntheticMouseEvent.getPooled(
	      eventTypes.mouseLeave,
	      fromID,
	      nativeEvent
	    );
	    leave.type = 'mouseleave';
	    leave.target = from;
	    leave.relatedTarget = to;

	    var enter = SyntheticMouseEvent.getPooled(
	      eventTypes.mouseEnter,
	      toID,
	      nativeEvent
	    );
	    enter.type = 'mouseenter';
	    enter.target = to;
	    enter.relatedTarget = from;

	    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, fromID, toID);

	    extractedEvents[0] = leave;
	    extractedEvents[1] = enter;

	    return extractedEvents;
	  }

	};

	module.exports = EnterLeaveEventPlugin;


/***/ },
/* 114 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticMouseEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(115);
	var ViewportMetrics = __webpack_require__(83);

	var getEventModifierState = __webpack_require__(116);

	/**
	 * @interface MouseEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var MouseEventInterface = {
	  screenX: null,
	  screenY: null,
	  clientX: null,
	  clientY: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  getModifierState: getEventModifierState,
	  button: function(event) {
	    // Webkit, Firefox, IE9+
	    // which:  1 2 3
	    // button: 0 1 2 (standard)
	    var button = event.button;
	    if ('which' in event) {
	      return button;
	    }
	    // IE<9
	    // which:  undefined
	    // button: 0 0 0
	    // button: 1 4 2 (onmouseup)
	    return button === 2 ? 2 : button === 4 ? 1 : 0;
	  },
	  buttons: null,
	  relatedTarget: function(event) {
	    return event.relatedTarget || (
	      ((event.fromElement === event.srcElement ? event.toElement : event.fromElement))
	    );
	  },
	  // "Proprietary" Interface.
	  pageX: function(event) {
	    return 'pageX' in event ?
	      event.pageX :
	      event.clientX + ViewportMetrics.currentScrollLeft;
	  },
	  pageY: function(event) {
	    return 'pageY' in event ?
	      event.pageY :
	      event.clientY + ViewportMetrics.currentScrollTop;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
	}

	SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);

	module.exports = SyntheticMouseEvent;


/***/ },
/* 115 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticUIEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(106);

	var getEventTarget = __webpack_require__(107);

	/**
	 * @interface UIEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var UIEventInterface = {
	  view: function(event) {
	    if (event.view) {
	      return event.view;
	    }

	    var target = getEventTarget(event);
	    if (target != null && target.window === target) {
	      // target is a window object
	      return target;
	    }

	    var doc = target.ownerDocument;
	    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	    if (doc) {
	      return doc.defaultView || doc.parentWindow;
	    } else {
	      return window;
	    }
	  },
	  detail: function(event) {
	    return event.detail || 0;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
	}

	SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);

	module.exports = SyntheticUIEvent;


/***/ },
/* 116 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventModifierState
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * Translation from modifier key to the associated property in the event.
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
	 */

	var modifierKeyToProp = {
	  'Alt': 'altKey',
	  'Control': 'ctrlKey',
	  'Meta': 'metaKey',
	  'Shift': 'shiftKey'
	};

	// IE8 does not implement getModifierState so we simply map it to the only
	// modifier keys exposed by the event itself, does not support Lock-keys.
	// Currently, all major browsers except Chrome seems to support Lock-keys.
	function modifierStateGetter(keyArg) {
	  /*jshint validthis:true */
	  var syntheticEvent = this;
	  var nativeEvent = syntheticEvent.nativeEvent;
	  if (nativeEvent.getModifierState) {
	    return nativeEvent.getModifierState(keyArg);
	  }
	  var keyProp = modifierKeyToProp[keyArg];
	  return keyProp ? !!nativeEvent[keyProp] : false;
	}

	function getEventModifierState(nativeEvent) {
	  return modifierStateGetter;
	}

	module.exports = getEventModifierState;


/***/ },
/* 117 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule HTMLDOMPropertyConfig
	 */

	/*jslint bitwise: true*/

	'use strict';

	var DOMProperty = __webpack_require__(53);
	var ExecutionEnvironment = __webpack_require__(60);

	var MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;
	var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
	var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
	var HAS_SIDE_EFFECTS = DOMProperty.injection.HAS_SIDE_EFFECTS;
	var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
	var HAS_POSITIVE_NUMERIC_VALUE =
	  DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
	var HAS_OVERLOADED_BOOLEAN_VALUE =
	  DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;

	var hasSVG;
	if (ExecutionEnvironment.canUseDOM) {
	  var implementation = document.implementation;
	  hasSVG = (
	    implementation &&
	    implementation.hasFeature &&
	    implementation.hasFeature(
	      'http://www.w3.org/TR/SVG11/feature#BasicStructure',
	      '1.1'
	    )
	  );
	}


	var HTMLDOMPropertyConfig = {
	  isCustomAttribute: RegExp.prototype.test.bind(
	    /^(data|aria)-[a-z_][a-z\d_.\-]*$/
	  ),
	  Properties: {
	    /**
	     * Standard Properties
	     */
	    accept: null,
	    acceptCharset: null,
	    accessKey: null,
	    action: null,
	    allowFullScreen: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    allowTransparency: MUST_USE_ATTRIBUTE,
	    alt: null,
	    async: HAS_BOOLEAN_VALUE,
	    autoComplete: null,
	    // autoFocus is polyfilled/normalized by AutoFocusMixin
	    // autoFocus: HAS_BOOLEAN_VALUE,
	    autoPlay: HAS_BOOLEAN_VALUE,
	    cellPadding: null,
	    cellSpacing: null,
	    charSet: MUST_USE_ATTRIBUTE,
	    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    classID: MUST_USE_ATTRIBUTE,
	    // To set className on SVG elements, it's necessary to use .setAttribute;
	    // this works on HTML elements too in all browsers except IE8. Conveniently,
	    // IE8 doesn't support SVG and so we can simply use the attribute in
	    // browsers that support SVG and the property in browsers that don't,
	    // regardless of whether the element is HTML or SVG.
	    className: hasSVG ? MUST_USE_ATTRIBUTE : MUST_USE_PROPERTY,
	    cols: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
	    colSpan: null,
	    content: null,
	    contentEditable: null,
	    contextMenu: MUST_USE_ATTRIBUTE,
	    controls: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    coords: null,
	    crossOrigin: null,
	    data: null, // For `<object />` acts as `src`.
	    dateTime: MUST_USE_ATTRIBUTE,
	    defer: HAS_BOOLEAN_VALUE,
	    dir: null,
	    disabled: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    download: HAS_OVERLOADED_BOOLEAN_VALUE,
	    draggable: null,
	    encType: null,
	    form: MUST_USE_ATTRIBUTE,
	    formAction: MUST_USE_ATTRIBUTE,
	    formEncType: MUST_USE_ATTRIBUTE,
	    formMethod: MUST_USE_ATTRIBUTE,
	    formNoValidate: HAS_BOOLEAN_VALUE,
	    formTarget: MUST_USE_ATTRIBUTE,
	    frameBorder: MUST_USE_ATTRIBUTE,
	    headers: null,
	    height: MUST_USE_ATTRIBUTE,
	    hidden: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    high: null,
	    href: null,
	    hrefLang: null,
	    htmlFor: null,
	    httpEquiv: null,
	    icon: null,
	    id: MUST_USE_PROPERTY,
	    label: null,
	    lang: null,
	    list: MUST_USE_ATTRIBUTE,
	    loop: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    low: null,
	    manifest: MUST_USE_ATTRIBUTE,
	    marginHeight: null,
	    marginWidth: null,
	    max: null,
	    maxLength: MUST_USE_ATTRIBUTE,
	    media: MUST_USE_ATTRIBUTE,
	    mediaGroup: null,
	    method: null,
	    min: null,
	    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    name: null,
	    noValidate: HAS_BOOLEAN_VALUE,
	    open: HAS_BOOLEAN_VALUE,
	    optimum: null,
	    pattern: null,
	    placeholder: null,
	    poster: null,
	    preload: null,
	    radioGroup: null,
	    readOnly: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    rel: null,
	    required: HAS_BOOLEAN_VALUE,
	    role: MUST_USE_ATTRIBUTE,
	    rows: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
	    rowSpan: null,
	    sandbox: null,
	    scope: null,
	    scoped: HAS_BOOLEAN_VALUE,
	    scrolling: null,
	    seamless: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    shape: null,
	    size: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
	    sizes: MUST_USE_ATTRIBUTE,
	    span: HAS_POSITIVE_NUMERIC_VALUE,
	    spellCheck: null,
	    src: null,
	    srcDoc: MUST_USE_PROPERTY,
	    srcSet: MUST_USE_ATTRIBUTE,
	    start: HAS_NUMERIC_VALUE,
	    step: null,
	    style: null,
	    tabIndex: null,
	    target: null,
	    title: null,
	    type: null,
	    useMap: null,
	    value: MUST_USE_PROPERTY | HAS_SIDE_EFFECTS,
	    width: MUST_USE_ATTRIBUTE,
	    wmode: MUST_USE_ATTRIBUTE,

	    /**
	     * Non-standard Properties
	     */
	    // autoCapitalize and autoCorrect are supported in Mobile Safari for
	    // keyboard hints.
	    autoCapitalize: null,
	    autoCorrect: null,
	    // itemProp, itemScope, itemType are for
	    // Microdata support. See http://schema.org/docs/gs.html
	    itemProp: MUST_USE_ATTRIBUTE,
	    itemScope: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    itemType: MUST_USE_ATTRIBUTE,
	    // itemID and itemRef are for Microdata support as well but
	    // only specified in the the WHATWG spec document. See
	    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
	    itemID: MUST_USE_ATTRIBUTE,
	    itemRef: MUST_USE_ATTRIBUTE,
	    // property is supported for OpenGraph in meta tags.
	    property: null,
	    // IE-only attribute that controls focus behavior
	    unselectable: MUST_USE_ATTRIBUTE
	  },
	  DOMAttributeNames: {
	    acceptCharset: 'accept-charset',
	    className: 'class',
	    htmlFor: 'for',
	    httpEquiv: 'http-equiv'
	  },
	  DOMPropertyNames: {
	    autoCapitalize: 'autocapitalize',
	    autoComplete: 'autocomplete',
	    autoCorrect: 'autocorrect',
	    autoFocus: 'autofocus',
	    autoPlay: 'autoplay',
	    // `encoding` is equivalent to `enctype`, IE8 lacks an `enctype` setter.
	    // http://www.w3.org/TR/html5/forms.html#dom-fs-encoding
	    encType: 'encoding',
	    hrefLang: 'hreflang',
	    radioGroup: 'radiogroup',
	    spellCheck: 'spellcheck',
	    srcDoc: 'srcdoc',
	    srcSet: 'srcset'
	  }
	};

	module.exports = HTMLDOMPropertyConfig;


/***/ },
/* 118 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule MobileSafariClickEventPlugin
	 * @typechecks static-only
	 */

	'use strict';

	var EventConstants = __webpack_require__(15);

	var emptyFunction = __webpack_require__(25);

	var topLevelTypes = EventConstants.topLevelTypes;

	/**
	 * Mobile Safari does not fire properly bubble click events on non-interactive
	 * elements, which means delegated click listeners do not fire. The workaround
	 * for this bug involves attaching an empty click listener on the target node.
	 *
	 * This particular plugin works around the bug by attaching an empty click
	 * listener on `touchstart` (which does fire on every element).
	 */
	var MobileSafariClickEventPlugin = {

	  eventTypes: null,

	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function(
	      topLevelType,
	      topLevelTarget,
	      topLevelTargetID,
	      nativeEvent) {
	    if (topLevelType === topLevelTypes.topTouchStart) {
	      var target = nativeEvent.target;
	      if (target && !target.onclick) {
	        target.onclick = emptyFunction;
	      }
	    }
	  }

	};

	module.exports = MobileSafariClickEventPlugin;


/***/ },
/* 119 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactBrowserComponentMixin
	 */

	'use strict';

	var findDOMNode = __webpack_require__(120);

	var ReactBrowserComponentMixin = {
	  /**
	   * Returns the DOM node rendered by this component.
	   *
	   * @return {DOMElement} The root node of this component.
	   * @final
	   * @protected
	   */
	  getDOMNode: function() {
	    return findDOMNode(this);
	  }
	};

	module.exports = ReactBrowserComponentMixin;


/***/ },
/* 120 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule findDOMNode
	 * @typechecks static-only
	 */

	'use strict';

	var ReactCurrentOwner = __webpack_require__(26);
	var ReactInstanceMap = __webpack_require__(34);
	var ReactMount = __webpack_require__(76);

	var invariant = __webpack_require__(17);
	var isNode = __webpack_require__(90);
	var warning = __webpack_require__(24);

	/**
	 * Returns the DOM node rendered by this element.
	 *
	 * @param {ReactComponent|DOMElement} componentOrElement
	 * @return {DOMElement} The root node of this element.
	 */
	function findDOMNode(componentOrElement) {
	  if ("production" !== process.env.NODE_ENV) {
	    var owner = ReactCurrentOwner.current;
	    if (owner !== null) {
	      ("production" !== process.env.NODE_ENV ? warning(
	        owner._warnedAboutRefsInRender,
	        '%s is accessing getDOMNode or findDOMNode inside its render(). ' +
	        'render() should be a pure function of props and state. It should ' +
	        'never access something that requires stale data from the previous ' +
	        'render, such as refs. Move this logic to componentDidMount and ' +
	        'componentDidUpdate instead.',
	        owner.getName() || 'A component'
	      ) : null);
	      owner._warnedAboutRefsInRender = true;
	    }
	  }
	  if (componentOrElement == null) {
	    return null;
	  }
	  if (isNode(componentOrElement)) {
	    return componentOrElement;
	  }
	  if (ReactInstanceMap.has(componentOrElement)) {
	    return ReactMount.getNodeFromInstance(componentOrElement);
	  }
	  ("production" !== process.env.NODE_ENV ? invariant(
	    componentOrElement.render == null ||
	    typeof componentOrElement.render !== 'function',
	    'Component (with keys: %s) contains `render` method ' +
	    'but is not mounted in the DOM',
	    Object.keys(componentOrElement)
	  ) : invariant(componentOrElement.render == null ||
	  typeof componentOrElement.render !== 'function'));
	  ("production" !== process.env.NODE_ENV ? invariant(
	    false,
	    'Element appears to be neither ReactComponent nor DOMNode (keys: %s)',
	    Object.keys(componentOrElement)
	  ) : invariant(false));
	}

	module.exports = findDOMNode;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 121 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultBatchingStrategy
	 */

	'use strict';

	var ReactUpdates = __webpack_require__(35);
	var Transaction = __webpack_require__(45);

	var assign = __webpack_require__(10);
	var emptyFunction = __webpack_require__(25);

	var RESET_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: function() {
	    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
	  }
	};

	var FLUSH_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
	};

	var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

	function ReactDefaultBatchingStrategyTransaction() {
	  this.reinitializeTransaction();
	}

	assign(
	  ReactDefaultBatchingStrategyTransaction.prototype,
	  Transaction.Mixin,
	  {
	    getTransactionWrappers: function() {
	      return TRANSACTION_WRAPPERS;
	    }
	  }
	);

	var transaction = new ReactDefaultBatchingStrategyTransaction();

	var ReactDefaultBatchingStrategy = {
	  isBatchingUpdates: false,

	  /**
	   * Call the provided function in a context within which calls to `setState`
	   * and friends are batched such that components aren't updated unnecessarily.
	   */
	  batchedUpdates: function(callback, a, b, c, d) {
	    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;

	    ReactDefaultBatchingStrategy.isBatchingUpdates = true;

	    // The code is written this way to avoid extra allocations
	    if (alreadyBatchingUpdates) {
	      callback(a, b, c, d);
	    } else {
	      transaction.perform(callback, null, a, b, c, d);
	    }
	  }
	};

	module.exports = ReactDefaultBatchingStrategy;


/***/ },
/* 122 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMButton
	 */

	'use strict';

	var AutoFocusMixin = __webpack_require__(123);
	var ReactBrowserComponentMixin = __webpack_require__(119);
	var ReactClass = __webpack_require__(46);
	var ReactElement = __webpack_require__(21);

	var keyMirror = __webpack_require__(16);

	var button = ReactElement.createFactory('button');

	var mouseListenerNames = keyMirror({
	  onClick: true,
	  onDoubleClick: true,
	  onMouseDown: true,
	  onMouseMove: true,
	  onMouseUp: true,
	  onClickCapture: true,
	  onDoubleClickCapture: true,
	  onMouseDownCapture: true,
	  onMouseMoveCapture: true,
	  onMouseUpCapture: true
	});

	/**
	 * Implements a <button> native component that does not receive mouse events
	 * when `disabled` is set.
	 */
	var ReactDOMButton = ReactClass.createClass({
	  displayName: 'ReactDOMButton',
	  tagName: 'BUTTON',

	  mixins: [AutoFocusMixin, ReactBrowserComponentMixin],

	  render: function() {
	    var props = {};

	    // Copy the props; except the mouse listeners if we're disabled
	    for (var key in this.props) {
	      if (this.props.hasOwnProperty(key) &&
	          (!this.props.disabled || !mouseListenerNames[key])) {
	        props[key] = this.props[key];
	      }
	    }

	    return button(props, this.props.children);
	  }

	});

	module.exports = ReactDOMButton;


/***/ },
/* 123 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule AutoFocusMixin
	 * @typechecks static-only
	 */

	'use strict';

	var focusNode = __webpack_require__(124);

	var AutoFocusMixin = {
	  componentDidMount: function() {
	    if (this.props.autoFocus) {
	      focusNode(this.getDOMNode());
	    }
	  }
	};

	module.exports = AutoFocusMixin;


/***/ },
/* 124 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule focusNode
	 */

	"use strict";

	/**
	 * @param {DOMElement} node input/textarea to focus
	 */
	function focusNode(node) {
	  // IE8 can throw "Can't move focus to the control because it is invisible,
	  // not enabled, or of a type that does not accept the focus." for all kinds of
	  // reasons that are too expensive and fragile to test.
	  try {
	    node.focus();
	  } catch(e) {
	  }
	}

	module.exports = focusNode;


/***/ },
/* 125 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMForm
	 */

	'use strict';

	var EventConstants = __webpack_require__(15);
	var LocalEventTrapMixin = __webpack_require__(126);
	var ReactBrowserComponentMixin = __webpack_require__(119);
	var ReactClass = __webpack_require__(46);
	var ReactElement = __webpack_require__(21);

	var form = ReactElement.createFactory('form');

	/**
	 * Since onSubmit doesn't bubble OR capture on the top level in IE8, we need
	 * to capture it on the <form> element itself. There are lots of hacks we could
	 * do to accomplish this, but the most reliable is to make <form> a
	 * composite component and use `componentDidMount` to attach the event handlers.
	 */
	var ReactDOMForm = ReactClass.createClass({
	  displayName: 'ReactDOMForm',
	  tagName: 'FORM',

	  mixins: [ReactBrowserComponentMixin, LocalEventTrapMixin],

	  render: function() {
	    // TODO: Instead of using `ReactDOM` directly, we should use JSX. However,
	    // `jshint` fails to parse JSX so in order for linting to work in the open
	    // source repo, we need to just use `ReactDOM.form`.
	    return form(this.props);
	  },

	  componentDidMount: function() {
	    this.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset');
	    this.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit');
	  }
	});

	module.exports = ReactDOMForm;


/***/ },
/* 126 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule LocalEventTrapMixin
	 */

	'use strict';

	var ReactBrowserEventEmitter = __webpack_require__(77);

	var accumulateInto = __webpack_require__(80);
	var forEachAccumulated = __webpack_require__(81);
	var invariant = __webpack_require__(17);

	function remove(event) {
	  event.remove();
	}

	var LocalEventTrapMixin = {
	  trapBubbledEvent:function(topLevelType, handlerBaseName) {
	    ("production" !== process.env.NODE_ENV ? invariant(this.isMounted(), 'Must be mounted to trap events') : invariant(this.isMounted()));
	    // If a component renders to null or if another component fatals and causes
	    // the state of the tree to be corrupted, `node` here can be null.
	    var node = this.getDOMNode();
	    ("production" !== process.env.NODE_ENV ? invariant(
	      node,
	      'LocalEventTrapMixin.trapBubbledEvent(...): Requires node to be rendered.'
	    ) : invariant(node));
	    var listener = ReactBrowserEventEmitter.trapBubbledEvent(
	      topLevelType,
	      handlerBaseName,
	      node
	    );
	    this._localEventListeners =
	      accumulateInto(this._localEventListeners, listener);
	  },

	  // trapCapturedEvent would look nearly identical. We don't implement that
	  // method because it isn't currently needed.

	  componentWillUnmount:function() {
	    if (this._localEventListeners) {
	      forEachAccumulated(this._localEventListeners, remove);
	    }
	  }
	};

	module.exports = LocalEventTrapMixin;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 127 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMImg
	 */

	'use strict';

	var EventConstants = __webpack_require__(15);
	var LocalEventTrapMixin = __webpack_require__(126);
	var ReactBrowserComponentMixin = __webpack_require__(119);
	var ReactClass = __webpack_require__(46);
	var ReactElement = __webpack_require__(21);

	var img = ReactElement.createFactory('img');

	/**
	 * Since onLoad doesn't bubble OR capture on the top level in IE8, we need to
	 * capture it on the <img> element itself. There are lots of hacks we could do
	 * to accomplish this, but the most reliable is to make <img> a composite
	 * component and use `componentDidMount` to attach the event handlers.
	 */
	var ReactDOMImg = ReactClass.createClass({
	  displayName: 'ReactDOMImg',
	  tagName: 'IMG',

	  mixins: [ReactBrowserComponentMixin, LocalEventTrapMixin],

	  render: function() {
	    return img(this.props);
	  },

	  componentDidMount: function() {
	    this.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load');
	    this.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error');
	  }
	});

	module.exports = ReactDOMImg;


/***/ },
/* 128 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMIframe
	 */

	'use strict';

	var EventConstants = __webpack_require__(15);
	var LocalEventTrapMixin = __webpack_require__(126);
	var ReactBrowserComponentMixin = __webpack_require__(119);
	var ReactClass = __webpack_require__(46);
	var ReactElement = __webpack_require__(21);

	var iframe = ReactElement.createFactory('iframe');

	/**
	 * Since onLoad doesn't bubble OR capture on the top level in IE8, we need to
	 * capture it on the <iframe> element itself. There are lots of hacks we could
	 * do to accomplish this, but the most reliable is to make <iframe> a composite
	 * component and use `componentDidMount` to attach the event handlers.
	 */
	var ReactDOMIframe = ReactClass.createClass({
	  displayName: 'ReactDOMIframe',
	  tagName: 'IFRAME',

	  mixins: [ReactBrowserComponentMixin, LocalEventTrapMixin],

	  render: function() {
	    return iframe(this.props);
	  },

	  componentDidMount: function() {
	    this.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load');
	  }
	});

	module.exports = ReactDOMIframe;


/***/ },
/* 129 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMInput
	 */

	'use strict';

	var AutoFocusMixin = __webpack_require__(123);
	var DOMPropertyOperations = __webpack_require__(52);
	var LinkedValueUtils = __webpack_require__(130);
	var ReactBrowserComponentMixin = __webpack_require__(119);
	var ReactClass = __webpack_require__(46);
	var ReactElement = __webpack_require__(21);
	var ReactMount = __webpack_require__(76);
	var ReactUpdates = __webpack_require__(35);

	var assign = __webpack_require__(10);
	var invariant = __webpack_require__(17);

	var input = ReactElement.createFactory('input');

	var instancesByReactID = {};

	function forceUpdateIfMounted() {
	  /*jshint validthis:true */
	  if (this.isMounted()) {
	    this.forceUpdate();
	  }
	}

	/**
	 * Implements an <input> native component that allows setting these optional
	 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
	 *
	 * If `checked` or `value` are not supplied (or null/undefined), user actions
	 * that affect the checked state or value will trigger updates to the element.
	 *
	 * If they are supplied (and not null/undefined), the rendered element will not
	 * trigger updates to the element. Instead, the props must change in order for
	 * the rendered element to be updated.
	 *
	 * The rendered element will be initialized as unchecked (or `defaultChecked`)
	 * with an empty value (or `defaultValue`).
	 *
	 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
	 */
	var ReactDOMInput = ReactClass.createClass({
	  displayName: 'ReactDOMInput',
	  tagName: 'INPUT',

	  mixins: [AutoFocusMixin, LinkedValueUtils.Mixin, ReactBrowserComponentMixin],

	  getInitialState: function() {
	    var defaultValue = this.props.defaultValue;
	    return {
	      initialChecked: this.props.defaultChecked || false,
	      initialValue: defaultValue != null ? defaultValue : null
	    };
	  },

	  render: function() {
	    // Clone `this.props` so we don't mutate the input.
	    var props = assign({}, this.props);

	    props.defaultChecked = null;
	    props.defaultValue = null;

	    var value = LinkedValueUtils.getValue(this);
	    props.value = value != null ? value : this.state.initialValue;

	    var checked = LinkedValueUtils.getChecked(this);
	    props.checked = checked != null ? checked : this.state.initialChecked;

	    props.onChange = this._handleChange;

	    return input(props, this.props.children);
	  },

	  componentDidMount: function() {
	    var id = ReactMount.getID(this.getDOMNode());
	    instancesByReactID[id] = this;
	  },

	  componentWillUnmount: function() {
	    var rootNode = this.getDOMNode();
	    var id = ReactMount.getID(rootNode);
	    delete instancesByReactID[id];
	  },

	  componentDidUpdate: function(prevProps, prevState, prevContext) {
	    var rootNode = this.getDOMNode();
	    if (this.props.checked != null) {
	      DOMPropertyOperations.setValueForProperty(
	        rootNode,
	        'checked',
	        this.props.checked || false
	      );
	    }

	    var value = LinkedValueUtils.getValue(this);
	    if (value != null) {
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      DOMPropertyOperations.setValueForProperty(rootNode, 'value', '' + value);
	    }
	  },

	  _handleChange: function(event) {
	    var returnValue;
	    var onChange = LinkedValueUtils.getOnChange(this);
	    if (onChange) {
	      returnValue = onChange.call(this, event);
	    }
	    // Here we use asap to wait until all updates have propagated, which
	    // is important when using controlled components within layers:
	    // https://github.com/facebook/react/issues/1698
	    ReactUpdates.asap(forceUpdateIfMounted, this);

	    var name = this.props.name;
	    if (this.props.type === 'radio' && name != null) {
	      var rootNode = this.getDOMNode();
	      var queryRoot = rootNode;

	      while (queryRoot.parentNode) {
	        queryRoot = queryRoot.parentNode;
	      }

	      // If `rootNode.form` was non-null, then we could try `form.elements`,
	      // but that sometimes behaves strangely in IE8. We could also try using
	      // `form.getElementsByName`, but that will only return direct children
	      // and won't include inputs that use the HTML5 `form=` attribute. Since
	      // the input might not even be in a form, let's just use the global
	      // `querySelectorAll` to ensure we don't miss anything.
	      var group = queryRoot.querySelectorAll(
	        'input[name=' + JSON.stringify('' + name) + '][type="radio"]');

	      for (var i = 0, groupLen = group.length; i < groupLen; i++) {
	        var otherNode = group[i];
	        if (otherNode === rootNode ||
	            otherNode.form !== rootNode.form) {
	          continue;
	        }
	        var otherID = ReactMount.getID(otherNode);
	        ("production" !== process.env.NODE_ENV ? invariant(
	          otherID,
	          'ReactDOMInput: Mixing React and non-React radio inputs with the ' +
	          'same `name` is not supported.'
	        ) : invariant(otherID));
	        var otherInstance = instancesByReactID[otherID];
	        ("production" !== process.env.NODE_ENV ? invariant(
	          otherInstance,
	          'ReactDOMInput: Unknown radio button ID %s.',
	          otherID
	        ) : invariant(otherInstance));
	        // If this is a controlled radio button group, forcing the input that
	        // was previously checked to update will cause it to be come re-checked
	        // as appropriate.
	        ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
	      }
	    }

	    return returnValue;
	  }

	});

	module.exports = ReactDOMInput;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 130 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule LinkedValueUtils
	 * @typechecks static-only
	 */

	'use strict';

	var ReactPropTypes = __webpack_require__(131);

	var invariant = __webpack_require__(17);

	var hasReadOnlyValue = {
	  'button': true,
	  'checkbox': true,
	  'image': true,
	  'hidden': true,
	  'radio': true,
	  'reset': true,
	  'submit': true
	};

	function _assertSingleLink(input) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    input.props.checkedLink == null || input.props.valueLink == null,
	    'Cannot provide a checkedLink and a valueLink. If you want to use ' +
	    'checkedLink, you probably don\'t want to use valueLink and vice versa.'
	  ) : invariant(input.props.checkedLink == null || input.props.valueLink == null));
	}
	function _assertValueLink(input) {
	  _assertSingleLink(input);
	  ("production" !== process.env.NODE_ENV ? invariant(
	    input.props.value == null && input.props.onChange == null,
	    'Cannot provide a valueLink and a value or onChange event. If you want ' +
	    'to use value or onChange, you probably don\'t want to use valueLink.'
	  ) : invariant(input.props.value == null && input.props.onChange == null));
	}

	function _assertCheckedLink(input) {
	  _assertSingleLink(input);
	  ("production" !== process.env.NODE_ENV ? invariant(
	    input.props.checked == null && input.props.onChange == null,
	    'Cannot provide a checkedLink and a checked property or onChange event. ' +
	    'If you want to use checked or onChange, you probably don\'t want to ' +
	    'use checkedLink'
	  ) : invariant(input.props.checked == null && input.props.onChange == null));
	}

	/**
	 * @param {SyntheticEvent} e change event to handle
	 */
	function _handleLinkedValueChange(e) {
	  /*jshint validthis:true */
	  this.props.valueLink.requestChange(e.target.value);
	}

	/**
	  * @param {SyntheticEvent} e change event to handle
	  */
	function _handleLinkedCheckChange(e) {
	  /*jshint validthis:true */
	  this.props.checkedLink.requestChange(e.target.checked);
	}

	/**
	 * Provide a linked `value` attribute for controlled forms. You should not use
	 * this outside of the ReactDOM controlled form components.
	 */
	var LinkedValueUtils = {
	  Mixin: {
	    propTypes: {
	      value: function(props, propName, componentName) {
	        if (!props[propName] ||
	            hasReadOnlyValue[props.type] ||
	            props.onChange ||
	            props.readOnly ||
	            props.disabled) {
	          return null;
	        }
	        return new Error(
	          'You provided a `value` prop to a form field without an ' +
	          '`onChange` handler. This will render a read-only field. If ' +
	          'the field should be mutable use `defaultValue`. Otherwise, ' +
	          'set either `onChange` or `readOnly`.'
	        );
	      },
	      checked: function(props, propName, componentName) {
	        if (!props[propName] ||
	            props.onChange ||
	            props.readOnly ||
	            props.disabled) {
	          return null;
	        }
	        return new Error(
	          'You provided a `checked` prop to a form field without an ' +
	          '`onChange` handler. This will render a read-only field. If ' +
	          'the field should be mutable use `defaultChecked`. Otherwise, ' +
	          'set either `onChange` or `readOnly`.'
	        );
	      },
	      onChange: ReactPropTypes.func
	    }
	  },

	  /**
	   * @param {ReactComponent} input Form component
	   * @return {*} current value of the input either from value prop or link.
	   */
	  getValue: function(input) {
	    if (input.props.valueLink) {
	      _assertValueLink(input);
	      return input.props.valueLink.value;
	    }
	    return input.props.value;
	  },

	  /**
	   * @param {ReactComponent} input Form component
	   * @return {*} current checked status of the input either from checked prop
	   *             or link.
	   */
	  getChecked: function(input) {
	    if (input.props.checkedLink) {
	      _assertCheckedLink(input);
	      return input.props.checkedLink.value;
	    }
	    return input.props.checked;
	  },

	  /**
	   * @param {ReactComponent} input Form component
	   * @return {function} change callback either from onChange prop or link.
	   */
	  getOnChange: function(input) {
	    if (input.props.valueLink) {
	      _assertValueLink(input);
	      return _handleLinkedValueChange;
	    } else if (input.props.checkedLink) {
	      _assertCheckedLink(input);
	      return _handleLinkedCheckChange;
	    }
	    return input.props.onChange;
	  }
	};

	module.exports = LinkedValueUtils;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 131 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypes
	 */

	'use strict';

	var ReactElement = __webpack_require__(21);
	var ReactFragment = __webpack_require__(20);
	var ReactPropTypeLocationNames = __webpack_require__(43);

	var emptyFunction = __webpack_require__(25);

	/**
	 * Collection of methods that allow declaration and validation of props that are
	 * supplied to React components. Example usage:
	 *
	 *   var Props = require('ReactPropTypes');
	 *   var MyArticle = React.createClass({
	 *     propTypes: {
	 *       // An optional string prop named "description".
	 *       description: Props.string,
	 *
	 *       // A required enum prop named "category".
	 *       category: Props.oneOf(['News','Photos']).isRequired,
	 *
	 *       // A prop named "dialog" that requires an instance of Dialog.
	 *       dialog: Props.instanceOf(Dialog).isRequired
	 *     },
	 *     render: function() { ... }
	 *   });
	 *
	 * A more formal specification of how these methods are used:
	 *
	 *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
	 *   decl := ReactPropTypes.{type}(.isRequired)?
	 *
	 * Each and every declaration produces a function with the same signature. This
	 * allows the creation of custom validation functions. For example:
	 *
	 *  var MyLink = React.createClass({
	 *    propTypes: {
	 *      // An optional string or URI prop named "href".
	 *      href: function(props, propName, componentName) {
	 *        var propValue = props[propName];
	 *        if (propValue != null && typeof propValue !== 'string' &&
	 *            !(propValue instanceof URI)) {
	 *          return new Error(
	 *            'Expected a string or an URI for ' + propName + ' in ' +
	 *            componentName
	 *          );
	 *        }
	 *      }
	 *    },
	 *    render: function() {...}
	 *  });
	 *
	 * @internal
	 */

	var ANONYMOUS = '<<anonymous>>';

	var elementTypeChecker = createElementTypeChecker();
	var nodeTypeChecker = createNodeChecker();

	var ReactPropTypes = {
	  array: createPrimitiveTypeChecker('array'),
	  bool: createPrimitiveTypeChecker('boolean'),
	  func: createPrimitiveTypeChecker('function'),
	  number: createPrimitiveTypeChecker('number'),
	  object: createPrimitiveTypeChecker('object'),
	  string: createPrimitiveTypeChecker('string'),

	  any: createAnyTypeChecker(),
	  arrayOf: createArrayOfTypeChecker,
	  element: elementTypeChecker,
	  instanceOf: createInstanceTypeChecker,
	  node: nodeTypeChecker,
	  objectOf: createObjectOfTypeChecker,
	  oneOf: createEnumTypeChecker,
	  oneOfType: createUnionTypeChecker,
	  shape: createShapeTypeChecker
	};

	function createChainableTypeChecker(validate) {
	  function checkType(isRequired, props, propName, componentName, location) {
	    componentName = componentName || ANONYMOUS;
	    if (props[propName] == null) {
	      var locationName = ReactPropTypeLocationNames[location];
	      if (isRequired) {
	        return new Error(
	          ("Required " + locationName + " `" + propName + "` was not specified in ") +
	          ("`" + componentName + "`.")
	        );
	      }
	      return null;
	    } else {
	      return validate(props, propName, componentName, location);
	    }
	  }

	  var chainedCheckType = checkType.bind(null, false);
	  chainedCheckType.isRequired = checkType.bind(null, true);

	  return chainedCheckType;
	}

	function createPrimitiveTypeChecker(expectedType) {
	  function validate(props, propName, componentName, location) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== expectedType) {
	      var locationName = ReactPropTypeLocationNames[location];
	      // `propValue` being instance of, say, date/regexp, pass the 'object'
	      // check, but we can offer a more precise error message here rather than
	      // 'of type `object`'.
	      var preciseType = getPreciseType(propValue);

	      return new Error(
	        ("Invalid " + locationName + " `" + propName + "` of type `" + preciseType + "` ") +
	        ("supplied to `" + componentName + "`, expected `" + expectedType + "`.")
	      );
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createAnyTypeChecker() {
	  return createChainableTypeChecker(emptyFunction.thatReturns(null));
	}

	function createArrayOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location) {
	    var propValue = props[propName];
	    if (!Array.isArray(propValue)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var propType = getPropType(propValue);
	      return new Error(
	        ("Invalid " + locationName + " `" + propName + "` of type ") +
	        ("`" + propType + "` supplied to `" + componentName + "`, expected an array.")
	      );
	    }
	    for (var i = 0; i < propValue.length; i++) {
	      var error = typeChecker(propValue, i, componentName, location);
	      if (error instanceof Error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createElementTypeChecker() {
	  function validate(props, propName, componentName, location) {
	    if (!ReactElement.isValidElement(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error(
	        ("Invalid " + locationName + " `" + propName + "` supplied to ") +
	        ("`" + componentName + "`, expected a ReactElement.")
	      );
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createInstanceTypeChecker(expectedClass) {
	  function validate(props, propName, componentName, location) {
	    if (!(props[propName] instanceof expectedClass)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var expectedClassName = expectedClass.name || ANONYMOUS;
	      return new Error(
	        ("Invalid " + locationName + " `" + propName + "` supplied to ") +
	        ("`" + componentName + "`, expected instance of `" + expectedClassName + "`.")
	      );
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createEnumTypeChecker(expectedValues) {
	  function validate(props, propName, componentName, location) {
	    var propValue = props[propName];
	    for (var i = 0; i < expectedValues.length; i++) {
	      if (propValue === expectedValues[i]) {
	        return null;
	      }
	    }

	    var locationName = ReactPropTypeLocationNames[location];
	    var valuesString = JSON.stringify(expectedValues);
	    return new Error(
	      ("Invalid " + locationName + " `" + propName + "` of value `" + propValue + "` ") +
	      ("supplied to `" + componentName + "`, expected one of " + valuesString + ".")
	    );
	  }
	  return createChainableTypeChecker(validate);
	}

	function createObjectOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error(
	        ("Invalid " + locationName + " `" + propName + "` of type ") +
	        ("`" + propType + "` supplied to `" + componentName + "`, expected an object.")
	      );
	    }
	    for (var key in propValue) {
	      if (propValue.hasOwnProperty(key)) {
	        var error = typeChecker(propValue, key, componentName, location);
	        if (error instanceof Error) {
	          return error;
	        }
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createUnionTypeChecker(arrayOfTypeCheckers) {
	  function validate(props, propName, componentName, location) {
	    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	      var checker = arrayOfTypeCheckers[i];
	      if (checker(props, propName, componentName, location) == null) {
	        return null;
	      }
	    }

	    var locationName = ReactPropTypeLocationNames[location];
	    return new Error(
	      ("Invalid " + locationName + " `" + propName + "` supplied to ") +
	      ("`" + componentName + "`.")
	    );
	  }
	  return createChainableTypeChecker(validate);
	}

	function createNodeChecker() {
	  function validate(props, propName, componentName, location) {
	    if (!isNode(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error(
	        ("Invalid " + locationName + " `" + propName + "` supplied to ") +
	        ("`" + componentName + "`, expected a ReactNode.")
	      );
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createShapeTypeChecker(shapeTypes) {
	  function validate(props, propName, componentName, location) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error(
	        ("Invalid " + locationName + " `" + propName + "` of type `" + propType + "` ") +
	        ("supplied to `" + componentName + "`, expected `object`.")
	      );
	    }
	    for (var key in shapeTypes) {
	      var checker = shapeTypes[key];
	      if (!checker) {
	        continue;
	      }
	      var error = checker(propValue, key, componentName, location);
	      if (error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function isNode(propValue) {
	  switch (typeof propValue) {
	    case 'number':
	    case 'string':
	    case 'undefined':
	      return true;
	    case 'boolean':
	      return !propValue;
	    case 'object':
	      if (Array.isArray(propValue)) {
	        return propValue.every(isNode);
	      }
	      if (propValue === null || ReactElement.isValidElement(propValue)) {
	        return true;
	      }
	      propValue = ReactFragment.extractIfFragment(propValue);
	      for (var k in propValue) {
	        if (!isNode(propValue[k])) {
	          return false;
	        }
	      }
	      return true;
	    default:
	      return false;
	  }
	}

	// Equivalent of `typeof` but with special handling for array and regexp.
	function getPropType(propValue) {
	  var propType = typeof propValue;
	  if (Array.isArray(propValue)) {
	    return 'array';
	  }
	  if (propValue instanceof RegExp) {
	    // Old webkits (at least until Android 4.0) return 'function' rather than
	    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
	    // passes PropTypes.object.
	    return 'object';
	  }
	  return propType;
	}

	// This handles more types than `getPropType`. Only used for error messages.
	// See `createPrimitiveTypeChecker`.
	function getPreciseType(propValue) {
	  var propType = getPropType(propValue);
	  if (propType === 'object') {
	    if (propValue instanceof Date) {
	      return 'date';
	    } else if (propValue instanceof RegExp) {
	      return 'regexp';
	    }
	  }
	  return propType;
	}

	module.exports = ReactPropTypes;


/***/ },
/* 132 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMOption
	 */

	'use strict';

	var ReactBrowserComponentMixin = __webpack_require__(119);
	var ReactClass = __webpack_require__(46);
	var ReactElement = __webpack_require__(21);

	var warning = __webpack_require__(24);

	var option = ReactElement.createFactory('option');

	/**
	 * Implements an <option> native component that warns when `selected` is set.
	 */
	var ReactDOMOption = ReactClass.createClass({
	  displayName: 'ReactDOMOption',
	  tagName: 'OPTION',

	  mixins: [ReactBrowserComponentMixin],

	  componentWillMount: function() {
	    // TODO (yungsters): Remove support for `selected` in <option>.
	    if ("production" !== process.env.NODE_ENV) {
	      ("production" !== process.env.NODE_ENV ? warning(
	        this.props.selected == null,
	        'Use the `defaultValue` or `value` props on <select> instead of ' +
	        'setting `selected` on <option>.'
	      ) : null);
	    }
	  },

	  render: function() {
	    return option(this.props, this.props.children);
	  }

	});

	module.exports = ReactDOMOption;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 133 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMSelect
	 */

	'use strict';

	var AutoFocusMixin = __webpack_require__(123);
	var LinkedValueUtils = __webpack_require__(130);
	var ReactBrowserComponentMixin = __webpack_require__(119);
	var ReactClass = __webpack_require__(46);
	var ReactElement = __webpack_require__(21);
	var ReactUpdates = __webpack_require__(35);

	var assign = __webpack_require__(10);

	var select = ReactElement.createFactory('select');

	function updateOptionsIfPendingUpdateAndMounted() {
	  /*jshint validthis:true */
	  if (this._pendingUpdate) {
	    this._pendingUpdate = false;
	    var value = LinkedValueUtils.getValue(this);
	    if (value != null && this.isMounted()) {
	      updateOptions(this, value);
	    }
	  }
	}

	/**
	 * Validation function for `value` and `defaultValue`.
	 * @private
	 */
	function selectValueType(props, propName, componentName) {
	  if (props[propName] == null) {
	    return null;
	  }
	  if (props.multiple) {
	    if (!Array.isArray(props[propName])) {
	      return new Error(
	        ("The `" + propName + "` prop supplied to <select> must be an array if ") +
	        ("`multiple` is true.")
	      );
	    }
	  } else {
	    if (Array.isArray(props[propName])) {
	      return new Error(
	        ("The `" + propName + "` prop supplied to <select> must be a scalar ") +
	        ("value if `multiple` is false.")
	      );
	    }
	  }
	}

	/**
	 * @param {ReactComponent} component Instance of ReactDOMSelect
	 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
	 * @private
	 */
	function updateOptions(component, propValue) {
	  var selectedValue, i, l;
	  var options = component.getDOMNode().options;

	  if (component.props.multiple) {
	    selectedValue = {};
	    for (i = 0, l = propValue.length; i < l; i++) {
	      selectedValue['' + propValue[i]] = true;
	    }
	    for (i = 0, l = options.length; i < l; i++) {
	      var selected = selectedValue.hasOwnProperty(options[i].value);
	      if (options[i].selected !== selected) {
	        options[i].selected = selected;
	      }
	    }
	  } else {
	    // Do not set `select.value` as exact behavior isn't consistent across all
	    // browsers for all cases.
	    selectedValue = '' + propValue;
	    for (i = 0, l = options.length; i < l; i++) {
	      if (options[i].value === selectedValue) {
	        options[i].selected = true;
	        return;
	      }
	    }
	    if (options.length) {
	      options[0].selected = true;
	    }
	  }
	}

	/**
	 * Implements a <select> native component that allows optionally setting the
	 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
	 * stringable. If `multiple` is true, the prop must be an array of stringables.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that change the
	 * selected option will trigger updates to the rendered options.
	 *
	 * If it is supplied (and not null/undefined), the rendered options will not
	 * update in response to user actions. Instead, the `value` prop must change in
	 * order for the rendered options to update.
	 *
	 * If `defaultValue` is provided, any options with the supplied values will be
	 * selected.
	 */
	var ReactDOMSelect = ReactClass.createClass({
	  displayName: 'ReactDOMSelect',
	  tagName: 'SELECT',

	  mixins: [AutoFocusMixin, LinkedValueUtils.Mixin, ReactBrowserComponentMixin],

	  propTypes: {
	    defaultValue: selectValueType,
	    value: selectValueType
	  },

	  render: function() {
	    // Clone `this.props` so we don't mutate the input.
	    var props = assign({}, this.props);

	    props.onChange = this._handleChange;
	    props.value = null;

	    return select(props, this.props.children);
	  },

	  componentWillMount: function() {
	    this._pendingUpdate = false;
	  },

	  componentDidMount: function() {
	    var value = LinkedValueUtils.getValue(this);
	    if (value != null) {
	      updateOptions(this, value);
	    } else if (this.props.defaultValue != null) {
	      updateOptions(this, this.props.defaultValue);
	    }
	  },

	  componentDidUpdate: function(prevProps) {
	    var value = LinkedValueUtils.getValue(this);
	    if (value != null) {
	      this._pendingUpdate = false;
	      updateOptions(this, value);
	    } else if (!prevProps.multiple !== !this.props.multiple) {
	      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
	      if (this.props.defaultValue != null) {
	        updateOptions(this, this.props.defaultValue);
	      } else {
	        // Revert the select back to its default unselected state.
	        updateOptions(this, this.props.multiple ? [] : '');
	      }
	    }
	  },

	  _handleChange: function(event) {
	    var returnValue;
	    var onChange = LinkedValueUtils.getOnChange(this);
	    if (onChange) {
	      returnValue = onChange.call(this, event);
	    }

	    this._pendingUpdate = true;
	    ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
	    return returnValue;
	  }

	});

	module.exports = ReactDOMSelect;


/***/ },
/* 134 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTextarea
	 */

	'use strict';

	var AutoFocusMixin = __webpack_require__(123);
	var DOMPropertyOperations = __webpack_require__(52);
	var LinkedValueUtils = __webpack_require__(130);
	var ReactBrowserComponentMixin = __webpack_require__(119);
	var ReactClass = __webpack_require__(46);
	var ReactElement = __webpack_require__(21);
	var ReactUpdates = __webpack_require__(35);

	var assign = __webpack_require__(10);
	var invariant = __webpack_require__(17);

	var warning = __webpack_require__(24);

	var textarea = ReactElement.createFactory('textarea');

	function forceUpdateIfMounted() {
	  /*jshint validthis:true */
	  if (this.isMounted()) {
	    this.forceUpdate();
	  }
	}

	/**
	 * Implements a <textarea> native component that allows setting `value`, and
	 * `defaultValue`. This differs from the traditional DOM API because value is
	 * usually set as PCDATA children.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that affect the
	 * value will trigger updates to the element.
	 *
	 * If `value` is supplied (and not null/undefined), the rendered element will
	 * not trigger updates to the element. Instead, the `value` prop must change in
	 * order for the rendered element to be updated.
	 *
	 * The rendered element will be initialized with an empty value, the prop
	 * `defaultValue` if specified, or the children content (deprecated).
	 */
	var ReactDOMTextarea = ReactClass.createClass({
	  displayName: 'ReactDOMTextarea',
	  tagName: 'TEXTAREA',

	  mixins: [AutoFocusMixin, LinkedValueUtils.Mixin, ReactBrowserComponentMixin],

	  getInitialState: function() {
	    var defaultValue = this.props.defaultValue;
	    // TODO (yungsters): Remove support for children content in <textarea>.
	    var children = this.props.children;
	    if (children != null) {
	      if ("production" !== process.env.NODE_ENV) {
	        ("production" !== process.env.NODE_ENV ? warning(
	          false,
	          'Use the `defaultValue` or `value` props instead of setting ' +
	          'children on <textarea>.'
	        ) : null);
	      }
	      ("production" !== process.env.NODE_ENV ? invariant(
	        defaultValue == null,
	        'If you supply `defaultValue` on a <textarea>, do not pass children.'
	      ) : invariant(defaultValue == null));
	      if (Array.isArray(children)) {
	        ("production" !== process.env.NODE_ENV ? invariant(
	          children.length <= 1,
	          '<textarea> can only have at most one child.'
	        ) : invariant(children.length <= 1));
	        children = children[0];
	      }

	      defaultValue = '' + children;
	    }
	    if (defaultValue == null) {
	      defaultValue = '';
	    }
	    var value = LinkedValueUtils.getValue(this);
	    return {
	      // We save the initial value so that `ReactDOMComponent` doesn't update
	      // `textContent` (unnecessary since we update value).
	      // The initial value can be a boolean or object so that's why it's
	      // forced to be a string.
	      initialValue: '' + (value != null ? value : defaultValue)
	    };
	  },

	  render: function() {
	    // Clone `this.props` so we don't mutate the input.
	    var props = assign({}, this.props);

	    ("production" !== process.env.NODE_ENV ? invariant(
	      props.dangerouslySetInnerHTML == null,
	      '`dangerouslySetInnerHTML` does not make sense on <textarea>.'
	    ) : invariant(props.dangerouslySetInnerHTML == null));

	    props.defaultValue = null;
	    props.value = null;
	    props.onChange = this._handleChange;

	    // Always set children to the same thing. In IE9, the selection range will
	    // get reset if `textContent` is mutated.
	    return textarea(props, this.state.initialValue);
	  },

	  componentDidUpdate: function(prevProps, prevState, prevContext) {
	    var value = LinkedValueUtils.getValue(this);
	    if (value != null) {
	      var rootNode = this.getDOMNode();
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      DOMPropertyOperations.setValueForProperty(rootNode, 'value', '' + value);
	    }
	  },

	  _handleChange: function(event) {
	    var returnValue;
	    var onChange = LinkedValueUtils.getOnChange(this);
	    if (onChange) {
	      returnValue = onChange.call(this, event);
	    }
	    ReactUpdates.asap(forceUpdateIfMounted, this);
	    return returnValue;
	  }

	});

	module.exports = ReactDOMTextarea;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 135 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEventListener
	 * @typechecks static-only
	 */

	'use strict';

	var EventListener = __webpack_require__(136);
	var ExecutionEnvironment = __webpack_require__(60);
	var PooledClass = __webpack_require__(19);
	var ReactInstanceHandles = __webpack_require__(28);
	var ReactMount = __webpack_require__(76);
	var ReactUpdates = __webpack_require__(35);

	var assign = __webpack_require__(10);
	var getEventTarget = __webpack_require__(107);
	var getUnboundedScrollPosition = __webpack_require__(137);

	/**
	 * Finds the parent React component of `node`.
	 *
	 * @param {*} node
	 * @return {?DOMEventTarget} Parent container, or `null` if the specified node
	 *                           is not nested.
	 */
	function findParent(node) {
	  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
	  // traversal, but caching is difficult to do correctly without using a
	  // mutation observer to listen for all DOM changes.
	  var nodeID = ReactMount.getID(node);
	  var rootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);
	  var container = ReactMount.findReactContainerForID(rootID);
	  var parent = ReactMount.getFirstReactDOM(container);
	  return parent;
	}

	// Used to store ancestor hierarchy in top level callback
	function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
	  this.topLevelType = topLevelType;
	  this.nativeEvent = nativeEvent;
	  this.ancestors = [];
	}
	assign(TopLevelCallbackBookKeeping.prototype, {
	  destructor: function() {
	    this.topLevelType = null;
	    this.nativeEvent = null;
	    this.ancestors.length = 0;
	  }
	});
	PooledClass.addPoolingTo(
	  TopLevelCallbackBookKeeping,
	  PooledClass.twoArgumentPooler
	);

	function handleTopLevelImpl(bookKeeping) {
	  var topLevelTarget = ReactMount.getFirstReactDOM(
	    getEventTarget(bookKeeping.nativeEvent)
	  ) || window;

	  // Loop through the hierarchy, in case there's any nested components.
	  // It's important that we build the array of ancestors before calling any
	  // event handlers, because event handlers can modify the DOM, leading to
	  // inconsistencies with ReactMount's node cache. See #1105.
	  var ancestor = topLevelTarget;
	  while (ancestor) {
	    bookKeeping.ancestors.push(ancestor);
	    ancestor = findParent(ancestor);
	  }

	  for (var i = 0, l = bookKeeping.ancestors.length; i < l; i++) {
	    topLevelTarget = bookKeeping.ancestors[i];
	    var topLevelTargetID = ReactMount.getID(topLevelTarget) || '';
	    ReactEventListener._handleTopLevel(
	      bookKeeping.topLevelType,
	      topLevelTarget,
	      topLevelTargetID,
	      bookKeeping.nativeEvent
	    );
	  }
	}

	function scrollValueMonitor(cb) {
	  var scrollPosition = getUnboundedScrollPosition(window);
	  cb(scrollPosition);
	}

	var ReactEventListener = {
	  _enabled: true,
	  _handleTopLevel: null,

	  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,

	  setHandleTopLevel: function(handleTopLevel) {
	    ReactEventListener._handleTopLevel = handleTopLevel;
	  },

	  setEnabled: function(enabled) {
	    ReactEventListener._enabled = !!enabled;
	  },

	  isEnabled: function() {
	    return ReactEventListener._enabled;
	  },


	  /**
	   * Traps top-level events by using event bubbling.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapBubbledEvent: function(topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.listen(
	      element,
	      handlerBaseName,
	      ReactEventListener.dispatchEvent.bind(null, topLevelType)
	    );
	  },

	  /**
	   * Traps a top-level event by using event capturing.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapCapturedEvent: function(topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.capture(
	      element,
	      handlerBaseName,
	      ReactEventListener.dispatchEvent.bind(null, topLevelType)
	    );
	  },

	  monitorScrollValue: function(refresh) {
	    var callback = scrollValueMonitor.bind(null, refresh);
	    EventListener.listen(window, 'scroll', callback);
	  },

	  dispatchEvent: function(topLevelType, nativeEvent) {
	    if (!ReactEventListener._enabled) {
	      return;
	    }

	    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(
	      topLevelType,
	      nativeEvent
	    );
	    try {
	      // Event queue being processed in the same cycle allows
	      // `preventDefault`.
	      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
	    } finally {
	      TopLevelCallbackBookKeeping.release(bookKeeping);
	    }
	  }
	};

	module.exports = ReactEventListener;


/***/ },
/* 136 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule EventListener
	 * @typechecks
	 */

	var emptyFunction = __webpack_require__(25);

	/**
	 * Upstream version of event listener. Does not take into account specific
	 * nature of platform.
	 */
	var EventListener = {
	  /**
	   * Listen to DOM events during the bubble phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  listen: function(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, false);
	      return {
	        remove: function() {
	          target.removeEventListener(eventType, callback, false);
	        }
	      };
	    } else if (target.attachEvent) {
	      target.attachEvent('on' + eventType, callback);
	      return {
	        remove: function() {
	          target.detachEvent('on' + eventType, callback);
	        }
	      };
	    }
	  },

	  /**
	   * Listen to DOM events during the capture phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  capture: function(target, eventType, callback) {
	    if (!target.addEventListener) {
	      if ("production" !== process.env.NODE_ENV) {
	        console.error(
	          'Attempted to listen to events during the capture phase on a ' +
	          'browser that does not support the capture phase. Your application ' +
	          'will not receive some events.'
	        );
	      }
	      return {
	        remove: emptyFunction
	      };
	    } else {
	      target.addEventListener(eventType, callback, true);
	      return {
	        remove: function() {
	          target.removeEventListener(eventType, callback, true);
	        }
	      };
	    }
	  },

	  registerDefault: function() {}
	};

	module.exports = EventListener;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 137 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getUnboundedScrollPosition
	 * @typechecks
	 */

	"use strict";

	/**
	 * Gets the scroll position of the supplied element or window.
	 *
	 * The return values are unbounded, unlike `getScrollPosition`. This means they
	 * may be negative or exceed the element boundaries (which is possible using
	 * inertial scrolling).
	 *
	 * @param {DOMWindow|DOMElement} scrollable
	 * @return {object} Map with `x` and `y` keys.
	 */
	function getUnboundedScrollPosition(scrollable) {
	  if (scrollable === window) {
	    return {
	      x: window.pageXOffset || document.documentElement.scrollLeft,
	      y: window.pageYOffset || document.documentElement.scrollTop
	    };
	  }
	  return {
	    x: scrollable.scrollLeft,
	    y: scrollable.scrollTop
	  };
	}

	module.exports = getUnboundedScrollPosition;


/***/ },
/* 138 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInjection
	 */

	'use strict';

	var DOMProperty = __webpack_require__(53);
	var EventPluginHub = __webpack_require__(78);
	var ReactComponentEnvironment = __webpack_require__(94);
	var ReactClass = __webpack_require__(46);
	var ReactEmptyComponent = __webpack_require__(85);
	var ReactBrowserEventEmitter = __webpack_require__(77);
	var ReactNativeComponent = __webpack_require__(44);
	var ReactDOMComponent = __webpack_require__(96);
	var ReactPerf = __webpack_require__(37);
	var ReactRootIndex = __webpack_require__(29);
	var ReactUpdates = __webpack_require__(35);

	var ReactInjection = {
	  Component: ReactComponentEnvironment.injection,
	  Class: ReactClass.injection,
	  DOMComponent: ReactDOMComponent.injection,
	  DOMProperty: DOMProperty.injection,
	  EmptyComponent: ReactEmptyComponent.injection,
	  EventPluginHub: EventPluginHub.injection,
	  EventEmitter: ReactBrowserEventEmitter.injection,
	  NativeComponent: ReactNativeComponent.injection,
	  Perf: ReactPerf.injection,
	  RootIndex: ReactRootIndex.injection,
	  Updates: ReactUpdates.injection
	};

	module.exports = ReactInjection;


/***/ },
/* 139 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactReconcileTransaction
	 * @typechecks static-only
	 */

	'use strict';

	var CallbackQueue = __webpack_require__(36);
	var PooledClass = __webpack_require__(19);
	var ReactBrowserEventEmitter = __webpack_require__(77);
	var ReactInputSelection = __webpack_require__(140);
	var ReactPutListenerQueue = __webpack_require__(144);
	var Transaction = __webpack_require__(45);

	var assign = __webpack_require__(10);

	/**
	 * Ensures that, when possible, the selection range (currently selected text
	 * input) is not disturbed by performing the transaction.
	 */
	var SELECTION_RESTORATION = {
	  /**
	   * @return {Selection} Selection information.
	   */
	  initialize: ReactInputSelection.getSelectionInformation,
	  /**
	   * @param {Selection} sel Selection information returned from `initialize`.
	   */
	  close: ReactInputSelection.restoreSelection
	};

	/**
	 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
	 * high level DOM manipulations (like temporarily removing a text input from the
	 * DOM).
	 */
	var EVENT_SUPPRESSION = {
	  /**
	   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
	   * the reconciliation.
	   */
	  initialize: function() {
	    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
	    ReactBrowserEventEmitter.setEnabled(false);
	    return currentlyEnabled;
	  },

	  /**
	   * @param {boolean} previouslyEnabled Enabled status of
	   *   `ReactBrowserEventEmitter` before the reconciliation occured. `close`
	   *   restores the previous value.
	   */
	  close: function(previouslyEnabled) {
	    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
	  }
	};

	/**
	 * Provides a queue for collecting `componentDidMount` and
	 * `componentDidUpdate` callbacks during the the transaction.
	 */
	var ON_DOM_READY_QUEUEING = {
	  /**
	   * Initializes the internal `onDOMReady` queue.
	   */
	  initialize: function() {
	    this.reactMountReady.reset();
	  },

	  /**
	   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
	   */
	  close: function() {
	    this.reactMountReady.notifyAll();
	  }
	};

	var PUT_LISTENER_QUEUEING = {
	  initialize: function() {
	    this.putListenerQueue.reset();
	  },

	  close: function() {
	    this.putListenerQueue.putListeners();
	  }
	};

	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [
	  PUT_LISTENER_QUEUEING,
	  SELECTION_RESTORATION,
	  EVENT_SUPPRESSION,
	  ON_DOM_READY_QUEUEING
	];

	/**
	 * Currently:
	 * - The order that these are listed in the transaction is critical:
	 * - Suppresses events.
	 * - Restores selection range.
	 *
	 * Future:
	 * - Restore document/overflow scroll positions that were unintentionally
	 *   modified via DOM insertions above the top viewport boundary.
	 * - Implement/integrate with customized constraint based layout system and keep
	 *   track of which dimensions must be remeasured.
	 *
	 * @class ReactReconcileTransaction
	 */
	function ReactReconcileTransaction() {
	  this.reinitializeTransaction();
	  // Only server-side rendering really needs this option (see
	  // `ReactServerRendering`), but server-side uses
	  // `ReactServerRenderingTransaction` instead. This option is here so that it's
	  // accessible and defaults to false when `ReactDOMComponent` and
	  // `ReactTextComponent` checks it in `mountComponent`.`
	  this.renderToStaticMarkup = false;
	  this.reactMountReady = CallbackQueue.getPooled(null);
	  this.putListenerQueue = ReactPutListenerQueue.getPooled();
	}

	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array<object>} List of operation wrap proceedures.
	   *   TODO: convert to array<TransactionWrapper>
	   */
	  getTransactionWrappers: function() {
	    return TRANSACTION_WRAPPERS;
	  },

	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function() {
	    return this.reactMountReady;
	  },

	  getPutListenerQueue: function() {
	    return this.putListenerQueue;
	  },

	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be resused.
	   */
	  destructor: function() {
	    CallbackQueue.release(this.reactMountReady);
	    this.reactMountReady = null;

	    ReactPutListenerQueue.release(this.putListenerQueue);
	    this.putListenerQueue = null;
	  }
	};


	assign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);

	PooledClass.addPoolingTo(ReactReconcileTransaction);

	module.exports = ReactReconcileTransaction;


/***/ },
/* 140 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInputSelection
	 */

	'use strict';

	var ReactDOMSelection = __webpack_require__(141);

	var containsNode = __webpack_require__(88);
	var focusNode = __webpack_require__(124);
	var getActiveElement = __webpack_require__(143);

	function isInDocument(node) {
	  return containsNode(document.documentElement, node);
	}

	/**
	 * @ReactInputSelection: React input selection module. Based on Selection.js,
	 * but modified to be suitable for react and has a couple of bug fixes (doesn't
	 * assume buttons have range selections allowed).
	 * Input selection module for React.
	 */
	var ReactInputSelection = {

	  hasSelectionCapabilities: function(elem) {
	    return elem && (
	      ((elem.nodeName === 'INPUT' && elem.type === 'text') ||
	      elem.nodeName === 'TEXTAREA' || elem.contentEditable === 'true')
	    );
	  },

	  getSelectionInformation: function() {
	    var focusedElem = getActiveElement();
	    return {
	      focusedElem: focusedElem,
	      selectionRange:
	          ReactInputSelection.hasSelectionCapabilities(focusedElem) ?
	          ReactInputSelection.getSelection(focusedElem) :
	          null
	    };
	  },

	  /**
	   * @restoreSelection: If any selection information was potentially lost,
	   * restore it. This is useful when performing operations that could remove dom
	   * nodes and place them back in, resulting in focus being lost.
	   */
	  restoreSelection: function(priorSelectionInformation) {
	    var curFocusedElem = getActiveElement();
	    var priorFocusedElem = priorSelectionInformation.focusedElem;
	    var priorSelectionRange = priorSelectionInformation.selectionRange;
	    if (curFocusedElem !== priorFocusedElem &&
	        isInDocument(priorFocusedElem)) {
	      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
	        ReactInputSelection.setSelection(
	          priorFocusedElem,
	          priorSelectionRange
	        );
	      }
	      focusNode(priorFocusedElem);
	    }
	  },

	  /**
	   * @getSelection: Gets the selection bounds of a focused textarea, input or
	   * contentEditable node.
	   * -@input: Look up selection bounds of this input
	   * -@return {start: selectionStart, end: selectionEnd}
	   */
	  getSelection: function(input) {
	    var selection;

	    if ('selectionStart' in input) {
	      // Modern browser with input or textarea.
	      selection = {
	        start: input.selectionStart,
	        end: input.selectionEnd
	      };
	    } else if (document.selection && input.nodeName === 'INPUT') {
	      // IE8 input.
	      var range = document.selection.createRange();
	      // There can only be one selection per document in IE, so it must
	      // be in our element.
	      if (range.parentElement() === input) {
	        selection = {
	          start: -range.moveStart('character', -input.value.length),
	          end: -range.moveEnd('character', -input.value.length)
	        };
	      }
	    } else {
	      // Content editable or old IE textarea.
	      selection = ReactDOMSelection.getOffsets(input);
	    }

	    return selection || {start: 0, end: 0};
	  },

	  /**
	   * @setSelection: Sets the selection bounds of a textarea or input and focuses
	   * the input.
	   * -@input     Set selection bounds of this input or textarea
	   * -@offsets   Object of same form that is returned from get*
	   */
	  setSelection: function(input, offsets) {
	    var start = offsets.start;
	    var end = offsets.end;
	    if (typeof end === 'undefined') {
	      end = start;
	    }

	    if ('selectionStart' in input) {
	      input.selectionStart = start;
	      input.selectionEnd = Math.min(end, input.value.length);
	    } else if (document.selection && input.nodeName === 'INPUT') {
	      var range = input.createTextRange();
	      range.collapse(true);
	      range.moveStart('character', start);
	      range.moveEnd('character', end - start);
	      range.select();
	    } else {
	      ReactDOMSelection.setOffsets(input, offsets);
	    }
	  }
	};

	module.exports = ReactInputSelection;


/***/ },
/* 141 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMSelection
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(60);

	var getNodeForCharacterOffset = __webpack_require__(142);
	var getTextContentAccessor = __webpack_require__(104);

	/**
	 * While `isCollapsed` is available on the Selection object and `collapsed`
	 * is available on the Range object, IE11 sometimes gets them wrong.
	 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
	 */
	function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
	  return anchorNode === focusNode && anchorOffset === focusOffset;
	}

	/**
	 * Get the appropriate anchor and focus node/offset pairs for IE.
	 *
	 * The catch here is that IE's selection API doesn't provide information
	 * about whether the selection is forward or backward, so we have to
	 * behave as though it's always forward.
	 *
	 * IE text differs from modern selection in that it behaves as though
	 * block elements end with a new line. This means character offsets will
	 * differ between the two APIs.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getIEOffsets(node) {
	  var selection = document.selection;
	  var selectedRange = selection.createRange();
	  var selectedLength = selectedRange.text.length;

	  // Duplicate selection so we can move range without breaking user selection.
	  var fromStart = selectedRange.duplicate();
	  fromStart.moveToElementText(node);
	  fromStart.setEndPoint('EndToStart', selectedRange);

	  var startOffset = fromStart.text.length;
	  var endOffset = startOffset + selectedLength;

	  return {
	    start: startOffset,
	    end: endOffset
	  };
	}

	/**
	 * @param {DOMElement} node
	 * @return {?object}
	 */
	function getModernOffsets(node) {
	  var selection = window.getSelection && window.getSelection();

	  if (!selection || selection.rangeCount === 0) {
	    return null;
	  }

	  var anchorNode = selection.anchorNode;
	  var anchorOffset = selection.anchorOffset;
	  var focusNode = selection.focusNode;
	  var focusOffset = selection.focusOffset;

	  var currentRange = selection.getRangeAt(0);

	  // If the node and offset values are the same, the selection is collapsed.
	  // `Selection.isCollapsed` is available natively, but IE sometimes gets
	  // this value wrong.
	  var isSelectionCollapsed = isCollapsed(
	    selection.anchorNode,
	    selection.anchorOffset,
	    selection.focusNode,
	    selection.focusOffset
	  );

	  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;

	  var tempRange = currentRange.cloneRange();
	  tempRange.selectNodeContents(node);
	  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);

	  var isTempRangeCollapsed = isCollapsed(
	    tempRange.startContainer,
	    tempRange.startOffset,
	    tempRange.endContainer,
	    tempRange.endOffset
	  );

	  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
	  var end = start + rangeLength;

	  // Detect whether the selection is backward.
	  var detectionRange = document.createRange();
	  detectionRange.setStart(anchorNode, anchorOffset);
	  detectionRange.setEnd(focusNode, focusOffset);
	  var isBackward = detectionRange.collapsed;

	  return {
	    start: isBackward ? end : start,
	    end: isBackward ? start : end
	  };
	}

	/**
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setIEOffsets(node, offsets) {
	  var range = document.selection.createRange().duplicate();
	  var start, end;

	  if (typeof offsets.end === 'undefined') {
	    start = offsets.start;
	    end = start;
	  } else if (offsets.start > offsets.end) {
	    start = offsets.end;
	    end = offsets.start;
	  } else {
	    start = offsets.start;
	    end = offsets.end;
	  }

	  range.moveToElementText(node);
	  range.moveStart('character', start);
	  range.setEndPoint('EndToStart', range);
	  range.moveEnd('character', end - start);
	  range.select();
	}

	/**
	 * In modern non-IE browsers, we can support both forward and backward
	 * selections.
	 *
	 * Note: IE10+ supports the Selection object, but it does not support
	 * the `extend` method, which means that even in modern IE, it's not possible
	 * to programatically create a backward selection. Thus, for all IE
	 * versions, we use the old IE API to create our selections.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setModernOffsets(node, offsets) {
	  if (!window.getSelection) {
	    return;
	  }

	  var selection = window.getSelection();
	  var length = node[getTextContentAccessor()].length;
	  var start = Math.min(offsets.start, length);
	  var end = typeof offsets.end === 'undefined' ?
	            start : Math.min(offsets.end, length);

	  // IE 11 uses modern selection, but doesn't support the extend method.
	  // Flip backward selections, so we can set with a single range.
	  if (!selection.extend && start > end) {
	    var temp = end;
	    end = start;
	    start = temp;
	  }

	  var startMarker = getNodeForCharacterOffset(node, start);
	  var endMarker = getNodeForCharacterOffset(node, end);

	  if (startMarker && endMarker) {
	    var range = document.createRange();
	    range.setStart(startMarker.node, startMarker.offset);
	    selection.removeAllRanges();

	    if (start > end) {
	      selection.addRange(range);
	      selection.extend(endMarker.node, endMarker.offset);
	    } else {
	      range.setEnd(endMarker.node, endMarker.offset);
	      selection.addRange(range);
	    }
	  }
	}

	var useIEOffsets = (
	  ExecutionEnvironment.canUseDOM &&
	  'selection' in document &&
	  !('getSelection' in window)
	);

	var ReactDOMSelection = {
	  /**
	   * @param {DOMElement} node
	   */
	  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,

	  /**
	   * @param {DOMElement|DOMTextNode} node
	   * @param {object} offsets
	   */
	  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
	};

	module.exports = ReactDOMSelection;


/***/ },
/* 142 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getNodeForCharacterOffset
	 */

	'use strict';

	/**
	 * Given any node return the first leaf node without children.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {DOMElement|DOMTextNode}
	 */
	function getLeafNode(node) {
	  while (node && node.firstChild) {
	    node = node.firstChild;
	  }
	  return node;
	}

	/**
	 * Get the next sibling within a container. This will walk up the
	 * DOM if a node's siblings have been exhausted.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {?DOMElement|DOMTextNode}
	 */
	function getSiblingNode(node) {
	  while (node) {
	    if (node.nextSibling) {
	      return node.nextSibling;
	    }
	    node = node.parentNode;
	  }
	}

	/**
	 * Get object describing the nodes which contain characters at offset.
	 *
	 * @param {DOMElement|DOMTextNode} root
	 * @param {number} offset
	 * @return {?object}
	 */
	function getNodeForCharacterOffset(root, offset) {
	  var node = getLeafNode(root);
	  var nodeStart = 0;
	  var nodeEnd = 0;

	  while (node) {
	    if (node.nodeType === 3) {
	      nodeEnd = nodeStart + node.textContent.length;

	      if (nodeStart <= offset && nodeEnd >= offset) {
	        return {
	          node: node,
	          offset: offset - nodeStart
	        };
	      }

	      nodeStart = nodeEnd;
	    }

	    node = getLeafNode(getSiblingNode(node));
	  }
	}

	module.exports = getNodeForCharacterOffset;


/***/ },
/* 143 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getActiveElement
	 * @typechecks
	 */

	/**
	 * Same as document.activeElement but wraps in a try-catch block. In IE it is
	 * not safe to call document.activeElement if there is nothing focused.
	 *
	 * The activeElement will be null only if the document body is not yet defined.
	 */
	function getActiveElement() /*?DOMElement*/ {
	  try {
	    return document.activeElement || document.body;
	  } catch (e) {
	    return document.body;
	  }
	}

	module.exports = getActiveElement;


/***/ },
/* 144 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPutListenerQueue
	 */

	'use strict';

	var PooledClass = __webpack_require__(19);
	var ReactBrowserEventEmitter = __webpack_require__(77);

	var assign = __webpack_require__(10);

	function ReactPutListenerQueue() {
	  this.listenersToPut = [];
	}

	assign(ReactPutListenerQueue.prototype, {
	  enqueuePutListener: function(rootNodeID, propKey, propValue) {
	    this.listenersToPut.push({
	      rootNodeID: rootNodeID,
	      propKey: propKey,
	      propValue: propValue
	    });
	  },

	  putListeners: function() {
	    for (var i = 0; i < this.listenersToPut.length; i++) {
	      var listenerToPut = this.listenersToPut[i];
	      ReactBrowserEventEmitter.putListener(
	        listenerToPut.rootNodeID,
	        listenerToPut.propKey,
	        listenerToPut.propValue
	      );
	    }
	  },

	  reset: function() {
	    this.listenersToPut.length = 0;
	  },

	  destructor: function() {
	    this.reset();
	  }
	});

	PooledClass.addPoolingTo(ReactPutListenerQueue);

	module.exports = ReactPutListenerQueue;


/***/ },
/* 145 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SelectEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(15);
	var EventPropagators = __webpack_require__(102);
	var ReactInputSelection = __webpack_require__(140);
	var SyntheticEvent = __webpack_require__(106);

	var getActiveElement = __webpack_require__(143);
	var isTextInputElement = __webpack_require__(110);
	var keyOf = __webpack_require__(48);
	var shallowEqual = __webpack_require__(146);

	var topLevelTypes = EventConstants.topLevelTypes;

	var eventTypes = {
	  select: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onSelect: null}),
	      captured: keyOf({onSelectCapture: null})
	    },
	    dependencies: [
	      topLevelTypes.topBlur,
	      topLevelTypes.topContextMenu,
	      topLevelTypes.topFocus,
	      topLevelTypes.topKeyDown,
	      topLevelTypes.topMouseDown,
	      topLevelTypes.topMouseUp,
	      topLevelTypes.topSelectionChange
	    ]
	  }
	};

	var activeElement = null;
	var activeElementID = null;
	var lastSelection = null;
	var mouseDown = false;

	/**
	 * Get an object which is a unique representation of the current selection.
	 *
	 * The return value will not be consistent across nodes or browsers, but
	 * two identical selections on the same node will return identical objects.
	 *
	 * @param {DOMElement} node
	 * @param {object}
	 */
	function getSelection(node) {
	  if ('selectionStart' in node &&
	      ReactInputSelection.hasSelectionCapabilities(node)) {
	    return {
	      start: node.selectionStart,
	      end: node.selectionEnd
	    };
	  } else if (window.getSelection) {
	    var selection = window.getSelection();
	    return {
	      anchorNode: selection.anchorNode,
	      anchorOffset: selection.anchorOffset,
	      focusNode: selection.focusNode,
	      focusOffset: selection.focusOffset
	    };
	  } else if (document.selection) {
	    var range = document.selection.createRange();
	    return {
	      parentElement: range.parentElement(),
	      text: range.text,
	      top: range.boundingTop,
	      left: range.boundingLeft
	    };
	  }
	}

	/**
	 * Poll selection to see whether it's changed.
	 *
	 * @param {object} nativeEvent
	 * @return {?SyntheticEvent}
	 */
	function constructSelectEvent(nativeEvent) {
	  // Ensure we have the right element, and that the user is not dragging a
	  // selection (this matches native `select` event behavior). In HTML5, select
	  // fires only on input and textarea thus if there's no focused element we
	  // won't dispatch.
	  if (mouseDown ||
	      activeElement == null ||
	      activeElement !== getActiveElement()) {
	    return null;
	  }

	  // Only fire when selection has actually changed.
	  var currentSelection = getSelection(activeElement);
	  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
	    lastSelection = currentSelection;

	    var syntheticEvent = SyntheticEvent.getPooled(
	      eventTypes.select,
	      activeElementID,
	      nativeEvent
	    );

	    syntheticEvent.type = 'select';
	    syntheticEvent.target = activeElement;

	    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);

	    return syntheticEvent;
	  }
	}

	/**
	 * This plugin creates an `onSelect` event that normalizes select events
	 * across form elements.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - contentEditable
	 *
	 * This differs from native browser implementations in the following ways:
	 * - Fires on contentEditable fields as well as inputs.
	 * - Fires for collapsed selection.
	 * - Fires after user input.
	 */
	var SelectEventPlugin = {

	  eventTypes: eventTypes,

	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function(
	      topLevelType,
	      topLevelTarget,
	      topLevelTargetID,
	      nativeEvent) {

	    switch (topLevelType) {
	      // Track the input node that has focus.
	      case topLevelTypes.topFocus:
	        if (isTextInputElement(topLevelTarget) ||
	            topLevelTarget.contentEditable === 'true') {
	          activeElement = topLevelTarget;
	          activeElementID = topLevelTargetID;
	          lastSelection = null;
	        }
	        break;
	      case topLevelTypes.topBlur:
	        activeElement = null;
	        activeElementID = null;
	        lastSelection = null;
	        break;

	      // Don't fire the event while the user is dragging. This matches the
	      // semantics of the native select event.
	      case topLevelTypes.topMouseDown:
	        mouseDown = true;
	        break;
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topMouseUp:
	        mouseDown = false;
	        return constructSelectEvent(nativeEvent);

	      // Chrome and IE fire non-standard event when selection is changed (and
	      // sometimes when it hasn't).
	      // Firefox doesn't support selectionchange, so check selection status
	      // after each key entry. The selection changes after keydown and before
	      // keyup, but we check on keydown as well in the case of holding down a
	      // key, when multiple keydown events are fired but only one keyup is.
	      case topLevelTypes.topSelectionChange:
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        return constructSelectEvent(nativeEvent);
	    }
	  }
	};

	module.exports = SelectEventPlugin;


/***/ },
/* 146 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule shallowEqual
	 */

	'use strict';

	/**
	 * Performs equality by iterating through keys on an object and returning
	 * false when any key has values which are not strictly equal between
	 * objA and objB. Returns true when the values of all keys are strictly equal.
	 *
	 * @return {boolean}
	 */
	function shallowEqual(objA, objB) {
	  if (objA === objB) {
	    return true;
	  }
	  var key;
	  // Test for A's keys different from B.
	  for (key in objA) {
	    if (objA.hasOwnProperty(key) &&
	        (!objB.hasOwnProperty(key) || objA[key] !== objB[key])) {
	      return false;
	    }
	  }
	  // Test for B's keys missing from A.
	  for (key in objB) {
	    if (objB.hasOwnProperty(key) && !objA.hasOwnProperty(key)) {
	      return false;
	    }
	  }
	  return true;
	}

	module.exports = shallowEqual;


/***/ },
/* 147 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ServerReactRootIndex
	 * @typechecks
	 */

	'use strict';

	/**
	 * Size of the reactRoot ID space. We generate random numbers for React root
	 * IDs and if there's a collision the events and DOM update system will
	 * get confused. In the future we need a way to generate GUIDs but for
	 * now this will work on a smaller scale.
	 */
	var GLOBAL_MOUNT_POINT_MAX = Math.pow(2, 53);

	var ServerReactRootIndex = {
	  createReactRootIndex: function() {
	    return Math.ceil(Math.random() * GLOBAL_MOUNT_POINT_MAX);
	  }
	};

	module.exports = ServerReactRootIndex;


/***/ },
/* 148 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SimpleEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(15);
	var EventPluginUtils = __webpack_require__(14);
	var EventPropagators = __webpack_require__(102);
	var SyntheticClipboardEvent = __webpack_require__(149);
	var SyntheticEvent = __webpack_require__(106);
	var SyntheticFocusEvent = __webpack_require__(150);
	var SyntheticKeyboardEvent = __webpack_require__(151);
	var SyntheticMouseEvent = __webpack_require__(114);
	var SyntheticDragEvent = __webpack_require__(154);
	var SyntheticTouchEvent = __webpack_require__(155);
	var SyntheticUIEvent = __webpack_require__(115);
	var SyntheticWheelEvent = __webpack_require__(156);

	var getEventCharCode = __webpack_require__(152);

	var invariant = __webpack_require__(17);
	var keyOf = __webpack_require__(48);
	var warning = __webpack_require__(24);

	var topLevelTypes = EventConstants.topLevelTypes;

	var eventTypes = {
	  blur: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onBlur: true}),
	      captured: keyOf({onBlurCapture: true})
	    }
	  },
	  click: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onClick: true}),
	      captured: keyOf({onClickCapture: true})
	    }
	  },
	  contextMenu: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onContextMenu: true}),
	      captured: keyOf({onContextMenuCapture: true})
	    }
	  },
	  copy: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onCopy: true}),
	      captured: keyOf({onCopyCapture: true})
	    }
	  },
	  cut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onCut: true}),
	      captured: keyOf({onCutCapture: true})
	    }
	  },
	  doubleClick: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onDoubleClick: true}),
	      captured: keyOf({onDoubleClickCapture: true})
	    }
	  },
	  drag: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onDrag: true}),
	      captured: keyOf({onDragCapture: true})
	    }
	  },
	  dragEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onDragEnd: true}),
	      captured: keyOf({onDragEndCapture: true})
	    }
	  },
	  dragEnter: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onDragEnter: true}),
	      captured: keyOf({onDragEnterCapture: true})
	    }
	  },
	  dragExit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onDragExit: true}),
	      captured: keyOf({onDragExitCapture: true})
	    }
	  },
	  dragLeave: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onDragLeave: true}),
	      captured: keyOf({onDragLeaveCapture: true})
	    }
	  },
	  dragOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onDragOver: true}),
	      captured: keyOf({onDragOverCapture: true})
	    }
	  },
	  dragStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onDragStart: true}),
	      captured: keyOf({onDragStartCapture: true})
	    }
	  },
	  drop: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onDrop: true}),
	      captured: keyOf({onDropCapture: true})
	    }
	  },
	  focus: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onFocus: true}),
	      captured: keyOf({onFocusCapture: true})
	    }
	  },
	  input: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onInput: true}),
	      captured: keyOf({onInputCapture: true})
	    }
	  },
	  keyDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onKeyDown: true}),
	      captured: keyOf({onKeyDownCapture: true})
	    }
	  },
	  keyPress: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onKeyPress: true}),
	      captured: keyOf({onKeyPressCapture: true})
	    }
	  },
	  keyUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onKeyUp: true}),
	      captured: keyOf({onKeyUpCapture: true})
	    }
	  },
	  load: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onLoad: true}),
	      captured: keyOf({onLoadCapture: true})
	    }
	  },
	  error: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onError: true}),
	      captured: keyOf({onErrorCapture: true})
	    }
	  },
	  // Note: We do not allow listening to mouseOver events. Instead, use the
	  // onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.
	  mouseDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onMouseDown: true}),
	      captured: keyOf({onMouseDownCapture: true})
	    }
	  },
	  mouseMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onMouseMove: true}),
	      captured: keyOf({onMouseMoveCapture: true})
	    }
	  },
	  mouseOut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onMouseOut: true}),
	      captured: keyOf({onMouseOutCapture: true})
	    }
	  },
	  mouseOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onMouseOver: true}),
	      captured: keyOf({onMouseOverCapture: true})
	    }
	  },
	  mouseUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onMouseUp: true}),
	      captured: keyOf({onMouseUpCapture: true})
	    }
	  },
	  paste: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onPaste: true}),
	      captured: keyOf({onPasteCapture: true})
	    }
	  },
	  reset: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onReset: true}),
	      captured: keyOf({onResetCapture: true})
	    }
	  },
	  scroll: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onScroll: true}),
	      captured: keyOf({onScrollCapture: true})
	    }
	  },
	  submit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onSubmit: true}),
	      captured: keyOf({onSubmitCapture: true})
	    }
	  },
	  touchCancel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onTouchCancel: true}),
	      captured: keyOf({onTouchCancelCapture: true})
	    }
	  },
	  touchEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onTouchEnd: true}),
	      captured: keyOf({onTouchEndCapture: true})
	    }
	  },
	  touchMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onTouchMove: true}),
	      captured: keyOf({onTouchMoveCapture: true})
	    }
	  },
	  touchStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onTouchStart: true}),
	      captured: keyOf({onTouchStartCapture: true})
	    }
	  },
	  wheel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onWheel: true}),
	      captured: keyOf({onWheelCapture: true})
	    }
	  }
	};

	var topLevelEventsToDispatchConfig = {
	  topBlur:        eventTypes.blur,
	  topClick:       eventTypes.click,
	  topContextMenu: eventTypes.contextMenu,
	  topCopy:        eventTypes.copy,
	  topCut:         eventTypes.cut,
	  topDoubleClick: eventTypes.doubleClick,
	  topDrag:        eventTypes.drag,
	  topDragEnd:     eventTypes.dragEnd,
	  topDragEnter:   eventTypes.dragEnter,
	  topDragExit:    eventTypes.dragExit,
	  topDragLeave:   eventTypes.dragLeave,
	  topDragOver:    eventTypes.dragOver,
	  topDragStart:   eventTypes.dragStart,
	  topDrop:        eventTypes.drop,
	  topError:       eventTypes.error,
	  topFocus:       eventTypes.focus,
	  topInput:       eventTypes.input,
	  topKeyDown:     eventTypes.keyDown,
	  topKeyPress:    eventTypes.keyPress,
	  topKeyUp:       eventTypes.keyUp,
	  topLoad:        eventTypes.load,
	  topMouseDown:   eventTypes.mouseDown,
	  topMouseMove:   eventTypes.mouseMove,
	  topMouseOut:    eventTypes.mouseOut,
	  topMouseOver:   eventTypes.mouseOver,
	  topMouseUp:     eventTypes.mouseUp,
	  topPaste:       eventTypes.paste,
	  topReset:       eventTypes.reset,
	  topScroll:      eventTypes.scroll,
	  topSubmit:      eventTypes.submit,
	  topTouchCancel: eventTypes.touchCancel,
	  topTouchEnd:    eventTypes.touchEnd,
	  topTouchMove:   eventTypes.touchMove,
	  topTouchStart:  eventTypes.touchStart,
	  topWheel:       eventTypes.wheel
	};

	for (var type in topLevelEventsToDispatchConfig) {
	  topLevelEventsToDispatchConfig[type].dependencies = [type];
	}

	var SimpleEventPlugin = {

	  eventTypes: eventTypes,

	  /**
	   * Same as the default implementation, except cancels the event when return
	   * value is false. This behavior will be disabled in a future release.
	   *
	   * @param {object} Event to be dispatched.
	   * @param {function} Application-level callback.
	   * @param {string} domID DOM ID to pass to the callback.
	   */
	  executeDispatch: function(event, listener, domID) {
	    var returnValue = EventPluginUtils.executeDispatch(event, listener, domID);

	    ("production" !== process.env.NODE_ENV ? warning(
	      typeof returnValue !== 'boolean',
	      'Returning `false` from an event handler is deprecated and will be ' +
	      'ignored in a future release. Instead, manually call ' +
	      'e.stopPropagation() or e.preventDefault(), as appropriate.'
	    ) : null);

	    if (returnValue === false) {
	      event.stopPropagation();
	      event.preventDefault();
	    }
	  },

	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function(
	      topLevelType,
	      topLevelTarget,
	      topLevelTargetID,
	      nativeEvent) {
	    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
	    if (!dispatchConfig) {
	      return null;
	    }
	    var EventConstructor;
	    switch (topLevelType) {
	      case topLevelTypes.topInput:
	      case topLevelTypes.topLoad:
	      case topLevelTypes.topError:
	      case topLevelTypes.topReset:
	      case topLevelTypes.topSubmit:
	        // HTML Events
	        // @see http://www.w3.org/TR/html5/index.html#events-0
	        EventConstructor = SyntheticEvent;
	        break;
	      case topLevelTypes.topKeyPress:
	        // FireFox creates a keypress event for function keys too. This removes
	        // the unwanted keypress events. Enter is however both printable and
	        // non-printable. One would expect Tab to be as well (but it isn't).
	        if (getEventCharCode(nativeEvent) === 0) {
	          return null;
	        }
	        /* falls through */
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        EventConstructor = SyntheticKeyboardEvent;
	        break;
	      case topLevelTypes.topBlur:
	      case topLevelTypes.topFocus:
	        EventConstructor = SyntheticFocusEvent;
	        break;
	      case topLevelTypes.topClick:
	        // Firefox creates a click event on right mouse clicks. This removes the
	        // unwanted click events.
	        if (nativeEvent.button === 2) {
	          return null;
	        }
	        /* falls through */
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topDoubleClick:
	      case topLevelTypes.topMouseDown:
	      case topLevelTypes.topMouseMove:
	      case topLevelTypes.topMouseOut:
	      case topLevelTypes.topMouseOver:
	      case topLevelTypes.topMouseUp:
	        EventConstructor = SyntheticMouseEvent;
	        break;
	      case topLevelTypes.topDrag:
	      case topLevelTypes.topDragEnd:
	      case topLevelTypes.topDragEnter:
	      case topLevelTypes.topDragExit:
	      case topLevelTypes.topDragLeave:
	      case topLevelTypes.topDragOver:
	      case topLevelTypes.topDragStart:
	      case topLevelTypes.topDrop:
	        EventConstructor = SyntheticDragEvent;
	        break;
	      case topLevelTypes.topTouchCancel:
	      case topLevelTypes.topTouchEnd:
	      case topLevelTypes.topTouchMove:
	      case topLevelTypes.topTouchStart:
	        EventConstructor = SyntheticTouchEvent;
	        break;
	      case topLevelTypes.topScroll:
	        EventConstructor = SyntheticUIEvent;
	        break;
	      case topLevelTypes.topWheel:
	        EventConstructor = SyntheticWheelEvent;
	        break;
	      case topLevelTypes.topCopy:
	      case topLevelTypes.topCut:
	      case topLevelTypes.topPaste:
	        EventConstructor = SyntheticClipboardEvent;
	        break;
	    }
	    ("production" !== process.env.NODE_ENV ? invariant(
	      EventConstructor,
	      'SimpleEventPlugin: Unhandled event type, `%s`.',
	      topLevelType
	    ) : invariant(EventConstructor));
	    var event = EventConstructor.getPooled(
	      dispatchConfig,
	      topLevelTargetID,
	      nativeEvent
	    );
	    EventPropagators.accumulateTwoPhaseDispatches(event);
	    return event;
	  }

	};

	module.exports = SimpleEventPlugin;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 149 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticClipboardEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(106);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/clipboard-apis/
	 */
	var ClipboardEventInterface = {
	  clipboardData: function(event) {
	    return (
	      'clipboardData' in event ?
	        event.clipboardData :
	        window.clipboardData
	    );
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
	}

	SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);

	module.exports = SyntheticClipboardEvent;


/***/ },
/* 150 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticFocusEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(115);

	/**
	 * @interface FocusEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var FocusEventInterface = {
	  relatedTarget: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
	}

	SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);

	module.exports = SyntheticFocusEvent;


/***/ },
/* 151 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticKeyboardEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(115);

	var getEventCharCode = __webpack_require__(152);
	var getEventKey = __webpack_require__(153);
	var getEventModifierState = __webpack_require__(116);

	/**
	 * @interface KeyboardEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var KeyboardEventInterface = {
	  key: getEventKey,
	  location: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  repeat: null,
	  locale: null,
	  getModifierState: getEventModifierState,
	  // Legacy Interface
	  charCode: function(event) {
	    // `charCode` is the result of a KeyPress event and represents the value of
	    // the actual printable character.

	    // KeyPress is deprecated, but its replacement is not yet final and not
	    // implemented in any major browser. Only KeyPress has charCode.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    return 0;
	  },
	  keyCode: function(event) {
	    // `keyCode` is the result of a KeyDown/Up event and represents the value of
	    // physical keyboard key.

	    // The actual meaning of the value depends on the users' keyboard layout
	    // which cannot be detected. Assuming that it is a US keyboard layout
	    // provides a surprisingly accurate mapping for US and European users.
	    // Due to this, it is left to the user to implement at this time.
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  },
	  which: function(event) {
	    // `which` is an alias for either `keyCode` or `charCode` depending on the
	    // type of the event.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
	}

	SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);

	module.exports = SyntheticKeyboardEvent;


/***/ },
/* 152 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventCharCode
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * `charCode` represents the actual "character code" and is safe to use with
	 * `String.fromCharCode`. As such, only keys that correspond to printable
	 * characters produce a valid `charCode`, the only exception to this is Enter.
	 * The Tab-key is considered non-printable and does not have a `charCode`,
	 * presumably because it does not produce a tab-character in browsers.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {string} Normalized `charCode` property.
	 */
	function getEventCharCode(nativeEvent) {
	  var charCode;
	  var keyCode = nativeEvent.keyCode;

	  if ('charCode' in nativeEvent) {
	    charCode = nativeEvent.charCode;

	    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
	    if (charCode === 0 && keyCode === 13) {
	      charCode = 13;
	    }
	  } else {
	    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
	    charCode = keyCode;
	  }

	  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
	  // Must not discard the (non-)printable Enter-key.
	  if (charCode >= 32 || charCode === 13) {
	    return charCode;
	  }

	  return 0;
	}

	module.exports = getEventCharCode;


/***/ },
/* 153 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventKey
	 * @typechecks static-only
	 */

	'use strict';

	var getEventCharCode = __webpack_require__(152);

	/**
	 * Normalization of deprecated HTML5 `key` values
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var normalizeKey = {
	  'Esc': 'Escape',
	  'Spacebar': ' ',
	  'Left': 'ArrowLeft',
	  'Up': 'ArrowUp',
	  'Right': 'ArrowRight',
	  'Down': 'ArrowDown',
	  'Del': 'Delete',
	  'Win': 'OS',
	  'Menu': 'ContextMenu',
	  'Apps': 'ContextMenu',
	  'Scroll': 'ScrollLock',
	  'MozPrintableKey': 'Unidentified'
	};

	/**
	 * Translation from legacy `keyCode` to HTML5 `key`
	 * Only special keys supported, all others depend on keyboard layout or browser
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var translateToKey = {
	  8: 'Backspace',
	  9: 'Tab',
	  12: 'Clear',
	  13: 'Enter',
	  16: 'Shift',
	  17: 'Control',
	  18: 'Alt',
	  19: 'Pause',
	  20: 'CapsLock',
	  27: 'Escape',
	  32: ' ',
	  33: 'PageUp',
	  34: 'PageDown',
	  35: 'End',
	  36: 'Home',
	  37: 'ArrowLeft',
	  38: 'ArrowUp',
	  39: 'ArrowRight',
	  40: 'ArrowDown',
	  45: 'Insert',
	  46: 'Delete',
	  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
	  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
	  144: 'NumLock',
	  145: 'ScrollLock',
	  224: 'Meta'
	};

	/**
	 * @param {object} nativeEvent Native browser event.
	 * @return {string} Normalized `key` property.
	 */
	function getEventKey(nativeEvent) {
	  if (nativeEvent.key) {
	    // Normalize inconsistent values reported by browsers due to
	    // implementations of a working draft specification.

	    // FireFox implements `key` but returns `MozPrintableKey` for all
	    // printable characters (normalized to `Unidentified`), ignore it.
	    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
	    if (key !== 'Unidentified') {
	      return key;
	    }
	  }

	  // Browser does not implement `key`, polyfill as much of it as we can.
	  if (nativeEvent.type === 'keypress') {
	    var charCode = getEventCharCode(nativeEvent);

	    // The enter-key is technically both printable and non-printable and can
	    // thus be captured by `keypress`, no other non-printable key should.
	    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
	  }
	  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
	    // While user keyboard layout determines the actual meaning of each
	    // `keyCode` value, almost all function keys have a universal value.
	    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
	  }
	  return '';
	}

	module.exports = getEventKey;


/***/ },
/* 154 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticDragEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticMouseEvent = __webpack_require__(114);

	/**
	 * @interface DragEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var DragEventInterface = {
	  dataTransfer: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent) {
	  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
	}

	SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);

	module.exports = SyntheticDragEvent;


/***/ },
/* 155 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticTouchEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(115);

	var getEventModifierState = __webpack_require__(116);

	/**
	 * @interface TouchEvent
	 * @see http://www.w3.org/TR/touch-events/
	 */
	var TouchEventInterface = {
	  touches: null,
	  targetTouches: null,
	  changedTouches: null,
	  altKey: null,
	  metaKey: null,
	  ctrlKey: null,
	  shiftKey: null,
	  getModifierState: getEventModifierState
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
	}

	SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);

	module.exports = SyntheticTouchEvent;


/***/ },
/* 156 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticWheelEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticMouseEvent = __webpack_require__(114);

	/**
	 * @interface WheelEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var WheelEventInterface = {
	  deltaX: function(event) {
	    return (
	      'deltaX' in event ? event.deltaX :
	      // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
	      'wheelDeltaX' in event ? -event.wheelDeltaX : 0
	    );
	  },
	  deltaY: function(event) {
	    return (
	      'deltaY' in event ? event.deltaY :
	      // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
	      'wheelDeltaY' in event ? -event.wheelDeltaY :
	      // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
	      'wheelDelta' in event ? -event.wheelDelta : 0
	    );
	  },
	  deltaZ: null,

	  // Browsers without "deltaMode" is reporting in raw wheel delta where one
	  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
	  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
	  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
	  deltaMode: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticMouseEvent}
	 */
	function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent) {
	  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
	}

	SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);

	module.exports = SyntheticWheelEvent;


/***/ },
/* 157 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SVGDOMPropertyConfig
	 */

	/*jslint bitwise: true*/

	'use strict';

	var DOMProperty = __webpack_require__(53);

	var MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;

	var SVGDOMPropertyConfig = {
	  Properties: {
	    clipPath: MUST_USE_ATTRIBUTE,
	    cx: MUST_USE_ATTRIBUTE,
	    cy: MUST_USE_ATTRIBUTE,
	    d: MUST_USE_ATTRIBUTE,
	    dx: MUST_USE_ATTRIBUTE,
	    dy: MUST_USE_ATTRIBUTE,
	    fill: MUST_USE_ATTRIBUTE,
	    fillOpacity: MUST_USE_ATTRIBUTE,
	    fontFamily: MUST_USE_ATTRIBUTE,
	    fontSize: MUST_USE_ATTRIBUTE,
	    fx: MUST_USE_ATTRIBUTE,
	    fy: MUST_USE_ATTRIBUTE,
	    gradientTransform: MUST_USE_ATTRIBUTE,
	    gradientUnits: MUST_USE_ATTRIBUTE,
	    markerEnd: MUST_USE_ATTRIBUTE,
	    markerMid: MUST_USE_ATTRIBUTE,
	    markerStart: MUST_USE_ATTRIBUTE,
	    offset: MUST_USE_ATTRIBUTE,
	    opacity: MUST_USE_ATTRIBUTE,
	    patternContentUnits: MUST_USE_ATTRIBUTE,
	    patternUnits: MUST_USE_ATTRIBUTE,
	    points: MUST_USE_ATTRIBUTE,
	    preserveAspectRatio: MUST_USE_ATTRIBUTE,
	    r: MUST_USE_ATTRIBUTE,
	    rx: MUST_USE_ATTRIBUTE,
	    ry: MUST_USE_ATTRIBUTE,
	    spreadMethod: MUST_USE_ATTRIBUTE,
	    stopColor: MUST_USE_ATTRIBUTE,
	    stopOpacity: MUST_USE_ATTRIBUTE,
	    stroke: MUST_USE_ATTRIBUTE,
	    strokeDasharray: MUST_USE_ATTRIBUTE,
	    strokeLinecap: MUST_USE_ATTRIBUTE,
	    strokeOpacity: MUST_USE_ATTRIBUTE,
	    strokeWidth: MUST_USE_ATTRIBUTE,
	    textAnchor: MUST_USE_ATTRIBUTE,
	    transform: MUST_USE_ATTRIBUTE,
	    version: MUST_USE_ATTRIBUTE,
	    viewBox: MUST_USE_ATTRIBUTE,
	    x1: MUST_USE_ATTRIBUTE,
	    x2: MUST_USE_ATTRIBUTE,
	    x: MUST_USE_ATTRIBUTE,
	    y1: MUST_USE_ATTRIBUTE,
	    y2: MUST_USE_ATTRIBUTE,
	    y: MUST_USE_ATTRIBUTE
	  },
	  DOMAttributeNames: {
	    clipPath: 'clip-path',
	    fillOpacity: 'fill-opacity',
	    fontFamily: 'font-family',
	    fontSize: 'font-size',
	    gradientTransform: 'gradientTransform',
	    gradientUnits: 'gradientUnits',
	    markerEnd: 'marker-end',
	    markerMid: 'marker-mid',
	    markerStart: 'marker-start',
	    patternContentUnits: 'patternContentUnits',
	    patternUnits: 'patternUnits',
	    preserveAspectRatio: 'preserveAspectRatio',
	    spreadMethod: 'spreadMethod',
	    stopColor: 'stop-color',
	    stopOpacity: 'stop-opacity',
	    strokeDasharray: 'stroke-dasharray',
	    strokeLinecap: 'stroke-linecap',
	    strokeOpacity: 'stroke-opacity',
	    strokeWidth: 'stroke-width',
	    textAnchor: 'text-anchor',
	    viewBox: 'viewBox'
	  }
	};

	module.exports = SVGDOMPropertyConfig;


/***/ },
/* 158 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule createFullPageComponent
	 * @typechecks
	 */

	'use strict';

	// Defeat circular references by requiring this directly.
	var ReactClass = __webpack_require__(46);
	var ReactElement = __webpack_require__(21);

	var invariant = __webpack_require__(17);

	/**
	 * Create a component that will throw an exception when unmounted.
	 *
	 * Components like <html> <head> and <body> can't be removed or added
	 * easily in a cross-browser way, however it's valuable to be able to
	 * take advantage of React's reconciliation for styling and <title>
	 * management. So we just document it and throw in dangerous cases.
	 *
	 * @param {string} tag The tag to wrap
	 * @return {function} convenience constructor of new component
	 */
	function createFullPageComponent(tag) {
	  var elementFactory = ReactElement.createFactory(tag);

	  var FullPageComponent = ReactClass.createClass({
	    tagName: tag.toUpperCase(),
	    displayName: 'ReactFullPageComponent' + tag,

	    componentWillUnmount: function() {
	      ("production" !== process.env.NODE_ENV ? invariant(
	        false,
	        '%s tried to unmount. Because of cross-browser quirks it is ' +
	        'impossible to unmount some top-level components (eg <html>, <head>, ' +
	        'and <body>) reliably and efficiently. To fix this, have a single ' +
	        'top-level component that never unmounts render these elements.',
	        this.constructor.displayName
	      ) : invariant(false));
	    },

	    render: function() {
	      return elementFactory(this.props);
	    }
	  });

	  return FullPageComponent;
	}

	module.exports = createFullPageComponent;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 159 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultPerf
	 * @typechecks static-only
	 */

	'use strict';

	var DOMProperty = __webpack_require__(53);
	var ReactDefaultPerfAnalysis = __webpack_require__(160);
	var ReactMount = __webpack_require__(76);
	var ReactPerf = __webpack_require__(37);

	var performanceNow = __webpack_require__(161);

	function roundFloat(val) {
	  return Math.floor(val * 100) / 100;
	}

	function addValue(obj, key, val) {
	  obj[key] = (obj[key] || 0) + val;
	}

	var ReactDefaultPerf = {
	  _allMeasurements: [], // last item in the list is the current one
	  _mountStack: [0],
	  _injected: false,

	  start: function() {
	    if (!ReactDefaultPerf._injected) {
	      ReactPerf.injection.injectMeasure(ReactDefaultPerf.measure);
	    }

	    ReactDefaultPerf._allMeasurements.length = 0;
	    ReactPerf.enableMeasure = true;
	  },

	  stop: function() {
	    ReactPerf.enableMeasure = false;
	  },

	  getLastMeasurements: function() {
	    return ReactDefaultPerf._allMeasurements;
	  },

	  printExclusive: function(measurements) {
	    measurements = measurements || ReactDefaultPerf._allMeasurements;
	    var summary = ReactDefaultPerfAnalysis.getExclusiveSummary(measurements);
	    console.table(summary.map(function(item) {
	      return {
	        'Component class name': item.componentName,
	        'Total inclusive time (ms)': roundFloat(item.inclusive),
	        'Exclusive mount time (ms)': roundFloat(item.exclusive),
	        'Exclusive render time (ms)': roundFloat(item.render),
	        'Mount time per instance (ms)': roundFloat(item.exclusive / item.count),
	        'Render time per instance (ms)': roundFloat(item.render / item.count),
	        'Instances': item.count
	      };
	    }));
	    // TODO: ReactDefaultPerfAnalysis.getTotalTime() does not return the correct
	    // number.
	  },

	  printInclusive: function(measurements) {
	    measurements = measurements || ReactDefaultPerf._allMeasurements;
	    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(measurements);
	    console.table(summary.map(function(item) {
	      return {
	        'Owner > component': item.componentName,
	        'Inclusive time (ms)': roundFloat(item.time),
	        'Instances': item.count
	      };
	    }));
	    console.log(
	      'Total time:',
	      ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms'
	    );
	  },

	  getMeasurementsSummaryMap: function(measurements) {
	    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(
	      measurements,
	      true
	    );
	    return summary.map(function(item) {
	      return {
	        'Owner > component': item.componentName,
	        'Wasted time (ms)': item.time,
	        'Instances': item.count
	      };
	    });
	  },

	  printWasted: function(measurements) {
	    measurements = measurements || ReactDefaultPerf._allMeasurements;
	    console.table(ReactDefaultPerf.getMeasurementsSummaryMap(measurements));
	    console.log(
	      'Total time:',
	      ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms'
	    );
	  },

	  printDOM: function(measurements) {
	    measurements = measurements || ReactDefaultPerf._allMeasurements;
	    var summary = ReactDefaultPerfAnalysis.getDOMSummary(measurements);
	    console.table(summary.map(function(item) {
	      var result = {};
	      result[DOMProperty.ID_ATTRIBUTE_NAME] = item.id;
	      result['type'] = item.type;
	      result['args'] = JSON.stringify(item.args);
	      return result;
	    }));
	    console.log(
	      'Total time:',
	      ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms'
	    );
	  },

	  _recordWrite: function(id, fnName, totalTime, args) {
	    // TODO: totalTime isn't that useful since it doesn't count paints/reflows
	    var writes =
	      ReactDefaultPerf
	        ._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1]
	        .writes;
	    writes[id] = writes[id] || [];
	    writes[id].push({
	      type: fnName,
	      time: totalTime,
	      args: args
	    });
	  },

	  measure: function(moduleName, fnName, func) {
	    return function() {for (var args=[],$__0=0,$__1=arguments.length;$__0<$__1;$__0++) args.push(arguments[$__0]);
	      var totalTime;
	      var rv;
	      var start;

	      if (fnName === '_renderNewRootComponent' ||
	          fnName === 'flushBatchedUpdates') {
	        // A "measurement" is a set of metrics recorded for each flush. We want
	        // to group the metrics for a given flush together so we can look at the
	        // components that rendered and the DOM operations that actually
	        // happened to determine the amount of "wasted work" performed.
	        ReactDefaultPerf._allMeasurements.push({
	          exclusive: {},
	          inclusive: {},
	          render: {},
	          counts: {},
	          writes: {},
	          displayNames: {},
	          totalTime: 0
	        });
	        start = performanceNow();
	        rv = func.apply(this, args);
	        ReactDefaultPerf._allMeasurements[
	          ReactDefaultPerf._allMeasurements.length - 1
	        ].totalTime = performanceNow() - start;
	        return rv;
	      } else if (fnName === '_mountImageIntoNode' ||
	          moduleName === 'ReactDOMIDOperations') {
	        start = performanceNow();
	        rv = func.apply(this, args);
	        totalTime = performanceNow() - start;

	        if (fnName === '_mountImageIntoNode') {
	          var mountID = ReactMount.getID(args[1]);
	          ReactDefaultPerf._recordWrite(mountID, fnName, totalTime, args[0]);
	        } else if (fnName === 'dangerouslyProcessChildrenUpdates') {
	          // special format
	          args[0].forEach(function(update) {
	            var writeArgs = {};
	            if (update.fromIndex !== null) {
	              writeArgs.fromIndex = update.fromIndex;
	            }
	            if (update.toIndex !== null) {
	              writeArgs.toIndex = update.toIndex;
	            }
	            if (update.textContent !== null) {
	              writeArgs.textContent = update.textContent;
	            }
	            if (update.markupIndex !== null) {
	              writeArgs.markup = args[1][update.markupIndex];
	            }
	            ReactDefaultPerf._recordWrite(
	              update.parentID,
	              update.type,
	              totalTime,
	              writeArgs
	            );
	          });
	        } else {
	          // basic format
	          ReactDefaultPerf._recordWrite(
	            args[0],
	            fnName,
	            totalTime,
	            Array.prototype.slice.call(args, 1)
	          );
	        }
	        return rv;
	      } else if (moduleName === 'ReactCompositeComponent' && (
	        (// TODO: receiveComponent()?
	        (fnName === 'mountComponent' ||
	        fnName === 'updateComponent' || fnName === '_renderValidatedComponent')))) {

	        if (typeof this._currentElement.type === 'string') {
	          return func.apply(this, args);
	        }

	        var rootNodeID = fnName === 'mountComponent' ?
	          args[0] :
	          this._rootNodeID;
	        var isRender = fnName === '_renderValidatedComponent';
	        var isMount = fnName === 'mountComponent';

	        var mountStack = ReactDefaultPerf._mountStack;
	        var entry = ReactDefaultPerf._allMeasurements[
	          ReactDefaultPerf._allMeasurements.length - 1
	        ];

	        if (isRender) {
	          addValue(entry.counts, rootNodeID, 1);
	        } else if (isMount) {
	          mountStack.push(0);
	        }

	        start = performanceNow();
	        rv = func.apply(this, args);
	        totalTime = performanceNow() - start;

	        if (isRender) {
	          addValue(entry.render, rootNodeID, totalTime);
	        } else if (isMount) {
	          var subMountTime = mountStack.pop();
	          mountStack[mountStack.length - 1] += totalTime;
	          addValue(entry.exclusive, rootNodeID, totalTime - subMountTime);
	          addValue(entry.inclusive, rootNodeID, totalTime);
	        } else {
	          addValue(entry.inclusive, rootNodeID, totalTime);
	        }

	        entry.displayNames[rootNodeID] = {
	          current: this.getName(),
	          owner: this._currentElement._owner ?
	            this._currentElement._owner.getName() :
	            '<root>'
	        };

	        return rv;
	      } else {
	        return func.apply(this, args);
	      }
	    };
	  }
	};

	module.exports = ReactDefaultPerf;


/***/ },
/* 160 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultPerfAnalysis
	 */

	var assign = __webpack_require__(10);

	// Don't try to save users less than 1.2ms (a number I made up)
	var DONT_CARE_THRESHOLD = 1.2;
	var DOM_OPERATION_TYPES = {
	  '_mountImageIntoNode': 'set innerHTML',
	  INSERT_MARKUP: 'set innerHTML',
	  MOVE_EXISTING: 'move',
	  REMOVE_NODE: 'remove',
	  TEXT_CONTENT: 'set textContent',
	  'updatePropertyByID': 'update attribute',
	  'deletePropertyByID': 'delete attribute',
	  'updateStylesByID': 'update styles',
	  'updateInnerHTMLByID': 'set innerHTML',
	  'dangerouslyReplaceNodeWithMarkupByID': 'replace'
	};

	function getTotalTime(measurements) {
	  // TODO: return number of DOM ops? could be misleading.
	  // TODO: measure dropped frames after reconcile?
	  // TODO: log total time of each reconcile and the top-level component
	  // class that triggered it.
	  var totalTime = 0;
	  for (var i = 0; i < measurements.length; i++) {
	    var measurement = measurements[i];
	    totalTime += measurement.totalTime;
	  }
	  return totalTime;
	}

	function getDOMSummary(measurements) {
	  var items = [];
	  for (var i = 0; i < measurements.length; i++) {
	    var measurement = measurements[i];
	    var id;

	    for (id in measurement.writes) {
	      measurement.writes[id].forEach(function(write) {
	        items.push({
	          id: id,
	          type: DOM_OPERATION_TYPES[write.type] || write.type,
	          args: write.args
	        });
	      });
	    }
	  }
	  return items;
	}

	function getExclusiveSummary(measurements) {
	  var candidates = {};
	  var displayName;

	  for (var i = 0; i < measurements.length; i++) {
	    var measurement = measurements[i];
	    var allIDs = assign(
	      {},
	      measurement.exclusive,
	      measurement.inclusive
	    );

	    for (var id in allIDs) {
	      displayName = measurement.displayNames[id].current;

	      candidates[displayName] = candidates[displayName] || {
	        componentName: displayName,
	        inclusive: 0,
	        exclusive: 0,
	        render: 0,
	        count: 0
	      };
	      if (measurement.render[id]) {
	        candidates[displayName].render += measurement.render[id];
	      }
	      if (measurement.exclusive[id]) {
	        candidates[displayName].exclusive += measurement.exclusive[id];
	      }
	      if (measurement.inclusive[id]) {
	        candidates[displayName].inclusive += measurement.inclusive[id];
	      }
	      if (measurement.counts[id]) {
	        candidates[displayName].count += measurement.counts[id];
	      }
	    }
	  }

	  // Now make a sorted array with the results.
	  var arr = [];
	  for (displayName in candidates) {
	    if (candidates[displayName].exclusive >= DONT_CARE_THRESHOLD) {
	      arr.push(candidates[displayName]);
	    }
	  }

	  arr.sort(function(a, b) {
	    return b.exclusive - a.exclusive;
	  });

	  return arr;
	}

	function getInclusiveSummary(measurements, onlyClean) {
	  var candidates = {};
	  var inclusiveKey;

	  for (var i = 0; i < measurements.length; i++) {
	    var measurement = measurements[i];
	    var allIDs = assign(
	      {},
	      measurement.exclusive,
	      measurement.inclusive
	    );
	    var cleanComponents;

	    if (onlyClean) {
	      cleanComponents = getUnchangedComponents(measurement);
	    }

	    for (var id in allIDs) {
	      if (onlyClean && !cleanComponents[id]) {
	        continue;
	      }

	      var displayName = measurement.displayNames[id];

	      // Inclusive time is not useful for many components without knowing where
	      // they are instantiated. So we aggregate inclusive time with both the
	      // owner and current displayName as the key.
	      inclusiveKey = displayName.owner + ' > ' + displayName.current;

	      candidates[inclusiveKey] = candidates[inclusiveKey] || {
	        componentName: inclusiveKey,
	        time: 0,
	        count: 0
	      };

	      if (measurement.inclusive[id]) {
	        candidates[inclusiveKey].time += measurement.inclusive[id];
	      }
	      if (measurement.counts[id]) {
	        candidates[inclusiveKey].count += measurement.counts[id];
	      }
	    }
	  }

	  // Now make a sorted array with the results.
	  var arr = [];
	  for (inclusiveKey in candidates) {
	    if (candidates[inclusiveKey].time >= DONT_CARE_THRESHOLD) {
	      arr.push(candidates[inclusiveKey]);
	    }
	  }

	  arr.sort(function(a, b) {
	    return b.time - a.time;
	  });

	  return arr;
	}

	function getUnchangedComponents(measurement) {
	  // For a given reconcile, look at which components did not actually
	  // render anything to the DOM and return a mapping of their ID to
	  // the amount of time it took to render the entire subtree.
	  var cleanComponents = {};
	  var dirtyLeafIDs = Object.keys(measurement.writes);
	  var allIDs = assign({}, measurement.exclusive, measurement.inclusive);

	  for (var id in allIDs) {
	    var isDirty = false;
	    // For each component that rendered, see if a component that triggered
	    // a DOM op is in its subtree.
	    for (var i = 0; i < dirtyLeafIDs.length; i++) {
	      if (dirtyLeafIDs[i].indexOf(id) === 0) {
	        isDirty = true;
	        break;
	      }
	    }
	    if (!isDirty && measurement.counts[id] > 0) {
	      cleanComponents[id] = true;
	    }
	  }
	  return cleanComponents;
	}

	var ReactDefaultPerfAnalysis = {
	  getExclusiveSummary: getExclusiveSummary,
	  getInclusiveSummary: getInclusiveSummary,
	  getDOMSummary: getDOMSummary,
	  getTotalTime: getTotalTime
	};

	module.exports = ReactDefaultPerfAnalysis;


/***/ },
/* 161 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule performanceNow
	 * @typechecks
	 */

	var performance = __webpack_require__(162);

	/**
	 * Detect if we can use `window.performance.now()` and gracefully fallback to
	 * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
	 * because of Facebook's testing infrastructure.
	 */
	if (!performance || !performance.now) {
	  performance = Date;
	}

	var performanceNow = performance.now.bind(performance);

	module.exports = performanceNow;


/***/ },
/* 162 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule performance
	 * @typechecks
	 */

	"use strict";

	var ExecutionEnvironment = __webpack_require__(60);

	var performance;

	if (ExecutionEnvironment.canUseDOM) {
	  performance =
	    window.performance ||
	    window.msPerformance ||
	    window.webkitPerformance;
	}

	module.exports = performance || {};


/***/ },
/* 163 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks static-only
	 * @providesModule ReactServerRendering
	 */
	'use strict';

	var ReactElement = __webpack_require__(21);
	var ReactInstanceHandles = __webpack_require__(28);
	var ReactMarkupChecksum = __webpack_require__(86);
	var ReactServerRenderingTransaction =
	  __webpack_require__(164);

	var emptyObject = __webpack_require__(23);
	var instantiateReactComponent = __webpack_require__(92);
	var invariant = __webpack_require__(17);

	/**
	 * @param {ReactElement} element
	 * @return {string} the HTML markup
	 */
	function renderToString(element) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    ReactElement.isValidElement(element),
	    'renderToString(): You must pass a valid ReactElement.'
	  ) : invariant(ReactElement.isValidElement(element)));

	  var transaction;
	  try {
	    var id = ReactInstanceHandles.createReactRootID();
	    transaction = ReactServerRenderingTransaction.getPooled(false);

	    return transaction.perform(function() {
	      var componentInstance = instantiateReactComponent(element, null);
	      var markup =
	        componentInstance.mountComponent(id, transaction, emptyObject);
	      return ReactMarkupChecksum.addChecksumToMarkup(markup);
	    }, null);
	  } finally {
	    ReactServerRenderingTransaction.release(transaction);
	  }
	}

	/**
	 * @param {ReactElement} element
	 * @return {string} the HTML markup, without the extra React ID and checksum
	 * (for generating static pages)
	 */
	function renderToStaticMarkup(element) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    ReactElement.isValidElement(element),
	    'renderToStaticMarkup(): You must pass a valid ReactElement.'
	  ) : invariant(ReactElement.isValidElement(element)));

	  var transaction;
	  try {
	    var id = ReactInstanceHandles.createReactRootID();
	    transaction = ReactServerRenderingTransaction.getPooled(true);

	    return transaction.perform(function() {
	      var componentInstance = instantiateReactComponent(element, null);
	      return componentInstance.mountComponent(id, transaction, emptyObject);
	    }, null);
	  } finally {
	    ReactServerRenderingTransaction.release(transaction);
	  }
	}

	module.exports = {
	  renderToString: renderToString,
	  renderToStaticMarkup: renderToStaticMarkup
	};

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 164 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactServerRenderingTransaction
	 * @typechecks
	 */

	'use strict';

	var PooledClass = __webpack_require__(19);
	var CallbackQueue = __webpack_require__(36);
	var ReactPutListenerQueue = __webpack_require__(144);
	var Transaction = __webpack_require__(45);

	var assign = __webpack_require__(10);
	var emptyFunction = __webpack_require__(25);

	/**
	 * Provides a `CallbackQueue` queue for collecting `onDOMReady` callbacks
	 * during the performing of the transaction.
	 */
	var ON_DOM_READY_QUEUEING = {
	  /**
	   * Initializes the internal `onDOMReady` queue.
	   */
	  initialize: function() {
	    this.reactMountReady.reset();
	  },

	  close: emptyFunction
	};

	var PUT_LISTENER_QUEUEING = {
	  initialize: function() {
	    this.putListenerQueue.reset();
	  },

	  close: emptyFunction
	};

	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [
	  PUT_LISTENER_QUEUEING,
	  ON_DOM_READY_QUEUEING
	];

	/**
	 * @class ReactServerRenderingTransaction
	 * @param {boolean} renderToStaticMarkup
	 */
	function ReactServerRenderingTransaction(renderToStaticMarkup) {
	  this.reinitializeTransaction();
	  this.renderToStaticMarkup = renderToStaticMarkup;
	  this.reactMountReady = CallbackQueue.getPooled(null);
	  this.putListenerQueue = ReactPutListenerQueue.getPooled();
	}

	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array} Empty list of operation wrap proceedures.
	   */
	  getTransactionWrappers: function() {
	    return TRANSACTION_WRAPPERS;
	  },

	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function() {
	    return this.reactMountReady;
	  },

	  getPutListenerQueue: function() {
	    return this.putListenerQueue;
	  },

	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be resused.
	   */
	  destructor: function() {
	    CallbackQueue.release(this.reactMountReady);
	    this.reactMountReady = null;

	    ReactPutListenerQueue.release(this.putListenerQueue);
	    this.putListenerQueue = null;
	  }
	};


	assign(
	  ReactServerRenderingTransaction.prototype,
	  Transaction.Mixin,
	  Mixin
	);

	PooledClass.addPoolingTo(ReactServerRenderingTransaction);

	module.exports = ReactServerRenderingTransaction;


/***/ },
/* 165 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule onlyChild
	 */
	'use strict';

	var ReactElement = __webpack_require__(21);

	var invariant = __webpack_require__(17);

	/**
	 * Returns the first child in a collection of children and verifies that there
	 * is only one child in the collection. The current implementation of this
	 * function assumes that a single child gets passed without a wrapper, but the
	 * purpose of this helper function is to abstract away the particular structure
	 * of children.
	 *
	 * @param {?object} children Child collection structure.
	 * @return {ReactComponent} The first and only `ReactComponent` contained in the
	 * structure.
	 */
	function onlyChild(children) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    ReactElement.isValidElement(children),
	    'onlyChild must be passed a children with exactly one child.'
	  ) : invariant(ReactElement.isValidElement(children)));
	  return children;
	}

	module.exports = onlyChild;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 166 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	var assign = __webpack_require__(10);
	var invariant = __webpack_require__(17);
	var warning = __webpack_require__(24);
	var PathUtils = __webpack_require__(167);

	var _currentRoute;

	var Route = (function () {
	  _createClass(Route, null, [{
	    key: 'createRoute',

	    /**
	     * Creates and returns a new route. Options may be a URL pathname string
	     * with placeholders for named params or an object with any of the following
	     * properties:
	     *
	     * - name                     The name of the route. This is used to lookup a
	     *                            route relative to its parent route and should be
	     *                            unique among all child routes of the same parent
	     * - path                     A URL pathname string with optional placeholders
	     *                            that specify the names of params to extract from
	     *                            the URL when the path matches. Defaults to `/${name}`
	     *                            when there is a name given, or the path of the parent
	     *                            route, or /
	     * - ignoreScrollBehavior     True to make this route (and all descendants) ignore
	     *                            the scroll behavior of the router
	     * - isDefault                True to make this route the default route among all
	     *                            its siblings
	     * - isNotFound               True to make this route the "not found" route among
	     *                            all its siblings
	     * - onEnter                  A transition hook that will be called when the
	     *                            router is going to enter this route
	     * - onLeave                  A transition hook that will be called when the
	     *                            router is going to leave this route
	     * - handler                  A React component that will be rendered when
	     *                            this route is active
	     * - parentRoute              The parent route to use for this route. This option
	     *                            is automatically supplied when creating routes inside
	     *                            the callback to another invocation of createRoute. You
	     *                            only ever need to use this when declaring routes
	     *                            independently of one another to manually piece together
	     *                            the route hierarchy
	     *
	     * The callback may be used to structure your route hierarchy. Any call to
	     * createRoute, createDefaultRoute, createNotFoundRoute, or createRedirect
	     * inside the callback automatically uses this route as its parent.
	     */
	    value: function createRoute(options, callback) {
	      options = options || {};

	      if (typeof options === 'string') options = { path: options };

	      var parentRoute = _currentRoute;

	      if (parentRoute) {
	        warning(options.parentRoute == null || options.parentRoute === parentRoute, 'You should not use parentRoute with createRoute inside another route\'s child callback; it is ignored');
	      } else {
	        parentRoute = options.parentRoute;
	      }

	      var name = options.name;
	      var path = options.path || name;

	      if (path && !(options.isDefault || options.isNotFound)) {
	        if (PathUtils.isAbsolute(path)) {
	          if (parentRoute) {
	            invariant(path === parentRoute.path || parentRoute.paramNames.length === 0, 'You cannot nest path "%s" inside "%s"; the parent requires URL parameters', path, parentRoute.path);
	          }
	        } else if (parentRoute) {
	          // Relative paths extend their parent.
	          path = PathUtils.join(parentRoute.path, path);
	        } else {
	          path = '/' + path;
	        }
	      } else {
	        path = parentRoute ? parentRoute.path : '/';
	      }

	      if (options.isNotFound && !/\*$/.test(path)) path += '*'; // Auto-append * to the path of not found routes.

	      var route = new Route(name, path, options.ignoreScrollBehavior, options.isDefault, options.isNotFound, options.onEnter, options.onLeave, options.handler);

	      if (parentRoute) {
	        if (route.isDefault) {
	          invariant(parentRoute.defaultRoute == null, '%s may not have more than one default route', parentRoute);

	          parentRoute.defaultRoute = route;
	        } else if (route.isNotFound) {
	          invariant(parentRoute.notFoundRoute == null, '%s may not have more than one not found route', parentRoute);

	          parentRoute.notFoundRoute = route;
	        }

	        parentRoute.appendChild(route);
	      }

	      // Any routes created in the callback
	      // use this route as their parent.
	      if (typeof callback === 'function') {
	        var currentRoute = _currentRoute;
	        _currentRoute = route;
	        callback.call(route, route);
	        _currentRoute = currentRoute;
	      }

	      return route;
	    }

	    /**
	     * Creates and returns a route that is rendered when its parent matches
	     * the current URL.
	     */
	  }, {
	    key: 'createDefaultRoute',
	    value: function createDefaultRoute(options) {
	      return Route.createRoute(assign({}, options, { isDefault: true }));
	    }

	    /**
	     * Creates and returns a route that is rendered when its parent matches
	     * the current URL but none of its siblings do.
	     */
	  }, {
	    key: 'createNotFoundRoute',
	    value: function createNotFoundRoute(options) {
	      return Route.createRoute(assign({}, options, { isNotFound: true }));
	    }

	    /**
	     * Creates and returns a route that automatically redirects the transition
	     * to another route. In addition to the normal options to createRoute, this
	     * function accepts the following options:
	     *
	     * - from         An alias for the `path` option. Defaults to *
	     * - to           The path/route/route name to redirect to
	     * - params       The params to use in the redirect URL. Defaults
	     *                to using the current params
	     * - query        The query to use in the redirect URL. Defaults
	     *                to using the current query
	     */
	  }, {
	    key: 'createRedirect',
	    value: function createRedirect(options) {
	      return Route.createRoute(assign({}, options, {
	        path: options.path || options.from || '*',
	        onEnter: function onEnter(transition, params, query) {
	          transition.redirect(options.to, options.params || params, options.query || query);
	        }
	      }));
	    }
	  }]);

	  function Route(name, path, ignoreScrollBehavior, isDefault, isNotFound, onEnter, onLeave, handler) {
	    _classCallCheck(this, Route);

	    this.name = name;
	    this.path = path;
	    this.paramNames = PathUtils.extractParamNames(this.path);
	    this.ignoreScrollBehavior = !!ignoreScrollBehavior;
	    this.isDefault = !!isDefault;
	    this.isNotFound = !!isNotFound;
	    this.onEnter = onEnter;
	    this.onLeave = onLeave;
	    this.handler = handler;
	  }

	  /**
	   * Appends the given route to this route's child routes.
	   */

	  _createClass(Route, [{
	    key: 'appendChild',
	    value: function appendChild(route) {
	      invariant(route instanceof Route, 'route.appendChild must use a valid Route');

	      if (!this.childRoutes) this.childRoutes = [];

	      this.childRoutes.push(route);
	    }
	  }, {
	    key: 'toString',
	    value: function toString() {
	      var string = '<Route';

	      if (this.name) string += ' name="' + this.name + '"';

	      string += ' path="' + this.path + '">';

	      return string;
	    }
	  }]);

	  return Route;
	})();

	module.exports = Route;

/***/ },
/* 167 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var invariant = __webpack_require__(17);
	var assign = __webpack_require__(168);
	var qs = __webpack_require__(169);

	var paramCompileMatcher = /:([a-zA-Z_$][a-zA-Z0-9_$]*)|[*.()\[\]\\+|{}^$]/g;
	var paramInjectMatcher = /:([a-zA-Z_$][a-zA-Z0-9_$?]*[?]?)|[*]/g;
	var paramInjectTrailingSlashMatcher = /\/\/\?|\/\?\/|\/\?(?![^\/=]+=.*$)/g;
	var queryMatcher = /\?(.*)$/;

	var _compiledPatterns = {};

	function compilePattern(pattern) {
	  if (!(pattern in _compiledPatterns)) {
	    var paramNames = [];
	    var source = pattern.replace(paramCompileMatcher, function (match, paramName) {
	      if (paramName) {
	        paramNames.push(paramName);
	        return '([^/?#]+)';
	      } else if (match === '*') {
	        paramNames.push('splat');
	        return '(.*?)';
	      } else {
	        return '\\' + match;
	      }
	    });

	    _compiledPatterns[pattern] = {
	      matcher: new RegExp('^' + source + '$', 'i'),
	      paramNames: paramNames
	    };
	  }

	  return _compiledPatterns[pattern];
	}

	var PathUtils = {

	  /**
	   * Returns true if the given path is absolute.
	   */
	  isAbsolute: function isAbsolute(path) {
	    return path.charAt(0) === '/';
	  },

	  /**
	   * Joins two URL paths together.
	   */
	  join: function join(a, b) {
	    return a.replace(/\/*$/, '/') + b;
	  },

	  /**
	   * Returns an array of the names of all parameters in the given pattern.
	   */
	  extractParamNames: function extractParamNames(pattern) {
	    return compilePattern(pattern).paramNames;
	  },

	  /**
	   * Extracts the portions of the given URL path that match the given pattern
	   * and returns an object of param name => value pairs. Returns null if the
	   * pattern does not match the given path.
	   */
	  extractParams: function extractParams(pattern, path) {
	    var _compilePattern = compilePattern(pattern);

	    var matcher = _compilePattern.matcher;
	    var paramNames = _compilePattern.paramNames;

	    var match = path.match(matcher);

	    if (!match) return null;

	    var params = {};

	    paramNames.forEach(function (paramName, index) {
	      params[paramName] = match[index + 1];
	    });

	    return params;
	  },

	  /**
	   * Returns a version of the given route path with params interpolated. Throws
	   * if there is a dynamic segment of the route path for which there is no param.
	   */
	  injectParams: function injectParams(pattern, params) {
	    params = params || {};

	    var splatIndex = 0;

	    return pattern.replace(paramInjectMatcher, function (match, paramName) {
	      paramName = paramName || 'splat';

	      // If param is optional don't check for existence
	      if (paramName.slice(-1) === '?') {
	        paramName = paramName.slice(0, -1);

	        if (params[paramName] == null) return '';
	      } else {
	        invariant(params[paramName] != null, 'Missing "%s" parameter for path "%s"', paramName, pattern);
	      }

	      var segment;
	      if (paramName === 'splat' && Array.isArray(params[paramName])) {
	        segment = params[paramName][splatIndex++];

	        invariant(segment != null, 'Missing splat # %s for path "%s"', splatIndex, pattern);
	      } else {
	        segment = params[paramName];
	      }

	      return segment;
	    }).replace(paramInjectTrailingSlashMatcher, '/');
	  },

	  /**
	   * Returns an object that is the result of parsing any query string contained
	   * in the given path, null if the path contains no query string.
	   */
	  extractQuery: function extractQuery(path) {
	    var match = path.match(queryMatcher);
	    return match && qs.parse(match[1]);
	  },

	  /**
	   * Returns a version of the given path without the query string.
	   */
	  withoutQuery: function withoutQuery(path) {
	    return path.replace(queryMatcher, '');
	  },

	  /**
	   * Returns a version of the given path with the parameters in the given
	   * query merged into the query string.
	   */
	  withQuery: function withQuery(path, query) {
	    var existingQuery = PathUtils.extractQuery(path);

	    if (existingQuery) query = query ? assign(existingQuery, query) : existingQuery;

	    var queryString = qs.stringify(query, { arrayFormat: 'brackets' });

	    if (queryString) return PathUtils.withoutQuery(path) + '?' + queryString;

	    return PathUtils.withoutQuery(path);
	  }

	};

	module.exports = PathUtils;

/***/ },
/* 168 */
/***/ function(module, exports) {

	'use strict';

	function ToObject(val) {
		if (val == null) {
			throw new TypeError('Object.assign cannot be called with null or undefined');
		}

		return Object(val);
	}

	module.exports = Object.assign || function (target, source) {
		var from;
		var keys;
		var to = ToObject(target);

		for (var s = 1; s < arguments.length; s++) {
			from = arguments[s];
			keys = Object.keys(Object(from));

			for (var i = 0; i < keys.length; i++) {
				to[keys[i]] = from[keys[i]];
			}
		}

		return to;
	};


/***/ },
/* 169 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(170);


/***/ },
/* 170 */
/***/ function(module, exports, __webpack_require__) {

	// Load modules

	var Stringify = __webpack_require__(171);
	var Parse = __webpack_require__(173);


	// Declare internals

	var internals = {};


	module.exports = {
	    stringify: Stringify,
	    parse: Parse
	};


/***/ },
/* 171 */
/***/ function(module, exports, __webpack_require__) {

	// Load modules

	var Utils = __webpack_require__(172);


	// Declare internals

	var internals = {
	    delimiter: '&',
	    arrayPrefixGenerators: {
	        brackets: function (prefix, key) {
	            return prefix + '[]';
	        },
	        indices: function (prefix, key) {
	            return prefix + '[' + key + ']';
	        },
	        repeat: function (prefix, key) {
	            return prefix;
	        }
	    }
	};


	internals.stringify = function (obj, prefix, generateArrayPrefix) {

	    if (Utils.isBuffer(obj)) {
	        obj = obj.toString();
	    }
	    else if (obj instanceof Date) {
	        obj = obj.toISOString();
	    }
	    else if (obj === null) {
	        obj = '';
	    }

	    if (typeof obj === 'string' ||
	        typeof obj === 'number' ||
	        typeof obj === 'boolean') {

	        return [encodeURIComponent(prefix) + '=' + encodeURIComponent(obj)];
	    }

	    var values = [];

	    if (typeof obj === 'undefined') {
	        return values;
	    }

	    var objKeys = Object.keys(obj);
	    for (var i = 0, il = objKeys.length; i < il; ++i) {
	        var key = objKeys[i];
	        if (Array.isArray(obj)) {
	            values = values.concat(internals.stringify(obj[key], generateArrayPrefix(prefix, key), generateArrayPrefix));
	        }
	        else {
	            values = values.concat(internals.stringify(obj[key], prefix + '[' + key + ']', generateArrayPrefix));
	        }
	    }

	    return values;
	};


	module.exports = function (obj, options) {

	    options = options || {};
	    var delimiter = typeof options.delimiter === 'undefined' ? internals.delimiter : options.delimiter;

	    var keys = [];

	    if (typeof obj !== 'object' ||
	        obj === null) {

	        return '';
	    }

	    var arrayFormat;
	    if (options.arrayFormat in internals.arrayPrefixGenerators) {
	        arrayFormat = options.arrayFormat;
	    }
	    else if ('indices' in options) {
	        arrayFormat = options.indices ? 'indices' : 'repeat';
	    }
	    else {
	        arrayFormat = 'indices';
	    }

	    var generateArrayPrefix = internals.arrayPrefixGenerators[arrayFormat];

	    var objKeys = Object.keys(obj);
	    for (var i = 0, il = objKeys.length; i < il; ++i) {
	        var key = objKeys[i];
	        keys = keys.concat(internals.stringify(obj[key], key, generateArrayPrefix));
	    }

	    return keys.join(delimiter);
	};


/***/ },
/* 172 */
/***/ function(module, exports) {

	// Load modules


	// Declare internals

	var internals = {};


	exports.arrayToObject = function (source) {

	    var obj = {};
	    for (var i = 0, il = source.length; i < il; ++i) {
	        if (typeof source[i] !== 'undefined') {

	            obj[i] = source[i];
	        }
	    }

	    return obj;
	};


	exports.merge = function (target, source) {

	    if (!source) {
	        return target;
	    }

	    if (typeof source !== 'object') {
	        if (Array.isArray(target)) {
	            target.push(source);
	        }
	        else {
	            target[source] = true;
	        }

	        return target;
	    }

	    if (typeof target !== 'object') {
	        target = [target].concat(source);
	        return target;
	    }

	    if (Array.isArray(target) &&
	        !Array.isArray(source)) {

	        target = exports.arrayToObject(target);
	    }

	    var keys = Object.keys(source);
	    for (var k = 0, kl = keys.length; k < kl; ++k) {
	        var key = keys[k];
	        var value = source[key];

	        if (!target[key]) {
	            target[key] = value;
	        }
	        else {
	            target[key] = exports.merge(target[key], value);
	        }
	    }

	    return target;
	};


	exports.decode = function (str) {

	    try {
	        return decodeURIComponent(str.replace(/\+/g, ' '));
	    } catch (e) {
	        return str;
	    }
	};


	exports.compact = function (obj, refs) {

	    if (typeof obj !== 'object' ||
	        obj === null) {

	        return obj;
	    }

	    refs = refs || [];
	    var lookup = refs.indexOf(obj);
	    if (lookup !== -1) {
	        return refs[lookup];
	    }

	    refs.push(obj);

	    if (Array.isArray(obj)) {
	        var compacted = [];

	        for (var i = 0, il = obj.length; i < il; ++i) {
	            if (typeof obj[i] !== 'undefined') {
	                compacted.push(obj[i]);
	            }
	        }

	        return compacted;
	    }

	    var keys = Object.keys(obj);
	    for (i = 0, il = keys.length; i < il; ++i) {
	        var key = keys[i];
	        obj[key] = exports.compact(obj[key], refs);
	    }

	    return obj;
	};


	exports.isRegExp = function (obj) {
	    return Object.prototype.toString.call(obj) === '[object RegExp]';
	};


	exports.isBuffer = function (obj) {

	    if (obj === null ||
	        typeof obj === 'undefined') {

	        return false;
	    }

	    return !!(obj.constructor &&
	        obj.constructor.isBuffer &&
	        obj.constructor.isBuffer(obj));
	};


/***/ },
/* 173 */
/***/ function(module, exports, __webpack_require__) {

	// Load modules

	var Utils = __webpack_require__(172);


	// Declare internals

	var internals = {
	    delimiter: '&',
	    depth: 5,
	    arrayLimit: 20,
	    parameterLimit: 1000
	};


	internals.parseValues = function (str, options) {

	    var obj = {};
	    var parts = str.split(options.delimiter, options.parameterLimit === Infinity ? undefined : options.parameterLimit);

	    for (var i = 0, il = parts.length; i < il; ++i) {
	        var part = parts[i];
	        var pos = part.indexOf(']=') === -1 ? part.indexOf('=') : part.indexOf(']=') + 1;

	        if (pos === -1) {
	            obj[Utils.decode(part)] = '';
	        }
	        else {
	            var key = Utils.decode(part.slice(0, pos));
	            var val = Utils.decode(part.slice(pos + 1));

	            if (Object.prototype.hasOwnProperty(key)) {
	                continue;
	            }

	            if (!obj.hasOwnProperty(key)) {
	                obj[key] = val;
	            }
	            else {
	                obj[key] = [].concat(obj[key]).concat(val);
	            }
	        }
	    }

	    return obj;
	};


	internals.parseObject = function (chain, val, options) {

	    if (!chain.length) {
	        return val;
	    }

	    var root = chain.shift();

	    var obj = {};
	    if (root === '[]') {
	        obj = [];
	        obj = obj.concat(internals.parseObject(chain, val, options));
	    }
	    else {
	        var cleanRoot = root[0] === '[' && root[root.length - 1] === ']' ? root.slice(1, root.length - 1) : root;
	        var index = parseInt(cleanRoot, 10);
	        var indexString = '' + index;
	        if (!isNaN(index) &&
	            root !== cleanRoot &&
	            indexString === cleanRoot &&
	            index >= 0 &&
	            index <= options.arrayLimit) {

	            obj = [];
	            obj[index] = internals.parseObject(chain, val, options);
	        }
	        else {
	            obj[cleanRoot] = internals.parseObject(chain, val, options);
	        }
	    }

	    return obj;
	};


	internals.parseKeys = function (key, val, options) {

	    if (!key) {
	        return;
	    }

	    // The regex chunks

	    var parent = /^([^\[\]]*)/;
	    var child = /(\[[^\[\]]*\])/g;

	    // Get the parent

	    var segment = parent.exec(key);

	    // Don't allow them to overwrite object prototype properties

	    if (Object.prototype.hasOwnProperty(segment[1])) {
	        return;
	    }

	    // Stash the parent if it exists

	    var keys = [];
	    if (segment[1]) {
	        keys.push(segment[1]);
	    }

	    // Loop through children appending to the array until we hit depth

	    var i = 0;
	    while ((segment = child.exec(key)) !== null && i < options.depth) {

	        ++i;
	        if (!Object.prototype.hasOwnProperty(segment[1].replace(/\[|\]/g, ''))) {
	            keys.push(segment[1]);
	        }
	    }

	    // If there's a remainder, just add whatever is left

	    if (segment) {
	        keys.push('[' + key.slice(segment.index) + ']');
	    }

	    return internals.parseObject(keys, val, options);
	};


	module.exports = function (str, options) {

	    if (str === '' ||
	        str === null ||
	        typeof str === 'undefined') {

	        return {};
	    }

	    options = options || {};
	    options.delimiter = typeof options.delimiter === 'string' || Utils.isRegExp(options.delimiter) ? options.delimiter : internals.delimiter;
	    options.depth = typeof options.depth === 'number' ? options.depth : internals.depth;
	    options.arrayLimit = typeof options.arrayLimit === 'number' ? options.arrayLimit : internals.arrayLimit;
	    options.parameterLimit = typeof options.parameterLimit === 'number' ? options.parameterLimit : internals.parameterLimit;

	    var tempObj = typeof str === 'string' ? internals.parseValues(str, options) : str;
	    var obj = {};

	    // Iterate over the keys and setup the new object

	    var keys = Object.keys(tempObj);
	    for (var i = 0, il = keys.length; i < il; ++i) {
	        var key = keys[i];
	        var newObj = internals.parseKeys(key, tempObj[key], options);
	        obj = Utils.merge(obj, newObj);
	    }

	    return Utils.compact(obj);
	};


/***/ },
/* 174 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(11);
	var ContextWrapper = __webpack_require__(175);
	var assign = __webpack_require__(10);
	var PropTypes = __webpack_require__(9);

	var REF_NAME = '__routeHandler__';

	/**
	 * A <RouteHandler> component renders the active child route handler
	 * when routes are nested.
	 */

	var RouteHandler = (function (_React$Component) {
	  _inherits(RouteHandler, _React$Component);

	  function RouteHandler() {
	    _classCallCheck(this, RouteHandler);

	    _get(Object.getPrototypeOf(RouteHandler.prototype), 'constructor', this).apply(this, arguments);
	  }

	  // TODO: Include these in the above class definition
	  // once we can use ES7 property initializers.
	  // https://github.com/babel/babel/issues/619

	  _createClass(RouteHandler, [{
	    key: 'getChildContext',
	    value: function getChildContext() {
	      return {
	        routeDepth: this.context.routeDepth + 1
	      };
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this._updateRouteComponent(this.refs[REF_NAME]);
	    }
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate() {
	      this._updateRouteComponent(this.refs[REF_NAME]);
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      this._updateRouteComponent(null);
	    }
	  }, {
	    key: '_updateRouteComponent',
	    value: function _updateRouteComponent(component) {
	      this.context.router.setRouteComponentAtDepth(this.getRouteDepth(), component);
	    }
	  }, {
	    key: 'getRouteDepth',
	    value: function getRouteDepth() {
	      return this.context.routeDepth;
	    }
	  }, {
	    key: 'createChildRouteHandler',
	    value: function createChildRouteHandler(props) {
	      var route = this.context.router.getRouteAtDepth(this.getRouteDepth());

	      if (route == null) return null;

	      var childProps = assign({}, props || this.props, {
	        ref: REF_NAME,
	        params: this.context.router.getCurrentParams(),
	        query: this.context.router.getCurrentQuery()
	      });

	      return React.createElement(route.handler, childProps);
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var handler = this.createChildRouteHandler();
	      // <script/> for things like <CSSTransitionGroup/> that don't like null
	      return handler ? React.createElement(
	        ContextWrapper,
	        null,
	        handler
	      ) : React.createElement('script', null);
	    }
	  }]);

	  return RouteHandler;
	})(React.Component);

	RouteHandler.contextTypes = {
	  routeDepth: PropTypes.number.isRequired,
	  router: PropTypes.router.isRequired
	};

	RouteHandler.childContextTypes = {
	  routeDepth: PropTypes.number.isRequired
	};

	module.exports = RouteHandler;

/***/ },
/* 175 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * This component is necessary to get around a context warning
	 * present in React 0.13.0. It sovles this by providing a separation
	 * between the "owner" and "parent" contexts.
	 */

	'use strict';

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(11);

	var ContextWrapper = (function (_React$Component) {
	  _inherits(ContextWrapper, _React$Component);

	  function ContextWrapper() {
	    _classCallCheck(this, ContextWrapper);

	    _get(Object.getPrototypeOf(ContextWrapper.prototype), 'constructor', this).apply(this, arguments);
	  }

	  _createClass(ContextWrapper, [{
	    key: 'render',
	    value: function render() {
	      return this.props.children;
	    }
	  }]);

	  return ContextWrapper;
	})(React.Component);

	module.exports = ContextWrapper;

/***/ },
/* 176 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(11);
	var invariant = __webpack_require__(17);
	var PropTypes = __webpack_require__(9);
	var RouteHandler = __webpack_require__(174);

	/**
	 * <Route> components specify components that are rendered to the page when the
	 * URL matches a given pattern.
	 *
	 * Routes are arranged in a nested tree structure. When a new URL is requested,
	 * the tree is searched depth-first to find a route whose path matches the URL.
	 * When one is found, all routes in the tree that lead to it are considered
	 * "active" and their components are rendered into the DOM, nested in the same
	 * order as they are in the tree.
	 *
	 * The preferred way to configure a router is using JSX. The XML-like syntax is
	 * a great way to visualize how routes are laid out in an application.
	 *
	 *   var routes = [
	 *     <Route handler={App}>
	 *       <Route name="login" handler={Login}/>
	 *       <Route name="logout" handler={Logout}/>
	 *       <Route name="about" handler={About}/>
	 *     </Route>
	 *   ];
	 *   
	 *   Router.run(routes, function (Handler) {
	 *     React.render(<Handler/>, document.body);
	 *   });
	 *
	 * Handlers for Route components that contain children can render their active
	 * child route using a <RouteHandler> element.
	 *
	 *   var App = React.createClass({
	 *     render: function () {
	 *       return (
	 *         <div className="application">
	 *           <RouteHandler/>
	 *         </div>
	 *       );
	 *     }
	 *   });
	 *
	 * If no handler is provided for the route, it will render a matched child route.
	 */

	var Route = (function (_React$Component) {
	  _inherits(Route, _React$Component);

	  function Route() {
	    _classCallCheck(this, Route);

	    _get(Object.getPrototypeOf(Route.prototype), 'constructor', this).apply(this, arguments);
	  }

	  // TODO: Include these in the above class definition
	  // once we can use ES7 property initializers.
	  // https://github.com/babel/babel/issues/619

	  _createClass(Route, [{
	    key: 'render',
	    value: function render() {
	      invariant(false, '%s elements are for router configuration only and should not be rendered', this.constructor.name);
	    }
	  }]);

	  return Route;
	})(React.Component);

	Route.propTypes = {
	  name: PropTypes.string,
	  path: PropTypes.string,
	  handler: PropTypes.func,
	  ignoreScrollBehavior: PropTypes.bool
	};

	Route.defaultProps = {
	  handler: RouteHandler
	};

	module.exports = Route;

/***/ },
/* 177 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(11);
	var assign = __webpack_require__(10);
	var PropTypes = __webpack_require__(9);

	function isLeftClickEvent(event) {
	  return event.button === 0;
	}

	function isModifiedEvent(event) {
	  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
	}

	/**
	 * <Link> components are used to create an <a> element that links to a route.
	 * When that route is active, the link gets an "active" class name (or the
	 * value of its `activeClassName` prop).
	 *
	 * For example, assuming you have the following route:
	 *
	 *   <Route name="showPost" path="/posts/:postID" handler={Post}/>
	 *
	 * You could use the following component to link to that route:
	 *
	 *   <Link to="showPost" params={{ postID: "123" }} />
	 *
	 * In addition to params, links may pass along query string parameters
	 * using the `query` prop.
	 *
	 *   <Link to="showPost" params={{ postID: "123" }} query={{ show:true }}/>
	 */

	var Link = (function (_React$Component) {
	  _inherits(Link, _React$Component);

	  function Link() {
	    _classCallCheck(this, Link);

	    _get(Object.getPrototypeOf(Link.prototype), 'constructor', this).apply(this, arguments);
	  }

	  // TODO: Include these in the above class definition
	  // once we can use ES7 property initializers.
	  // https://github.com/babel/babel/issues/619

	  _createClass(Link, [{
	    key: 'handleClick',
	    value: function handleClick(event) {
	      var allowTransition = true;
	      var clickResult;

	      if (this.props.onClick) clickResult = this.props.onClick(event);

	      if (isModifiedEvent(event) || !isLeftClickEvent(event)) return;

	      if (clickResult === false || event.defaultPrevented === true) allowTransition = false;

	      event.preventDefault();

	      if (allowTransition) this.context.router.transitionTo(this.props.to, this.props.params, this.props.query);
	    }

	    /**
	     * Returns the value of the "href" attribute to use on the DOM element.
	     */
	  }, {
	    key: 'getHref',
	    value: function getHref() {
	      return this.context.router.makeHref(this.props.to, this.props.params, this.props.query);
	    }

	    /**
	     * Returns the value of the "class" attribute to use on the DOM element, which contains
	     * the value of the activeClassName property when this <Link> is active.
	     */
	  }, {
	    key: 'getClassName',
	    value: function getClassName() {
	      var className = this.props.className;

	      if (this.getActiveState()) className += ' ' + this.props.activeClassName;

	      return className;
	    }
	  }, {
	    key: 'getActiveState',
	    value: function getActiveState() {
	      return this.context.router.isActive(this.props.to, this.props.params, this.props.query);
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var props = assign({}, this.props, {
	        href: this.getHref(),
	        className: this.getClassName(),
	        onClick: this.handleClick.bind(this)
	      });

	      if (props.activeStyle && this.getActiveState()) props.style = props.activeStyle;

	      return React.DOM.a(props, this.props.children);
	    }
	  }]);

	  return Link;
	})(React.Component);

	Link.contextTypes = {
	  router: PropTypes.router.isRequired
	};

	Link.propTypes = {
	  activeClassName: PropTypes.string.isRequired,
	  to: PropTypes.oneOfType([PropTypes.string, PropTypes.route]).isRequired,
	  params: PropTypes.object,
	  query: PropTypes.object,
	  activeStyle: PropTypes.object,
	  onClick: PropTypes.func
	};

	Link.defaultProps = {
	  activeClassName: 'active',
	  className: ''
	};

	module.exports = Link;

/***/ },
/* 178 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var PropTypes = __webpack_require__(9);
	var RouteHandler = __webpack_require__(174);
	var Route = __webpack_require__(176);

	/**
	 * A <NotFoundRoute> is a special kind of <Route> that
	 * renders when the beginning of its parent's path matches
	 * but none of its siblings do, including any <DefaultRoute>.
	 * Only one such route may be used at any given level in the
	 * route hierarchy.
	 */

	var NotFoundRoute = (function (_Route) {
	  _inherits(NotFoundRoute, _Route);

	  function NotFoundRoute() {
	    _classCallCheck(this, NotFoundRoute);

	    _get(Object.getPrototypeOf(NotFoundRoute.prototype), 'constructor', this).apply(this, arguments);
	  }

	  // TODO: Include these in the above class definition
	  // once we can use ES7 property initializers.
	  // https://github.com/babel/babel/issues/619

	  return NotFoundRoute;
	})(Route);

	NotFoundRoute.propTypes = {
	  name: PropTypes.string,
	  path: PropTypes.falsy,
	  children: PropTypes.falsy,
	  handler: PropTypes.func.isRequired
	};

	NotFoundRoute.defaultProps = {
	  handler: RouteHandler
	};

	module.exports = NotFoundRoute;

/***/ },
/* 179 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var PropTypes = __webpack_require__(9);
	var Route = __webpack_require__(176);

	/**
	 * A <Redirect> component is a special kind of <Route> that always
	 * redirects to another route when it matches.
	 */

	var Redirect = (function (_Route) {
	  _inherits(Redirect, _Route);

	  function Redirect() {
	    _classCallCheck(this, Redirect);

	    _get(Object.getPrototypeOf(Redirect.prototype), 'constructor', this).apply(this, arguments);
	  }

	  // TODO: Include these in the above class definition
	  // once we can use ES7 property initializers.
	  // https://github.com/babel/babel/issues/619

	  return Redirect;
	})(Route);

	Redirect.propTypes = {
	  path: PropTypes.string,
	  from: PropTypes.string, // Alias for path.
	  to: PropTypes.string,
	  handler: PropTypes.falsy
	};

	// Redirects should not have a default handler
	Redirect.defaultProps = {};

	module.exports = Redirect;

/***/ },
/* 180 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var LocationActions = __webpack_require__(181);
	var History = __webpack_require__(182);

	var _listeners = [];
	var _isListening = false;
	var _actionType;

	function notifyChange(type) {
	  if (type === LocationActions.PUSH) History.length += 1;

	  var change = {
	    path: HashLocation.getCurrentPath(),
	    type: type
	  };

	  _listeners.forEach(function (listener) {
	    listener.call(HashLocation, change);
	  });
	}

	function ensureSlash() {
	  var path = HashLocation.getCurrentPath();

	  if (path.charAt(0) === '/') return true;

	  HashLocation.replace('/' + path);

	  return false;
	}

	function onHashChange() {
	  if (ensureSlash()) {
	    // If we don't have an _actionType then all we know is the hash
	    // changed. It was probably caused by the user clicking the Back
	    // button, but may have also been the Forward button or manual
	    // manipulation. So just guess 'pop'.
	    var curActionType = _actionType;
	    _actionType = null;
	    notifyChange(curActionType || LocationActions.POP);
	  }
	}

	/**
	 * A Location that uses `window.location.hash`.
	 */
	var HashLocation = {

	  addChangeListener: function addChangeListener(listener) {
	    _listeners.push(listener);

	    // Do this BEFORE listening for hashchange.
	    ensureSlash();

	    if (!_isListening) {
	      if (window.addEventListener) {
	        window.addEventListener('hashchange', onHashChange, false);
	      } else {
	        window.attachEvent('onhashchange', onHashChange);
	      }

	      _isListening = true;
	    }
	  },

	  removeChangeListener: function removeChangeListener(listener) {
	    _listeners = _listeners.filter(function (l) {
	      return l !== listener;
	    });

	    if (_listeners.length === 0) {
	      if (window.removeEventListener) {
	        window.removeEventListener('hashchange', onHashChange, false);
	      } else {
	        window.removeEvent('onhashchange', onHashChange);
	      }

	      _isListening = false;
	    }
	  },

	  push: function push(path) {
	    _actionType = LocationActions.PUSH;
	    window.location.hash = path;
	  },

	  replace: function replace(path) {
	    _actionType = LocationActions.REPLACE;
	    window.location.replace(window.location.pathname + window.location.search + '#' + path);
	  },

	  pop: function pop() {
	    _actionType = LocationActions.POP;
	    History.back();
	  },

	  getCurrentPath: function getCurrentPath() {
	    return decodeURI(
	    // We can't use window.location.hash here because it's not
	    // consistent across browsers - Firefox will pre-decode it!
	    window.location.href.split('#')[1] || '');
	  },

	  toString: function toString() {
	    return '<HashLocation>';
	  }

	};

	module.exports = HashLocation;

/***/ },
/* 181 */
/***/ function(module, exports) {

	/**
	 * Actions that modify the URL.
	 */
	'use strict';

	var LocationActions = {

	  /**
	   * Indicates a new location is being pushed to the history stack.
	   */
	  PUSH: 'push',

	  /**
	   * Indicates the current location should be replaced.
	   */
	  REPLACE: 'replace',

	  /**
	   * Indicates the most recent entry should be removed from the history stack.
	   */
	  POP: 'pop'

	};

	module.exports = LocationActions;

/***/ },
/* 182 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var invariant = __webpack_require__(17);
	var canUseDOM = __webpack_require__(60).canUseDOM;

	var History = {

	  /**
	   * The current number of entries in the history.
	   *
	   * Note: This property is read-only.
	   */
	  length: 1,

	  /**
	   * Sends the browser back one entry in the history.
	   */
	  back: function back() {
	    invariant(canUseDOM, 'Cannot use History.back without a DOM');

	    // Do this first so that History.length will
	    // be accurate in location change listeners.
	    History.length -= 1;

	    window.history.back();
	  }

	};

	module.exports = History;

/***/ },
/* 183 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var LocationActions = __webpack_require__(181);
	var History = __webpack_require__(182);

	var _listeners = [];
	var _isListening = false;

	function notifyChange(type) {
	  var change = {
	    path: HistoryLocation.getCurrentPath(),
	    type: type
	  };

	  _listeners.forEach(function (listener) {
	    listener.call(HistoryLocation, change);
	  });
	}

	function onPopState(event) {
	  if (event.state === undefined) return; // Ignore extraneous popstate events in WebKit.

	  notifyChange(LocationActions.POP);
	}

	/**
	 * A Location that uses HTML5 history.
	 */
	var HistoryLocation = {

	  addChangeListener: function addChangeListener(listener) {
	    _listeners.push(listener);

	    if (!_isListening) {
	      if (window.addEventListener) {
	        window.addEventListener('popstate', onPopState, false);
	      } else {
	        window.attachEvent('onpopstate', onPopState);
	      }

	      _isListening = true;
	    }
	  },

	  removeChangeListener: function removeChangeListener(listener) {
	    _listeners = _listeners.filter(function (l) {
	      return l !== listener;
	    });

	    if (_listeners.length === 0) {
	      if (window.addEventListener) {
	        window.removeEventListener('popstate', onPopState, false);
	      } else {
	        window.removeEvent('onpopstate', onPopState);
	      }

	      _isListening = false;
	    }
	  },

	  push: function push(path) {
	    window.history.pushState({ path: path }, '', path);
	    History.length += 1;
	    notifyChange(LocationActions.PUSH);
	  },

	  replace: function replace(path) {
	    window.history.replaceState({ path: path }, '', path);
	    notifyChange(LocationActions.REPLACE);
	  },

	  pop: History.back,

	  getCurrentPath: function getCurrentPath() {
	    return decodeURI(window.location.pathname + window.location.search);
	  },

	  toString: function toString() {
	    return '<HistoryLocation>';
	  }

	};

	module.exports = HistoryLocation;

/***/ },
/* 184 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var HistoryLocation = __webpack_require__(183);
	var History = __webpack_require__(182);

	/**
	 * A Location that uses full page refreshes. This is used as
	 * the fallback for HistoryLocation in browsers that do not
	 * support the HTML5 history API.
	 */
	var RefreshLocation = {

	  push: function push(path) {
	    window.location = path;
	  },

	  replace: function replace(path) {
	    window.location.replace(path);
	  },

	  pop: History.back,

	  getCurrentPath: HistoryLocation.getCurrentPath,

	  toString: function toString() {
	    return '<RefreshLocation>';
	  }

	};

	module.exports = RefreshLocation;

/***/ },
/* 185 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	var invariant = __webpack_require__(17);

	function throwCannotModify() {
	  invariant(false, 'You cannot modify a static location');
	}

	/**
	 * A location that only ever contains a single path. Useful in
	 * stateless environments like servers where there is no path history,
	 * only the path that was used in the request.
	 */

	var StaticLocation = (function () {
	  function StaticLocation(path) {
	    _classCallCheck(this, StaticLocation);

	    this.path = path;
	  }

	  // TODO: Include these in the above class definition
	  // once we can use ES7 property initializers.
	  // https://github.com/babel/babel/issues/619

	  _createClass(StaticLocation, [{
	    key: 'getCurrentPath',
	    value: function getCurrentPath() {
	      return this.path;
	    }
	  }, {
	    key: 'toString',
	    value: function toString() {
	      return '<StaticLocation path="' + this.path + '">';
	    }
	  }]);

	  return StaticLocation;
	})();

	StaticLocation.prototype.push = throwCannotModify;
	StaticLocation.prototype.replace = throwCannotModify;
	StaticLocation.prototype.pop = throwCannotModify;

	module.exports = StaticLocation;

/***/ },
/* 186 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	var invariant = __webpack_require__(17);
	var LocationActions = __webpack_require__(181);
	var History = __webpack_require__(182);

	/**
	 * A location that is convenient for testing and does not require a DOM.
	 */

	var TestLocation = (function () {
	  function TestLocation(history) {
	    _classCallCheck(this, TestLocation);

	    this.history = history || [];
	    this.listeners = [];
	    this.needsDOM = false;
	    this._updateHistoryLength();
	  }

	  _createClass(TestLocation, [{
	    key: '_updateHistoryLength',
	    value: function _updateHistoryLength() {
	      History.length = this.history.length;
	    }
	  }, {
	    key: '_notifyChange',
	    value: function _notifyChange(type) {
	      var change = {
	        path: this.getCurrentPath(),
	        type: type
	      };

	      for (var i = 0, len = this.listeners.length; i < len; ++i) this.listeners[i].call(this, change);
	    }
	  }, {
	    key: 'addChangeListener',
	    value: function addChangeListener(listener) {
	      this.listeners.push(listener);
	    }
	  }, {
	    key: 'removeChangeListener',
	    value: function removeChangeListener(listener) {
	      this.listeners = this.listeners.filter(function (l) {
	        return l !== listener;
	      });
	    }
	  }, {
	    key: 'push',
	    value: function push(path) {
	      this.history.push(path);
	      this._updateHistoryLength();
	      this._notifyChange(LocationActions.PUSH);
	    }
	  }, {
	    key: 'replace',
	    value: function replace(path) {
	      invariant(this.history.length, 'You cannot replace the current path with no history');

	      this.history[this.history.length - 1] = path;

	      this._notifyChange(LocationActions.REPLACE);
	    }
	  }, {
	    key: 'pop',
	    value: function pop() {
	      this.history.pop();
	      this._updateHistoryLength();
	      this._notifyChange(LocationActions.POP);
	    }
	  }, {
	    key: 'getCurrentPath',
	    value: function getCurrentPath() {
	      return this.history[this.history.length - 1];
	    }
	  }, {
	    key: 'toString',
	    value: function toString() {
	      return '<TestLocation>';
	    }
	  }]);

	  return TestLocation;
	})();

	module.exports = TestLocation;

/***/ },
/* 187 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var LocationActions = __webpack_require__(181);

	/**
	 * A scroll behavior that attempts to imitate the default behavior
	 * of modern browsers.
	 */
	var ImitateBrowserBehavior = {

	  updateScrollPosition: function updateScrollPosition(position, actionType) {
	    switch (actionType) {
	      case LocationActions.PUSH:
	      case LocationActions.REPLACE:
	        window.scrollTo(0, 0);
	        break;
	      case LocationActions.POP:
	        if (position) {
	          window.scrollTo(position.x, position.y);
	        } else {
	          window.scrollTo(0, 0);
	        }
	        break;
	    }
	  }

	};

	module.exports = ImitateBrowserBehavior;

/***/ },
/* 188 */
/***/ function(module, exports) {

	/**
	 * A scroll behavior that always scrolls to the top of the page
	 * after a transition.
	 */
	"use strict";

	var ScrollToTopBehavior = {

	  updateScrollPosition: function updateScrollPosition() {
	    window.scrollTo(0, 0);
	  }

	};

	module.exports = ScrollToTopBehavior;

/***/ },
/* 189 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var PropTypes = __webpack_require__(9);

	/**
	 * A mixin for components that modify the URL.
	 *
	 * Example:
	 *
	 *   var MyLink = React.createClass({
	 *     mixins: [ Router.Navigation ],
	 *     handleClick(event) {
	 *       event.preventDefault();
	 *       this.transitionTo('aRoute', { the: 'params' }, { the: 'query' });
	 *     },
	 *     render() {
	 *       return (
	 *         <a onClick={this.handleClick}>Click me!</a>
	 *       );
	 *     }
	 *   });
	 */
	var Navigation = {

	  contextTypes: {
	    router: PropTypes.router.isRequired
	  },

	  /**
	   * Returns an absolute URL path created from the given route
	   * name, URL parameters, and query values.
	   */
	  makePath: function makePath(to, params, query) {
	    return this.context.router.makePath(to, params, query);
	  },

	  /**
	   * Returns a string that may safely be used as the href of a
	   * link to the route with the given name.
	   */
	  makeHref: function makeHref(to, params, query) {
	    return this.context.router.makeHref(to, params, query);
	  },

	  /**
	   * Transitions to the URL specified in the arguments by pushing
	   * a new URL onto the history stack.
	   */
	  transitionTo: function transitionTo(to, params, query) {
	    this.context.router.transitionTo(to, params, query);
	  },

	  /**
	   * Transitions to the URL specified in the arguments by replacing
	   * the current URL in the history stack.
	   */
	  replaceWith: function replaceWith(to, params, query) {
	    this.context.router.replaceWith(to, params, query);
	  },

	  /**
	   * Transitions to the previous URL.
	   */
	  goBack: function goBack() {
	    return this.context.router.goBack();
	  }

	};

	module.exports = Navigation;

/***/ },
/* 190 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var PropTypes = __webpack_require__(9);

	/**
	 * A mixin for components that need to know the path, routes, URL
	 * params and query that are currently active.
	 *
	 * Example:
	 *
	 *   var AboutLink = React.createClass({
	 *     mixins: [ Router.State ],
	 *     render() {
	 *       var className = this.props.className;
	 *
	 *       if (this.isActive('about'))
	 *         className += ' is-active';
	 *
	 *       return React.DOM.a({ className: className }, this.props.children);
	 *     }
	 *   });
	 */
	var State = {

	  contextTypes: {
	    router: PropTypes.router.isRequired
	  },

	  /**
	   * Returns the current URL path.
	   */
	  getPath: function getPath() {
	    return this.context.router.getCurrentPath();
	  },

	  /**
	   * Returns the current URL path without the query string.
	   */
	  getPathname: function getPathname() {
	    return this.context.router.getCurrentPathname();
	  },

	  /**
	   * Returns an object of the URL params that are currently active.
	   */
	  getParams: function getParams() {
	    return this.context.router.getCurrentParams();
	  },

	  /**
	   * Returns an object of the query params that are currently active.
	   */
	  getQuery: function getQuery() {
	    return this.context.router.getCurrentQuery();
	  },

	  /**
	   * Returns an array of the routes that are currently active.
	   */
	  getRoutes: function getRoutes() {
	    return this.context.router.getCurrentRoutes();
	  },

	  /**
	   * A helper method to determine if a given route, params, and query
	   * are active.
	   */
	  isActive: function isActive(to, params, query) {
	    return this.context.router.isActive(to, params, query);
	  }

	};

	module.exports = State;

/***/ },
/* 191 */
/***/ function(module, exports, __webpack_require__) {

	/* jshint -W084 */
	'use strict';

	var React = __webpack_require__(11);
	var assign = __webpack_require__(10);
	var warning = __webpack_require__(24);
	var DefaultRoute = __webpack_require__(8);
	var NotFoundRoute = __webpack_require__(178);
	var Redirect = __webpack_require__(179);
	var Route = __webpack_require__(166);

	function checkPropTypes(componentName, propTypes, props) {
	  componentName = componentName || 'UnknownComponent';

	  for (var propName in propTypes) {
	    if (propTypes.hasOwnProperty(propName)) {
	      var error = propTypes[propName](props, propName, componentName);

	      if (error instanceof Error) warning(false, error.message);
	    }
	  }
	}

	function createRouteOptions(props) {
	  var options = assign({}, props);
	  var handler = options.handler;

	  if (handler) {
	    options.onEnter = handler.willTransitionTo;
	    options.onLeave = handler.willTransitionFrom;
	  }

	  return options;
	}

	function createRouteFromReactElement(element) {
	  if (!React.isValidElement(element)) return;

	  var type = element.type;
	  var props = assign({}, type.defaultProps, element.props);

	  if (type.propTypes) checkPropTypes(type.displayName, type.propTypes, props);

	  if (type === DefaultRoute) return Route.createDefaultRoute(createRouteOptions(props));

	  if (type === NotFoundRoute) return Route.createNotFoundRoute(createRouteOptions(props));

	  if (type === Redirect) return Route.createRedirect(createRouteOptions(props));

	  return Route.createRoute(createRouteOptions(props), function () {
	    if (props.children) createRoutesFromReactChildren(props.children);
	  });
	}

	/**
	 * Creates and returns an array of routes created from the given
	 * ReactChildren, all of which should be one of <Route>, <DefaultRoute>,
	 * <NotFoundRoute>, or <Redirect>, e.g.:
	 *
	 *   var { createRoutesFromReactChildren, Route, Redirect } = require('react-router');
	 *
	 *   var routes = createRoutesFromReactChildren(
	 *     <Route path="/" handler={App}>
	 *       <Route name="user" path="/user/:userId" handler={User}>
	 *         <Route name="task" path="tasks/:taskId" handler={Task}/>
	 *         <Redirect from="todos/:taskId" to="task"/>
	 *       </Route>
	 *     </Route>
	 *   );
	 */
	function createRoutesFromReactChildren(children) {
	  var routes = [];

	  React.Children.forEach(children, function (child) {
	    if (child = createRouteFromReactElement(child)) routes.push(child);
	  });

	  return routes;
	}

	module.exports = createRoutesFromReactChildren;

/***/ },
/* 192 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/* jshint -W058 */
	'use strict';

	var React = __webpack_require__(11);
	var warning = __webpack_require__(24);
	var invariant = __webpack_require__(17);
	var canUseDOM = __webpack_require__(60).canUseDOM;
	var LocationActions = __webpack_require__(181);
	var ImitateBrowserBehavior = __webpack_require__(187);
	var HashLocation = __webpack_require__(180);
	var HistoryLocation = __webpack_require__(183);
	var RefreshLocation = __webpack_require__(184);
	var StaticLocation = __webpack_require__(185);
	var ScrollHistory = __webpack_require__(193);
	var createRoutesFromReactChildren = __webpack_require__(191);
	var isReactChildren = __webpack_require__(195);
	var Transition = __webpack_require__(196);
	var PropTypes = __webpack_require__(9);
	var Redirect = __webpack_require__(198);
	var History = __webpack_require__(182);
	var Cancellation = __webpack_require__(197);
	var Match = __webpack_require__(199);
	var Route = __webpack_require__(166);
	var supportsHistory = __webpack_require__(200);
	var PathUtils = __webpack_require__(167);

	/**
	 * The default location for new routers.
	 */
	var DEFAULT_LOCATION = canUseDOM ? HashLocation : '/';

	/**
	 * The default scroll behavior for new routers.
	 */
	var DEFAULT_SCROLL_BEHAVIOR = canUseDOM ? ImitateBrowserBehavior : null;

	function hasProperties(object, properties) {
	  for (var propertyName in properties) if (properties.hasOwnProperty(propertyName) && object[propertyName] !== properties[propertyName]) return false;

	  return true;
	}

	function hasMatch(routes, route, prevParams, nextParams, prevQuery, nextQuery) {
	  return routes.some(function (r) {
	    if (r !== route) return false;

	    var paramNames = route.paramNames;
	    var paramName;

	    // Ensure that all params the route cares about did not change.
	    for (var i = 0, len = paramNames.length; i < len; ++i) {
	      paramName = paramNames[i];

	      if (nextParams[paramName] !== prevParams[paramName]) return false;
	    }

	    // Ensure the query hasn't changed.
	    return hasProperties(prevQuery, nextQuery) && hasProperties(nextQuery, prevQuery);
	  });
	}

	function addRoutesToNamedRoutes(routes, namedRoutes) {
	  var route;
	  for (var i = 0, len = routes.length; i < len; ++i) {
	    route = routes[i];

	    if (route.name) {
	      invariant(namedRoutes[route.name] == null, 'You may not have more than one route named "%s"', route.name);

	      namedRoutes[route.name] = route;
	    }

	    if (route.childRoutes) addRoutesToNamedRoutes(route.childRoutes, namedRoutes);
	  }
	}

	function routeIsActive(activeRoutes, routeName) {
	  return activeRoutes.some(function (route) {
	    return route.name === routeName;
	  });
	}

	function paramsAreActive(activeParams, params) {
	  for (var property in params) if (String(activeParams[property]) !== String(params[property])) return false;

	  return true;
	}

	function queryIsActive(activeQuery, query) {
	  for (var property in query) if (String(activeQuery[property]) !== String(query[property])) return false;

	  return true;
	}

	/**
	 * Creates and returns a new router using the given options. A router
	 * is a ReactComponent class that knows how to react to changes in the
	 * URL and keep the contents of the page in sync.
	 *
	 * Options may be any of the following:
	 *
	 * - routes           (required) The route config
	 * - location         The location to use. Defaults to HashLocation when
	 *                    the DOM is available, "/" otherwise
	 * - scrollBehavior   The scroll behavior to use. Defaults to ImitateBrowserBehavior
	 *                    when the DOM is available, null otherwise
	 * - onError          A function that is used to handle errors
	 * - onAbort          A function that is used to handle aborted transitions
	 *
	 * When rendering in a server-side environment, the location should simply
	 * be the URL path that was used in the request, including the query string.
	 */
	function createRouter(options) {
	  options = options || {};

	  if (isReactChildren(options)) options = { routes: options };

	  var mountedComponents = [];
	  var location = options.location || DEFAULT_LOCATION;
	  var scrollBehavior = options.scrollBehavior || DEFAULT_SCROLL_BEHAVIOR;
	  var state = {};
	  var nextState = {};
	  var pendingTransition = null;
	  var dispatchHandler = null;

	  if (typeof location === 'string') location = new StaticLocation(location);

	  if (location instanceof StaticLocation) {
	    warning(!canUseDOM || process.env.NODE_ENV === 'test', 'You should not use a static location in a DOM environment because ' + 'the router will not be kept in sync with the current URL');
	  } else {
	    invariant(canUseDOM || location.needsDOM === false, 'You cannot use %s without a DOM', location);
	  }

	  // Automatically fall back to full page refreshes in
	  // browsers that don't support the HTML history API.
	  if (location === HistoryLocation && !supportsHistory()) location = RefreshLocation;

	  var Router = React.createClass({

	    displayName: 'Router',

	    statics: {

	      isRunning: false,

	      cancelPendingTransition: function cancelPendingTransition() {
	        if (pendingTransition) {
	          pendingTransition.cancel();
	          pendingTransition = null;
	        }
	      },

	      clearAllRoutes: function clearAllRoutes() {
	        Router.cancelPendingTransition();
	        Router.namedRoutes = {};
	        Router.routes = [];
	      },

	      /**
	       * Adds routes to this router from the given children object (see ReactChildren).
	       */
	      addRoutes: function addRoutes(routes) {
	        if (isReactChildren(routes)) routes = createRoutesFromReactChildren(routes);

	        addRoutesToNamedRoutes(routes, Router.namedRoutes);

	        Router.routes.push.apply(Router.routes, routes);
	      },

	      /**
	       * Replaces routes of this router from the given children object (see ReactChildren).
	       */
	      replaceRoutes: function replaceRoutes(routes) {
	        Router.clearAllRoutes();
	        Router.addRoutes(routes);
	        Router.refresh();
	      },

	      /**
	       * Performs a match of the given path against this router and returns an object
	       * with the { routes, params, pathname, query } that match. Returns null if no
	       * match can be made.
	       */
	      match: function match(path) {
	        return Match.findMatch(Router.routes, path);
	      },

	      /**
	       * Returns an absolute URL path created from the given route
	       * name, URL parameters, and query.
	       */
	      makePath: function makePath(to, params, query) {
	        var path;
	        if (PathUtils.isAbsolute(to)) {
	          path = to;
	        } else {
	          var route = to instanceof Route ? to : Router.namedRoutes[to];

	          invariant(route instanceof Route, 'Cannot find a route named "%s"', to);

	          path = route.path;
	        }

	        return PathUtils.withQuery(PathUtils.injectParams(path, params), query);
	      },

	      /**
	       * Returns a string that may safely be used as the href of a link
	       * to the route with the given name, URL parameters, and query.
	       */
	      makeHref: function makeHref(to, params, query) {
	        var path = Router.makePath(to, params, query);
	        return location === HashLocation ? '#' + path : path;
	      },

	      /**
	       * Transitions to the URL specified in the arguments by pushing
	       * a new URL onto the history stack.
	       */
	      transitionTo: function transitionTo(to, params, query) {
	        var path = Router.makePath(to, params, query);

	        if (pendingTransition) {
	          // Replace so pending location does not stay in history.
	          location.replace(path);
	        } else {
	          location.push(path);
	        }
	      },

	      /**
	       * Transitions to the URL specified in the arguments by replacing
	       * the current URL in the history stack.
	       */
	      replaceWith: function replaceWith(to, params, query) {
	        location.replace(Router.makePath(to, params, query));
	      },

	      /**
	       * Transitions to the previous URL if one is available. Returns true if the
	       * router was able to go back, false otherwise.
	       *
	       * Note: The router only tracks history entries in your application, not the
	       * current browser session, so you can safely call this function without guarding
	       * against sending the user back to some other site. However, when using
	       * RefreshLocation (which is the fallback for HistoryLocation in browsers that
	       * don't support HTML5 history) this method will *always* send the client back
	       * because we cannot reliably track history length.
	       */
	      goBack: function goBack() {
	        if (History.length > 1 || location === RefreshLocation) {
	          location.pop();
	          return true;
	        }

	        warning(false, 'goBack() was ignored because there is no router history');

	        return false;
	      },

	      handleAbort: options.onAbort || function (abortReason) {
	        if (location instanceof StaticLocation) throw new Error('Unhandled aborted transition! Reason: ' + abortReason);

	        if (abortReason instanceof Cancellation) {
	          return;
	        } else if (abortReason instanceof Redirect) {
	          location.replace(Router.makePath(abortReason.to, abortReason.params, abortReason.query));
	        } else {
	          location.pop();
	        }
	      },

	      handleError: options.onError || function (error) {
	        // Throw so we don't silently swallow async errors.
	        throw error; // This error probably originated in a transition hook.
	      },

	      handleLocationChange: function handleLocationChange(change) {
	        Router.dispatch(change.path, change.type);
	      },

	      /**
	       * Performs a transition to the given path and calls callback(error, abortReason)
	       * when the transition is finished. If both arguments are null the router's state
	       * was updated. Otherwise the transition did not complete.
	       *
	       * In a transition, a router first determines which routes are involved by beginning
	       * with the current route, up the route tree to the first parent route that is shared
	       * with the destination route, and back down the tree to the destination route. The
	       * willTransitionFrom hook is invoked on all route handlers we're transitioning away
	       * from, in reverse nesting order. Likewise, the willTransitionTo hook is invoked on
	       * all route handlers we're transitioning to.
	       *
	       * Both willTransitionFrom and willTransitionTo hooks may either abort or redirect the
	       * transition. To resolve asynchronously, they may use the callback argument. If no
	       * hooks wait, the transition is fully synchronous.
	       */
	      dispatch: function dispatch(path, action) {
	        Router.cancelPendingTransition();

	        var prevPath = state.path;
	        var isRefreshing = action == null;

	        if (prevPath === path && !isRefreshing) return; // Nothing to do!

	        // Record the scroll position as early as possible to
	        // get it before browsers try update it automatically.
	        if (prevPath && action === LocationActions.PUSH) Router.recordScrollPosition(prevPath);

	        var match = Router.match(path);

	        warning(match != null, 'No route matches path "%s". Make sure you have <Route path="%s"> somewhere in your routes', path, path);

	        if (match == null) match = {};

	        var prevRoutes = state.routes || [];
	        var prevParams = state.params || {};
	        var prevQuery = state.query || {};

	        var nextRoutes = match.routes || [];
	        var nextParams = match.params || {};
	        var nextQuery = match.query || {};

	        var fromRoutes, toRoutes;
	        if (prevRoutes.length) {
	          fromRoutes = prevRoutes.filter(function (route) {
	            return !hasMatch(nextRoutes, route, prevParams, nextParams, prevQuery, nextQuery);
	          });

	          toRoutes = nextRoutes.filter(function (route) {
	            return !hasMatch(prevRoutes, route, prevParams, nextParams, prevQuery, nextQuery);
	          });
	        } else {
	          fromRoutes = [];
	          toRoutes = nextRoutes;
	        }

	        var transition = new Transition(path, Router.replaceWith.bind(Router, path));
	        pendingTransition = transition;

	        var fromComponents = mountedComponents.slice(prevRoutes.length - fromRoutes.length);

	        Transition.from(transition, fromRoutes, fromComponents, function (error) {
	          if (error || transition.abortReason) return dispatchHandler.call(Router, error, transition); // No need to continue.

	          Transition.to(transition, toRoutes, nextParams, nextQuery, function (error) {
	            dispatchHandler.call(Router, error, transition, {
	              path: path,
	              action: action,
	              pathname: match.pathname,
	              routes: nextRoutes,
	              params: nextParams,
	              query: nextQuery
	            });
	          });
	        });
	      },

	      /**
	       * Starts this router and calls callback(router, state) when the route changes.
	       *
	       * If the router's location is static (i.e. a URL path in a server environment)
	       * the callback is called only once. Otherwise, the location should be one of the
	       * Router.*Location objects (e.g. Router.HashLocation or Router.HistoryLocation).
	       */
	      run: function run(callback) {
	        invariant(!Router.isRunning, 'Router is already running');

	        dispatchHandler = function (error, transition, newState) {
	          if (error) Router.handleError(error);

	          if (pendingTransition !== transition) return;

	          pendingTransition = null;

	          if (transition.abortReason) {
	            Router.handleAbort(transition.abortReason);
	          } else {
	            callback.call(Router, Router, nextState = newState);
	          }
	        };

	        if (!(location instanceof StaticLocation)) {
	          if (location.addChangeListener) location.addChangeListener(Router.handleLocationChange);

	          Router.isRunning = true;
	        }

	        // Bootstrap using the current path.
	        Router.refresh();
	      },

	      refresh: function refresh() {
	        Router.dispatch(location.getCurrentPath(), null);
	      },

	      stop: function stop() {
	        Router.cancelPendingTransition();

	        if (location.removeChangeListener) location.removeChangeListener(Router.handleLocationChange);

	        Router.isRunning = false;
	      },

	      getLocation: function getLocation() {
	        return location;
	      },

	      getScrollBehavior: function getScrollBehavior() {
	        return scrollBehavior;
	      },

	      getRouteAtDepth: function getRouteAtDepth(routeDepth) {
	        var routes = state.routes;
	        return routes && routes[routeDepth];
	      },

	      setRouteComponentAtDepth: function setRouteComponentAtDepth(routeDepth, component) {
	        mountedComponents[routeDepth] = component;
	      },

	      /**
	       * Returns the current URL path + query string.
	       */
	      getCurrentPath: function getCurrentPath() {
	        return state.path;
	      },

	      /**
	       * Returns the current URL path without the query string.
	       */
	      getCurrentPathname: function getCurrentPathname() {
	        return state.pathname;
	      },

	      /**
	       * Returns an object of the currently active URL parameters.
	       */
	      getCurrentParams: function getCurrentParams() {
	        return state.params;
	      },

	      /**
	       * Returns an object of the currently active query parameters.
	       */
	      getCurrentQuery: function getCurrentQuery() {
	        return state.query;
	      },

	      /**
	       * Returns an array of the currently active routes.
	       */
	      getCurrentRoutes: function getCurrentRoutes() {
	        return state.routes;
	      },

	      /**
	       * Returns true if the given route, params, and query are active.
	       */
	      isActive: function isActive(to, params, query) {
	        if (PathUtils.isAbsolute(to)) return to === state.path;

	        return routeIsActive(state.routes, to) && paramsAreActive(state.params, params) && (query == null || queryIsActive(state.query, query));
	      }

	    },

	    mixins: [ScrollHistory],

	    propTypes: {
	      children: PropTypes.falsy
	    },

	    childContextTypes: {
	      routeDepth: PropTypes.number.isRequired,
	      router: PropTypes.router.isRequired
	    },

	    getChildContext: function getChildContext() {
	      return {
	        routeDepth: 1,
	        router: Router
	      };
	    },

	    getInitialState: function getInitialState() {
	      return state = nextState;
	    },

	    componentWillReceiveProps: function componentWillReceiveProps() {
	      this.setState(state = nextState);
	    },

	    componentWillUnmount: function componentWillUnmount() {
	      Router.stop();
	    },

	    render: function render() {
	      var route = Router.getRouteAtDepth(0);
	      return route ? React.createElement(route.handler, this.props) : null;
	    }

	  });

	  Router.clearAllRoutes();

	  if (options.routes) Router.addRoutes(options.routes);

	  return Router;
	}

	module.exports = createRouter;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 193 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var invariant = __webpack_require__(17);
	var canUseDOM = __webpack_require__(60).canUseDOM;
	var getWindowScrollPosition = __webpack_require__(194);

	function shouldUpdateScroll(state, prevState) {
	  if (!prevState) return true;

	  // Don't update scroll position when only the query has changed.
	  if (state.pathname === prevState.pathname) return false;

	  var routes = state.routes;
	  var prevRoutes = prevState.routes;

	  var sharedAncestorRoutes = routes.filter(function (route) {
	    return prevRoutes.indexOf(route) !== -1;
	  });

	  return !sharedAncestorRoutes.some(function (route) {
	    return route.ignoreScrollBehavior;
	  });
	}

	/**
	 * Provides the router with the ability to manage window scroll position
	 * according to its scroll behavior.
	 */
	var ScrollHistory = {

	  statics: {

	    /**
	     * Records curent scroll position as the last known position for the given URL path.
	     */
	    recordScrollPosition: function recordScrollPosition(path) {
	      if (!this.scrollHistory) this.scrollHistory = {};

	      this.scrollHistory[path] = getWindowScrollPosition();
	    },

	    /**
	     * Returns the last known scroll position for the given URL path.
	     */
	    getScrollPosition: function getScrollPosition(path) {
	      if (!this.scrollHistory) this.scrollHistory = {};

	      return this.scrollHistory[path] || null;
	    }

	  },

	  componentWillMount: function componentWillMount() {
	    invariant(this.constructor.getScrollBehavior() == null || canUseDOM, 'Cannot use scroll behavior without a DOM');
	  },

	  componentDidMount: function componentDidMount() {
	    this._updateScroll();
	  },

	  componentDidUpdate: function componentDidUpdate(prevProps, prevState) {
	    this._updateScroll(prevState);
	  },

	  _updateScroll: function _updateScroll(prevState) {
	    if (!shouldUpdateScroll(this.state, prevState)) return;

	    var scrollBehavior = this.constructor.getScrollBehavior();

	    if (scrollBehavior) scrollBehavior.updateScrollPosition(this.constructor.getScrollPosition(this.state.path), this.state.action);
	  }

	};

	module.exports = ScrollHistory;

/***/ },
/* 194 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var invariant = __webpack_require__(17);
	var canUseDOM = __webpack_require__(60).canUseDOM;

	/**
	 * Returns the current scroll position of the window as { x, y }.
	 */
	function getWindowScrollPosition() {
	  invariant(canUseDOM, 'Cannot get current scroll position without a DOM');

	  return {
	    x: window.pageXOffset || document.documentElement.scrollLeft,
	    y: window.pageYOffset || document.documentElement.scrollTop
	  };
	}

	module.exports = getWindowScrollPosition;

/***/ },
/* 195 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var React = __webpack_require__(11);

	function isValidChild(object) {
	  return object == null || React.isValidElement(object);
	}

	function isReactChildren(object) {
	  return isValidChild(object) || Array.isArray(object) && object.every(isValidChild);
	}

	module.exports = isReactChildren;

/***/ },
/* 196 */
/***/ function(module, exports, __webpack_require__) {

	/* jshint -W058 */

	'use strict';

	var Cancellation = __webpack_require__(197);
	var Redirect = __webpack_require__(198);

	/**
	 * Encapsulates a transition to a given path.
	 *
	 * The willTransitionTo and willTransitionFrom handlers receive
	 * an instance of this class as their first argument.
	 */
	function Transition(path, retry) {
	  this.path = path;
	  this.abortReason = null;
	  // TODO: Change this to router.retryTransition(transition)
	  this.retry = retry.bind(this);
	}

	Transition.prototype.abort = function (reason) {
	  if (this.abortReason == null) this.abortReason = reason || 'ABORT';
	};

	Transition.prototype.redirect = function (to, params, query) {
	  this.abort(new Redirect(to, params, query));
	};

	Transition.prototype.cancel = function () {
	  this.abort(new Cancellation());
	};

	Transition.from = function (transition, routes, components, callback) {
	  routes.reduce(function (callback, route, index) {
	    return function (error) {
	      if (error || transition.abortReason) {
	        callback(error);
	      } else if (route.onLeave) {
	        try {
	          route.onLeave(transition, components[index], callback);

	          // If there is no callback in the argument list, call it automatically.
	          if (route.onLeave.length < 3) callback();
	        } catch (e) {
	          callback(e);
	        }
	      } else {
	        callback();
	      }
	    };
	  }, callback)();
	};

	Transition.to = function (transition, routes, params, query, callback) {
	  routes.reduceRight(function (callback, route) {
	    return function (error) {
	      if (error || transition.abortReason) {
	        callback(error);
	      } else if (route.onEnter) {
	        try {
	          route.onEnter(transition, params, query, callback);

	          // If there is no callback in the argument list, call it automatically.
	          if (route.onEnter.length < 4) callback();
	        } catch (e) {
	          callback(e);
	        }
	      } else {
	        callback();
	      }
	    };
	  }, callback)();
	};

	module.exports = Transition;

/***/ },
/* 197 */
/***/ function(module, exports) {

	/**
	 * Represents a cancellation caused by navigating away
	 * before the previous transition has fully resolved.
	 */
	"use strict";

	function Cancellation() {}

	module.exports = Cancellation;

/***/ },
/* 198 */
/***/ function(module, exports) {

	/**
	 * Encapsulates a redirect to the given route.
	 */
	"use strict";

	function Redirect(to, params, query) {
	  this.to = to;
	  this.params = params;
	  this.query = query;
	}

	module.exports = Redirect;

/***/ },
/* 199 */
/***/ function(module, exports, __webpack_require__) {

	/* jshint -W084 */
	'use strict';

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	var PathUtils = __webpack_require__(167);

	function deepSearch(route, pathname, query) {
	  // Check the subtree first to find the most deeply-nested match.
	  var childRoutes = route.childRoutes;
	  if (childRoutes) {
	    var match, childRoute;
	    for (var i = 0, len = childRoutes.length; i < len; ++i) {
	      childRoute = childRoutes[i];

	      if (childRoute.isDefault || childRoute.isNotFound) continue; // Check these in order later.

	      if (match = deepSearch(childRoute, pathname, query)) {
	        // A route in the subtree matched! Add this route and we're done.
	        match.routes.unshift(route);
	        return match;
	      }
	    }
	  }

	  // No child routes matched; try the default route.
	  var defaultRoute = route.defaultRoute;
	  if (defaultRoute && (params = PathUtils.extractParams(defaultRoute.path, pathname))) return new Match(pathname, params, query, [route, defaultRoute]);

	  // Does the "not found" route match?
	  var notFoundRoute = route.notFoundRoute;
	  if (notFoundRoute && (params = PathUtils.extractParams(notFoundRoute.path, pathname))) return new Match(pathname, params, query, [route, notFoundRoute]);

	  // Last attempt: check this route.
	  var params = PathUtils.extractParams(route.path, pathname);
	  if (params) return new Match(pathname, params, query, [route]);

	  return null;
	}

	var Match = (function () {
	  _createClass(Match, null, [{
	    key: 'findMatch',

	    /**
	     * Attempts to match depth-first a route in the given route's
	     * subtree against the given path and returns the match if it
	     * succeeds, null if no match can be made.
	     */
	    value: function findMatch(routes, path) {
	      var pathname = PathUtils.withoutQuery(path);
	      var query = PathUtils.extractQuery(path);
	      var match = null;

	      for (var i = 0, len = routes.length; match == null && i < len; ++i) match = deepSearch(routes[i], pathname, query);

	      return match;
	    }
	  }]);

	  function Match(pathname, params, query, routes) {
	    _classCallCheck(this, Match);

	    this.pathname = pathname;
	    this.params = params;
	    this.query = query;
	    this.routes = routes;
	  }

	  return Match;
	})();

	module.exports = Match;

/***/ },
/* 200 */
/***/ function(module, exports) {

	'use strict';

	function supportsHistory() {
	  /*! taken from modernizr
	   * https://github.com/Modernizr/Modernizr/blob/master/LICENSE
	   * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js
	   * changed to avoid false negatives for Windows Phones: https://github.com/rackt/react-router/issues/586
	   */
	  var ua = navigator.userAgent;
	  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) {
	    return false;
	  }
	  return window.history && 'pushState' in window.history;
	}

	module.exports = supportsHistory;

/***/ },
/* 201 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var createRouter = __webpack_require__(192);

	/**
	 * A high-level convenience method that creates, configures, and
	 * runs a router in one shot. The method signature is:
	 *
	 *   Router.run(routes[, location ], callback);
	 *
	 * Using `window.location.hash` to manage the URL, you could do:
	 *
	 *   Router.run(routes, function (Handler) {
	 *     React.render(<Handler/>, document.body);
	 *   });
	 * 
	 * Using HTML5 history and a custom "cursor" prop:
	 * 
	 *   Router.run(routes, Router.HistoryLocation, function (Handler) {
	 *     React.render(<Handler cursor={cursor}/>, document.body);
	 *   });
	 *
	 * Returns the newly created router.
	 *
	 * Note: If you need to specify further options for your router such
	 * as error/abort handling or custom scroll behavior, use Router.create
	 * instead.
	 *
	 *   var router = Router.create(options);
	 *   router.run(function (Handler) {
	 *     // ...
	 *   });
	 */
	function runRouter(routes, location, callback) {
	  if (typeof location === 'function') {
	    callback = location;
	    location = null;
	  }

	  var router = createRouter({
	    routes: routes,
	    location: location
	  });

	  router.run(callback);

	  return router;
	}

	module.exports = runRouter;

/***/ },
/* 202 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(203);


/***/ },
/* 203 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactWithAddons
	 */

	/**
	 * This module exists purely in the open source project, and is meant as a way
	 * to create a separate standalone build of React. This build has "addons", or
	 * functionality we've built and think might be useful but doesn't have a good
	 * place to live inside React core.
	 */

	'use strict';

	var LinkedStateMixin = __webpack_require__(204);
	var React = __webpack_require__(12);
	var ReactComponentWithPureRenderMixin =
	  __webpack_require__(207);
	var ReactCSSTransitionGroup = __webpack_require__(208);
	var ReactFragment = __webpack_require__(20);
	var ReactTransitionGroup = __webpack_require__(209);
	var ReactUpdates = __webpack_require__(35);

	var cx = __webpack_require__(217);
	var cloneWithProps = __webpack_require__(211);
	var update = __webpack_require__(218);

	React.addons = {
	  CSSTransitionGroup: ReactCSSTransitionGroup,
	  LinkedStateMixin: LinkedStateMixin,
	  PureRenderMixin: ReactComponentWithPureRenderMixin,
	  TransitionGroup: ReactTransitionGroup,

	  batchedUpdates: ReactUpdates.batchedUpdates,
	  classSet: cx,
	  cloneWithProps: cloneWithProps,
	  createFragment: ReactFragment.create,
	  update: update
	};

	if ("production" !== process.env.NODE_ENV) {
	  React.addons.Perf = __webpack_require__(159);
	  React.addons.TestUtils = __webpack_require__(219);
	}

	module.exports = React;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 204 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule LinkedStateMixin
	 * @typechecks static-only
	 */

	'use strict';

	var ReactLink = __webpack_require__(205);
	var ReactStateSetters = __webpack_require__(206);

	/**
	 * A simple mixin around ReactLink.forState().
	 */
	var LinkedStateMixin = {
	  /**
	   * Create a ReactLink that's linked to part of this component's state. The
	   * ReactLink will have the current value of this.state[key] and will call
	   * setState() when a change is requested.
	   *
	   * @param {string} key state key to update. Note: you may want to use keyOf()
	   * if you're using Google Closure Compiler advanced mode.
	   * @return {ReactLink} ReactLink instance linking to the state.
	   */
	  linkState: function(key) {
	    return new ReactLink(
	      this.state[key],
	      ReactStateSetters.createStateKeySetter(this, key)
	    );
	  }
	};

	module.exports = LinkedStateMixin;


/***/ },
/* 205 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactLink
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * ReactLink encapsulates a common pattern in which a component wants to modify
	 * a prop received from its parent. ReactLink allows the parent to pass down a
	 * value coupled with a callback that, when invoked, expresses an intent to
	 * modify that value. For example:
	 *
	 * React.createClass({
	 *   getInitialState: function() {
	 *     return {value: ''};
	 *   },
	 *   render: function() {
	 *     var valueLink = new ReactLink(this.state.value, this._handleValueChange);
	 *     return <input valueLink={valueLink} />;
	 *   },
	 *   this._handleValueChange: function(newValue) {
	 *     this.setState({value: newValue});
	 *   }
	 * });
	 *
	 * We have provided some sugary mixins to make the creation and
	 * consumption of ReactLink easier; see LinkedValueUtils and LinkedStateMixin.
	 */

	var React = __webpack_require__(12);

	/**
	 * @param {*} value current value of the link
	 * @param {function} requestChange callback to request a change
	 */
	function ReactLink(value, requestChange) {
	  this.value = value;
	  this.requestChange = requestChange;
	}

	/**
	 * Creates a PropType that enforces the ReactLink API and optionally checks the
	 * type of the value being passed inside the link. Example:
	 *
	 * MyComponent.propTypes = {
	 *   tabIndexLink: ReactLink.PropTypes.link(React.PropTypes.number)
	 * }
	 */
	function createLinkTypeChecker(linkType) {
	  var shapes = {
	    value: typeof linkType === 'undefined' ?
	      React.PropTypes.any.isRequired :
	      linkType.isRequired,
	    requestChange: React.PropTypes.func.isRequired
	  };
	  return React.PropTypes.shape(shapes);
	}

	ReactLink.PropTypes = {
	  link: createLinkTypeChecker
	};

	module.exports = ReactLink;


/***/ },
/* 206 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactStateSetters
	 */

	'use strict';

	var ReactStateSetters = {
	  /**
	   * Returns a function that calls the provided function, and uses the result
	   * of that to set the component's state.
	   *
	   * @param {ReactCompositeComponent} component
	   * @param {function} funcReturningState Returned callback uses this to
	   *                                      determine how to update state.
	   * @return {function} callback that when invoked uses funcReturningState to
	   *                    determined the object literal to setState.
	   */
	  createStateSetter: function(component, funcReturningState) {
	    return function(a, b, c, d, e, f) {
	      var partialState = funcReturningState.call(component, a, b, c, d, e, f);
	      if (partialState) {
	        component.setState(partialState);
	      }
	    };
	  },

	  /**
	   * Returns a single-argument callback that can be used to update a single
	   * key in the component's state.
	   *
	   * Note: this is memoized function, which makes it inexpensive to call.
	   *
	   * @param {ReactCompositeComponent} component
	   * @param {string} key The key in the state that you should update.
	   * @return {function} callback of 1 argument which calls setState() with
	   *                    the provided keyName and callback argument.
	   */
	  createStateKeySetter: function(component, key) {
	    // Memoize the setters.
	    var cache = component.__keySetters || (component.__keySetters = {});
	    return cache[key] || (cache[key] = createStateKeySetter(component, key));
	  }
	};

	function createStateKeySetter(component, key) {
	  // Partial state is allocated outside of the function closure so it can be
	  // reused with every call, avoiding memory allocation when this function
	  // is called.
	  var partialState = {};
	  return function stateKeySetter(value) {
	    partialState[key] = value;
	    component.setState(partialState);
	  };
	}

	ReactStateSetters.Mixin = {
	  /**
	   * Returns a function that calls the provided function, and uses the result
	   * of that to set the component's state.
	   *
	   * For example, these statements are equivalent:
	   *
	   *   this.setState({x: 1});
	   *   this.createStateSetter(function(xValue) {
	   *     return {x: xValue};
	   *   })(1);
	   *
	   * @param {function} funcReturningState Returned callback uses this to
	   *                                      determine how to update state.
	   * @return {function} callback that when invoked uses funcReturningState to
	   *                    determined the object literal to setState.
	   */
	  createStateSetter: function(funcReturningState) {
	    return ReactStateSetters.createStateSetter(this, funcReturningState);
	  },

	  /**
	   * Returns a single-argument callback that can be used to update a single
	   * key in the component's state.
	   *
	   * For example, these statements are equivalent:
	   *
	   *   this.setState({x: 1});
	   *   this.createStateKeySetter('x')(1);
	   *
	   * Note: this is memoized function, which makes it inexpensive to call.
	   *
	   * @param {string} key The key in the state that you should update.
	   * @return {function} callback of 1 argument which calls setState() with
	   *                    the provided keyName and callback argument.
	   */
	  createStateKeySetter: function(key) {
	    return ReactStateSetters.createStateKeySetter(this, key);
	  }
	};

	module.exports = ReactStateSetters;


/***/ },
/* 207 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	* @providesModule ReactComponentWithPureRenderMixin
	*/

	'use strict';

	var shallowEqual = __webpack_require__(146);

	/**
	 * If your React component's render function is "pure", e.g. it will render the
	 * same result given the same props and state, provide this Mixin for a
	 * considerable performance boost.
	 *
	 * Most React components have pure render functions.
	 *
	 * Example:
	 *
	 *   var ReactComponentWithPureRenderMixin =
	 *     require('ReactComponentWithPureRenderMixin');
	 *   React.createClass({
	 *     mixins: [ReactComponentWithPureRenderMixin],
	 *
	 *     render: function() {
	 *       return <div className={this.props.className}>foo</div>;
	 *     }
	 *   });
	 *
	 * Note: This only checks shallow equality for props and state. If these contain
	 * complex data structures this mixin may have false-negatives for deeper
	 * differences. Only mixin to components which have simple props and state, or
	 * use `forceUpdate()` when you know deep data structures have changed.
	 */
	var ReactComponentWithPureRenderMixin = {
	  shouldComponentUpdate: function(nextProps, nextState) {
	    return !shallowEqual(this.props, nextProps) ||
	           !shallowEqual(this.state, nextState);
	  }
	};

	module.exports = ReactComponentWithPureRenderMixin;


/***/ },
/* 208 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 * @providesModule ReactCSSTransitionGroup
	 */

	'use strict';

	var React = __webpack_require__(12);

	var assign = __webpack_require__(10);

	var ReactTransitionGroup = React.createFactory(
	  __webpack_require__(209)
	);
	var ReactCSSTransitionGroupChild = React.createFactory(
	  __webpack_require__(214)
	);

	var ReactCSSTransitionGroup = React.createClass({
	  displayName: 'ReactCSSTransitionGroup',

	  propTypes: {
	    transitionName: React.PropTypes.string.isRequired,
	    transitionAppear: React.PropTypes.bool,
	    transitionEnter: React.PropTypes.bool,
	    transitionLeave: React.PropTypes.bool
	  },

	  getDefaultProps: function() {
	    return {
	      transitionAppear: false,
	      transitionEnter: true,
	      transitionLeave: true
	    };
	  },

	  _wrapChild: function(child) {
	    // We need to provide this childFactory so that
	    // ReactCSSTransitionGroupChild can receive updates to name, enter, and
	    // leave while it is leaving.
	    return ReactCSSTransitionGroupChild(
	      {
	        name: this.props.transitionName,
	        appear: this.props.transitionAppear,
	        enter: this.props.transitionEnter,
	        leave: this.props.transitionLeave
	      },
	      child
	    );
	  },

	  render: function() {
	    return (
	      ReactTransitionGroup(
	        assign({}, this.props, {childFactory: this._wrapChild})
	      )
	    );
	  }
	});

	module.exports = ReactCSSTransitionGroup;


/***/ },
/* 209 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactTransitionGroup
	 */

	'use strict';

	var React = __webpack_require__(12);
	var ReactTransitionChildMapping = __webpack_require__(210);

	var assign = __webpack_require__(10);
	var cloneWithProps = __webpack_require__(211);
	var emptyFunction = __webpack_require__(25);

	var ReactTransitionGroup = React.createClass({
	  displayName: 'ReactTransitionGroup',

	  propTypes: {
	    component: React.PropTypes.any,
	    childFactory: React.PropTypes.func
	  },

	  getDefaultProps: function() {
	    return {
	      component: 'span',
	      childFactory: emptyFunction.thatReturnsArgument
	    };
	  },

	  getInitialState: function() {
	    return {
	      children: ReactTransitionChildMapping.getChildMapping(this.props.children)
	    };
	  },

	  componentWillMount: function() {
	    this.currentlyTransitioningKeys = {};
	    this.keysToEnter = [];
	    this.keysToLeave = [];
	  },

	  componentDidMount: function() {
	    var initialChildMapping = this.state.children;
	    for (var key in initialChildMapping) {
	      if (initialChildMapping[key]) {
	        this.performAppear(key);
	      }
	    }
	  },

	  componentWillReceiveProps: function(nextProps) {
	    var nextChildMapping = ReactTransitionChildMapping.getChildMapping(
	      nextProps.children
	    );
	    var prevChildMapping = this.state.children;

	    this.setState({
	      children: ReactTransitionChildMapping.mergeChildMappings(
	        prevChildMapping,
	        nextChildMapping
	      )
	    });

	    var key;

	    for (key in nextChildMapping) {
	      var hasPrev = prevChildMapping && prevChildMapping.hasOwnProperty(key);
	      if (nextChildMapping[key] && !hasPrev &&
	          !this.currentlyTransitioningKeys[key]) {
	        this.keysToEnter.push(key);
	      }
	    }

	    for (key in prevChildMapping) {
	      var hasNext = nextChildMapping && nextChildMapping.hasOwnProperty(key);
	      if (prevChildMapping[key] && !hasNext &&
	          !this.currentlyTransitioningKeys[key]) {
	        this.keysToLeave.push(key);
	      }
	    }

	    // If we want to someday check for reordering, we could do it here.
	  },

	  componentDidUpdate: function() {
	    var keysToEnter = this.keysToEnter;
	    this.keysToEnter = [];
	    keysToEnter.forEach(this.performEnter);

	    var keysToLeave = this.keysToLeave;
	    this.keysToLeave = [];
	    keysToLeave.forEach(this.performLeave);
	  },

	  performAppear: function(key) {
	    this.currentlyTransitioningKeys[key] = true;

	    var component = this.refs[key];

	    if (component.componentWillAppear) {
	      component.componentWillAppear(
	        this._handleDoneAppearing.bind(this, key)
	      );
	    } else {
	      this._handleDoneAppearing(key);
	    }
	  },

	  _handleDoneAppearing: function(key) {
	    var component = this.refs[key];
	    if (component.componentDidAppear) {
	      component.componentDidAppear();
	    }

	    delete this.currentlyTransitioningKeys[key];

	    var currentChildMapping = ReactTransitionChildMapping.getChildMapping(
	      this.props.children
	    );

	    if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {
	      // This was removed before it had fully appeared. Remove it.
	      this.performLeave(key);
	    }
	  },

	  performEnter: function(key) {
	    this.currentlyTransitioningKeys[key] = true;

	    var component = this.refs[key];

	    if (component.componentWillEnter) {
	      component.componentWillEnter(
	        this._handleDoneEntering.bind(this, key)
	      );
	    } else {
	      this._handleDoneEntering(key);
	    }
	  },

	  _handleDoneEntering: function(key) {
	    var component = this.refs[key];
	    if (component.componentDidEnter) {
	      component.componentDidEnter();
	    }

	    delete this.currentlyTransitioningKeys[key];

	    var currentChildMapping = ReactTransitionChildMapping.getChildMapping(
	      this.props.children
	    );

	    if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {
	      // This was removed before it had fully entered. Remove it.
	      this.performLeave(key);
	    }
	  },

	  performLeave: function(key) {
	    this.currentlyTransitioningKeys[key] = true;

	    var component = this.refs[key];
	    if (component.componentWillLeave) {
	      component.componentWillLeave(this._handleDoneLeaving.bind(this, key));
	    } else {
	      // Note that this is somewhat dangerous b/c it calls setState()
	      // again, effectively mutating the component before all the work
	      // is done.
	      this._handleDoneLeaving(key);
	    }
	  },

	  _handleDoneLeaving: function(key) {
	    var component = this.refs[key];

	    if (component.componentDidLeave) {
	      component.componentDidLeave();
	    }

	    delete this.currentlyTransitioningKeys[key];

	    var currentChildMapping = ReactTransitionChildMapping.getChildMapping(
	      this.props.children
	    );

	    if (currentChildMapping && currentChildMapping.hasOwnProperty(key)) {
	      // This entered again before it fully left. Add it again.
	      this.performEnter(key);
	    } else {
	      var newChildren = assign({}, this.state.children);
	      delete newChildren[key];
	      this.setState({children: newChildren});
	    }
	  },

	  render: function() {
	    // TODO: we could get rid of the need for the wrapper node
	    // by cloning a single child
	    var childrenToRender = [];
	    for (var key in this.state.children) {
	      var child = this.state.children[key];
	      if (child) {
	        // You may need to apply reactive updates to a child as it is leaving.
	        // The normal React way to do it won't work since the child will have
	        // already been removed. In case you need this behavior you can provide
	        // a childFactory function to wrap every child, even the ones that are
	        // leaving.
	        childrenToRender.push(cloneWithProps(
	          this.props.childFactory(child),
	          {ref: key, key: key}
	        ));
	      }
	    }
	    return React.createElement(
	      this.props.component,
	      this.props,
	      childrenToRender
	    );
	  }
	});

	module.exports = ReactTransitionGroup;


/***/ },
/* 210 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks static-only
	 * @providesModule ReactTransitionChildMapping
	 */

	'use strict';

	var ReactChildren = __webpack_require__(18);
	var ReactFragment = __webpack_require__(20);

	var ReactTransitionChildMapping = {
	  /**
	   * Given `this.props.children`, return an object mapping key to child. Just
	   * simple syntactic sugar around ReactChildren.map().
	   *
	   * @param {*} children `this.props.children`
	   * @return {object} Mapping of key to child
	   */
	  getChildMapping: function(children) {
	    if (!children) {
	      return children;
	    }
	    return ReactFragment.extract(ReactChildren.map(children, function(child) {
	      return child;
	    }));
	  },

	  /**
	   * When you're adding or removing children some may be added or removed in the
	   * same render pass. We want to show *both* since we want to simultaneously
	   * animate elements in and out. This function takes a previous set of keys
	   * and a new set of keys and merges them with its best guess of the correct
	   * ordering. In the future we may expose some of the utilities in
	   * ReactMultiChild to make this easy, but for now React itself does not
	   * directly have this concept of the union of prevChildren and nextChildren
	   * so we implement it here.
	   *
	   * @param {object} prev prev children as returned from
	   * `ReactTransitionChildMapping.getChildMapping()`.
	   * @param {object} next next children as returned from
	   * `ReactTransitionChildMapping.getChildMapping()`.
	   * @return {object} a key set that contains all keys in `prev` and all keys
	   * in `next` in a reasonable order.
	   */
	  mergeChildMappings: function(prev, next) {
	    prev = prev || {};
	    next = next || {};

	    function getValueForKey(key) {
	      if (next.hasOwnProperty(key)) {
	        return next[key];
	      } else {
	        return prev[key];
	      }
	    }

	    // For each key of `next`, the list of keys to insert before that key in
	    // the combined list
	    var nextKeysPending = {};

	    var pendingKeys = [];
	    for (var prevKey in prev) {
	      if (next.hasOwnProperty(prevKey)) {
	        if (pendingKeys.length) {
	          nextKeysPending[prevKey] = pendingKeys;
	          pendingKeys = [];
	        }
	      } else {
	        pendingKeys.push(prevKey);
	      }
	    }

	    var i;
	    var childMapping = {};
	    for (var nextKey in next) {
	      if (nextKeysPending.hasOwnProperty(nextKey)) {
	        for (i = 0; i < nextKeysPending[nextKey].length; i++) {
	          var pendingNextKey = nextKeysPending[nextKey][i];
	          childMapping[nextKeysPending[nextKey][i]] = getValueForKey(
	            pendingNextKey
	          );
	        }
	      }
	      childMapping[nextKey] = getValueForKey(nextKey);
	    }

	    // Finally, add the keys which didn't appear before any key in `next`
	    for (i = 0; i < pendingKeys.length; i++) {
	      childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
	    }

	    return childMapping;
	  }
	};

	module.exports = ReactTransitionChildMapping;


/***/ },
/* 211 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks static-only
	 * @providesModule cloneWithProps
	 */

	'use strict';

	var ReactElement = __webpack_require__(21);
	var ReactPropTransferer = __webpack_require__(212);

	var keyOf = __webpack_require__(48);
	var warning = __webpack_require__(24);

	var CHILDREN_PROP = keyOf({children: null});

	/**
	 * Sometimes you want to change the props of a child passed to you. Usually
	 * this is to add a CSS class.
	 *
	 * @param {ReactElement} child child element you'd like to clone
	 * @param {object} props props you'd like to modify. className and style will be
	 * merged automatically.
	 * @return {ReactElement} a clone of child with props merged in.
	 */
	function cloneWithProps(child, props) {
	  if ("production" !== process.env.NODE_ENV) {
	    ("production" !== process.env.NODE_ENV ? warning(
	      !child.ref,
	      'You are calling cloneWithProps() on a child with a ref. This is ' +
	      'dangerous because you\'re creating a new child which will not be ' +
	      'added as a ref to its parent.'
	    ) : null);
	  }

	  var newProps = ReactPropTransferer.mergeProps(props, child.props);

	  // Use `child.props.children` if it is provided.
	  if (!newProps.hasOwnProperty(CHILDREN_PROP) &&
	      child.props.hasOwnProperty(CHILDREN_PROP)) {
	    newProps.children = child.props.children;
	  }

	  // The current API doesn't retain _owner and _context, which is why this
	  // doesn't use ReactElement.cloneAndReplaceProps.
	  return ReactElement.createElement(child.type, newProps);
	}

	module.exports = cloneWithProps;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 212 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTransferer
	 */

	'use strict';

	var assign = __webpack_require__(10);
	var emptyFunction = __webpack_require__(25);
	var joinClasses = __webpack_require__(213);

	/**
	 * Creates a transfer strategy that will merge prop values using the supplied
	 * `mergeStrategy`. If a prop was previously unset, this just sets it.
	 *
	 * @param {function} mergeStrategy
	 * @return {function}
	 */
	function createTransferStrategy(mergeStrategy) {
	  return function(props, key, value) {
	    if (!props.hasOwnProperty(key)) {
	      props[key] = value;
	    } else {
	      props[key] = mergeStrategy(props[key], value);
	    }
	  };
	}

	var transferStrategyMerge = createTransferStrategy(function(a, b) {
	  // `merge` overrides the first object's (`props[key]` above) keys using the
	  // second object's (`value`) keys. An object's style's existing `propA` would
	  // get overridden. Flip the order here.
	  return assign({}, b, a);
	});

	/**
	 * Transfer strategies dictate how props are transferred by `transferPropsTo`.
	 * NOTE: if you add any more exceptions to this list you should be sure to
	 * update `cloneWithProps()` accordingly.
	 */
	var TransferStrategies = {
	  /**
	   * Never transfer `children`.
	   */
	  children: emptyFunction,
	  /**
	   * Transfer the `className` prop by merging them.
	   */
	  className: createTransferStrategy(joinClasses),
	  /**
	   * Transfer the `style` prop (which is an object) by merging them.
	   */
	  style: transferStrategyMerge
	};

	/**
	 * Mutates the first argument by transferring the properties from the second
	 * argument.
	 *
	 * @param {object} props
	 * @param {object} newProps
	 * @return {object}
	 */
	function transferInto(props, newProps) {
	  for (var thisKey in newProps) {
	    if (!newProps.hasOwnProperty(thisKey)) {
	      continue;
	    }

	    var transferStrategy = TransferStrategies[thisKey];

	    if (transferStrategy && TransferStrategies.hasOwnProperty(thisKey)) {
	      transferStrategy(props, thisKey, newProps[thisKey]);
	    } else if (!props.hasOwnProperty(thisKey)) {
	      props[thisKey] = newProps[thisKey];
	    }
	  }
	  return props;
	}

	/**
	 * ReactPropTransferer are capable of transferring props to another component
	 * using a `transferPropsTo` method.
	 *
	 * @class ReactPropTransferer
	 */
	var ReactPropTransferer = {

	  /**
	   * Merge two props objects using TransferStrategies.
	   *
	   * @param {object} oldProps original props (they take precedence)
	   * @param {object} newProps new props to merge in
	   * @return {object} a new object containing both sets of props merged.
	   */
	  mergeProps: function(oldProps, newProps) {
	    return transferInto(assign({}, oldProps), newProps);
	  }

	};

	module.exports = ReactPropTransferer;


/***/ },
/* 213 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule joinClasses
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * Combines multiple className strings into one.
	 * http://jsperf.com/joinclasses-args-vs-array
	 *
	 * @param {...?string} classes
	 * @return {string}
	 */
	function joinClasses(className/*, ... */) {
	  if (!className) {
	    className = '';
	  }
	  var nextClass;
	  var argLength = arguments.length;
	  if (argLength > 1) {
	    for (var ii = 1; ii < argLength; ii++) {
	      nextClass = arguments[ii];
	      if (nextClass) {
	        className = (className ? className + ' ' : '') + nextClass;
	      }
	    }
	  }
	  return className;
	}

	module.exports = joinClasses;


/***/ },
/* 214 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 * @providesModule ReactCSSTransitionGroupChild
	 */

	'use strict';

	var React = __webpack_require__(12);

	var CSSCore = __webpack_require__(215);
	var ReactTransitionEvents = __webpack_require__(216);

	var onlyChild = __webpack_require__(165);
	var warning = __webpack_require__(24);

	// We don't remove the element from the DOM until we receive an animationend or
	// transitionend event. If the user screws up and forgets to add an animation
	// their node will be stuck in the DOM forever, so we detect if an animation
	// does not start and if it doesn't, we just call the end listener immediately.
	var TICK = 17;
	var NO_EVENT_TIMEOUT = 5000;

	var noEventListener = null;


	if ("production" !== process.env.NODE_ENV) {
	  noEventListener = function() {
	    ("production" !== process.env.NODE_ENV ? warning(
	      false,
	      'transition(): tried to perform an animation without ' +
	      'an animationend or transitionend event after timeout (' +
	      '%sms). You should either disable this ' +
	      'transition in JS or add a CSS animation/transition.',
	      NO_EVENT_TIMEOUT
	    ) : null);
	  };
	}

	var ReactCSSTransitionGroupChild = React.createClass({
	  displayName: 'ReactCSSTransitionGroupChild',

	  transition: function(animationType, finishCallback) {
	    var node = this.getDOMNode();
	    var className = this.props.name + '-' + animationType;
	    var activeClassName = className + '-active';
	    var noEventTimeout = null;

	    var endListener = function(e) {
	      if (e && e.target !== node) {
	        return;
	      }
	      if ("production" !== process.env.NODE_ENV) {
	        clearTimeout(noEventTimeout);
	      }

	      CSSCore.removeClass(node, className);
	      CSSCore.removeClass(node, activeClassName);

	      ReactTransitionEvents.removeEndEventListener(node, endListener);

	      // Usually this optional callback is used for informing an owner of
	      // a leave animation and telling it to remove the child.
	      if (finishCallback) {
	        finishCallback();
	      }
	    };

	    ReactTransitionEvents.addEndEventListener(node, endListener);

	    CSSCore.addClass(node, className);

	    // Need to do this to actually trigger a transition.
	    this.queueClass(activeClassName);

	    if ("production" !== process.env.NODE_ENV) {
	      noEventTimeout = setTimeout(noEventListener, NO_EVENT_TIMEOUT);
	    }
	  },

	  queueClass: function(className) {
	    this.classNameQueue.push(className);

	    if (!this.timeout) {
	      this.timeout = setTimeout(this.flushClassNameQueue, TICK);
	    }
	  },

	  flushClassNameQueue: function() {
	    if (this.isMounted()) {
	      this.classNameQueue.forEach(
	        CSSCore.addClass.bind(CSSCore, this.getDOMNode())
	      );
	    }
	    this.classNameQueue.length = 0;
	    this.timeout = null;
	  },

	  componentWillMount: function() {
	    this.classNameQueue = [];
	  },

	  componentWillUnmount: function() {
	    if (this.timeout) {
	      clearTimeout(this.timeout);
	    }
	  },

	  componentWillAppear: function(done) {
	    if (this.props.appear) {
	      this.transition('appear', done);
	    } else {
	      done();
	    }
	  },

	  componentWillEnter: function(done) {
	    if (this.props.enter) {
	      this.transition('enter', done);
	    } else {
	      done();
	    }
	  },

	  componentWillLeave: function(done) {
	    if (this.props.leave) {
	      this.transition('leave', done);
	    } else {
	      done();
	    }
	  },

	  render: function() {
	    return onlyChild(this.props.children);
	  }
	});

	module.exports = ReactCSSTransitionGroupChild;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 215 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSCore
	 * @typechecks
	 */

	var invariant = __webpack_require__(17);

	/**
	 * The CSSCore module specifies the API (and implements most of the methods)
	 * that should be used when dealing with the display of elements (via their
	 * CSS classes and visibility on screen. It is an API focused on mutating the
	 * display and not reading it as no logical state should be encoded in the
	 * display of elements.
	 */

	var CSSCore = {

	  /**
	   * Adds the class passed in to the element if it doesn't already have it.
	   *
	   * @param {DOMElement} element the element to set the class on
	   * @param {string} className the CSS className
	   * @return {DOMElement} the element passed in
	   */
	  addClass: function(element, className) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      !/\s/.test(className),
	      'CSSCore.addClass takes only a single class name. "%s" contains ' +
	      'multiple classes.', className
	    ) : invariant(!/\s/.test(className)));

	    if (className) {
	      if (element.classList) {
	        element.classList.add(className);
	      } else if (!CSSCore.hasClass(element, className)) {
	        element.className = element.className + ' ' + className;
	      }
	    }
	    return element;
	  },

	  /**
	   * Removes the class passed in from the element
	   *
	   * @param {DOMElement} element the element to set the class on
	   * @param {string} className the CSS className
	   * @return {DOMElement} the element passed in
	   */
	  removeClass: function(element, className) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      !/\s/.test(className),
	      'CSSCore.removeClass takes only a single class name. "%s" contains ' +
	      'multiple classes.', className
	    ) : invariant(!/\s/.test(className)));

	    if (className) {
	      if (element.classList) {
	        element.classList.remove(className);
	      } else if (CSSCore.hasClass(element, className)) {
	        element.className = element.className
	          .replace(new RegExp('(^|\\s)' + className + '(?:\\s|$)', 'g'), '$1')
	          .replace(/\s+/g, ' ') // multiple spaces to one
	          .replace(/^\s*|\s*$/g, ''); // trim the ends
	      }
	    }
	    return element;
	  },

	  /**
	   * Helper to add or remove a class from an element based on a condition.
	   *
	   * @param {DOMElement} element the element to set the class on
	   * @param {string} className the CSS className
	   * @param {*} bool condition to whether to add or remove the class
	   * @return {DOMElement} the element passed in
	   */
	  conditionClass: function(element, className, bool) {
	    return (bool ? CSSCore.addClass : CSSCore.removeClass)(element, className);
	  },

	  /**
	   * Tests whether the element has the class specified.
	   *
	   * @param {DOMNode|DOMWindow} element the element to set the class on
	   * @param {string} className the CSS className
	   * @return {boolean} true if the element has the class, false if not
	   */
	  hasClass: function(element, className) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      !/\s/.test(className),
	      'CSS.hasClass takes only a single class name.'
	    ) : invariant(!/\s/.test(className)));
	    if (element.classList) {
	      return !!className && element.classList.contains(className);
	    }
	    return (' ' + element.className + ' ').indexOf(' ' + className + ' ') > -1;
	  }

	};

	module.exports = CSSCore;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 216 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactTransitionEvents
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(60);

	/**
	 * EVENT_NAME_MAP is used to determine which event fired when a
	 * transition/animation ends, based on the style property used to
	 * define that event.
	 */
	var EVENT_NAME_MAP = {
	  transitionend: {
	    'transition': 'transitionend',
	    'WebkitTransition': 'webkitTransitionEnd',
	    'MozTransition': 'mozTransitionEnd',
	    'OTransition': 'oTransitionEnd',
	    'msTransition': 'MSTransitionEnd'
	  },

	  animationend: {
	    'animation': 'animationend',
	    'WebkitAnimation': 'webkitAnimationEnd',
	    'MozAnimation': 'mozAnimationEnd',
	    'OAnimation': 'oAnimationEnd',
	    'msAnimation': 'MSAnimationEnd'
	  }
	};

	var endEvents = [];

	function detectEvents() {
	  var testEl = document.createElement('div');
	  var style = testEl.style;

	  // On some platforms, in particular some releases of Android 4.x,
	  // the un-prefixed "animation" and "transition" properties are defined on the
	  // style object but the events that fire will still be prefixed, so we need
	  // to check if the un-prefixed events are useable, and if not remove them
	  // from the map
	  if (!('AnimationEvent' in window)) {
	    delete EVENT_NAME_MAP.animationend.animation;
	  }

	  if (!('TransitionEvent' in window)) {
	    delete EVENT_NAME_MAP.transitionend.transition;
	  }

	  for (var baseEventName in EVENT_NAME_MAP) {
	    var baseEvents = EVENT_NAME_MAP[baseEventName];
	    for (var styleName in baseEvents) {
	      if (styleName in style) {
	        endEvents.push(baseEvents[styleName]);
	        break;
	      }
	    }
	  }
	}

	if (ExecutionEnvironment.canUseDOM) {
	  detectEvents();
	}

	// We use the raw {add|remove}EventListener() call because EventListener
	// does not know how to remove event listeners and we really should
	// clean up. Also, these events are not triggered in older browsers
	// so we should be A-OK here.

	function addEventListener(node, eventName, eventListener) {
	  node.addEventListener(eventName, eventListener, false);
	}

	function removeEventListener(node, eventName, eventListener) {
	  node.removeEventListener(eventName, eventListener, false);
	}

	var ReactTransitionEvents = {
	  addEndEventListener: function(node, eventListener) {
	    if (endEvents.length === 0) {
	      // If CSS transitions are not supported, trigger an "end animation"
	      // event immediately.
	      window.setTimeout(eventListener, 0);
	      return;
	    }
	    endEvents.forEach(function(endEvent) {
	      addEventListener(node, endEvent, eventListener);
	    });
	  },

	  removeEndEventListener: function(node, eventListener) {
	    if (endEvents.length === 0) {
	      return;
	    }
	    endEvents.forEach(function(endEvent) {
	      removeEventListener(node, endEvent, eventListener);
	    });
	  }
	};

	module.exports = ReactTransitionEvents;


/***/ },
/* 217 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule cx
	 */

	/**
	 * This function is used to mark string literals representing CSS class names
	 * so that they can be transformed statically. This allows for modularization
	 * and minification of CSS class names.
	 *
	 * In static_upstream, this function is actually implemented, but it should
	 * eventually be replaced with something more descriptive, and the transform
	 * that is used in the main stack should be ported for use elsewhere.
	 *
	 * @param string|object className to modularize, or an object of key/values.
	 *                      In the object case, the values are conditions that
	 *                      determine if the className keys should be included.
	 * @param [string ...]  Variable list of classNames in the string case.
	 * @return string       Renderable space-separated CSS className.
	 */

	'use strict';
	var warning = __webpack_require__(24);

	var warned = false;

	function cx(classNames) {
	  if ("production" !== process.env.NODE_ENV) {
	    ("production" !== process.env.NODE_ENV ? warning(
	      warned,
	      'React.addons.classSet will be deprecated in a future version. See ' +
	      'http://fb.me/react-addons-classset'
	    ) : null);
	    warned = true;
	  }

	  if (typeof classNames == 'object') {
	    return Object.keys(classNames).filter(function(className) {
	      return classNames[className];
	    }).join(' ');
	  } else {
	    return Array.prototype.join.call(arguments, ' ');
	  }
	}

	module.exports = cx;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 218 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule update
	 */

	 /* global hasOwnProperty:true */

	'use strict';

	var assign = __webpack_require__(10);
	var keyOf = __webpack_require__(48);
	var invariant = __webpack_require__(17);
	var hasOwnProperty = {}.hasOwnProperty;

	function shallowCopy(x) {
	  if (Array.isArray(x)) {
	    return x.concat();
	  } else if (x && typeof x === 'object') {
	    return assign(new x.constructor(), x);
	  } else {
	    return x;
	  }
	}

	var COMMAND_PUSH = keyOf({$push: null});
	var COMMAND_UNSHIFT = keyOf({$unshift: null});
	var COMMAND_SPLICE = keyOf({$splice: null});
	var COMMAND_SET = keyOf({$set: null});
	var COMMAND_MERGE = keyOf({$merge: null});
	var COMMAND_APPLY = keyOf({$apply: null});

	var ALL_COMMANDS_LIST = [
	  COMMAND_PUSH,
	  COMMAND_UNSHIFT,
	  COMMAND_SPLICE,
	  COMMAND_SET,
	  COMMAND_MERGE,
	  COMMAND_APPLY
	];

	var ALL_COMMANDS_SET = {};

	ALL_COMMANDS_LIST.forEach(function(command) {
	  ALL_COMMANDS_SET[command] = true;
	});

	function invariantArrayCase(value, spec, command) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    Array.isArray(value),
	    'update(): expected target of %s to be an array; got %s.',
	    command,
	    value
	  ) : invariant(Array.isArray(value)));
	  var specValue = spec[command];
	  ("production" !== process.env.NODE_ENV ? invariant(
	    Array.isArray(specValue),
	    'update(): expected spec of %s to be an array; got %s. ' +
	    'Did you forget to wrap your parameter in an array?',
	    command,
	    specValue
	  ) : invariant(Array.isArray(specValue)));
	}

	function update(value, spec) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    typeof spec === 'object',
	    'update(): You provided a key path to update() that did not contain one ' +
	    'of %s. Did you forget to include {%s: ...}?',
	    ALL_COMMANDS_LIST.join(', '),
	    COMMAND_SET
	  ) : invariant(typeof spec === 'object'));

	  if (hasOwnProperty.call(spec, COMMAND_SET)) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      Object.keys(spec).length === 1,
	      'Cannot have more than one key in an object with %s',
	      COMMAND_SET
	    ) : invariant(Object.keys(spec).length === 1));

	    return spec[COMMAND_SET];
	  }

	  var nextValue = shallowCopy(value);

	  if (hasOwnProperty.call(spec, COMMAND_MERGE)) {
	    var mergeObj = spec[COMMAND_MERGE];
	    ("production" !== process.env.NODE_ENV ? invariant(
	      mergeObj && typeof mergeObj === 'object',
	      'update(): %s expects a spec of type \'object\'; got %s',
	      COMMAND_MERGE,
	      mergeObj
	    ) : invariant(mergeObj && typeof mergeObj === 'object'));
	    ("production" !== process.env.NODE_ENV ? invariant(
	      nextValue && typeof nextValue === 'object',
	      'update(): %s expects a target of type \'object\'; got %s',
	      COMMAND_MERGE,
	      nextValue
	    ) : invariant(nextValue && typeof nextValue === 'object'));
	    assign(nextValue, spec[COMMAND_MERGE]);
	  }

	  if (hasOwnProperty.call(spec, COMMAND_PUSH)) {
	    invariantArrayCase(value, spec, COMMAND_PUSH);
	    spec[COMMAND_PUSH].forEach(function(item) {
	      nextValue.push(item);
	    });
	  }

	  if (hasOwnProperty.call(spec, COMMAND_UNSHIFT)) {
	    invariantArrayCase(value, spec, COMMAND_UNSHIFT);
	    spec[COMMAND_UNSHIFT].forEach(function(item) {
	      nextValue.unshift(item);
	    });
	  }

	  if (hasOwnProperty.call(spec, COMMAND_SPLICE)) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      Array.isArray(value),
	      'Expected %s target to be an array; got %s',
	      COMMAND_SPLICE,
	      value
	    ) : invariant(Array.isArray(value)));
	    ("production" !== process.env.NODE_ENV ? invariant(
	      Array.isArray(spec[COMMAND_SPLICE]),
	      'update(): expected spec of %s to be an array of arrays; got %s. ' +
	      'Did you forget to wrap your parameters in an array?',
	      COMMAND_SPLICE,
	      spec[COMMAND_SPLICE]
	    ) : invariant(Array.isArray(spec[COMMAND_SPLICE])));
	    spec[COMMAND_SPLICE].forEach(function(args) {
	      ("production" !== process.env.NODE_ENV ? invariant(
	        Array.isArray(args),
	        'update(): expected spec of %s to be an array of arrays; got %s. ' +
	        'Did you forget to wrap your parameters in an array?',
	        COMMAND_SPLICE,
	        spec[COMMAND_SPLICE]
	      ) : invariant(Array.isArray(args)));
	      nextValue.splice.apply(nextValue, args);
	    });
	  }

	  if (hasOwnProperty.call(spec, COMMAND_APPLY)) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      typeof spec[COMMAND_APPLY] === 'function',
	      'update(): expected spec of %s to be a function; got %s.',
	      COMMAND_APPLY,
	      spec[COMMAND_APPLY]
	    ) : invariant(typeof spec[COMMAND_APPLY] === 'function'));
	    nextValue = spec[COMMAND_APPLY](nextValue);
	  }

	  for (var k in spec) {
	    if (!(ALL_COMMANDS_SET.hasOwnProperty(k) && ALL_COMMANDS_SET[k])) {
	      nextValue[k] = update(value[k], spec[k]);
	    }
	  }

	  return nextValue;
	}

	module.exports = update;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 219 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactTestUtils
	 */

	'use strict';

	var EventConstants = __webpack_require__(15);
	var EventPluginHub = __webpack_require__(78);
	var EventPropagators = __webpack_require__(102);
	var React = __webpack_require__(12);
	var ReactElement = __webpack_require__(21);
	var ReactEmptyComponent = __webpack_require__(85);
	var ReactBrowserEventEmitter = __webpack_require__(77);
	var ReactCompositeComponent = __webpack_require__(93);
	var ReactInstanceHandles = __webpack_require__(28);
	var ReactInstanceMap = __webpack_require__(34);
	var ReactMount = __webpack_require__(76);
	var ReactUpdates = __webpack_require__(35);
	var SyntheticEvent = __webpack_require__(106);

	var assign = __webpack_require__(10);
	var emptyObject = __webpack_require__(23);

	var topLevelTypes = EventConstants.topLevelTypes;

	function Event(suffix) {}

	/**
	 * @class ReactTestUtils
	 */

	/**
	 * Todo: Support the entire DOM.scry query syntax. For now, these simple
	 * utilities will suffice for testing purposes.
	 * @lends ReactTestUtils
	 */
	var ReactTestUtils = {
	  renderIntoDocument: function(instance) {
	    var div = document.createElement('div');
	    // None of our tests actually require attaching the container to the
	    // DOM, and doing so creates a mess that we rely on test isolation to
	    // clean up, so we're going to stop honoring the name of this method
	    // (and probably rename it eventually) if no problems arise.
	    // document.documentElement.appendChild(div);
	    return React.render(instance, div);
	  },

	  isElement: function(element) {
	    return ReactElement.isValidElement(element);
	  },

	  isElementOfType: function(inst, convenienceConstructor) {
	    return (
	      ReactElement.isValidElement(inst) &&
	      inst.type === convenienceConstructor
	    );
	  },

	  isDOMComponent: function(inst) {
	    // TODO: Fix this heuristic. It's just here because composites can currently
	    // pretend to be DOM components.
	    return !!(inst && inst.tagName && inst.getDOMNode);
	  },

	  isDOMComponentElement: function(inst) {
	    return !!(inst &&
	              ReactElement.isValidElement(inst) &&
	              !!inst.tagName);
	  },

	  isCompositeComponent: function(inst) {
	    return typeof inst.render === 'function' &&
	           typeof inst.setState === 'function';
	  },

	  isCompositeComponentWithType: function(inst, type) {
	    return !!(ReactTestUtils.isCompositeComponent(inst) &&
	             (inst.constructor === type));
	  },

	  isCompositeComponentElement: function(inst) {
	    if (!ReactElement.isValidElement(inst)) {
	      return false;
	    }
	    // We check the prototype of the type that will get mounted, not the
	    // instance itself. This is a future proof way of duck typing.
	    var prototype = inst.type.prototype;
	    return (
	      typeof prototype.render === 'function' &&
	      typeof prototype.setState === 'function'
	    );
	  },

	  isCompositeComponentElementWithType: function(inst, type) {
	    return !!(ReactTestUtils.isCompositeComponentElement(inst) &&
	             (inst.constructor === type));
	  },

	  getRenderedChildOfCompositeComponent: function(inst) {
	    if (!ReactTestUtils.isCompositeComponent(inst)) {
	      return null;
	    }
	    var internalInstance = ReactInstanceMap.get(inst);
	    return internalInstance._renderedComponent.getPublicInstance();
	  },

	  findAllInRenderedTree: function(inst, test) {
	    if (!inst) {
	      return [];
	    }
	    var ret = test(inst) ? [inst] : [];
	    if (ReactTestUtils.isDOMComponent(inst)) {
	      var internalInstance = ReactInstanceMap.get(inst);
	      var renderedChildren = internalInstance
	        ._renderedComponent
	        ._renderedChildren;
	      var key;
	      for (key in renderedChildren) {
	        if (!renderedChildren.hasOwnProperty(key)) {
	          continue;
	        }
	        if (!renderedChildren[key].getPublicInstance) {
	          continue;
	        }
	        ret = ret.concat(
	          ReactTestUtils.findAllInRenderedTree(
	            renderedChildren[key].getPublicInstance(),
	            test
	          )
	        );
	      }
	    } else if (ReactTestUtils.isCompositeComponent(inst)) {
	      ret = ret.concat(
	        ReactTestUtils.findAllInRenderedTree(
	          ReactTestUtils.getRenderedChildOfCompositeComponent(inst),
	          test
	        )
	      );
	    }
	    return ret;
	  },

	  /**
	   * Finds all instance of components in the rendered tree that are DOM
	   * components with the class name matching `className`.
	   * @return an array of all the matches.
	   */
	  scryRenderedDOMComponentsWithClass: function(root, className) {
	    return ReactTestUtils.findAllInRenderedTree(root, function(inst) {
	      var instClassName = inst.props.className;
	      return ReactTestUtils.isDOMComponent(inst) && (
	        (instClassName && (' ' + instClassName + ' ').indexOf(' ' + className + ' ') !== -1)
	      );
	    });
	  },

	  /**
	   * Like scryRenderedDOMComponentsWithClass but expects there to be one result,
	   * and returns that one result, or throws exception if there is any other
	   * number of matches besides one.
	   * @return {!ReactDOMComponent} The one match.
	   */
	  findRenderedDOMComponentWithClass: function(root, className) {
	    var all =
	      ReactTestUtils.scryRenderedDOMComponentsWithClass(root, className);
	    if (all.length !== 1) {
	      throw new Error('Did not find exactly one match ' +
	        '(found: ' + all.length + ') for class:' + className
	      );
	    }
	    return all[0];
	  },


	  /**
	   * Finds all instance of components in the rendered tree that are DOM
	   * components with the tag name matching `tagName`.
	   * @return an array of all the matches.
	   */
	  scryRenderedDOMComponentsWithTag: function(root, tagName) {
	    return ReactTestUtils.findAllInRenderedTree(root, function(inst) {
	      return ReactTestUtils.isDOMComponent(inst) &&
	            inst.tagName === tagName.toUpperCase();
	    });
	  },

	  /**
	   * Like scryRenderedDOMComponentsWithTag but expects there to be one result,
	   * and returns that one result, or throws exception if there is any other
	   * number of matches besides one.
	   * @return {!ReactDOMComponent} The one match.
	   */
	  findRenderedDOMComponentWithTag: function(root, tagName) {
	    var all = ReactTestUtils.scryRenderedDOMComponentsWithTag(root, tagName);
	    if (all.length !== 1) {
	      throw new Error('Did not find exactly one match for tag:' + tagName);
	    }
	    return all[0];
	  },


	  /**
	   * Finds all instances of components with type equal to `componentType`.
	   * @return an array of all the matches.
	   */
	  scryRenderedComponentsWithType: function(root, componentType) {
	    return ReactTestUtils.findAllInRenderedTree(root, function(inst) {
	      return ReactTestUtils.isCompositeComponentWithType(
	        inst,
	        componentType
	      );
	    });
	  },

	  /**
	   * Same as `scryRenderedComponentsWithType` but expects there to be one result
	   * and returns that one result, or throws exception if there is any other
	   * number of matches besides one.
	   * @return {!ReactComponent} The one match.
	   */
	  findRenderedComponentWithType: function(root, componentType) {
	    var all = ReactTestUtils.scryRenderedComponentsWithType(
	      root,
	      componentType
	    );
	    if (all.length !== 1) {
	      throw new Error(
	        'Did not find exactly one match for componentType:' + componentType
	      );
	    }
	    return all[0];
	  },

	  /**
	   * Pass a mocked component module to this method to augment it with
	   * useful methods that allow it to be used as a dummy React component.
	   * Instead of rendering as usual, the component will become a simple
	   * <div> containing any provided children.
	   *
	   * @param {object} module the mock function object exported from a
	   *                        module that defines the component to be mocked
	   * @param {?string} mockTagName optional dummy root tag name to return
	   *                              from render method (overrides
	   *                              module.mockTagName if provided)
	   * @return {object} the ReactTestUtils object (for chaining)
	   */
	  mockComponent: function(module, mockTagName) {
	    mockTagName = mockTagName || module.mockTagName || "div";

	    module.prototype.render.mockImplementation(function() {
	      return React.createElement(
	        mockTagName,
	        null,
	        this.props.children
	      );
	    });

	    return this;
	  },

	  /**
	   * Simulates a top level event being dispatched from a raw event that occured
	   * on an `Element` node.
	   * @param topLevelType {Object} A type from `EventConstants.topLevelTypes`
	   * @param {!Element} node The dom to simulate an event occurring on.
	   * @param {?Event} fakeNativeEvent Fake native event to use in SyntheticEvent.
	   */
	  simulateNativeEventOnNode: function(topLevelType, node, fakeNativeEvent) {
	    fakeNativeEvent.target = node;
	    ReactBrowserEventEmitter.ReactEventListener.dispatchEvent(
	      topLevelType,
	      fakeNativeEvent
	    );
	  },

	  /**
	   * Simulates a top level event being dispatched from a raw event that occured
	   * on the `ReactDOMComponent` `comp`.
	   * @param topLevelType {Object} A type from `EventConstants.topLevelTypes`.
	   * @param comp {!ReactDOMComponent}
	   * @param {?Event} fakeNativeEvent Fake native event to use in SyntheticEvent.
	   */
	  simulateNativeEventOnDOMComponent: function(
	      topLevelType,
	      comp,
	      fakeNativeEvent) {
	    ReactTestUtils.simulateNativeEventOnNode(
	      topLevelType,
	      comp.getDOMNode(),
	      fakeNativeEvent
	    );
	  },

	  nativeTouchData: function(x, y) {
	    return {
	      touches: [
	        {pageX: x, pageY: y}
	      ]
	    };
	  },

	  createRenderer: function() {
	    return new ReactShallowRenderer();
	  },

	  Simulate: null,
	  SimulateNative: {}
	};

	/**
	 * @class ReactShallowRenderer
	 */
	var ReactShallowRenderer = function() {
	  this._instance = null;
	};

	ReactShallowRenderer.prototype.getRenderOutput = function() {
	  return (
	    (this._instance && this._instance._renderedComponent &&
	     this._instance._renderedComponent._renderedOutput)
	    || null
	  );
	};

	var NoopInternalComponent = function(element) {
	  this._renderedOutput = element;
	  this._currentElement = element === null || element === false ?
	    ReactEmptyComponent.emptyElement :
	    element;
	};

	NoopInternalComponent.prototype = {

	  mountComponent: function() {
	  },

	  receiveComponent: function(element) {
	    this._renderedOutput = element;
	    this._currentElement = element === null || element === false ?
	      ReactEmptyComponent.emptyElement :
	      element;
	  },

	  unmountComponent: function() {
	  }

	};

	var ShallowComponentWrapper = function() { };
	assign(
	  ShallowComponentWrapper.prototype,
	  ReactCompositeComponent.Mixin, {
	    _instantiateReactComponent: function(element) {
	      return new NoopInternalComponent(element);
	    },
	    _replaceNodeWithMarkupByID: function() {},
	    _renderValidatedComponent:
	      ReactCompositeComponent.Mixin.
	        _renderValidatedComponentWithoutOwnerOrContext
	  }
	);

	ReactShallowRenderer.prototype.render = function(element, context) {
	  if (!context) {
	    context = emptyObject;
	  }
	  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled();
	  this._render(element, transaction, context);
	  ReactUpdates.ReactReconcileTransaction.release(transaction);
	};

	ReactShallowRenderer.prototype.unmount = function() {
	  if (this._instance) {
	    this._instance.unmountComponent();
	  }
	};

	ReactShallowRenderer.prototype._render = function(element, transaction, context) {
	  if (!this._instance) {
	    var rootID = ReactInstanceHandles.createReactRootID();
	    var instance = new ShallowComponentWrapper(element.type);
	    instance.construct(element);

	    instance.mountComponent(rootID, transaction, context);

	    this._instance = instance;
	  } else {
	    this._instance.receiveComponent(element, transaction, context);
	  }
	};

	/**
	 * Exports:
	 *
	 * - `ReactTestUtils.Simulate.click(Element/ReactDOMComponent)`
	 * - `ReactTestUtils.Simulate.mouseMove(Element/ReactDOMComponent)`
	 * - `ReactTestUtils.Simulate.change(Element/ReactDOMComponent)`
	 * - ... (All keys from event plugin `eventTypes` objects)
	 */
	function makeSimulator(eventType) {
	  return function(domComponentOrNode, eventData) {
	    var node;
	    if (ReactTestUtils.isDOMComponent(domComponentOrNode)) {
	      node = domComponentOrNode.getDOMNode();
	    } else if (domComponentOrNode.tagName) {
	      node = domComponentOrNode;
	    }

	    var fakeNativeEvent = new Event();
	    fakeNativeEvent.target = node;
	    // We don't use SyntheticEvent.getPooled in order to not have to worry about
	    // properly destroying any properties assigned from `eventData` upon release
	    var event = new SyntheticEvent(
	      ReactBrowserEventEmitter.eventNameDispatchConfigs[eventType],
	      ReactMount.getID(node),
	      fakeNativeEvent
	    );
	    assign(event, eventData);
	    EventPropagators.accumulateTwoPhaseDispatches(event);

	    ReactUpdates.batchedUpdates(function() {
	      EventPluginHub.enqueueEvents(event);
	      EventPluginHub.processEventQueue();
	    });
	  };
	}

	function buildSimulators() {
	  ReactTestUtils.Simulate = {};

	  var eventType;
	  for (eventType in ReactBrowserEventEmitter.eventNameDispatchConfigs) {
	    /**
	     * @param {!Element || ReactDOMComponent} domComponentOrNode
	     * @param {?object} eventData Fake event data to use in SyntheticEvent.
	     */
	    ReactTestUtils.Simulate[eventType] = makeSimulator(eventType);
	  }
	}

	// Rebuild ReactTestUtils.Simulate whenever event plugins are injected
	var oldInjectEventPluginOrder = EventPluginHub.injection.injectEventPluginOrder;
	EventPluginHub.injection.injectEventPluginOrder = function() {
	  oldInjectEventPluginOrder.apply(this, arguments);
	  buildSimulators();
	};
	var oldInjectEventPlugins = EventPluginHub.injection.injectEventPluginsByName;
	EventPluginHub.injection.injectEventPluginsByName = function() {
	  oldInjectEventPlugins.apply(this, arguments);
	  buildSimulators();
	};

	buildSimulators();

	/**
	 * Exports:
	 *
	 * - `ReactTestUtils.SimulateNative.click(Element/ReactDOMComponent)`
	 * - `ReactTestUtils.SimulateNative.mouseMove(Element/ReactDOMComponent)`
	 * - `ReactTestUtils.SimulateNative.mouseIn/ReactDOMComponent)`
	 * - `ReactTestUtils.SimulateNative.mouseOut(Element/ReactDOMComponent)`
	 * - ... (All keys from `EventConstants.topLevelTypes`)
	 *
	 * Note: Top level event types are a subset of the entire set of handler types
	 * (which include a broader set of "synthetic" events). For example, onDragDone
	 * is a synthetic event. Except when testing an event plugin or React's event
	 * handling code specifically, you probably want to use ReactTestUtils.Simulate
	 * to dispatch synthetic events.
	 */

	function makeNativeSimulator(eventType) {
	  return function(domComponentOrNode, nativeEventData) {
	    var fakeNativeEvent = new Event(eventType);
	    assign(fakeNativeEvent, nativeEventData);
	    if (ReactTestUtils.isDOMComponent(domComponentOrNode)) {
	      ReactTestUtils.simulateNativeEventOnDOMComponent(
	        eventType,
	        domComponentOrNode,
	        fakeNativeEvent
	      );
	    } else if (!!domComponentOrNode.tagName) {
	      // Will allow on actual dom nodes.
	      ReactTestUtils.simulateNativeEventOnNode(
	        eventType,
	        domComponentOrNode,
	        fakeNativeEvent
	      );
	    }
	  };
	}

	var eventType;
	for (eventType in topLevelTypes) {
	  // Event type is stored as 'topClick' - we transform that to 'click'
	  var convenienceName = eventType.indexOf('top') === 0 ?
	    eventType.charAt(3).toLowerCase() + eventType.substr(4) : eventType;
	  /**
	   * @param {!Element || ReactDOMComponent} domComponentOrNode
	   * @param {?Event} nativeEventData Fake native event to use in SyntheticEvent.
	   */
	  ReactTestUtils.SimulateNative[convenienceName] =
	    makeNativeSimulator(eventType);
	}

	module.exports = ReactTestUtils;


/***/ },
/* 220 */
/***/ function(module, exports) {

	(function() {
	  'use strict';

	  if (self.fetch) {
	    return
	  }

	  function normalizeName(name) {
	    if (typeof name !== 'string') {
	      name = name.toString();
	    }
	    if (/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(name)) {
	      throw new TypeError('Invalid character in header field name')
	    }
	    return name.toLowerCase()
	  }

	  function normalizeValue(value) {
	    if (typeof value !== 'string') {
	      value = value.toString();
	    }
	    return value
	  }

	  function Headers(headers) {
	    this.map = {}

	    if (headers instanceof Headers) {
	      headers.forEach(function(value, name) {
	        this.append(name, value)
	      }, this)

	    } else if (headers) {
	      Object.getOwnPropertyNames(headers).forEach(function(name) {
	        this.append(name, headers[name])
	      }, this)
	    }
	  }

	  Headers.prototype.append = function(name, value) {
	    name = normalizeName(name)
	    value = normalizeValue(value)
	    var list = this.map[name]
	    if (!list) {
	      list = []
	      this.map[name] = list
	    }
	    list.push(value)
	  }

	  Headers.prototype['delete'] = function(name) {
	    delete this.map[normalizeName(name)]
	  }

	  Headers.prototype.get = function(name) {
	    var values = this.map[normalizeName(name)]
	    return values ? values[0] : null
	  }

	  Headers.prototype.getAll = function(name) {
	    return this.map[normalizeName(name)] || []
	  }

	  Headers.prototype.has = function(name) {
	    return this.map.hasOwnProperty(normalizeName(name))
	  }

	  Headers.prototype.set = function(name, value) {
	    this.map[normalizeName(name)] = [normalizeValue(value)]
	  }

	  Headers.prototype.forEach = function(callback, thisArg) {
	    Object.getOwnPropertyNames(this.map).forEach(function(name) {
	      this.map[name].forEach(function(value) {
	        callback.call(thisArg, value, name, this)
	      }, this)
	    }, this)
	  }

	  function consumed(body) {
	    if (body.bodyUsed) {
	      return Promise.reject(new TypeError('Already read'))
	    }
	    body.bodyUsed = true
	  }

	  function fileReaderReady(reader) {
	    return new Promise(function(resolve, reject) {
	      reader.onload = function() {
	        resolve(reader.result)
	      }
	      reader.onerror = function() {
	        reject(reader.error)
	      }
	    })
	  }

	  function readBlobAsArrayBuffer(blob) {
	    var reader = new FileReader()
	    reader.readAsArrayBuffer(blob)
	    return fileReaderReady(reader)
	  }

	  function readBlobAsText(blob) {
	    var reader = new FileReader()
	    reader.readAsText(blob)
	    return fileReaderReady(reader)
	  }

	  var support = {
	    blob: 'FileReader' in self && 'Blob' in self && (function() {
	      try {
	        new Blob();
	        return true
	      } catch(e) {
	        return false
	      }
	    })(),
	    formData: 'FormData' in self
	  }

	  function Body() {
	    this.bodyUsed = false


	    this._initBody = function(body) {
	      this._bodyInit = body
	      if (typeof body === 'string') {
	        this._bodyText = body
	      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
	        this._bodyBlob = body
	      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
	        this._bodyFormData = body
	      } else if (!body) {
	        this._bodyText = ''
	      } else {
	        throw new Error('unsupported BodyInit type')
	      }
	    }

	    if (support.blob) {
	      this.blob = function() {
	        var rejected = consumed(this)
	        if (rejected) {
	          return rejected
	        }

	        if (this._bodyBlob) {
	          return Promise.resolve(this._bodyBlob)
	        } else if (this._bodyFormData) {
	          throw new Error('could not read FormData body as blob')
	        } else {
	          return Promise.resolve(new Blob([this._bodyText]))
	        }
	      }

	      this.arrayBuffer = function() {
	        return this.blob().then(readBlobAsArrayBuffer)
	      }

	      this.text = function() {
	        var rejected = consumed(this)
	        if (rejected) {
	          return rejected
	        }

	        if (this._bodyBlob) {
	          return readBlobAsText(this._bodyBlob)
	        } else if (this._bodyFormData) {
	          throw new Error('could not read FormData body as text')
	        } else {
	          return Promise.resolve(this._bodyText)
	        }
	      }
	    } else {
	      this.text = function() {
	        var rejected = consumed(this)
	        return rejected ? rejected : Promise.resolve(this._bodyText)
	      }
	    }

	    if (support.formData) {
	      this.formData = function() {
	        return this.text().then(decode)
	      }
	    }

	    this.json = function() {
	      return this.text().then(JSON.parse)
	    }

	    return this
	  }

	  // HTTP methods whose capitalization should be normalized
	  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']

	  function normalizeMethod(method) {
	    var upcased = method.toUpperCase()
	    return (methods.indexOf(upcased) > -1) ? upcased : method
	  }

	  function Request(url, options) {
	    options = options || {}
	    this.url = url

	    this.credentials = options.credentials || 'omit'
	    this.headers = new Headers(options.headers)
	    this.method = normalizeMethod(options.method || 'GET')
	    this.mode = options.mode || null
	    this.referrer = null

	    if ((this.method === 'GET' || this.method === 'HEAD') && options.body) {
	      throw new TypeError('Body not allowed for GET or HEAD requests')
	    }
	    this._initBody(options.body)
	  }

	  function decode(body) {
	    var form = new FormData()
	    body.trim().split('&').forEach(function(bytes) {
	      if (bytes) {
	        var split = bytes.split('=')
	        var name = split.shift().replace(/\+/g, ' ')
	        var value = split.join('=').replace(/\+/g, ' ')
	        form.append(decodeURIComponent(name), decodeURIComponent(value))
	      }
	    })
	    return form
	  }

	  function headers(xhr) {
	    var head = new Headers()
	    var pairs = xhr.getAllResponseHeaders().trim().split('\n')
	    pairs.forEach(function(header) {
	      var split = header.trim().split(':')
	      var key = split.shift().trim()
	      var value = split.join(':').trim()
	      head.append(key, value)
	    })
	    return head
	  }

	  Body.call(Request.prototype)

	  function Response(bodyInit, options) {
	    if (!options) {
	      options = {}
	    }

	    this._initBody(bodyInit)
	    this.type = 'default'
	    this.url = null
	    this.status = options.status
	    this.ok = this.status >= 200 && this.status < 300
	    this.statusText = options.statusText
	    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)
	    this.url = options.url || ''
	  }

	  Body.call(Response.prototype)

	  self.Headers = Headers;
	  self.Request = Request;
	  self.Response = Response;

	  self.fetch = function(input, init) {
	    // TODO: Request constructor should accept input, init
	    var request
	    if (Request.prototype.isPrototypeOf(input) && !init) {
	      request = input
	    } else {
	      request = new Request(input, init)
	    }

	    return new Promise(function(resolve, reject) {
	      var xhr = new XMLHttpRequest()

	      function responseURL() {
	        if ('responseURL' in xhr) {
	          return xhr.responseURL
	        }

	        // Avoid security warnings on getResponseHeader when not allowed by CORS
	        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {
	          return xhr.getResponseHeader('X-Request-URL')
	        }

	        return;
	      }

	      xhr.onload = function() {
	        var status = (xhr.status === 1223) ? 204 : xhr.status
	        if (status < 100 || status > 599) {
	          reject(new TypeError('Network request failed'))
	          return
	        }
	        var options = {
	          status: status,
	          statusText: xhr.statusText,
	          headers: headers(xhr),
	          url: responseURL()
	        }
	        var body = 'response' in xhr ? xhr.response : xhr.responseText;
	        resolve(new Response(body, options))
	      }

	      xhr.onerror = function() {
	        reject(new TypeError('Network request failed'))
	      }

	      xhr.open(request.method, request.url, true)

	      if (request.credentials === 'include') {
	        xhr.withCredentials = true
	      }

	      if ('responseType' in xhr && support.blob) {
	        xhr.responseType = 'blob'
	      }

	      request.headers.forEach(function(value, name) {
	        xhr.setRequestHeader(name, value)
	      })

	      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)
	    })
	  }
	  self.fetch.polyfill = true
	})();


/***/ },
/* 221 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(202);
	var Router = __webpack_require__(7);
	var RouteHandler = Router.RouteHandler;

	var Login = (function (_React$Component) {
	    _inherits(Login, _React$Component);

	    function Login(props) {
	        _classCallCheck(this, Login);

	        _get(Object.getPrototypeOf(Login.prototype), 'constructor', this).call(this, props);

	        this.render = function () {
	            return React.createElement(
	                'div',
	                { className: 'page-login' },
	                React.createElement(RouteHandler, null)
	            );
	        };
	    }

	    return Login;
	})(React.Component);

	exports.Login = Login;

/***/ },
/* 222 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _api = __webpack_require__(1);

	var _utils = __webpack_require__(2);

	var _ClassesLogger = __webpack_require__(3);

	var _Dispatcher = __webpack_require__(4);

	var _Validation = __webpack_require__(223);

	var _ControlsFormsFormGroup = __webpack_require__(224);

	var _ControlsFormsInputSimple = __webpack_require__(225);

	var _ControlsFormsButtonSimple = __webpack_require__(226);

	var _ControlsFormsInputCheckbox = __webpack_require__(227);

	var _LoginNotify = __webpack_require__(228);

	var React = __webpack_require__(202);

	var LoginForm = (function (_React$Component) {
	    _inherits(LoginForm, _React$Component);

	    function LoginForm(props) {
	        var _this = this;

	        _classCallCheck(this, LoginForm);

	        _get(Object.getPrototypeOf(LoginForm.prototype), 'constructor', this).call(this, props);
	        this.state = {
	            isValidated: false,
	            sms: false,
	            sms_msg: null,
	            err_msg: null
	        };
	        this.validateFields = {
	            fields: [{ name: "email", value: true }, { name: "pass", value: true }]
	        };

	        this.validateForm = function () {
	            _this.validateFields.fields.forEach(function (field) {
	                if (_this.state[field.name] && _this.state[field.name].length) {
	                    field.value = true;
	                } else {
	                    field.value = false;
	                }
	            });
	            _this.setState({ isValidated: _this.isValidated() });
	        };

	        this.isValidated = function () {
	            return _this.validateFields.fields.every(function (field) {
	                return field.value === true;
	            });
	        };

	        this.onChangeHandler = function (obj) {
	            _this.setState(obj);
	            _this.validateForm();
	        };

	        this.onClick = function () {
	            var params = { email: _this.state.email, passw: _this.state.pass };
	            if (_this.state.smscode) params['smscode'] = _this.state.smscode;

	            _this.xr = new _api.xreq('user_login', params, function (xr) {

	                if (xr.res.err) {
	                    _ClassesLogger.logger.log(_this, 'loginRequest', xr.res.msg, 'error');

	                    if (xr.res.msg == "invalid email or password") {
	                        _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, { type: 'error', message: 'Неверная электронная почта или пароль' });
	                        _this.setState({ pass: null, isValidated: false });
	                    } else {
	                        _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, { type: 'error', message: 'Неверный код из SMS' });
	                        _this.setState({ smscode: null, isValidated: false });
	                    }

	                    return;
	                }

	                if (xr.res.phone && xr.res.cooldown || xr.res.cooldown) {
	                    _this.setState({ isValidated: false, sms: true, cooldown: xr.res.cooldown });
	                    _this.validateFields.fields.push({ name: "smscode", value: true });
	                    return;
	                }

	                if (xr.res.user_id && xr.res.sid) {
	                    var expires = _this.state.remember ? 60 * 60 * 24 * 365 : 0;

	                    _api.Api.sid = xr.res.sid;
	                    _utils.Utils.cookieSet('sid', _api.Api.sid, { expires: expires });

	                    _api.Api.user_id = xr.res.user_id;
	                    _utils.Utils.cookieSet('user_id', _api.Api.user_id, { expires: expires });

	                    window.location.hash = "dashboard";
	                    return;
	                }
	            });
	        };

	        this.onKeyUp = function (e) {
	            if (e.keyCode === 13) _this.onClick();
	        };

	        this.authDialog = function (uri) {
	            var w = 500,
	                h = 350,
	                t = window.screen.height / 2 - h / 2 - 100,
	                l = window.screen.width / 2 - w / 2;

	            window.open(uri, 'SignIn', 'width=' + w + ',height=' + h + ',left=' + l + ',top=' + t);
	        };

	        this.authFacebook = function () {
	            _utils.Utils.cookieSet('remember', true, { expires: 0 });
	            var uri = 'https://www.facebook.com/dialog/oauth';
	            var params = ['client_id=1593971670882893', 'redirect_uri=http://localhost:8081/?provider=facebook' + '%23' + '/_=_', 'response_type=code', 'display=popup', 'scope=email'];
	            _this.authDialog(uri + '?' + params.join('&'));
	        };

	        this.authLinkedin = function () {
	            _utils.Utils.cookieSet('remember', true, { expires: 0 });
	            var uri = 'https://www.linkedin.com/uas/oauth2/authorization';
	            var params = ['response_type=code', 'client_id=7535z2f08cvusf', 'redirect_uri=http://localhost:8081?provider=linkedin', // не дает использовать #
	            'state=' + Math.random(), 'scope=r_basicprofile%20r_emailaddress'];
	            _this.authDialog(uri + '?' + params.join('&'));
	        };

	        this.render = function () {
	            var notify = undefined,
	                sms_group = _this.state.sms ? React.createElement(
	                _ControlsFormsFormGroup.FormGroup,
	                { name: 'Код из SMS', from: 'smscode' },
	                React.createElement(_ControlsFormsInputSimple.InputSimple, { name: 'smscode', value: _this.state.smscode, placeholder: 'Введите код', onChange: _this.onChangeHandler, validation: { typing: _Validation.Validation.typingFloat } })
	            ) : null;

	            if (_this.state.cooldown) {
	                notify = React.createElement(_LoginNotify.LoginNotifySms, { cooldown: _this.state.cooldown });
	            }

	            return React.createElement(
	                'div',
	                { className: 'login-box animated fadeInUp' },
	                React.createElement(
	                    'div',
	                    { className: 'login-box__header' },
	                    React.createElement(
	                        'h1',
	                        null,
	                        'Авторизация'
	                    )
	                ),
	                notify,
	                React.createElement(
	                    'div',
	                    { className: 'login-box__form' },
	                    React.createElement(
	                        _ControlsFormsFormGroup.FormGroup,
	                        { name: 'E-mail', from: 'email' },
	                        React.createElement(_ControlsFormsInputSimple.InputSimple, { value: _this.state.email, name: 'email', placeholder: 'Введите ваш email', onKeyUp: _this.onKeyUp, onChange: _this.onChangeHandler, disabled: _this.state.sms, autoFocus: true })
	                    ),
	                    React.createElement(
	                        _ControlsFormsFormGroup.FormGroup,
	                        { name: 'Пароль', from: 'pass' },
	                        React.createElement(_ControlsFormsInputSimple.InputSimple, { value: _this.state.pass, className: 'login-box__pass', name: 'pass', type: 'password', placeholder: 'Введите ваш пароль', onKeyUp: _this.onKeyUp, onChange: _this.onChangeHandler, disabled: _this.state.sms }),
	                        React.createElement(
	                            'a',
	                            { href: '#/login/forgot', className: 'login-box__forgot-pass' },
	                            'Напомнить?'
	                        )
	                    ),
	                    sms_group,
	                    React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.onClick, caption: 'Войти', type: 'success', disabled: !_this.state.isValidated })
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'login-box__social btn-group' },
	                    React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { caption: 'Facebook', className: 'btn-social-facebook', onClick: _this.authFacebook }),
	                    React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { caption: 'Linkedin', className: 'btn-social-linkedin', onClick: _this.authLinkedin })
	                )
	            );
	        };
	    }

	    return LoginForm;
	})(React.Component);

	exports.LoginForm = LoginForm;

/***/ },
/* 223 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _api = __webpack_require__(1);

	var _utils = __webpack_require__(2);

	var _ClassesLogger = __webpack_require__(3);

	var Validation = {

	    // валидатор ввода целочисленного значения
	    // для применение нужно указать эиу ф-ию свойством onKeyPress у поля ввода
	    // допускает ввод символов [0123456789-]
	    // знак "-" автоматически втавляется/убирается в начало значения
	    typingInt: function typingInt(e) {

	        var ev = e || window.event,
	            et = ev.target,
	            sPos = et.selectionStart,
	            ePos = et.selectionEnd,
	            ch = String.fromCharCode(e.keyCode || e.which); // строковое выржение символа

	        function abort() {
	            ev.returnValue = false;
	            if (ev.preventDefault) ev.preventDefault();
	        }

	        function resel() {
	            et.setSelectionRange(sPos + 1, sPos + 1);
	        }

	        if (!/[0-9-]/.test(ch)) {
	            abort();
	            return;
	        }

	        if (ch == '-') {
	            abort();
	            et.value = /-/.test(et.value) ? et.value.substr(1) : '-' + et.value;
	            resel();
	            return;
	        }
	    },

	    // валидатор ввода числового значения с плавающей точкой
	    // для применение нужно указать эиу ф-ию свойством onKeyPress у поля ввода
	    // допускает ввод символов [0123456789.-]
	    // знак "-" автоматически втавляется/убирается в начало значения
	    typingFloat: function typingFloat(e) {

	        var ev = e || window.event,
	            et = ev.target,
	            sPos = et.selectionStart,
	            ePos = et.selectionEnd,
	            ch = String.fromCharCode(e.keyCode || e.which); // строковое выржение символа

	        function abort() {
	            ev.returnValue = false;
	            if (ev.preventDefault) ev.preventDefault();
	        }

	        function resel() {
	            et.setSelectionRange(sPos + 1, sPos + 1);
	        }

	        if (!/[0-9-.]/.test(ch)) {
	            abort();
	            return;
	        }

	        switch (ch) {
	            case '-':
	                // перехватываем и исправляем ввод "минуса"
	                abort();
	                et.value = /-/.test(et.value) ? et.value.substr(1) : '-' + et.value;
	                resel();
	                return;
	            case '.':
	                // перехватываем и исправляем ввод "точки"
	                abort();
	                var v = et.value.replace('.', ' ');
	                v = v.substr(0, sPos) + '.' + v.substr(ePos);
	                et.value = v.replace(' ', '');
	                resel();
	                return;
	        }
	    },

	    // валидатор ввода email
	    // для применение нужно указать эиу ф-ию свойством onKeyPress у поля ввода
	    // допускает ввод символов [@abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!#$%&'*+-/=?^_`{|}~.]
	    typingEmail: function typingEmail(e) {

	        var ev = e || window.event,
	            ch = String.fromCharCode(e.keyCode || e.which); // строковое выржение символа

	        function abort() {
	            ev.returnValue = false;
	            if (ev.preventDefault) ev.preventDefault();
	        }

	        if (String("@abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!#$%&'*+-/=?^_`{|}~.").indexOf(ch) == -1) {
	            abort();
	            return;
	        }
	    },

	    // валидатор ввода phone
	    // для применение нужно указать эиу ф-ию свойством onKeyPress у поля ввода
	    // допускает ввод символов [()0123456789+- ]
	    typingPhone: function typingPhone(e) {

	        var ev = e || window.event,
	            ch = String.fromCharCode(e.keyCode || e.which); // строковое выржение символа

	        function abort() {
	            ev.returnValue = false;
	            if (ev.preventDefault) ev.preventDefault();
	        }

	        if (String("()0123456789+- ").indexOf(ch) == -1) {
	            abort();
	            return;
	        }
	    },

	    // валидатор ввода гос. номера автомобиля по маске х000хх00[0]
	    // [А-Яа-я]\d{3}[А-Яа-я]{2}\d{2,3}
	    typingCarNum: function typingCarNum(e) {

	        if (!e) e = window.event;

	        var eTarget = e.target;
	        var position = _utils.Utils.getCaretPosition(eTarget);
	        var ch = String.fromCharCode(e.keyCode || e.which); // get symbol
	        var value = e.target.value + ch;

	        function abort() {
	            e.returnValue = false;
	            if (e.preventDefault) e.preventDefault();
	        }

	        function resel() {
	            eTarget.setSelectionRange(position + 1, position + 1);
	        }

	        if (!position || position >= 4 && position <= 5) {
	            if (!/[А-Яа-я]/.test(ch)) {
	                abort();
	                return;
	            }
	            // else {
	            //     eTarget.value += '-';
	            //     //resel()
	            // }
	        } else if (position >= 1 && position <= 3 || position >= 6 && position <= 8) {
	                if (!/[0-9]/.test(ch)) {
	                    abort();
	                    return;
	                }
	            } else if (position >= 9) {
	                abort();
	                return;
	            }
	    },

	    // валидатор ввода гос. номера прицепа по маске хx0000000[0]
	    // [А-Яа-я]{2}\d{6,7}
	    typingTrailerNum: function typingTrailerNum(e) {

	        if (!e) e = window.event;

	        var eTarget = e.target;
	        var position = _utils.Utils.getCaretPosition(eTarget);
	        var ch = String.fromCharCode(e.keyCode || e.which); // get symbol
	        var value = e.target.value + ch;

	        function abort() {
	            e.returnValue = false;
	            if (e.preventDefault) e.preventDefault();
	        }

	        function resel() {
	            eTarget.setSelectionRange(position + 1, position + 1);
	        }

	        if (!position || position <= 1) {
	            if (!/[А-Яа-я]/.test(ch)) {
	                abort();
	                return;
	            }
	        } else if (position >= 2 && position <= 8) {
	            if (!/[0-9]/.test(ch)) {
	                abort();
	                return;
	            }
	        } else if (position >= 9) {
	            abort();
	            return;
	        }
	    },

	    // валидатор значения через "cm":"check_unique"
	    // для применения нужно передать
	    //  event - событие из onChange
	    //  caller - объект-контейтер поля ввода (для досупа к .props.validation и хранению промежуточных данных)
	    //  callback - ф-ия которая будет вызвана при изменених состояния проверки
	    //   параметр callback - это объект с ключами
	    //    state - состояние проверки
	    //     idle - ничего не происходит
	    //     pending - проверка в процессее
	    //     error - ошибка при проверке
	    //     unique - значене проверено и уникально
	    //     used - значене проверено и оно уже используется
	    //    msg - пояснение
	    changingUnique: function changingUnique(event, caller, callback) {
	        // эта дичь тут из-за тупости фетча, который нельзя отменить
	        caller.valueForCheck = event.target.value;

	        // caller.props.validation = {uniqueType: "user_email", uniqueHolder: "150"}

	        if (!caller.valueForCheck || caller.valueForCheck == '') return callback({ state: 'idle' });

	        callback({ state: 'pending', msg: 'Проверка ...' });

	        if (caller.ti) {
	            clearTimeout(caller.ti);
	            caller.ti = null;
	        }

	        caller.ti = setTimeout(doRequest, 800);

	        function doRequest() {
	            if (caller.req) return; // есть активный зпрос, будем ждать
	            var vv = caller.valueForCheck;
	            caller.valueForCheck = null;
	            if (!vv || vv == '') return callback({ state: 'idle' });
	            caller.req = _api.Api.checkUnique(caller.props.validation.uniqueType, vv).then(function (res) {
	                caller.req = null; // убираем ссылку на активный запрос, типа его больше нет
	                if (caller.valueForCheck) return doRequest(); // есть новый запрос
	                if (res.err) return callback({ state: 'error', msg: 'Ошибка проверки: ' + res.err });
	                if (res.unique === true || res.holder_id == caller.props.validation.uniqueHolder) return callback({ state: 'unique' });
	                callback({ state: 'used', msg: 'Email занят' });
	                caller.req = null;
	            });
	        }
	    },

	    foo: 'bar'

	};

	exports.Validation = Validation;

/***/ },
/* 224 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(202);

	var FormGroup = (function (_React$Component) {
	    _inherits(FormGroup, _React$Component);

	    function FormGroup() {
	        var _this = this;

	        _classCallCheck(this, FormGroup);

	        _get(Object.getPrototypeOf(FormGroup.prototype), "constructor", this).apply(this, arguments);

	        this.render = function () {
	            return React.createElement(
	                "div",
	                { className: _this.props.className ? "form-group " + _this.props.className : "form-group" },
	                React.createElement(
	                    "label",
	                    { htmlFor: _this.props.from },
	                    _this.props.name
	                ),
	                _this.props.children
	            );
	        };
	    }

	    _createClass(FormGroup, null, [{
	        key: "propTypes",
	        value: {
	            name: React.PropTypes.string,
	            from: React.PropTypes.string
	        },
	        enumerable: true
	    }]);

	    return FormGroup;
	})(React.Component);

	exports.FormGroup = FormGroup;

/***/ },
/* 225 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(202);

	var InputSimple = (function (_React$Component) {
	    _inherits(InputSimple, _React$Component);

	    function InputSimple() {
	        var _this = this;

	        _classCallCheck(this, InputSimple);

	        _get(Object.getPrototypeOf(InputSimple.prototype), "constructor", this).apply(this, arguments);

	        this.state = {
	            defaultValue: this.props.value
	        };

	        this.onKeyUp = function (e) {
	            if (_this.props.onKeyUp) _this.props.onKeyUp(e);
	        };

	        this.keypress = function (e) {
	            // max length check
	            if (_this.props.maxLength && e.target.value.length + 1 > _this.props.maxLength) {
	                e.returnValue = false;
	                if (e.preventDefault) e.preventDefault();
	            }

	            if (!_this.props.validation || !_this.props.validation.typing) return;
	            _this.props.validation.typing(e);
	        };

	        this.change = function (e) {
	            var v = e.target.value,
	                obj = undefined;

	            if (_this.props.name) {
	                obj = {};
	                obj[_this.props.name] = v;
	            } else {
	                obj = v;
	            }

	            if (_this.props.onChange) _this.props.onChange(obj);
	        };

	        this.componentWillReceiveProps = function (newProps) {
	            _this.setState({ defaultValue: newProps.value });
	        };

	        this.render = function () {
	            return React.createElement("input", { className: _this.props.className ? "form-control " + _this.props.className : "form-control",
	                type: _this.props.type,
	                autoFocus: _this.props.autoFocus,
	                disabled: _this.props.disabled ? true : false,
	                placeholder: _this.props.placeholder,
	                onChange: _this.change,
	                onKeyUp: _this.onKeyUp,
	                onKeyPress: _this.keypress,
	                value: _this.props.value,
	                defaultValue: _this.props.defaultValue,
	                ref: "inp"
	            });
	        };
	    }

	    // return (
	    //             <input className={this.props.className ? "form-control " + this.props.className : "form-control"}
	    //                    type={this.props.type}
	    //                    autoFocus={this.props.autoFocus}
	    //                    disabled={this.props.disabled ? "disabled" : null}
	    //                    placeholder={this.props.placeholder}
	    //                    onChange={this.change}
	    //                    onKeyUp={this.onKeyUp}
	    //                    onKeyPress={this.keypress}
	    //                    value={this.props.value}
	    //                 />
	    //         );

	    _createClass(InputSimple, null, [{
	        key: "propTypes",
	        value: {
	            onChange: React.PropTypes.func.isRequired,
	            onKeyUp: React.PropTypes.func,
	            keypress: React.PropTypes.func,
	            name: React.PropTypes.string,
	            placeholder: React.PropTypes.string,
	            autoFocus: React.PropTypes.bool,
	            disabled: React.PropTypes.any,
	            type: React.PropTypes.string,
	            className: React.PropTypes.string,
	            value: React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.number])
	        },
	        enumerable: true
	    }, {
	        key: "defaultProps",
	        value: {
	            disabled: false,
	            type: "text"
	        },
	        enumerable: true
	    }]);

	    return InputSimple;
	})(React.Component);

	exports.InputSimple = InputSimple;

/***/ },
/* 226 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(202);

	var ButtonSimple = (function (_React$Component) {
		_inherits(ButtonSimple, _React$Component);

		function ButtonSimple() {
			var _this = this;

			_classCallCheck(this, ButtonSimple);

			_get(Object.getPrototypeOf(ButtonSimple.prototype), "constructor", this).apply(this, arguments);

			this.onClick = function () {
				if (_this.props.onClick) _this.props.onClick(_this.props.id);
			};

			this.render = function () {
				if (_this.props.hidden) return null;

				var className = _this.props.className ? "btn " + _this.props.className : _this.props.type ? "btn btn-" + _this.props.type : "btn";
				var disabled = _this.props.disabled ? true : false;

				if (_this.props.size) className += ' btn-' + _this.props.size;

				return React.createElement(
					"button",
					{ id: _this.props.id, type: "button", className: className, onClick: _this.onClick, disabled: disabled },
					_this.props.caption
				);
			};
		}

		_createClass(ButtonSimple, null, [{
			key: "propTypes",
			value: {
				type: React.PropTypes.oneOf(["success", "warning", "danger"]),
				caption: React.PropTypes.string.isRequired,
				onClick: React.PropTypes.func.isRequired,
				disabled: React.PropTypes.bool,
				hidden: React.PropTypes.bool,
				id: React.PropTypes.any,
				size: React.PropTypes.string
			},
			enumerable: true
		}, {
			key: "defaultProps",
			value: {
				hidden: false,
				disabled: false
			},
			enumerable: true
		}]);

		return ButtonSimple;
	})(React.Component);

	exports.ButtonSimple = ButtonSimple;

/***/ },
/* 227 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(202);

	var InputCheckbox = (function (_React$Component) {
	    _inherits(InputCheckbox, _React$Component);

	    function InputCheckbox() {
	        var _this = this;

	        _classCallCheck(this, InputCheckbox);

	        _get(Object.getPrototypeOf(InputCheckbox.prototype), "constructor", this).apply(this, arguments);

	        this.state = {
	            checked: false
	        };

	        this.onChange = function () {
	            if (_this.props.name) {
	                var arr = [];
	                arr[_this.props.name] = _this.state.checked;
	                _this.props.onChange(arr);
	            }

	            _this.setState({ checked: !_this.state.checked });
	        };

	        this.render = function () {
	            return React.createElement(
	                "div",
	                { className: "checkbox-form-control" },
	                React.createElement(
	                    "label",
	                    null,
	                    React.createElement("input", { type: "checkbox",
	                        name: _this.props.name,
	                        className: _this.props.className ? "checkbox " + _this.props.className : "checkbox",
	                        hidden: _this.props.hidden,
	                        onChange: _this.onChange }),
	                    _this.props.caption
	                )
	            );
	        };
	    }

	    _createClass(InputCheckbox, null, [{
	        key: "propTypes",
	        value: {
	            name: React.PropTypes.string.isRequired,
	            caption: React.PropTypes.string.isRequired,
	            onChange: React.PropTypes.func
	        },
	        enumerable: true
	    }]);

	    return InputCheckbox;
	})(React.Component);

	exports.InputCheckbox = InputCheckbox;

/***/ },
/* 228 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(202);

	var LoginNotify = (function (_React$Component) {
	    _inherits(LoginNotify, _React$Component);

	    function LoginNotify(props) {
	        var _this = this;

	        _classCallCheck(this, LoginNotify);

	        _get(Object.getPrototypeOf(LoginNotify.prototype), 'constructor', this).call(this, props);

	        this.render = function () {
	            var className = 'login-box__' + _this.props.type + '-msg';

	            return React.createElement(
	                'div',
	                { className: className },
	                _this.props.children
	            );
	        };
	    }

	    _createClass(LoginNotify, null, [{
	        key: 'defaultProps',
	        value: {
	            type: 'info'
	        },
	        enumerable: true
	    }]);

	    return LoginNotify;
	})(React.Component);

	var LoginNotifySms = (function (_React$Component2) {
	    _inherits(LoginNotifySms, _React$Component2);

	    function LoginNotifySms(props) {
	        var _this2 = this;

	        _classCallCheck(this, LoginNotifySms);

	        _get(Object.getPrototypeOf(LoginNotifySms.prototype), 'constructor', this).call(this, props);
	        this.state = {
	            cooldown: this.props.cooldown
	        };

	        this.tick = function () {
	            _this2.setState({ cooldown: _this2.state.cooldown - 1 });
	            if (_this2.state.cooldown <= 0) clearInterval(_this2.interval);
	        };

	        this.componentDidMount = function () {
	            // this.interval = setInterval(this.tick, 1000);
	        };

	        this.componentWillUnmount = function () {
	            // clearInterval(this.interval);
	        };

	        this.render = function () {
	            // if(!this.props.cooldown) return null;

	            var phone = _this2.props.phone ? React.createElement(
	                'p',
	                null,
	                'На номер ',
	                _this2.props.phone,
	                ', было выслано SMS с кодом.'
	            ) : React.createElement(
	                'p',
	                null,
	                'На Ваш телефонный номер, указанный при регистрации, было выслано SMS с кодом.'
	            ),
	                cooldown = _this2.props.cooldown && _this2.state.cooldown > 0 ? React.createElement(
	                'p',
	                null,
	                'Перезапросить можно через ',
	                _this2.state.cooldown,
	                ' сек.'
	            ) : null,
	                ttl = _this2.props.ttl ? React.createElement(
	                'p',
	                null,
	                'Код, полученный в SMS, действителен в течение ',
	                _this2.props.ttl / 60,
	                ' мин.'
	            ) : null;

	            return React.createElement(
	                'div',
	                { className: 'login-box__info-msg' },
	                phone,
	                ttl
	            );
	        };
	    }

	    return LoginNotifySms;
	})(React.Component);

	exports.LoginNotifySms = LoginNotifySms;
	exports.LoginNotify = LoginNotify;

/***/ },
/* 229 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _api = __webpack_require__(1);

	var _ClassesLogger = __webpack_require__(3);

	var _Dispatcher = __webpack_require__(4);

	var _Validation = __webpack_require__(223);

	var _ControlsLoading = __webpack_require__(230);

	var _ControlsFormsFormGroup = __webpack_require__(224);

	var _ControlsFormsInputSimple = __webpack_require__(225);

	var _ControlsFormsButtonSimple = __webpack_require__(226);

	var _LoginNotify = __webpack_require__(228);

	var React = __webpack_require__(202);

	var LoginForgotPassword = (function (_React$Component) {
	    _inherits(LoginForgotPassword, _React$Component);

	    function LoginForgotPassword(props) {
	        var _this = this;

	        _classCallCheck(this, LoginForgotPassword);

	        _get(Object.getPrototypeOf(LoginForgotPassword.prototype), 'constructor', this).call(this, props);
	        this.state = {
	            notify: null,
	            isValidated: false
	        };
	        this.validateFields = {
	            fields: [{ name: "email", value: true }]
	        };

	        this.validateForm = function () {
	            _this.validateFields.fields.forEach(function (field) {
	                if (_this.state[field.name] && _this.state[field.name].length) {
	                    field.value = true;
	                } else {
	                    field.value = false;
	                }
	            });
	            _this.setState({ isValidated: _this.isValidated() });
	        };

	        this.isValidated = function () {
	            return _this.validateFields.fields.every(function (field) {
	                return field.value === true;
	            });
	        };

	        this.onChangeHandler = function (obj) {
	            _this.setState(obj);
	            _this.validateForm();
	        };

	        this.componentDidMount = function () {
	            if (_this.props.query.token) {
	                _this.userPasswRecovery({ token: _this.props.query.token });
	            }
	        };

	        this.userPasswRecovery = function (params) {
	            if (!params) {
	                _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, { type: "error", message: "Неверные данные" });
	                return;
	            }

	            new _api.xreq('user_passw_recovery', params, function (xr) {
	                if (xr.res.err) {
	                    var message = undefined;

	                    switch (xr.res.msg) {
	                        case "invalid token":
	                            message = { type: 'error', message: 'Недействительный токен' };
	                            break;
	                        case "invalid email":
	                            message = { type: 'error', message: 'Недействительный E-mail' };
	                            _this.setState({ email: null, isValidated: false });
	                            break;
	                        case "invalid smscode":
	                            message = { type: 'error', message: 'Неверный код из SMS' };
	                            _this.setState({ smscode: null, smscode_repeat: null, isValidated: false });
	                            break;
	                        default:
	                            _this.setState({ notify: xr.res.msg });
	                            break;
	                    }

	                    if (message) _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, message);
	                    return;
	                }

	                if (xr.res.token_ttl) {
	                    _this.setState({ notify: "token", token_ttl: xr.res.token_ttl, isValidated: false });
	                    return;
	                }

	                if (xr.res.cooldown && xr.res.phone) {
	                    _this.validateFields.fields = [{ name: "smscode", value: true }, { name: "passw", value: true }, { name: "passw_repeat", value: true }];

	                    _this.setState({
	                        notify: "sms",
	                        cooldown: xr.res.cooldown,
	                        phone: xr.res.phone,
	                        smscode_ttl: xr.res.smscode_ttl,
	                        isValidated: false
	                    });
	                    return;
	                }

	                if (xr.res.cooldown) {
	                    _this.validateFields.fields = [{ name: "smscode", value: true }, { name: "passw", value: true }, { name: "passw_repeat", value: true }];

	                    _this.setState({ notify: "sms", cooldown: xr.res.cooldown });
	                    return;
	                }

	                _this.setState({ notify: "ok" });
	            });
	        };

	        this.onClick = function () {
	            _this.userPasswRecovery({ email: _this.state.email });
	        };

	        this.onChangePassword = function () {
	            if (_this.state.passw != _this.state.passw_repeat) {
	                _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, { type: 'error', message: 'Пароли не совпадают' });
	                _this.setState({ passw_repeat: null });
	                return;
	            }
	            _this.userPasswRecovery({ smscode: _this.state.smscode, token: _this.props.query.token, passw: _this.state.passw });
	        };

	        this.render = function () {
	            var notify = undefined,
	                content = undefined;

	            if (_this.state.notify == "token") {
	                notify = React.createElement(
	                    _LoginNotify.LoginNotify,
	                    { type: 'info' },
	                    React.createElement(
	                        'p',
	                        null,
	                        'На E-mail, указанный при регистрации, было отправлено сообщение с дальнейшей инструкцией.'
	                    ),
	                    React.createElement(
	                        'span',
	                        null,
	                        'Инструкция будет доступна в течение ',
	                        _this.state.token_ttl / 60,
	                        ' мин.'
	                    )
	                );
	            }

	            if (_this.state.notify == "sms") {
	                notify = React.createElement(_LoginNotify.LoginNotifySms, { phone: _this.state.phone, cooldown: _this.state.cooldown, ttl: _this.state.smscode_ttl });
	                content = React.createElement(
	                    'div',
	                    { className: 'login-box__form' },
	                    React.createElement(
	                        _ControlsFormsFormGroup.FormGroup,
	                        { name: 'Код из SMS', from: 'smscode' },
	                        React.createElement(_ControlsFormsInputSimple.InputSimple, { value: _this.state.smscode, name: 'smscode', placeholder: 'Введите код', onChange: _this.onChangeHandler, validation: { typing: _Validation.Validation.typingFloat } })
	                    ),
	                    React.createElement(
	                        _ControlsFormsFormGroup.FormGroup,
	                        { name: 'Новый пароль', from: 'passw' },
	                        React.createElement(_ControlsFormsInputSimple.InputSimple, { value: _this.state.passw, name: 'passw', type: 'password', placeholder: 'Введите новый пароль', onChange: _this.onChangeHandler })
	                    ),
	                    React.createElement(
	                        _ControlsFormsFormGroup.FormGroup,
	                        { name: 'Повторите пароль', from: 'passw_repeat' },
	                        React.createElement(_ControlsFormsInputSimple.InputSimple, { value: _this.state.passw_repeat, name: 'passw_repeat', type: 'password', placeholder: 'Повторите пароль', onChange: _this.onChangeHandler })
	                    ),
	                    React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.onChangePassword, caption: 'Изменить', type: 'success', disabled: !_this.state.isValidated })
	                );
	            }

	            if (_this.state.notify == "ok") {
	                notify = React.createElement(
	                    _LoginNotify.LoginNotify,
	                    { type: 'info' },
	                    React.createElement(
	                        'p',
	                        null,
	                        'Пароль успешно изменен.'
	                    )
	                );
	                content = React.createElement('div', { className: 'login-box__form' });
	            }

	            return React.createElement(
	                'div',
	                { className: 'page-login' },
	                React.createElement(
	                    'div',
	                    { className: 'login-box animated fadeInUp' },
	                    React.createElement(
	                        'div',
	                        { className: 'login-box__header' },
	                        React.createElement(
	                            'h1',
	                            null,
	                            'Восстановление пароля'
	                        )
	                    ),
	                    notify,
	                    content ? content : React.createElement(
	                        'div',
	                        { className: 'login-box__form' },
	                        React.createElement(
	                            _ControlsFormsFormGroup.FormGroup,
	                            { name: 'E-mail', from: 'email' },
	                            React.createElement(_ControlsFormsInputSimple.InputSimple, { value: _this.state.email, name: 'email', placeholder: 'Введите email, указанный при создании аккаунта.', onChange: _this.onChangeHandler, disabled: _this.state.token_ttl })
	                        ),
	                        React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.onClick, caption: 'Отправить', type: 'success', disabled: !_this.state.isValidated })
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'login-box__footer' },
	                        React.createElement(
	                            'a',
	                            { href: '#/login' },
	                            'Вернуться'
	                        )
	                    )
	                )
	            );
	        };
	    }

	    return LoginForgotPassword;
	})(React.Component);

	exports.LoginForgotPassword = LoginForgotPassword;

/***/ },
/* 230 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _utils = __webpack_require__(2);

	var React = __webpack_require__(202);

	var Loading = (function (_React$Component) {
	    _inherits(Loading, _React$Component);

	    function Loading() {
	        var _this = this;

	        _classCallCheck(this, Loading);

	        _get(Object.getPrototypeOf(Loading.prototype), 'constructor', this).apply(this, arguments);

	        this.render = function () {
	            if (_this.props.dataReceived) {
	                return React.createElement(
	                    'div',
	                    { className: _this.props.className },
	                    _this.props.children
	                );
	            } else {
	                return React.createElement('div', { className: 'loading' });
	            }
	        };
	    }

	    _createClass(Loading, null, [{
	        key: 'propTypes',
	        value: {
	            dataReceived: React.PropTypes.any.isRequired,
	            className: React.PropTypes.string
	        },
	        enumerable: true
	    }]);

	    return Loading;
	})(React.Component);

	exports.Loading = Loading;

/***/ },
/* 231 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _api = __webpack_require__(1);

	var _ControlsFormsButtonSimple = __webpack_require__(226);

	var _ControlsIcon = __webpack_require__(232);

	var _ControlsModalWindow = __webpack_require__(233);

	var _LandingAbout = __webpack_require__(234);

	var _LandingForWhom = __webpack_require__(235);

	var _LandingSlider = __webpack_require__(236);

	var _LandingGetInviteForm = __webpack_require__(237);

	var _LandingHowItWorks = __webpack_require__(240);

	var React = __webpack_require__(202);

	var Landing = (function (_React$Component) {
	    _inherits(Landing, _React$Component);

	    function Landing(props) {
	        var _this = this;

	        _classCallCheck(this, Landing);

	        _get(Object.getPrototypeOf(Landing.prototype), 'constructor', this).call(this, props);
	        this.state = {
	            isModalOpen: false
	        };

	        this.openModal = function () {
	            _this.setState({ isModalOpen: true });
	        };

	        this.closeModal = function () {
	            _this.setState({ isModalOpen: false });
	        };

	        this.loginPage = function () {
	            window.location = '#/login';
	        };

	        this.render = function () {
	            return React.createElement(
	                'div',
	                { className: 'landing-page' },
	                React.createElement(
	                    _ControlsModalWindow.ModalWindow,
	                    { isOpen: _this.state.isModalOpen, width: 500, onClose: _this.closeModal, title: 'Получить приглашение (В разработке)' },
	                    React.createElement(_LandingGetInviteForm.LandingGetInviteForm, { onClose: _this.closeModal })
	                ),
	                React.createElement(
	                    'header',
	                    { className: 'header' },
	                    React.createElement(
	                        'div',
	                        { className: 'header__container' },
	                        React.createElement('a', { href: '#/landing', className: 'header__logo' }),
	                        React.createElement(
	                            'div',
	                            { className: 'header__controls' },
	                            React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { className: 'header__control-login', caption: 'Войти', onClick: _this.loginPage })
	                        )
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'page-full-screen' },
	                    React.createElement(
	                        'div',
	                        { className: 'hero' },
	                        React.createElement(
	                            'div',
	                            { className: 'hero__container' },
	                            React.createElement(
	                                'h2',
	                                { className: 'hero__title' },
	                                'Профессиональное ',
	                                React.createElement('br', null),
	                                'решение для логистики'
	                            ),
	                            React.createElement(
	                                'p',
	                                { className: 'hero__description' },
	                                'Вопрос о смысле жизни — одна из традиционных проблем философии, теологии ',
	                                React.createElement('br', null),
	                                'и художественной литературы, где она рассматривается.'
	                            ),
	                            React.createElement(
	                                'div',
	                                { className: 'hero__controls' },
	                                React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { caption: 'Получить приглашение', type: 'primary', onClick: _this.openModal })
	                            )
	                        )
	                    )
	                ),
	                React.createElement(_LandingAbout.LandingAbout, null),
	                React.createElement(_LandingForWhom.LandingForWhom, null),
	                React.createElement(_LandingHowItWorks.LandingHowItWorks, null),
	                React.createElement(_LandingSlider.LandingSlider, null),
	                React.createElement(
	                    'div',
	                    { className: 'page-block info' },
	                    React.createElement(
	                        'h2',
	                        { className: 'page-block__title info__title' },
	                        'Cargochat помогает расширить',
	                        React.createElement('br', null),
	                        ' партнерскую сеть и увеличить потенциал Вашей компании'
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'page-block__controls' },
	                        React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { caption: 'Получить приглашение', type: 'primary', onClick: _this.openModal })
	                    )
	                ),
	                React.createElement(
	                    'footer',
	                    { className: 'footer' },
	                    React.createElement(
	                        'div',
	                        { className: 'container' },
	                        React.createElement(
	                            'div',
	                            { className: 'row row-between middle-xs' },
	                            React.createElement(
	                                'div',
	                                { className: 'col-xs-12' },
	                                '© «Cargo.chat» 2015'
	                            )
	                        )
	                    )
	                )
	            );
	        };
	    }

	    return Landing;
	})(React.Component);

	exports.Landing = Landing;

/***/ },
/* 232 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(202);

	var Icon = (function (_React$Component) {
	    _inherits(Icon, _React$Component);

	    function Icon(props) {
	        var _this = this;

	        _classCallCheck(this, Icon);

	        _get(Object.getPrototypeOf(Icon.prototype), "constructor", this).call(this, props);

	        this.onClick = function () {
	            if (_this.props.onClick) _this.props.onClick();
	        };

	        this.render = function () {

	            var svgPath = undefined;

	            switch (_this.props.name) {

	                case "close":
	                    svgPath = React.createElement("path", { fill: _this.props.fill, d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z" });
	                    break;

	                case "settings":
	                    svgPath = React.createElement("path", { d: "M12,15.5A3.5,3.5 0 0,1 8.5,12A3.5,3.5 0 0,1 12,8.5A3.5,3.5 0 0,1 15.5,12A3.5,3.5 0 0,1 12,15.5M19.43,12.97C19.47,12.65 19.5,12.33 19.5,12C19.5,11.67 19.47,11.34 19.43,11L21.54,9.37C21.73,9.22 21.78,8.95 21.66,8.73L19.66,5.27C19.54,5.05 19.27,4.96 19.05,5.05L16.56,6.05C16.04,5.66 15.5,5.32 14.87,5.07L14.5,2.42C14.46,2.18 14.25,2 14,2H10C9.75,2 9.54,2.18 9.5,2.42L9.13,5.07C8.5,5.32 7.96,5.66 7.44,6.05L4.95,5.05C4.73,4.96 4.46,5.05 4.34,5.27L2.34,8.73C2.21,8.95 2.27,9.22 2.46,9.37L4.57,11C4.53,11.34 4.5,11.67 4.5,12C4.5,12.33 4.53,12.65 4.57,12.97L2.46,14.63C2.27,14.78 2.21,15.05 2.34,15.27L4.34,18.73C4.46,18.95 4.73,19.03 4.95,18.95L7.44,17.94C7.96,18.34 8.5,18.68 9.13,18.93L9.5,21.58C9.54,21.82 9.75,22 10,22H14C14.25,22 14.46,21.82 14.5,21.58L14.87,18.93C15.5,18.67 16.04,18.34 16.56,17.94L19.05,18.95C19.27,19.03 19.54,18.95 19.66,18.73L21.66,15.27C21.78,15.05 21.73,14.78 21.54,14.63L19.43,12.97Z" });
	                    break;

	                case "file-upload":
	                    svgPath = React.createElement("path", { fill: _this.props.fill, d: "M9 16h6v-6h4l-7-7-7 7h4zm-4 2h14v2H5z" });
	                    break;

	                case "file-download":
	                    svgPath = React.createElement("path", { fill: _this.props.fill, d: "M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z" });
	                    break;

	                case "delete":
	                    svgPath = React.createElement("path", { fill: _this.props.fill, d: "M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z" });
	                    break;

	                case "copy":
	                    svgPath = React.createElement("path", { fill: _this.props.fill, d: "M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z" });
	                    break;

	                case "arrow-drop-down":
	                    svgPath = React.createElement("path", { d: "M7 10l5 5 5-5z" });
	                    break;

	                case "image":
	                    svgPath = React.createElement("path", { d: "M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.5 13.5l2.5 3.01L14.5 12l4.5 6H5l3.5-4.5z" });
	                    break;

	                case "arrow-left":
	                    svgPath = React.createElement("path", { d: "M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z" });
	                    break;

	                case "arrow-right":
	                    svgPath = React.createElement("path", { d: "M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z" });
	                    break;

	                case "people-outline":
	                    svgPath = React.createElement("path", { d: "M16.5 13c-1.2 0-3.07.34-4.5 1-1.43-.67-3.3-1-4.5-1C5.33 13 1 14.08 1 16.25V19h22v-2.75c0-2.17-4.33-3.25-6.5-3.25zm-4 4.5h-10v-1.25c0-.54 2.56-1.75 5-1.75s5 1.21 5 1.75v1.25zm9 0H14v-1.25c0-.46-.2-.86-.52-1.22.88-.3 1.96-.53 3.02-.53 2.44 0 5 1.21 5 1.75v1.25zM7.5 12c1.93 0 3.5-1.57 3.5-3.5S9.43 5 7.5 5 4 6.57 4 8.5 5.57 12 7.5 12zm0-5.5c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2zm9 5.5c1.93 0 3.5-1.57 3.5-3.5S18.43 5 16.5 5 13 6.57 13 8.5s1.57 3.5 3.5 3.5zm0-5.5c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2z" });
	                    break;

	                case "exit":
	                    svgPath = React.createElement("path", { d: "M10.09 15.59L11.5 17l5-5-5-5-1.41 1.41L12.67 11H3v2h9.67l-2.58 2.59zM19 3H5c-1.11 0-2 .9-2 2v4h2V5h14v14H5v-4H3v4c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z" });
	                    break;

	                case "emoji":
	                    svgPath = React.createElement("path", { d: "M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm3.5-9c.83 0 1.5-.67 1.5-1.5S16.33 8 15.5 8 14 8.67 14 9.5s.67 1.5 1.5 1.5zm-7 0c.83 0 1.5-.67 1.5-1.5S9.33 8 8.5 8 7 8.67 7 9.5 7.67 11 8.5 11zm3.5 6.5c2.33 0 4.31-1.46 5.11-3.5H6.89c.8 2.04 2.78 3.5 5.11 3.5z" });
	                    break;

	                case "user-add":
	                    svgPath = React.createElement("path", { d: "M15,14C12.33,14 7,15.33 7,18V20H23V18C23,15.33 17.67,14 15,14M6,10V7H4V10H1V12H4V15H6V12H9V10M15,12A4,4 0 0,0 19,8A4,4 0 0,0 15,4A4,4 0 0,0 11,8A4,4 0 0,0 15,12Z" });
	                    break;

	                case "notifications":
	                    svgPath = React.createElement("path", { d: "M11.5 22c1.1 0 2-.9 2-2h-4c0 1.1.9 2 2 2zm6.5-6v-5.5c0-3.07-2.13-5.64-5-6.32V3.5c0-.83-.67-1.5-1.5-1.5S10 2.67 10 3.5v.68c-2.87.68-5 3.25-5 6.32V16l-2 2v1h17v-1l-2-2z" });
	                    break;

	                case "notifications-active":
	                    svgPath = React.createElement("path", { d: "M6.58 3.58L5.15 2.15C2.76 3.97 1.18 6.8 1.03 10h2c.15-2.65 1.51-4.97 3.55-6.42zM19.97 10h2c-.15-3.2-1.73-6.03-4.13-7.85l-1.43 1.43c2.05 1.45 3.41 3.77 3.56 6.42zm-1.97.5c0-3.07-2.13-5.64-5-6.32V3.5c0-.83-.67-1.5-1.5-1.5S10 2.67 10 3.5v.68c-2.87.68-5 3.25-5 6.32V16l-2 2v1h17v-1l-2-2v-5.5zM11.5 22c.14 0 .27-.01.4-.04.65-.13 1.19-.58 1.44-1.18.1-.24.16-.5.16-.78h-4c0 1.1.9 2 2 2z" });
	                    break;

	                case "star-border":
	                    svgPath = React.createElement("path", { d: "M22 9.24l-7.19-.62L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27 18.18 21l-1.63-7.03L22 9.24zM12 15.4l-3.76 2.27 1-4.28-3.32-2.88 4.38-.38L12 6.1l1.71 4.04 4.38.38-3.32 2.88 1 4.28L12 15.4z" });
	                    break;

	                case "add-circle-outline":
	                    svgPath = React.createElement("path", { d: "M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z" });
	                    break;

	                case "remove-circle-outline":
	                    svgPath = React.createElement("path", { d: "M7 11v2h10v-2H7zm5-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z" });
	                    break;

	                case "message":
	                    svgPath = React.createElement("path", { d: "M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-2 12H6v-2h12v2zm0-3H6V9h12v2zm0-3H6V6h12v2z" });
	                    break;

	                case "edit":
	                    svgPath = React.createElement("path", { d: "M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z" });
	                    break;

	                case "shield":
	                    svgPath = React.createElement("path", { d: "M12 1L3 5v6c0 5.55 3.84 10.74 9 12 5.16-1.26 9-6.45 9-12V5l-9-4zm-2 16l-4-4 1.41-1.41L10 14.17l6.59-6.59L18 9l-8 8z" });
	                    break;

	                case "shipper":
	                    svgPath = React.createElement("path", { d: "M17.9709379,2.41978827 L14.7400241,2.41978827 C14.4969093,2.41978827 14.3000234,2.61692584 14.3000234,2.85978899 L14.3000234,11.439803 C14.3000234,11.6826661 14.4969093,11.8798037 14.7400241,11.8798037 L15.2066621,11.8798037 C15.4244696,11.8798037 15.6174013,11.7229277 15.6455484,11.5069175 C15.8182415,10.1838238 16.8735962,9.36324406 18.1502453,9.36324406 C19.4268945,9.36324406 20.4822492,10.1838598 20.6549422,11.5069175 C20.6830894,11.7229636 20.8758054,11.8798037 21.0938286,11.8798037 L21.5599993,11.8798037 C21.8028624,11.8798037 22,11.6826661 22,11.439803 L22,7.149796 C22,7.04641021 21.9636928,6.94651135 21.897477,6.8675341 L18.3083796,2.57752709 C18.224837,2.47766418 18.1011766,2.41978827 17.9709379,2.41978827 L17.9709379,2.41978827 Z M15.1800248,5.93979402 L15.1800248,3.73979042 C15.1800248,3.49692728 15.3769107,3.29978971 15.6200255,3.29978971 L17.5582215,3.29978971 C17.688676,3.29978971 17.812552,3.3578813 17.8961305,3.45817559 L19.729395,5.65817918 C19.9680882,5.94482671 19.7643722,6.37979474 19.3912702,6.37979474 L15.6200255,6.37979474 C15.3769107,6.37979474 15.1800248,6.1829088 15.1800248,5.93979402 Z M0.440000719,11.8800194 L1.56663981,11.8800194 C1.78444736,11.8800194 1.97737905,11.7231433 2.00552615,11.5071332 C2.17821925,10.1840395 3.23357391,9.36345974 4.51022306,9.36345974 C5.7868722,9.36345974 6.84222687,10.1840755 7.01491996,11.5071332 C7.04306706,11.7231793 7.23578307,11.8800194 7.4538063,11.8800194 L12.9800212,11.8800194 C13.2229203,11.8800194 13.4200219,11.6828818 13.4200219,11.4400187 L13.4200219,0.440000719 C13.4200219,0.197137577 13.2228844,0 12.9800212,0 L0.440000719,0 C0.196885943,0 0,0.197137577 0,0.440000719 L0,11.4400187 C0,11.6829178 0.196885943,11.8800194 0.440000719,11.8800194 Z M18.1500297,10.1930624 C17.1189038,10.1930624 16.2800266,11.0321553 16.2800266,12.0630655 C16.2800266,13.0941913 17.1189038,13.9330685 18.1500297,13.9330685 C19.1809398,13.9330685 20.0200327,13.0941913 20.0200327,12.0630655 C20.0200327,11.0321553 19.1809398,10.1930624 18.1500297,10.1930624 Z M18.1500297,12.6130664 C17.8466664,12.6130664 17.6000288,12.3664287 17.6000288,12.0630655 C17.6000288,11.7597022 17.8466664,11.5130646 18.1500297,11.5130646 C18.4533929,11.5130646 18.7000306,11.7597022 18.7000306,12.0630655 C18.7000306,12.3664287 18.4533929,12.6130664 18.1500297,12.6130664 Z M4.51000737,10.1930624 C3.4788815,10.1930624 2.64000431,11.0321553 2.64000431,12.0630655 C2.64000431,13.0941913 3.4788815,13.9330685 4.51000737,13.9330685 C5.54091755,13.9330685 6.38001042,13.0941913 6.38001042,12.0630655 C6.38001042,11.0321553 5.54091755,10.1930624 4.51000737,10.1930624 Z M4.51000737,12.6130664 C4.20664413,12.6130664 3.96000647,12.3664287 3.96000647,12.0630655 C3.96000647,11.7597022 4.20664413,11.5130646 4.51000737,11.5130646 C4.81337061,11.5130646 5.06000827,11.7597022 5.06000827,12.0630655 C5.06000827,12.3664287 4.81337061,12.6130664 4.51000737,12.6130664 L4.51000737,12.6130664 Z" });
	                    break;

	                case "network":
	                    svgPath = React.createElement("path", { d: "M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zm6.93 6h-2.95c-.32-1.25-.78-2.45-1.38-3.56 1.84.63 3.37 1.91 4.33 3.56zM12 4.04c.83 1.2 1.48 2.53 1.91 3.96h-3.82c.43-1.43 1.08-2.76 1.91-3.96zM4.26 14C4.1 13.36 4 12.69 4 12s.1-1.36.26-2h3.38c-.08.66-.14 1.32-.14 2 0 .68.06 1.34.14 2H4.26zm.82 2h2.95c.32 1.25.78 2.45 1.38 3.56-1.84-.63-3.37-1.9-4.33-3.56zm2.95-8H5.08c.96-1.66 2.49-2.93 4.33-3.56C8.81 5.55 8.35 6.75 8.03 8zM12 19.96c-.83-1.2-1.48-2.53-1.91-3.96h3.82c-.43 1.43-1.08 2.76-1.91 3.96zM14.34 14H9.66c-.09-.66-.16-1.32-.16-2 0-.68.07-1.35.16-2h4.68c.09.65.16 1.32.16 2 0 .68-.07 1.34-.16 2zm.25 5.56c.6-1.11 1.06-2.31 1.38-3.56h2.95c-.96 1.65-2.49 2.93-4.33 3.56zM16.36 14c.08-.66.14-1.32.14-2 0-.68-.06-1.34-.14-2h3.38c.16.64.26 1.31.26 2s-.1 1.36-.26 2h-3.38z" });
	                    break;

	                case "clock":
	                    svgPath = React.createElement("path", { d: "M11.99,2 C6.47,2 2,6.48 2,12 C2,17.52 6.47,22 11.99,22 C17.52,22 22,17.52 22,12 C22,6.48 17.52,2 11.99,2 L11.99,2 Z M12,20 C7.58,20 4,16.42 4,12 C4,7.58 7.58,4 12,4 C16.42,4 20,7.58 20,12 C20,16.42 16.42,20 12,20 L12,20 Z M12.5,7 L11,7 L11,13 L16.25,16.15 L17,14.92 L12.5,12.25 L12.5,7 Z" });
	                    break;

	                case "arrow-left-line":
	                    svgPath = React.createElement("path", { d: "M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z" });
	                    break;

	                case "arrow-right-line":
	                    svgPath = React.createElement("path", { d: "M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z" });
	                    break;

	            }

	            if (!svgPath) return null;

	            return React.createElement(
	                "svg",
	                { xmlns: "http://www.w3.org/2000/svg",
	                    viewBox: "0 0 24 24",
	                    className: _this.props.className ? "icon " + _this.props.className : "icon",
	                    width: _this.props.size,
	                    height: _this.props.size,
	                    fill: _this.props.fill,
	                    onClick: _this.onClick },
	                svgPath
	            );
	        };
	    }

	    _createClass(Icon, null, [{
	        key: "propTypes",
	        value: {
	            name: React.PropTypes.string.isRequired,
	            fill: React.PropTypes.string,
	            size: React.PropTypes.number,
	            className: React.PropTypes.string,
	            tooltip: React.PropTypes.string,
	            onClick: React.PropTypes.func
	        },
	        enumerable: true
	    }, {
	        key: "defaultProps",
	        value: {
	            size: 26
	        },
	        enumerable: true
	    }]);

	    return Icon;
	})(React.Component);

	exports.Icon = Icon;

/***/ },
/* 233 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _Icon = __webpack_require__(232);

	var React = __webpack_require__(202);

	var ModalWindow = (function (_React$Component) {
	    _inherits(ModalWindow, _React$Component);

	    function ModalWindow(props) {
	        var _this = this;

	        _classCallCheck(this, ModalWindow);

	        _get(Object.getPrototypeOf(ModalWindow.prototype), 'constructor', this).call(this, props);

	        this.onClose = function () {
	            if (!_this.props.onClose) return;
	            _this.props.onClose();
	        };

	        this.onClick = function (event) {
	            if (event.target.className == "modal-window" && _this.props.onClose) {
	                _this.props.onClose();
	            }
	        };

	        this.componentWillReceiveProps = function (nextProps) {
	            _this.setState(nextProps);
	        };

	        this.render = function () {
	            var width = _this.props.width ? { maxWidth: _this.props.width } : null;
	            return React.createElement(
	                'div',
	                { className: 'modal-window', onClick: _this.onClick, 'data-visible': _this.props.isOpen },
	                React.createElement(
	                    'div',
	                    { className: 'modal-container', style: width },
	                    React.createElement(
	                        'div',
	                        { className: 'modal-container__header' },
	                        React.createElement(
	                            'h3',
	                            null,
	                            _this.props.title
	                        ),
	                        React.createElement(_Icon.Icon, { name: 'close', onClick: _this.onClose })
	                    ),
	                    _this.props.children
	                )
	            );
	        };
	    }

	    _createClass(ModalWindow, null, [{
	        key: 'propTypes',
	        value: {
	            onClose: React.PropTypes.func.isRequired,
	            isOpen: React.PropTypes.bool.isRequired,
	            title: React.PropTypes.string.isRequired,
	            width: React.PropTypes.number
	        },
	        enumerable: true
	    }, {
	        key: 'defaultProps',
	        value: {
	            isOpen: false
	        },
	        enumerable: true
	    }]);

	    return ModalWindow;
	})(React.Component);

	exports.ModalWindow = ModalWindow;

/***/ },
/* 234 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _ControlsIcon = __webpack_require__(232);

	var React = __webpack_require__(202);

	var LandingAbout = (function (_React$Component) {
	    _inherits(LandingAbout, _React$Component);

	    function LandingAbout(props) {
	        _classCallCheck(this, LandingAbout);

	        _get(Object.getPrototypeOf(LandingAbout.prototype), 'constructor', this).call(this, props);

	        this.render = function () {
	            return React.createElement(
	                'div',
	                { className: 'about' },
	                React.createElement(
	                    'div',
	                    { className: 'container' },
	                    React.createElement(
	                        'div',
	                        { className: 'row' },
	                        React.createElement(
	                            'div',
	                            { className: 'col-xs-12 col-md-6 col-lg-3' },
	                            React.createElement(
	                                'div',
	                                { className: 'about__item' },
	                                React.createElement(_ControlsIcon.Icon, { className: 'about__icon', name: 'shield', size: 46 }),
	                                React.createElement(
	                                    'p',
	                                    { className: 'about__description' },
	                                    'Работа с проверенными партнерами'
	                                )
	                            )
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'col-xs-12 col-md-6 col-lg-3' },
	                            React.createElement(
	                                'div',
	                                { className: 'about__item' },
	                                React.createElement(_ControlsIcon.Icon, { className: 'about__icon', name: 'clock', size: 46 }),
	                                React.createElement(
	                                    'p',
	                                    { className: 'about__description' },
	                                    'Экономия времени на поиск транспорта и оформление сделок'
	                                )
	                            )
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'col-xs-12 col-md-6 col-lg-3' },
	                            React.createElement(
	                                'div',
	                                { className: 'about__item' },
	                                React.createElement(_ControlsIcon.Icon, { className: 'about__icon', name: 'network', size: 46 }),
	                                React.createElement(
	                                    'p',
	                                    { className: 'about__description' },
	                                    'Автоматизация процесса организации перевозки'
	                                )
	                            )
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'col-xs-12 col-md-6 col-lg-3' },
	                            React.createElement(
	                                'div',
	                                { className: 'about__item' },
	                                React.createElement(_ControlsIcon.Icon, { className: 'about__icon', name: 'message', size: 46 }),
	                                React.createElement(
	                                    'p',
	                                    { className: 'about__description' },
	                                    'Профессиональная среда общения'
	                                )
	                            )
	                        )
	                    )
	                )
	            );
	        };
	    }

	    return LandingAbout;
	})(React.Component);

	exports.LandingAbout = LandingAbout;

/***/ },
/* 235 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _api = __webpack_require__(1);

	var _ControlsFormsButtonSimple = __webpack_require__(226);

	var _ControlsIcon = __webpack_require__(232);

	var React = __webpack_require__(202),
	    CTG = React.addons.CSSTransitionGroup;

	var LandingForWhom = (function (_React$Component) {
	    _inherits(LandingForWhom, _React$Component);

	    function LandingForWhom(props) {
	        var _this = this;

	        _classCallCheck(this, LandingForWhom);

	        _get(Object.getPrototypeOf(LandingForWhom.prototype), 'constructor', this).call(this, props);
	        this.state = {
	            isCurrent: "shipper"
	        };

	        this.handleClick = function (category) {
	            _this.setState({ isCurrent: category });
	        };

	        this.render = function () {

	            var tabs = [{ text: "Грузовладельцу", category: "shipper" }, { text: "Экспедитору", category: "expeditor" }, { text: "Перевозчику", category: "carrier" }];

	            var content = [{ text: "Получайте лучшие цены на перевозки с помощью Запросов ставок", category: "shipper" }, { text: "Фиксируйте срывы и поощряйте выполнение срочных заказов. Оценивайте ваших партнеров", category: "shipper" }, { text: "Автоматизируйте размещение заказов путём интеграции в вашу систему управления", category: "shipper" }, { text: "Ваши актуальные заказы доступны экспедиторам и их перевозчикам", category: "shipper" }, { text: "Привлекайте больше партнеров для перевозки ваших грузов", category: "shipper" }, { text: "Ваш груз всегда под контролем с помощью нашей системы", category: "shipper" }, { text: "Автоматическое получение заказов от ваших клиентов ", category: "expeditor" }, { text: "Перевозчики всегда знают об актуальных заказах и получают информацию об изменениях", category: "expeditor" }, { text: "Проверяйте перевозчиков и транспортные средства через единую базу данных", category: "expeditor" }, { text: "Получайте предложения от перевозчиков и договаривайтесь о ценах через систему торгов", category: "expeditor" }, { text: "Груз вашего клиента всегда под контролем с помощью нашей системы", category: "expeditor" }, { text: "Получайте информацию о свободном транспорте в местах погрузок ваших клиентов", category: "expeditor" }, { text: "Узнавайте информацию о местах погрузок клиентов и их официальных экспедиторах", category: "carrier" }, { text: "Получайте актуальные заказы, созданные реальными грузовладельцами", category: "carrier" }, { text: "Находите заказы, предлагайте свои цены и договаривайтесь через систему торгов", category: "carrier" }, { text: "Мобильное приложение позволяет вашему водителю быть всегда на связи и получать лучшие заказы", category: "carrier" }, { text: "Через приложение водитель указывает время приходов на погрузки и разгрузки для подтверждения простоев и срывов", category: "carrier" }, { text: "Общайтесь в профессиональном сообществе и информируйте друг друга об экстренных ситуациях", category: "carrier" }];

	            return React.createElement(
	                'div',
	                { className: 'page-block for-whom', name: 'for-whom' },
	                React.createElement(
	                    'h2',
	                    { className: 'page-block__title' },
	                    'Для кого'
	                ),
	                React.createElement(
	                    'p',
	                    { className: 'page-block__description' },
	                    'Представления о смысле жизни складываются в процессе деятельности людей и зависят от их социального положения, содержания'
	                ),
	                React.createElement(
	                    'ul',
	                    { className: 'for-whom__nav' },
	                    tabs.map(function (tab, i) {
	                        return React.createElement(
	                            'a',
	                            { key: i, className: tab.category == _this.state.isCurrent ? "for-whom__link for-whom__link--active" : "for-whom__link", onClick: _this.handleClick.bind(_this, tab.category) },
	                            React.createElement('div', { className: 'for-whom__icon' }),
	                            tab.text
	                        );
	                    })
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'for-whom__content container' },
	                    React.createElement(
	                        'div',
	                        { className: 'row' },
	                        content.map(function (card, i) {
	                            return card.category == _this.state.isCurrent ? React.createElement(
	                                'div',
	                                { key: i, className: 'col-xs-12 col-sm-6 col-md-4 col-lg-3' },
	                                React.createElement(
	                                    'p',
	                                    { className: 'for-whom__card' },
	                                    card.text
	                                )
	                            ) : null;
	                        })
	                    )
	                )
	            );
	        };
	    }

	    return LandingForWhom;
	})(React.Component);

	exports.LandingForWhom = LandingForWhom;

/***/ },
/* 236 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _ControlsIcon = __webpack_require__(232);

	var React = __webpack_require__(202),
	    CTG = React.addons.CSSTransitionGroup;

	var LandingSlider = (function (_React$Component) {
	    _inherits(LandingSlider, _React$Component);

	    function LandingSlider(props) {
	        _classCallCheck(this, LandingSlider);

	        _get(Object.getPrototypeOf(LandingSlider.prototype), 'constructor', this).call(this, props);

	        this.render = function () {
	            return React.createElement(
	                'div',
	                { className: 'page-block screen' },
	                React.createElement(
	                    'h2',
	                    { className: 'page-block__title' },
	                    'Философское видение проблемы'
	                ),
	                React.createElement(
	                    'p',
	                    { className: 'page-block__description' },
	                    'Для европейцев и индийцев, несмотря на культурные различия и географическую отдаленность друг от друга, представление о смысле жизни было очень похожим.'
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'container screen__container' },
	                    React.createElement(
	                        'div',
	                        { className: 'row' },
	                        React.createElement(
	                            'div',
	                            { className: 'col-xs-12' },
	                            React.createElement('img', { src: 'http://6.firepic.org/6/images/2015-10/23/62rgh856sm9o.png', alt: '' })
	                        )
	                    )
	                )
	            );
	        };
	    }

	    return LandingSlider;
	})(React.Component);

	exports.LandingSlider = LandingSlider;

	// <div className="how-it-work__arrow-left" onClick={this.prevSlide}><Icon name="arrow-left-line" size={46}/></div>
	// <div className="how-it-work__arrow-right" onClick={this.nextSlide}><Icon name="arrow-right-line" size={46}/></div>
	// <CTG transitionName="slider__slide">
	//     <div key={Math.random()} className="slider__slide">
	//         <img ref="image" src={slide.src} alt={slide.alt}/>
	//     </div>
	// </CTG>

/***/ },
/* 237 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _api = __webpack_require__(1);

	var _Validation = __webpack_require__(223);

	var _ClassesLogger = __webpack_require__(3);

	var _Dispatcher = __webpack_require__(4);

	var _ControlsFormsButtonSimple = __webpack_require__(226);

	var _ControlsFormsInputSimple = __webpack_require__(225);

	var _ControlsFormsFormGroup = __webpack_require__(224);

	var _ControlsSettingsBlock = __webpack_require__(238);

	var _ControlsFormsInputCompanys = __webpack_require__(239);

	var React = __webpack_require__(202);

	var LandingGetInviteForm = (function (_React$Component) {
	    _inherits(LandingGetInviteForm, _React$Component);

	    function LandingGetInviteForm(props) {
	        var _this = this;

	        _classCallCheck(this, LandingGetInviteForm);

	        _get(Object.getPrototypeOf(LandingGetInviteForm.prototype), 'constructor', this).call(this, props);
	        this.state = {
	            isValidated: false
	        };

	        this.onChangeHandler = function (obj) {
	            console.log(obj);
	            // this.setState(obj);
	            _this.validateForm();
	        };

	        this.onChangeHandlerFlags = function (flags) {
	            _this.setState({ flags: flags });
	            _this.validateForm();
	        };

	        this.validateFields = {
	            fields: [{ name: "email", value: true }, { name: "name", value: true }, { name: "phone", value: true }, { name: "flags", value: true }]
	        };

	        this.validateForm = function () {
	            _this.validateFields.fields.forEach(function (field) {
	                if (_this.state[field.name] && _this.state[field.name].length || _this.state[field.name] && _this.state[field.name] != 0) {
	                    field.value = true;
	                } else {
	                    field.value = false;
	                }
	            });

	            // console.log(this.validateFields.fields)

	            _this.setState({ isValidated: _this.isValidated() });
	        };

	        this.isValidated = function () {
	            return _this.validateFields.fields.every(function (field) {
	                return field.value === true;
	            });
	        };

	        this.clearForm = function () {
	            _this.validateFields.fields.forEach(function (field) {
	                if (_this.state[field.name]) {
	                    _this.state[field.name] = null;
	                }
	            });

	            _this.state.isValidated = false;
	        };

	        this.saveForm = function () {
	            var params = {
	                email: _this.state.email,
	                name: _this.state.name,
	                phone: _this.state.phone
	            },
	                message = {};

	            _api.Api.lead_reg(params).then(function (res) {
	                if (res) {
	                    if (res.err) {
	                        _ClassesLogger.logger.log(_this, 'lead_reg', res.msg, 'error');
	                        message = { message: res.msg, type: "error" };
	                    } else {
	                        message = { message: "Приглашение отправлено", type: "info" };
	                        _this.clearForm();
	                        _this.props.onClose();
	                    }
	                }

	                _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, message);
	            });
	        };

	        this.render = function () {
	            console.log(_this.state);
	            return React.createElement(
	                'div',
	                { className: 'modal-container__body row row-no-padding' },
	                React.createElement(
	                    _ControlsFormsFormGroup.FormGroup,
	                    { name: 'E-mail', from: 'email' },
	                    React.createElement(_ControlsFormsInputSimple.InputSimple, { value: _this.state.email, name: 'email', onChange: _this.onChangeHandler, validation: { typing: _Validation.Validation.typingEmail } })
	                ),
	                React.createElement(
	                    _ControlsFormsFormGroup.FormGroup,
	                    { name: 'Ф.И.О.', from: 'name' },
	                    React.createElement(_ControlsFormsInputSimple.InputSimple, { value: _this.state.name, name: 'name', onChange: _this.onChangeHandler })
	                ),
	                React.createElement(
	                    _ControlsFormsFormGroup.FormGroup,
	                    { name: 'Номер телефона', from: 'phone' },
	                    React.createElement(_ControlsFormsInputSimple.InputSimple, { value: _this.state.phone, name: 'phone', onChange: _this.onChangeHandler, validation: { typing: _Validation.Validation.typingPhone } })
	                ),
	                React.createElement(
	                    _ControlsFormsFormGroup.FormGroup,
	                    { name: 'Тип компании', from: 'type' },
	                    React.createElement(_ControlsSettingsBlock.SettingsBlock, { name: 'company-type', type: 'checkbox', flags: _this.state.flags,
	                        change: _this.onChangeHandlerFlags,
	                        choice: [{ id: 0x00000020, value: 'Экспедитор' }, { id: 0x00000080, value: 'Грузовладелец' }, { id: 0x00000040, value: 'Перевозчик' }]
	                    })
	                ),
	                React.createElement(
	                    _ControlsFormsFormGroup.FormGroup,
	                    { name: 'Поиск компании', from: 'company' },
	                    React.createElement(_ControlsFormsInputCompanys.InputCompanys, { name: 'comp', onChange: _this.onChangeHandler, active: true })
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'modal-container__footer' },
	                    React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.saveForm, disabled: !_this.state.isValidated, type: 'success', caption: 'Отправить' })
	                )
	            );
	        };
	    }

	    return LandingGetInviteForm;
	})(React.Component);

	exports.LandingGetInviteForm = LandingGetInviteForm;

/***/ },
/* 238 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(202);

	var SettingsBlock = (function (_React$Component) {
	    _inherits(SettingsBlock, _React$Component);

	    function SettingsBlock() {
	        var _this = this;

	        _classCallCheck(this, SettingsBlock);

	        _get(Object.getPrototypeOf(SettingsBlock.prototype), 'constructor', this).apply(this, arguments);

	        this.check = function (flags) {
	            return (_this.props.flags & flags) === flags;
	        };

	        this.flagsChange = function (type, option) {
	            var flags = undefined;

	            if (!option.id) return;

	            if (type) {
	                flags = _this.props.flags |= option.id;
	            } else {
	                flags = _this.props.flags &= ~option.id;
	            }

	            if (_this.props.change) _this.props.change(flags);
	        };

	        this.handleChange = function (event) {
	            _this.props.choice.forEach(function (option) {
	                if (event.exclude == 1 && event.id != option.id && option.check) {
	                    _this.flagsChange(false, option);
	                    return;
	                }

	                if (!event.exclude && option.exclude == 1 && option.check) {
	                    _this.flagsChange(false, option);
	                    return;
	                }

	                if (event == option) {
	                    _this.flagsChange(!event.check, option);
	                }
	            });
	        };

	        this.render = function () {
	            var Header,
	                Content,
	                state = false,
	                choiceLength = _this.props.choice.length - 1;

	            if (_this.props.type == 'checkbox') {
	                Content = _this.props.choice.map(function (option, i) {
	                    option.check = _this.check(option.id);
	                    return React.createElement(
	                        'div',
	                        { className: 'checkbox-form-control ', key: i },
	                        React.createElement(
	                            'label',
	                            null,
	                            React.createElement('input', { type: 'checkbox',
	                                name: "SettingsBlock-" + _this.props.name,
	                                className: 'checkbox',
	                                checked: option.check,
	                                onChange: _this.handleChange.bind(_this, option) }),
	                            option.value
	                        )
	                    );
	                });
	            }

	            if (_this.props.type == 'radio') {
	                Content = React.createElement(
	                    'div',
	                    { className: 'box-row-nw align-center div-const' },
	                    _this.props.choice.map(function (option, i) {
	                        if (option.id) {
	                            option.check = _this.check(option.id);
	                            if (option.check) state = option.check;
	                        } else {
	                            option.check = !state;
	                        }

	                        return React.createElement(
	                            'div',
	                            { className: 'message message-nl', key: i },
	                            React.createElement(
	                                'div',
	                                { className: 'radio' },
	                                React.createElement(
	                                    'p',
	                                    { className: 'radioP marg-right' },
	                                    React.createElement('input', {
	                                        id: "SettingsBlock-" + _this.props.name + i,
	                                        name: "SettingsBlock-" + _this.props.name,
	                                        type: 'radio',
	                                        onChange: _this.handleChange.bind(_this, option),
	                                        checked: option.check,
	                                        className: 'marg-right'
	                                    }),
	                                    React.createElement(
	                                        'label',
	                                        { className: ' text-form', htmlFor: "SettingsBlock-" + _this.props.name + i },
	                                        React.createElement('span', { className: 'radioButtonGraph' }),
	                                        option.value
	                                    )
	                                )
	                            )
	                        );
	                    })
	                );
	            }

	            if (_this.props.title) {
	                Header = React.createElement(
	                    'div',
	                    { className: 'divider font600 marg-top marg-bottom' },
	                    _this.props.title,
	                    ':'
	                );
	            }

	            return React.createElement(
	                'div',
	                { className: 'box-cln-nw panel-md marg-top marg-bottom' },
	                Header,
	                Content
	            );
	        };
	    }

	    _createClass(SettingsBlock, null, [{
	        key: 'propTypes',
	        value: {
	            title: React.PropTypes.string,
	            name: React.PropTypes.string.isRequired,
	            choice: React.PropTypes.array.isRequired,
	            flags: React.PropTypes.number.isRequired,
	            change: React.PropTypes.func.isRequired,
	            type: React.PropTypes.oneOf(['checkbox', 'radio']).isRequired
	        },
	        enumerable: true
	    }]);

	    return SettingsBlock;
	})(React.Component);

	exports.SettingsBlock = SettingsBlock;

/***/ },
/* 239 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x2, _x3, _x4) { var _again = true; _function: while (_again) { var object = _x2, property = _x3, receiver = _x4; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x2 = parent; _x3 = property; _x4 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _api = __webpack_require__(1);

	var _ClassesLogger = __webpack_require__(3);

	var _InputSimple = __webpack_require__(225);

	var React = __webpack_require__(202);

	var InputCompanys = (function (_React$Component) {
	    _inherits(InputCompanys, _React$Component);

	    function InputCompanys(props) {
	        var _this = this;

	        _classCallCheck(this, InputCompanys);

	        _get(Object.getPrototypeOf(InputCompanys.prototype), 'constructor', this).call(this, props);
	        this.state = {
	            selected: false,
	            req: null,
	            data: []
	        };

	        this.onChangeHandler = function (obj) {
	            _this.setState(obj);
	        };

	        this.onKeyUp = function (e) {
	            if (e.key === "Enter") {
	                _this.submitSearchRequest();
	            }
	        };

	        this.onClick = function (comp) {
	            var obj = {},
	                req = undefined;

	            if (!comp.id) {
	                var data = { inn: comp.dadata.data.inn, addr: comp.dadata.data.address.value };
	                if (comp.dadata.data.kpp) data['kpp'] = comp.dadata.data.kpp;

	                req = comp.dadata.value + ' ' + comp.dadata.data.address.value;

	                new _api.xreq('comp_check', data, function (comp) {
	                    obj[_this.props.name] = comp.res.id;
	                });
	                if (_this.props.onChange) _this.props.onChange(obj);
	            } else {
	                obj[_this.props.name] = comp.id;
	                req = comp.name + ' ' + comp.addr;
	                if (_this.props.onChange) _this.props.onChange(obj);
	            }
	            _this.setState({ req: req, selected: true });
	        };

	        this.submitSearchRequest = function () {
	            var req = arguments.length <= 0 || arguments[0] === undefined ? _this.state.req : arguments[0];

	            if (!req) return;

	            _api.Api.compSuggest({ query: req, count: 12 }).then(function (res) {
	                if (res.err) {
	                    _ClassesLogger.logger.log(_this, 'links search [onSendRequest]', res.err, 'error');
	                    return;
	                }

	                _this.setState({ data: res.suggestions, selected: false });
	            });
	        };

	        this.render = function () {
	            var view = undefined;

	            if (!_this.state.selected && _this.state.data.length) {
	                view = React.createElement(
	                    'div',
	                    { className: 'address-form-control-list' },
	                    _this.state.data.map(function (o, i) {
	                        if (o.id) {
	                            return React.createElement(
	                                'div',
	                                { key: i, className: 'address-form-control-list__item',
	                                    onClick: _this.onClick.bind(null, o) },
	                                o.name + ' ' + o.addr
	                            );
	                        } else {
	                            console.log(o);
	                            return React.createElement(
	                                'div',
	                                { key: i, className: 'address-form-control-list__item',
	                                    onClick: _this.onClick.bind(null, o) },
	                                o.dadata.value + ' ' + o.dadata.data.address.value
	                            );
	                        }
	                    })
	                );
	            }

	            return React.createElement(
	                'div',
	                { className: 'address-form-control' },
	                React.createElement(_InputSimple.InputSimple, { placeholder: 'Укажите название, ИНН или ФИО руководителя и нажмите Enter', value: _this.state.req, name: 'req', onChange: _this.onChangeHandler, onKeyUp: _this.onKeyUp }),
	                view
	            );
	        };
	    }

	    return InputCompanys;
	})(React.Component);

	exports.InputCompanys = InputCompanys;

	// var React = require('react/addons');

	// import {Utils} from '../../utils';
	// import Logger from '../../Classes/Logger';
	// import {Api, xreq} from '../../api';

	// var PureRenderMixin = React.PureRenderMixin;

	// var InputCompany = React.createClass({

	//     mixins: [PureRenderMixin],

	//     propTypes: {
	//         labelWidth: React.PropTypes.number,
	//         value     : React.PropTypes.string
	//     },
	//     getDefaultProps(){
	//         return {
	//             labelWidth: 114,
	//             results:5
	//         }
	//     },

	//     //getInitialState () {
	//     //  return({})
	//     //},

	//     focus () {
	//         this.isFocus = true;
	//         this.expanded = true;
	//         this.setState({});
	//     },

	//     blur () {
	//         this.isFocus = false;
	//         this.expanded = false;
	//         this.setState({});
	//     },

	//     change (e) {
	//         //console.debug('[InputAddress] change ' + e.target.value)
	//         this.addr = e.target.value;
	//         if (this.tid) {
	//             clearTimeout(this.tid);
	//             this.tid = null;
	//         }
	//         this.tid = setTimeout(this.addrTimerHr, 1000);
	//         if (this.props.onChange) {
	//             var obj;
	//             if (this.props.name) {
	//                 obj = {};
	//                 obj[this.props.name] = e.target.value;
	//             } else {
	//                 obj = e.target.value;
	//             }
	//             this.props.onChange(obj);
	//         }
	//     },

	//     addrTimerHr () {
	//         // console.log('[InputAddress] addrTimerHr')
	//         // if (!ymaps) {
	//         //     console.error('ymaps not avaliable now')
	//         //     return
	//         // }
	//         // this.selectedAddrObj = null;
	//         // var myGeocoder = ymaps.geocode(this.addr, {json: true, results: this.props.results});
	//         // myGeocoder.then(
	//         //     (res) => {
	//         //         this.sugg = res.GeoObjectCollection.featureMember;
	//         //         //console.debug(this.sugg)
	//         //         this.expanded = true;
	//         //         this.forceUpdate();
	//         //     },
	//         //     (err) => {
	//         //         console.error('ymaps.geocode failed: ' + err)
	//         //     }
	//         // );

	//         Api.compSuggest({ query: this.addr, count: 12 }).then(res=> {
	//             if(res.err){
	//                 logger.log(this, 'comp search [onSendRequest]', res.err, 'error');       
	//                 return;
	//             }

	//             this.sugg = res.suggestions;
	//             this.expanded = true;

	//             this.forceUpdate();
	//         });
	//     },

	//     addrSelect (comp) {
	//         if(comp.id){
	//             this.props.onChange(o.id);
	//         } else {
	//             let data = {inn: comp.dadata.data.inn, addr: comp.dadata.data.address.value}
	//             if(comp.dadata.data.kpp) data['kpp'] = comp.dadata.data.kpp;

	//             new xreq('comp_check', data, (comp)=>{
	//                 this.props.onChange(comp.res.id);
	//             });
	//         }

	//         this.refs['input'].getDOMNode().value = this.addr;
	//     },

	//     render () {

	//         let suggest;

	//         if (this.expanded && this.sugg && this.sugg.length > 0) {
	//             suggest = (
	//                 <div className="address-form-control-list">
	//                     {
	//                         this.sugg.map((o, i) => {
	//                             return <div key={i} className="address-form-control-list__item"
	//                                         onMouseDown={this.addrSelect.bind(null, o)}>{o.name+' '+o.addr}</div>
	//                         })
	//                     }
	//                 </div>
	//             )
	//         }

	//         return (
	//             <div className="address-form-control">
	//                 <input type="text" ref="input" className="form-control" disabled={!this.props.active} defaultValue={this.props.value} onFocus={this.focus} onBlur={this.blur} onChange={this.change}/>
	//                 {suggest}
	//             </div>
	//         )
	//     }

	// });

	// export {InputCompany}

/***/ },
/* 240 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(202);

	var LandingHowItWorks = (function (_React$Component) {
	    _inherits(LandingHowItWorks, _React$Component);

	    function LandingHowItWorks(props) {
	        _classCallCheck(this, LandingHowItWorks);

	        _get(Object.getPrototypeOf(LandingHowItWorks.prototype), "constructor", this).call(this, props);

	        this.render = function () {
	            return React.createElement(
	                "div",
	                { className: "page-block page-block--light how-it-work" },
	                React.createElement(
	                    "h2",
	                    { className: "page-block__title" },
	                    "Как это работает"
	                ),
	                React.createElement(
	                    "p",
	                    { className: "page-block__description" },
	                    "Великие философы — такие, как Сократ, Платон, Декарт, Спиноза, Диоген и многие другие — обладали чёткими представлениями о том, какая жизнь «лучше всего»"
	                ),
	                React.createElement(
	                    "div",
	                    { className: "how-it-work__container" },
	                    React.createElement(
	                        "div",
	                        { className: "how-it-work__item" },
	                        React.createElement(
	                            "div",
	                            { className: "how-it-work__icon" },
	                            React.createElement("div", { className: "spr spr--browser" }),
	                            React.createElement(
	                                "div",
	                                { className: "how-it-work__step" },
	                                "1"
	                            )
	                        ),
	                        React.createElement(
	                            "p",
	                            { className: "how-it-work__text" },
	                            "Грузовладельцы размещают в системе заказы для своих Экспедиторов."
	                        )
	                    ),
	                    React.createElement("div", { className: "how-it-work__divider" }),
	                    React.createElement(
	                        "div",
	                        { className: "how-it-work__item how-it-work__item--reverse" },
	                        React.createElement(
	                            "div",
	                            { className: "how-it-work__icon" },
	                            React.createElement("div", { className: "spr spr--doc" }),
	                            React.createElement(
	                                "div",
	                                { className: "how-it-work__step" },
	                                "2"
	                            )
	                        ),
	                        React.createElement(
	                            "p",
	                            { className: "how-it-work__text" },
	                            "Выданные экспедитору заказы доступны для его партнеров-перевозчиков"
	                        )
	                    ),
	                    React.createElement("div", { className: "how-it-work__divider how-it-work__divider--reverse" }),
	                    React.createElement(
	                        "div",
	                        { className: "how-it-work__item" },
	                        React.createElement(
	                            "div",
	                            { className: "how-it-work__icon" },
	                            React.createElement("div", { className: "spr spr--search" }),
	                            React.createElement(
	                                "div",
	                                { className: "how-it-work__step" },
	                                "3"
	                            )
	                        ),
	                        React.createElement(
	                            "p",
	                            { className: "how-it-work__text" },
	                            "Перевозчики находят подходящие им заказы и делают предложения экспедиторам"
	                        )
	                    ),
	                    React.createElement("div", { className: "how-it-work__divider" }),
	                    React.createElement(
	                        "div",
	                        { className: "how-it-work__item how-it-work__item--reverse" },
	                        React.createElement(
	                            "div",
	                            { className: "how-it-work__icon" },
	                            React.createElement("div", { className: "spr spr--check" }),
	                            React.createElement(
	                                "div",
	                                { className: "how-it-work__step" },
	                                "4"
	                            )
	                        ),
	                        React.createElement(
	                            "p",
	                            { className: "how-it-work__text" },
	                            "Экспедиторы соглашаются с предложенной ценой или делают встречные предложения",
	                            React.createElement(
	                                "span",
	                                { className: "how-it-work__muted" },
	                                "Когда стороны договорятся, заказ закрывается и становится недоступен для других участников"
	                            )
	                        )
	                    ),
	                    React.createElement("div", { className: "how-it-work__divider how-it-work__divider--reverse" }),
	                    React.createElement(
	                        "div",
	                        { className: "how-it-work__item" },
	                        React.createElement(
	                            "div",
	                            { className: "how-it-work__icon" },
	                            React.createElement("div", { className: "spr spr--map" }),
	                            React.createElement(
	                                "div",
	                                { className: "how-it-work__step" },
	                                "5"
	                            )
	                        ),
	                        React.createElement(
	                            "p",
	                            { className: "how-it-work__text" },
	                            "Водитель приезжает на место погрузки и делает отметку о начале рейса через мобильное приложение"
	                        )
	                    ),
	                    React.createElement("div", { className: "how-it-work__divider" }),
	                    React.createElement(
	                        "div",
	                        { className: "how-it-work__item how-it-work__item--reverse" },
	                        React.createElement(
	                            "div",
	                            { className: "how-it-work__icon" },
	                            React.createElement("div", { className: "spr spr--mobile" }),
	                            React.createElement(
	                                "div",
	                                { className: "how-it-work__step" },
	                                "6"
	                            )
	                        ),
	                        React.createElement(
	                            "p",
	                            { className: "how-it-work__text" },
	                            "После разгрузки водитель фиксирует окончание рейса через мобильное приложение"
	                        )
	                    ),
	                    React.createElement("div", { className: "how-it-work__divider how-it-work__divider--reverse" }),
	                    React.createElement(
	                        "div",
	                        { className: "how-it-work__item" },
	                        React.createElement(
	                            "div",
	                            { className: "how-it-work__icon" },
	                            React.createElement("div", { className: "spr spr--archive" }),
	                            React.createElement(
	                                "div",
	                                { className: "how-it-work__step" },
	                                "7"
	                            )
	                        ),
	                        React.createElement(
	                            "p",
	                            { className: "how-it-work__text" },
	                            "Выполненные заказы ",
	                            React.createElement("br", null),
	                            "попадают в архив"
	                        )
	                    )
	                )
	            );
	        };
	    }

	    return LandingHowItWorks;
	})(React.Component);

	exports.LandingHowItWorks = LandingHowItWorks;

/***/ },
/* 241 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});
	__webpack_require__(242);
	var React = __webpack_require__(202);

	var FlexBox = React.createClass({
	    displayName: 'FlexBox',

	    propTypes: {
	        className: React.PropTypes.string,
	        direction: React.PropTypes.oneOf(['row', 'column']),
	        wrap: React.PropTypes.bool, // true/false
	        justify: React.PropTypes.oneOf(['start', 'end', 'center', 'between', 'around']),
	        alignItems: React.PropTypes.oneOf(['start', 'end', 'center', 'baseline', 'stretch']),
	        alignContent: React.PropTypes.oneOf(['start', 'end', 'center', 'between', 'around', 'stretch'])
	    },

	    getDefaultProps: function getDefaultProps() {
	        return {
	            className: "",
	            direction: "row",
	            wrap: false,
	            justify: "start",
	            alignItems: "stretch",
	            alignContent: "stretch"
	        };
	    },

	    render: function render() {

	        var direction = (function () {
	            switch (this.props.direction) {
	                case "row":
	                    return "row-direction";
	                    break;
	                case "column":
	                    return "column-direction";
	                    break;
	            }
	        }).bind(this);

	        var justify = (function () {
	            switch (this.props.justify) {
	                case "end":
	                    return "justify-end";
	                    break;
	                case "center":
	                    return "justify-center";
	                    break;
	                case "between":
	                    return "justify-between";
	                    break;
	                case "around":
	                    return "justify-around";
	                    break;
	                default:
	                    return "justify-start";
	            }
	        }).bind(this);

	        var alignItems = (function () {
	            switch (this.props.alignItems) {
	                case "end":
	                    return "align-items-end";
	                    break;
	                case "center":
	                    return "align-items-center";
	                    break;
	                case "baseline":
	                    return "align-items-baseline";
	                    break;
	                case "start":
	                    return "align-items-start";
	                    break;
	                default:
	                    return "align-items-stretch";
	            }
	        }).bind(this);

	        var alignContent = (function () {
	            switch (this.props.alignContent) {
	                case "end":
	                    return "align-content-end";
	                    break;
	                case "center":
	                    return "align-content-center";
	                    break;
	                case "between":
	                    return "align-content-between";
	                    break;
	                case "start":
	                    return "align-content-start";
	                    break;
	                case "around":
	                    return "align-content-around";
	                    break;
	                default:
	                    return "align-content-stretch";
	            }
	        }).bind(this);

	        var wrap = this.props.wrap ? "wrap" : "no-wrap";

	        var classes = this.props.className + " " + "flex-box" + " " + direction() + " " + wrap + " " + justify() + " " + alignItems() + " " + alignContent();

	        return React.createElement(
	            'div',
	            { className: classes },
	            this.props.children
	        );
	    }
	});

	exports.FlexBox = FlexBox;

/***/ },
/* 242 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	var update = __webpack_require__(243)(
		__webpack_require__(244)
	);
	// Hot Module Replacement
	if(false) {
		module.hot.accept("!!z:\\cargo\\node_modules\\style-loader\\index.js!z:\\cargo\\node_modules\\css-loader\\index.js!z:\\cargo\\node_modules\\sass-loader\\index.js!z:\\cargo\\client\\styles\\box.scss", function() {
			update(require("!!z:\\cargo\\node_modules\\style-loader\\index.js!z:\\cargo\\node_modules\\css-loader\\index.js!z:\\cargo\\node_modules\\sass-loader\\index.js!z:\\cargo\\client\\styles\\box.scss"));
		});
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 243 */
/***/ function(module, exports, __webpack_require__) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	module.exports = function addStyle(cssCode) {
		if(false) {
			if(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
		}
		var styleElement = document.createElement("style"),
			head = document.head || document.getElementsByTagName("head")[0];
		styleElement.type = "text/css";
		head.appendChild(styleElement);
		if (styleElement.styleSheet) {
			styleElement.styleSheet.cssText = cssCode;
		} else {
			styleElement.appendChild(document.createTextNode(cssCode));
		}
		if(false) {
			return function(cssCode) {
				if(typeof cssCode === "string") {
					if (styleElement.styleSheet) {
						styleElement.styleSheet.cssText = cssCode;
					} else {
						styleElement.childNodes[0].nodeValue = cssCode;
					}
				} else {
					dispose();
				}
			};
		} else {
			// For the useable API, provide a function to remove the stylesheet.
			return dispose;
		}

		function dispose() {
			head.removeChild(styleElement);
		}
	};


/***/ },
/* 244 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	var update = __webpack_require__(243)(
		__webpack_require__(245)
	);
	// Hot Module Replacement
	if(false) {
		module.hot.accept("!!z:\\cargo\\node_modules\\css-loader\\index.js!z:\\cargo\\node_modules\\sass-loader\\index.js!z:\\cargo\\client\\styles\\box.scss", function() {
			update(require("!!z:\\cargo\\node_modules\\css-loader\\index.js!z:\\cargo\\node_modules\\sass-loader\\index.js!z:\\cargo\\client\\styles\\box.scss"));
		});
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 245 */
/***/ function(module, exports) {

	module.exports =
		".flex-box {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex; }\n\n.row-direction {\n  -webkit-flex-direction: horizontal;\n  -moz-flex-direction: horizontal;\n  -ms-flex-direction: row;\n  -webkit-flex-direction: row;\n  flex-direction: row; }\n\n.column-direction {\n  -webkit-flex-direction: vertical;\n  -moz-flex-direction: vertical;\n  -ms-flex-direction: column;\n  -webkit-flex-direction: column;\n  flex-direction: column; }\n\n.wrap {\n  -webkit-flex-wrap: wrap;\n  -moz-flex-wrap: wrap;\n  -ms-flex-wrap: wrap;\n  flex-wrap: wrap; }\n\n.no-wrap {\n  -webkit-flex-wrap: nowrap;\n  -moz-flex-wrap: nowrap;\n  -ms-flex-wrap: nowrap;\n  flex-wrap: nowrap; }\n\n.justify-start {\n  -webkit-box-pack: flex-start;\n  -webkit-justify-content: flex-start;\n  -ms-flex-pack: flex-start;\n  justify-content: flex-start; }\n\n.justify-end {\n  -webkit-box-pack: flex-end;\n  -webkit-justify-content: flex-end;\n  -ms-flex-pack: flex-end;\n  justify-content: flex-end; }\n\n.justify-center {\n  -webkit-box-pack: center;\n  -webkit-justify-content: center;\n  -ms-flex-pack: center;\n  justify-content: center; }\n\n.justify-around {\n  -webkit-box-pack: space-around;\n  -webkit-justify-content: space-around;\n  -ms-flex-pack: space-around;\n  justify-content: space-around; }\n\n.justify-between {\n  -webkit-box-pack: space-between;\n  -webkit-justify-content: space-between;\n  -ms-flex-pack: space-between;\n  justify-content: space-between; }\n\n.align-items-stretch {\n  -webkit-box-align: stretch;\n  -webkit-align-items: stretch;\n  -ms-flex-align: stretch;\n  align-items: stretch; }\n\n.align-items-start {\n  -webkit-box-align: flex-start;\n  -webkit-align-items: flex-start;\n  -ms-flex-align: flex-start;\n  align-items: flex-start; }\n\n.align-items-end {\n  -webkit-box-align: flex-end;\n  -webkit-align-items: flex-end;\n  -ms-flex-align: flex-end;\n  align-items: flex-end; }\n\n.align-items-center {\n  -webkit-box-align: center;\n  -webkit-align-items: center;\n  -ms-flex-align: center;\n  align-items: center; }\n\n.align-items-baseline {\n  -webkit-box-align: baseline;\n  -webkit-align-items: baseline;\n  -ms-flex-align: baseline;\n  align-items: baseline; }\n\n.align-content-stretch {\n  -webkit-align-content: stretch;\n  -ms-flex-line-pack: stretch;\n  align-content: stretch; }\n\n.align-content-center {\n  -webkit-align-content: center;\n  -ms-flex-line-pack: center;\n  align-content: center; }\n\n.align-content-end {\n  -webkit-align-content: flex-end;\n  -ms-flex-line-pack: flex-end;\n  align-content: flex-end; }\n\n.align-content-start {\n  -webkit-align-content: flex-start;\n  -ms-flex-line-pack: flex-start;\n  align-content: flex-start; }\n\n.align-content-around {\n  -webkit-align-content: space-around;\n  -ms-flex-line-pack: space-around;\n  align-content: space-around; }\n\n.align-content-between {\n  -webkit-align-content: space-between;\n  -ms-flex-line-pack: space-between;\n  align-content: space-between; }\n";

/***/ },
/* 246 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _AuthDashboard = __webpack_require__(247);

	var _ClassesLogger = __webpack_require__(3);

	var _utils = __webpack_require__(2);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	var _SimpleComponentsIcons = __webpack_require__(252);

	var _NotificationsError = __webpack_require__(395);

	var _NotificationsError2 = _interopRequireDefault(_NotificationsError);

	var _NotificationsInfo = __webpack_require__(396);

	var _NotificationsInfo2 = _interopRequireDefault(_NotificationsInfo);

	var React = __webpack_require__(202);

	var Notifications = (function (_React$Component) {
	    _inherits(Notifications, _React$Component);

	    function Notifications() {
	        var _this = this;

	        _classCallCheck(this, Notifications);

	        _get(Object.getPrototypeOf(Notifications.prototype), 'constructor', this).call(this);

	        this.componentDidMount = function () {
	            _this.noteTimeout = setTimeout(_this.closeHr, _this.noteTimer);
	        };

	        this.closeHr = function () {
	            if (_this.noteTimeout) {
	                clearTimeout(_this.noteTimeout);
	                _this.noteTimeout = null;
	            }
	            _this.props.close(_this.props.obj.id);
	        };

	        this.selector = function (msg) {
	            switch (msg.type) {
	                case "error":
	                    return React.createElement(_NotificationsError2['default'], { error: msg, close: _this.closeHr });
	                case "info":
	                    return React.createElement(_NotificationsInfo2['default'], { info: msg, close: _this.closeHr });
	            }
	        };

	        this.render = function () {
	            return React.createElement(
	                'div',
	                { className: 'notify animated fadeInUp' },
	                _this.selector(_this.props.obj.msg)
	            );
	        };

	        this.noteTimeout = null;
	        this.noteTimer = 4000;
	    }

	    return Notifications;
	})(React.Component);

	exports.Notifications = Notifications;

/***/ },
/* 247 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _utils = __webpack_require__(2);

	var _ClassesLogger = __webpack_require__(3);

	var _api = __webpack_require__(1);

	var _Dispatcher = __webpack_require__(4);

	var _SimpleComponentsInputSimple = __webpack_require__(248);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	var _SimpleComponentsIcons = __webpack_require__(252);

	var _SimpleComponentsButtonActive = __webpack_require__(253);

	var _LeftMenu = __webpack_require__(254);

	var _UpPanel = __webpack_require__(255);

	var _Header = __webpack_require__(256);

	var _Header2 = _interopRequireDefault(_Header);

	var _ContactCenterContactCenterJs = __webpack_require__(359);

	var _ContactCenterContactCenterJs2 = _interopRequireDefault(_ContactCenterContactCenterJs);

	var _ClassesUserController = __webpack_require__(392);

	var _ClassesUserController2 = _interopRequireDefault(_ClassesUserController);

	var _ClassesCompanyController = __webpack_require__(393);

	var _ClassesCompanyController2 = _interopRequireDefault(_ClassesCompanyController);

	// главный объект для хранения состояний и контроллеров,
	// при загрузке приложения в него добавляются myContacts, myChannels, myChats,
	// доступные на любой странице клиента
	var React = __webpack_require__(202);
	var Router = __webpack_require__(7);
	var RouteHandler = Router.RouteHandler;

	var AppState = {};

	// class UpMenuItem extends React.Component{
	//     render=()=>{
	//         return(
	//             <div className="up-menu-item">
	//                 <a className="up-menu-item-link" href={this.props.href}>{this.props.caption}</a>
	//             </div>
	//         )
	//     }
	// }

	var Dashboard = React.createClass({
	    displayName: 'Dashboard',

	    statics: {

	        willTransitionTo: function willTransitionTo(transition, params, query, callback) {
	            //logger.log('[Dashboard] willTransitionTo hash=' + window.location.hash)

	            // восстановление изначального пути после авторизации
	            var ch = window.location.hash;
	            if (ch == '#/dashboard') {
	                //logger.log(' is dashboard');
	                var th = _Dispatcher.Store.targetHash;
	                if (th) {
	                    //logger.log(' have targetHash: ' + th);
	                    _Dispatcher.Store.targetHash = null;
	                    //logger.log(' redirect to: ' + th.substr(1))
	                    transition.redirect(th.substr(1), null, null);
	                }
	            } else {
	                //logger.log(' set targetHash: ' + ch)
	                _Dispatcher.Store.targetHash = ch;
	            }

	            var provider = _utils.Utils.extract_uri_param(window.location.href, 'provider');
	            _ClassesLogger.logger.log('provider=' + provider);
	            switch (provider) {
	                case 'linkedin':
	                case 'facebook':
	                    transition.redirect('social_oauth', null, null);
	                    callback();
	                    return;
	            }

	            var bind_provider = _utils.Utils.extract_uri_param(window.location.href, 'bind_provider');
	            _ClassesLogger.logger.log('bind_provider=' + bind_provider);
	            switch (bind_provider) {
	                case 'linkedin':
	                case 'facebook':
	                    transition.redirect('social_oauth', null, null);
	                    callback();
	                    return;
	            }

	            _api.Api.sid = _utils.Utils.cookieGet("sid"); // это нужно для обновления sid при логине через oauth
	            _api.Api.user_id = _utils.Utils.cookieGet("user_id"); // это нужно для обновления sid при логине через oauth

	            //logger.log('sid=' + Api.sid + ' user_id=' + Api.user_id);

	            if (_api.Api.sid && _api.Api.user_id) {
	                // проверка sid

	                _api.Api.userSessionsRequest().then(function (res) {
	                    //logger.log('Dashboard: userSessionsRequest', res);
	                    if (res) {
	                        if (res.err) {
	                            // проверка провалена, идем на логин
	                            transition.redirect('landing', null, null);
	                            callback();
	                        } else {
	                            // проверка - ок
	                            _Dispatcher.Store.sessions = res.sessions;
	                            // запускаем веб-сокет
	                            _Dispatcher.Events.openWebSocket();
	                            callback();
	                        }
	                    } else {
	                        _ClassesLogger.logger.log('ERROR: API has returned undefined result.');
	                        callback();
	                    }
	                });
	            } else {
	                // sid-а нет, сразу на логин
	                transition.redirect('landing', null, null);
	                callback();
	            }
	        }

	    },

	    getInitialState: function getInitialState() {
	        return {
	            profile: null,
	            checkComps: false
	        };
	    },
	    updateUserState: function updateUserState(state) {
	        this.createMyComp(state);
	        this.setState({ userState: state });
	    },

	    updateCompanyState: function updateCompanyState(state) {
	        this.setState({ companyState: state });
	    },

	    createMyComp: function createMyComp(userState) {
	        var comp_id = userState.comp_id;
	        if (comp_id) {
	            AppState.myCompany = new _ClassesCompanyController2['default'](comp_id); //при получении юзер стейт создаем экземпляр компании
	            AppState.myCompany.on("update_companyState", this.updateCompanyState);
	        }
	    },

	    componentWillMount: function componentWillMount() {
	        var userId = _utils.Utils.cookieGet("user_id");
	        AppState.user = new _ClassesUserController2['default'](userId); //создаем экземпляр юзера
	        AppState.user.on("update_userState", this.updateUserState);
	        //AppState.myEvents = new EventsClass();        // deprecated, use Events from Dispatcher.js
	    },

	    componentWillUnmount: function componentWillUnmount() {
	        //Events.rem(Events.EV_PROFILE_UPDATE, this.updateUser);
	        AppState.user.rem("update_userState", this.updateUserState);
	        //AppState.user.rem("update_userState", this.createMyComp);
	    },

	    render: function render() {
	        // let us = this.state.userState;
	        // var userProfileItem = (this.state.userState !== undefined ) ? (
	        //         <a className="user-profile-item" href="#/dashboard/profile">
	        //             <div className="user-profile-item-photo">{(us.first_name || '').charAt(0)}{(us.last_name || '').charAt(0)}</div>
	        //             <span className="user-profile-item-name" >{us.first_name || ''}</span>
	        //             <span className="user-profile-item-last-name">{us.last_name || ''}</span>
	        //         </a>) : null

	        var links = [{
	            name: "Компания",
	            href: '#dashboard/company',
	            hash: "company"
	        }, {
	            name: "Партнеры",
	            href: '#dashboard/links',
	            hash: "links"
	        }, {
	            name: "Заказы",
	            href: '#/dashboard/orders/open',
	            hash: "orders"
	        }, {
	            name: "Запросы ставок",
	            href: '#/dashboard/price-requests',
	            hash: "price-requests"
	        }];

	        var r = this.state.userState && this.state.companyState ? React.createElement(RouteHandler, { user: this.state.userState, company: this.state.companyState ? this.state.companyState : null }) : null;

	        return React.createElement(
	            'div',
	            { className: 'page-main' },
	            React.createElement(_Header2['default'], { links: links, user: this.state.userState }),
	            React.createElement(
	                'div',
	                { className: 'page-main__sidebar contact-center' },
	                React.createElement(_ContactCenterContactCenterJs2['default'], null)
	            ),
	            React.createElement(
	                'div',
	                { className: 'page-main__content' },
	                r
	            )
	        );
	    }
	});

	exports.Dashboard = Dashboard;
	exports.AppState = AppState;

	// <div>
	//     <UpPanel>
	//         {userProfileItem}
	//         <UpMenuItem key="company" caption="Компания" href="#dashboard/company"/>
	//         <UpMenuItem key="links" caption="Партнеры" href="#dashboard/links"/>
	//         <UpMenuItem key="orders" caption="Заявки" href="#dashboard/orders"/>
	//         <UpMenuItem key="price-requests" caption="Запросы ставок" href="#dashboard/price-requests"/>
	//         <FlexBox direction="row" alignItems="center">
	//             <ButtonActive onClick={this.exit} caption="Выход"/>
	//             <NotificationCenter/>
	//         </FlexBox>
	//     </UpPanel>
	//     <div className="box-row-nw align-stretch">
	//         <div id="left-menu-wrap" className="marg-r">
	//             <ContactCenter/>
	//         </div>
	//         <div id="bg-main" className="light-gray-bg box-row-nw align-stretch">
	//             {r}
	//         </div>
	//     </div>
	// </div>

/***/ },
/* 248 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _stylesThemeController = __webpack_require__(249);

	var React = __webpack_require__(202);

	var InputSimple = (function (_React$Component) {
	    _inherits(InputSimple, _React$Component);

	    function InputSimple() {
	        var _this = this;

	        _classCallCheck(this, InputSimple);

	        _get(Object.getPrototypeOf(InputSimple.prototype), 'constructor', this).apply(this, arguments);

	        this.state = {
	            defaultValue: this.props.value
	        };

	        this.onKeyUp = function (e) {
	            var k = _this.props.onKeyUp;
	            if (k) k(e);
	        };

	        this.keypress = function (e) {
	            //console.log('[InputText] keypress')

	            // max length check
	            if (_this.props.maxLength && e.target.value.length + 1 > _this.props.maxLength) {
	                e.returnValue = false;
	                if (e.preventDefault) e.preventDefault();
	            }

	            if (!_this.props.validation || !_this.props.validation.typing) return;
	            _this.props.validation.typing(e);
	        };

	        this.change = function (e) {
	            var v = e.target.value;
	            var obj;
	            if (_this.props.name) {
	                obj = {};
	                obj[_this.props.name] = v;
	            } else {
	                obj = v;
	            }
	            if (_this.props.onChange) {
	                _this.props.onChange(obj);
	            }
	        };

	        this.componentWillReceiveProps = function (newProps) {
	            //console.log("new props");
	            _this.setState({ defaultValue: newProps.value });
	        };

	        this.render = function () {
	            //console.log("RENDER INPUT");
	            //console.log(this.props);
	            return React.createElement('input', { className: _this.props.className ? "input-simple " + _this.props.className : "input-simple",
	                type: _this.props.type,
	                autoFocus: _this.props.autoFocus,
	                disabled: !_this.props.active,
	                placeholder: _this.props.placeholder,
	                onChange: _this.change,
	                onKeyUp: _this.onKeyUp,
	                onKeyPress: _this.keypress,
	                value: _this.props.value,
	                defaultValue: _this.props.defaultValue,
	                ref: 'inp'
	            });
	        };
	    }

	    _createClass(InputSimple, null, [{
	        key: 'propTypes',
	        value: {
	            onChange: React.PropTypes.func.isRequired,
	            onKeyUp: React.PropTypes.func,
	            keypress: React.PropTypes.func,
	            name: React.PropTypes.string,
	            placeholder: React.PropTypes.string,
	            autoFocus: React.PropTypes.bool,
	            active: React.PropTypes.bool,
	            type: React.PropTypes.string,
	            className: React.PropTypes.string,
	            value: React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.number])
	        },
	        enumerable: true
	    }, {
	        key: 'defaultProps',
	        value: {
	            styleVariables: _stylesThemeController.ThemeController.InputSimple.InputSimple,
	            active: true
	        },
	        enumerable: true
	    }]);

	    return InputSimple;
	})(React.Component);

	exports.InputSimple = InputSimple;

/***/ },
/* 249 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	var _Theme_standart = __webpack_require__(250);

	var _Theme_new = __webpack_require__(251);

	// создает ноду <style> с переданным id и фрагментом css

	var Style = function Style(params) {
	    var _this = this;

	    _classCallCheck(this, Style);

	    this.done = function () {
	        _this.state = "ready";
	        var f = _this.params.onLoad;
	        if (f) f();
	    };

	    this.removeFromDOM = function () {
	        try {
	            _this.node.remove();
	        } catch (ex) {
	            console.log(ex);
	        }
	    };

	    this.params = params;
	    this.state = "idle";
	    this.node = document.getElementById(params.id);
	    if (this.node) {
	        this.done();
	    } else {
	        this.state = "appending";
	        var styleImplementation = document.createElement('style');
	        styleImplementation.type = 'text/css';
	        styleImplementation.id = params.id;
	        styleImplementation.innerHTML = params.css;
	        document.getElementsByTagName('head')[0].appendChild(styleImplementation);
	        styleImplementation.onload = this.done;
	    }
	}
	// меняет темы для конкретных компонентов
	;

	var ThemeController = {
	    ButtonActive: _Theme_standart.Theme_standart, //+
	    TransparentButton: _Theme_standart.Theme_standart, //+
	    UpPanel: _Theme_standart.Theme_standart, //+
	    LogoName: _Theme_standart.Theme_standart, //+
	    InputSimple: _Theme_standart.Theme_standart, //+
	    SmallPanel: _Theme_standart.Theme_standart, //+
	    AnimateButton: _Theme_standart.Theme_standart, //-
	    Card: _Theme_standart.Theme_standart, //+
	    LeftMenu: _Theme_standart.Theme_standart //+

	};

	exports.ThemeController = ThemeController;
	exports.Style = Style;

/***/ },
/* 250 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var IndigoPalette = {
	    PrimaryColor: "#3F51B5",
	    TextIconsColor: "#ffffff",
	    LightPrimaryColor: "rgba(197, 202, 233, 0.4)",
	    AccentColor: "#FF4081",
	    PrimaryText: "#212121",
	    SecondaryText: "#727272",
	    DividerColor: "#B6B6B6",
	    DarkPrimaryColor: "#303F9F",
	    InactivePrimaryColor: "#aaaaaa"
	};

	var CurrentPalette = IndigoPalette; // устанавливаем текущую палитру

	var options = {
	    btnBorderFocus: "1px solid " + CurrentPalette.PrimaryColor,
	    btnBorder: "solid " + CurrentPalette.DividerColor + " 1px",
	    defaultBorderRadius: '2px',
	    defaultBoxShadow: '0 1px 6px rgba(0,0,0,.25)',
	    buttonBoxShadow: '0px 1px 6px rgba(0,0,0,.4)',
	    borderBottomDivider: "2px solid " + CurrentPalette.LightPrimaryColor

	};

	var PrimaryColor = CurrentPalette.PrimaryColor;
	var TextIconsColor = CurrentPalette.TextIconsColor;
	var LightPrimaryColor = CurrentPalette.LightPrimaryColor;
	var AccentColor = CurrentPalette.AccentColor;
	var PrimaryText = CurrentPalette.PrimaryText;
	var SecondaryText = CurrentPalette.SecondaryText;
	var DividerColor = CurrentPalette.DividerColor;
	var DarkPrimaryColor = CurrentPalette.DarkPrimaryColor;
	var InactivePrimaryColor = CurrentPalette.InactivePrimaryColor;
	var hoverColor = "rgba(63, 81, 181, 0.8)"; //  сопоставить с палитрой
	var tableText = "rgba(0,0,0,0.87)"; //  сопоставить с палитрой

	var Theme_standart = {
	    ButtonActive: {
	        color: PrimaryColor,
	        backgroundColor: TextIconsColor,
	        hover: {
	            backgroundColor: LightPrimaryColor
	        }
	    },
	    TransparentButton: {
	        color: PrimaryColor,
	        hover: {
	            backgroundColor: LightPrimaryColor
	        }
	    },
	    TransparentButtonDisabled: {
	        color: InactivePrimaryColor,
	        hover: {
	            backgroundColor: LightPrimaryColor
	        }
	    },
	    UpPanel: {
	        backgroundColor: PrimaryColor
	    },
	    LogoName: {
	        headingName: {
	            color: TextIconsColor
	        }
	    },
	    InputSimple: {
	        borderBottom: options.btnBorder,
	        focus: {
	            borderBottom: options.btnBorderFocus
	        },
	        disabled: {
	            backgroundColor: TextIconsColor
	        }
	    },
	    SmallPanel: {
	        borderRadius: options.defaultBorderRadius,
	        boxShadow: options.defaultBoxShadow,
	        backgroundColor: TextIconsColor,
	        color: PrimaryText,
	        header: {
	            backgroundColor: LightPrimaryColor,
	            color: PrimaryColor
	        }
	    },
	    AnimateButton: {
	        boxShadow: options.buttonBoxShadow,
	        backgroundColor: PrimaryColor,
	        color: TextIconsColor,
	        hover: {
	            backgroundColor: hoverColor
	        }
	    },
	    Card: {
	        backgroundColor: TextIconsColor,
	        boxShadow: options.buttonBoxShadow,
	        cardTitle: {
	            color: tableText
	        },
	        subTitle: {
	            color: tableText
	        }
	    },
	    LeftMenu: {
	        borderRadius: options.defaultBorderRadius,
	        boxShadow: options.defaultBoxShadow,
	        backgroundColor: TextIconsColor
	    }
	};

	exports.Theme_standart = Theme_standart;

/***/ },
/* 251 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var Theme_new = {
	    TestButton: {
	        color: "red", //$btn-color
	        backgroundColor: "blue", //$login-window-color;
	        hover: {
	            backgroundColor: "rgba(197, 202, 233, 0.4)" //$primary-shade
	        }
	    }
	};

	exports.Theme_new = Theme_new;

/***/ },
/* 252 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var React = __webpack_require__(202);

	var Icon = React.createClass({
	    displayName: "Icon",

	    propTypes: {
	        className: React.PropTypes.string,
	        size: React.PropTypes.number,
	        iconName: React.PropTypes.string.isRequired,
	        onClick: React.PropTypes.func,
	        fill: React.PropTypes.string
	    },

	    getDefaultProps: function getDefaultProps() {
	        return {
	            className: "icon-dark",
	            size: 24
	        };
	    },
	    onClick: function onClick() {
	        var c = this.props.onClick;
	        if (c) c();
	    },

	    render: function render() {
	        //console.log(this.props);
	        switch (this.props.iconName) {
	            // Old Icon
	            case "tag-faces":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        viewBox: "0 0 24 24",
	                        "data-name": this.props.dataName,
	                        onClick: this.onClick
	                    },
	                    React.createElement("path", { d: "M0 0h24v24H0z", fill: "none" }),
	                    React.createElement("path", { d: "M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm3.5-9c.83 0 1.5-.67 1.5-1.5S16.33 8 15.5 8 14 8.67 14 9.5s.67 1.5 1.5 1.5zm-7 0c.83 0 1.5-.67 1.5-1.5S9.33 8 8.5 8 7 8.67 7 9.5 7.67 11 8.5 11zm3.5 6.5c2.33 0 4.31-1.46 5.11-3.5H6.89c.8 2.04 2.78 3.5 5.11 3.5z" })
	                );
	                break;
	            case "add":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        viewBox: "0 0 24 24",
	                        "data-name": this.props.dataName,
	                        onClick: this.onClick
	                    },
	                    React.createElement("path", { d: "M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z" }),
	                    React.createElement("path", { d: "M0 0h24v24H0z", fill: "none" })
	                );
	                break;
	            case "person-outline":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        viewBox: "0 0 24 24",
	                        "data-name": this.props.dataName,
	                        onClick: this.onClick,
	                        fill: this.props.fill
	                    },
	                    React.createElement("path", { d: "M12 5.9c1.16 0 2.1.94 2.1 2.1s-.94 2.1-2.1 2.1S9.9 9.16 9.9 8s.94-2.1 2.1-2.1m0 9c2.97 0 6.1 1.46 6.1 2.1v1.1H5.9V17c0-.64 3.13-2.1 6.1-2.1M12 4C9.79 4 8 5.79 8 8s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm0 9c-2.67 0-8 1.34-8 4v3h16v-3c0-2.66-5.33-4-8-4z" }),
	                    React.createElement("path", { d: "M0 0h24v24H0z", fill: "none" })
	                );
	                break;
	            case "info-outline":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        viewBox: "0 0 24 24",
	                        "data-name": this.props.dataName,
	                        onClick: this.onClick,
	                        fill: this.props.fill
	                    },
	                    React.createElement("path", { d: "M0 0h24v24H0z", fill: "none" }),
	                    React.createElement("path", { d: "M11 17h2v-6h-2v6zm1-15C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zM11 9h2V7h-2v2z" })
	                );
	                break;
	            case "power settings new":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        className: this.props.className,
	                        viewBox: "0 0 24 24",
	                        width: this.props.size,
	                        height: this.props.size,
	                        "data-name": this.props.dataName
	                    },
	                    React.createElement("path", { d: "M0 0h24v24H0z", fill: "none" }),
	                    React.createElement("path", {
	                        d: "M13 3h-2v10h2V3zm4.83 2.17l-1.42 1.42C17.99 7.86 19 9.81 19 12c0 3.87-3.13 7-7 7s-7-3.13-7-7c0-2.19 1.01-4.14 2.58-5.42L6.17 5.17C4.23 6.82 3 9.26 3 12c0 4.97 4.03 9 9 9s9-4.03 9-9c0-2.74-1.23-5.18-3.17-6.83z" })
	                );
	                break;
	            case "arrow-left":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        viewBox: "0 0 24 24",
	                        "data-name": this.props.dataName
	                    },
	                    React.createElement("path", { d: "M15.41,16.58L10.83,12L15.41,7.41L14,6L8,12L14,18L15.41,16.58Z" })
	                );
	                break;
	            case "arrow-right":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        viewBox: "0 0 24 24",
	                        "data-name": this.props.dataName
	                    },
	                    React.createElement("path", { d: "M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z" })
	                );
	                break;
	            case "expand-less":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        className: this.props.className,
	                        viewBox: "0 0 24 24",
	                        width: this.props.size,
	                        height: this.props.size,
	                        "data-name": this.props.dataName
	                    },
	                    React.createElement("path", { d: "M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z" }),
	                    React.createElement("path", { d: "M0 0h24v24H0z", fill: "none" })
	                );
	                break;
	            case "expand-more":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        className: this.props.className,
	                        viewBox: "0 0 24 24",
	                        width: this.props.size,
	                        height: this.props.size,
	                        "data-name": this.props.dataName
	                    },
	                    React.createElement("path", { d: "M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z" }),
	                    React.createElement("path", { d: "M0 0h24v24H0z", fill: "none" })
	                );
	                break;
	            case "select-down":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        viewBox: "0 0 24 24",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        "data-name": this.props.dataName
	                    },
	                    React.createElement("path", { d: "M7,10L12,15L17,10H7Z" })
	                );
	                break;
	            case "select-up":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        viewBox: "0 0 24 24",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        "data-name": this.props.dataName
	                    },
	                    React.createElement("path", { d: "M7,15L12,10L17,15H7Z" })
	                );
	                break;
	            case "minimize-window":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        viewBox: "0 0 24 24",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        "data-name": this.props.dataName
	                    },
	                    React.createElement("path", { d: "M19,6.41L17.59,5L7,15.59V9H5V19H15V17H8.41L19,6.41Z" })
	                );
	                break;
	            case "event":
	                return React.createElement(
	                    "svg",
	                    {
	                        xmlns: "http://www.w3.org/2000/svg",
	                        viewBox: "0 0 24 24",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        "data-name": this.props.dataName
	                    },
	                    React.createElement("path", {
	                        d: "M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z" }),
	                    React.createElement("path", { d: "M0 0h24v24H0z", fill: "none" })
	                );
	                break;
	            case "find-partners":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        viewBox: "0 0 24 24",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        "data-name": this.props.dataName
	                    },
	                    React.createElement("path", {
	                        d: "M13,13C11,13 7,14 7,16V18H19V16C19,14 15,13 13,13M19.62,13.16C20.45,13.88 21,14.82 21,16V18H24V16C24,14.46 21.63,13.5 19.62,13.16M13,11A3,3 0 0,0 16,8A3,3 0 0,0 13,5A3,3 0 0,0 10,8A3,3 0 0,0 13,11M18,11A3,3 0 0,0 21,8A3,3 0 0,0 18,5C17.68,5 17.37,5.05 17.08,5.14C17.65,5.95 18,6.94 18,8C18,9.06 17.65,10.04 17.08,10.85C17.37,10.95 17.68,11 18,11M8,10H5V7H3V10H0V12H3V15H5V12H8V10Z" })
	                );
	                break;
	            case "company-icon":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        viewBox: "0 0 24 24",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        "data-name": this.props.dataName
	                    },
	                    React.createElement("path", {
	                        d: "M14,6H10V4H14M20,6H16V4L14,2H10L8,4V6H4C2.89,6 2,6.89 2,8V19A2,2 0 0,0 4,21H20A2,2 0 0,0 22,19V8C22,6.89 21.1,6 20,6Z" })
	                );
	                break;
	            case "search-icon":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        viewBox: "0 0 24 24",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        "data-name": this.props.dataName,
	                        fill: this.props.fill
	                    },
	                    React.createElement("path", {
	                        d: "M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z" })
	                );
	                break;
	            case "settings-icon":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        viewBox: "0 0 24 24",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        "data-name": this.props.dataName,
	                        onClick: this.onClick
	                    },
	                    React.createElement("path", {
	                        d: "M12,15.5A3.5,3.5 0 0,1 8.5,12A3.5,3.5 0 0,1 12,8.5A3.5,3.5 0 0,1 15.5,12A3.5,3.5 0 0,1 12,15.5M19.43,12.97C19.47,12.65 19.5,12.33 19.5,12C19.5,11.67 19.47,11.34 19.43,11L21.54,9.37C21.73,9.22 21.78,8.95 21.66,8.73L19.66,5.27C19.54,5.05 19.27,4.96 19.05,5.05L16.56,6.05C16.04,5.66 15.5,5.32 14.87,5.07L14.5,2.42C14.46,2.18 14.25,2 14,2H10C9.75,2 9.54,2.18 9.5,2.42L9.13,5.07C8.5,5.32 7.96,5.66 7.44,6.05L4.95,5.05C4.73,4.96 4.46,5.05 4.34,5.27L2.34,8.73C2.21,8.95 2.27,9.22 2.46,9.37L4.57,11C4.53,11.34 4.5,11.67 4.5,12C4.5,12.33 4.53,12.65 4.57,12.97L2.46,14.63C2.27,14.78 2.21,15.05 2.34,15.27L4.34,18.73C4.46,18.95 4.73,19.03 4.95,18.95L7.44,17.94C7.96,18.34 8.5,18.68 9.13,18.93L9.5,21.58C9.54,21.82 9.75,22 10,22H14C14.25,22 14.46,21.82 14.5,21.58L14.87,18.93C15.5,18.67 16.04,18.34 16.56,17.94L19.05,18.95C19.27,19.03 19.54,18.95 19.66,18.73L21.66,15.27C21.78,15.05 21.73,14.78 21.54,14.63L19.43,12.97Z" })
	                );
	                break;
	            case "user-icon":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        viewBox: "0 0 24 24",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        "data-name": this.props.dataName,
	                        fill: this.props.fill
	                    },
	                    React.createElement("path", {
	                        d: "M12,4A4,4 0 0,1 16,8A4,4 0 0,1 12,12A4,4 0 0,1 8,8A4,4 0 0,1 12,4M12,14C16.42,14 20,15.79 20,18V20H4V18C4,15.79 7.58,14 12,14Z" })
	                );
	                break;
	            case "user-plus-icon":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        viewBox: "0 0 24 24",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        "data-name": this.props.dataName,
	                        fill: this.props.fill
	                    },
	                    React.createElement("path", { d: "M15,14C12.33,14 7,15.33 7,18V20H23V18C23,15.33 17.67,14 15,14M6,10V7H4V10H1V12H4V15H6V12H9V10M15,12A4,4 0 0,0 19,8A4,4 0 0,0 15,4A4,4 0 0,0 11,8A4,4 0 0,0 15,12Z" })
	                );
	                break;
	            case "user-minus-icon":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        viewBox: "0 0 24 24",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        "data-name": this.props.dataName
	                    },
	                    React.createElement("path", { d: "M15,14C12.33,14 7,15.33 7,18V20H23V18C23,15.33 17.67,14 15,14M1,10V12H9V10M15,12A4,4 0 0,0 19,8A4,4 0 0,0 15,4A4,4 0 0,0 11,8A4,4 0 0,0 15,12Z" })
	                );
	                break;
	            case "user-remove-icon":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        viewBox: "0 0 24 24",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        "data-name": this.props.dataName
	                    },
	                    React.createElement("path", { d: "M15,14C17.67,14 23,15.33 23,18V20H7V18C7,15.33 12.33,14 15,14M15,12A4,4 0 0,1 11,8A4,4 0 0,1 15,4A4,4 0 0,1 19,8A4,4 0 0,1 15,12M5,9.59L7.12,7.46L8.54,8.88L6.41,11L8.54,13.12L7.12,14.54L5,12.41L2.88,14.54L1.46,13.12L3.59,11L1.46,8.88L2.88,7.46L5,9.59Z" })
	                );
	                break;
	            case "dashboard-icon":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        viewBox: "0 0 24 24",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        "data-name": this.props.dataName
	                    },
	                    React.createElement("path", { d: "M13,3V9H21V3M13,21H21V11H13M3,21H11V15H3M3,13H11V3H3V13Z" })
	                );
	                break;
	            case "details-icon":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        viewBox: "0 0 24 24",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        "data-name": this.props.dataName
	                    },
	                    React.createElement("path", {
	                        d: "M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z" })
	                );
	                break;
	            case "staff-icon":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        viewBox: "0 0 24 24",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        "data-name": this.props.dataName
	                    },
	                    React.createElement("path", {
	                        d: "M16,13C15.71,13 15.38,13 15.03,13.05C16.19,13.89 17,15 17,16.5V19H23V16.5C23,14.17 18.33,13 16,13M8,13C5.67,13 1,14.17 1,16.5V19H15V16.5C15,14.17 10.33,13 8,13M8,11A3,3 0 0,0 11,8A3,3 0 0,0 8,5A3,3 0 0,0 5,8A3,3 0 0,0 8,11M16,11A3,3 0 0,0 19,8A3,3 0 0,0 16,5A3,3 0 0,0 13,8A3,3 0 0,0 16,11Z" })
	                );
	                break;
	            case "request-icon":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        viewBox: "0 0 24 24",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        "data-name": this.props.dataName
	                    },
	                    React.createElement("path", {
	                        d: "M19,11H15V15H13V11H9V9H13V5H15V9H19M20,2H8A2,2 0 0,0 6,4V16A2,2 0 0,0 8,18H20A2,2 0 0,0 22,16V4A2,2 0 0,0 20,2M4,6H2V20A2,2 0 0,0 4,22H18V20H4V6Z" })
	                );
	                break;
	            case "tender-icon":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        viewBox: "0 0 24 24",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        "data-name": this.props.dataName
	                    },
	                    React.createElement("path", {
	                        d: "M14,12H15.5V14.82L17.94,16.23L17.19,17.53L14,15.69V12M4,2H18A2,2 0 0,1 20,4V10.1C21.24,11.36 22,13.09 22,15A7,7 0 0,1 15,22C13.09,22 11.36,21.24 10.1,20H4A2,2 0 0,1 2,18V4A2,2 0 0,1 4,2M4,15V18H8.67C8.24,17.09 8,16.07 8,15H4M4,8H10V5H4V8M18,8V5H12V8H18M4,13H8.29C8.63,11.85 9.26,10.82 10.1,10H4V13M15,10.15A4.85,4.85 0 0,0 10.15,15C10.15,17.68 12.32,19.85 15,19.85A4.85,4.85 0 0,0 19.85,15C19.85,12.32 17.68,10.15 15,10.15Z" })
	                );
	                break;
	            case "close-icon":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        viewBox: "0 0 24 24",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        "data-name": this.props.dataName
	                    },
	                    React.createElement("path", {
	                        d: "M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z" })
	                );
	                break;
	            case "plus-circle-icon":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        viewBox: "0 0 24 24",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        "data-name": this.props.dataName
	                    },
	                    React.createElement("path", {
	                        d: "M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M13,7H11V11H7V13H11V17H13V13H17V11H13V7Z" })
	                );
	                break;
	            case "minus-circle-icon":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        viewBox: "0 0 24 24",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        "data-name": this.props.dataName
	                    },
	                    React.createElement("path", {
	                        d: "M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M7,13H17V11H7" })
	                );
	                break;
	            case "close-circle-icon":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        viewBox: "0 0 24 24",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        onClick: this.onClick,
	                        "data-name": this.props.dataName,
	                        fill: this.props.fill
	                    },
	                    React.createElement("path", { d: "M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2C6.47,2 2,6.47 2,12C2,17.53 6.47,22 12,22C17.53,22 22,17.53 22,12C22,6.47 17.53,2 12,2M14.59,8L12,10.59L9.41,8L8,9.41L10.59,12L8,14.59L9.41,16L12,13.41L14.59,16L16,14.59L13.41,12L16,9.41L14.59,8Z" })
	                );
	                break;
	            case "pin-icon":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        viewBox: "0 0 24 24",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        "data-name": this.props.dataName
	                    },
	                    React.createElement("path", {
	                        d: "M12,11.5A2.5,2.5 0 0,1 9.5,9A2.5,2.5 0 0,1 12,6.5A2.5,2.5 0 0,1 14.5,9A2.5,2.5 0 0,1 12,11.5M12,2A7,7 0 0,0 5,9C5,14.25 12,22 12,22C12,22 19,14.25 19,9A7,7 0 0,0 12,2Z" })
	                );
	                break;

	            case "connect-icon":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        viewBox: "0 0 24 24",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        "data-name": this.props.dataName
	                    },
	                    React.createElement("path", {
	                        d: "M6,2A4,4 0 0,1 10,6C10,7.86 8.73,9.43 7,9.87V14.13C8.73,14.57 10,16.14 10,18A4,4 0 0,1 6,22A4,4 0 0,1 2,18C2,16.14 3.27,14.57 5,14.13V9.87C3.27,9.43 2,7.86 2,6A4,4 0 0,1 6,2M6,4A2,2 0 0,0 4,6A2,2 0 0,0 6,8A2,2 0 0,0 8,6A2,2 0 0,0 6,4M6,16A2,2 0 0,0 4,18A2,2 0 0,0 6,20A2,2 0 0,0 8,18A2,2 0 0,0 6,16M22,18A4,4 0 0,1 18,22A4,4 0 0,1 14,18C14,16.14 15.27,14.57 17,14.13V7H15V10.25L10.75,6L15,1.75V5H17A2,2 0 0,1 19,7V14.13C20.73,14.57 22,16.14 22,18M18,16A2,2 0 0,0 16,18A2,2 0 0,0 18,20A2,2 0 0,0 20,18A2,2 0 0,0 18,16Z" })
	                );
	                break;
	            case "facebook-box":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        viewBox: "0 0 24 24",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        "data-name": this.props.dataName
	                    },
	                    React.createElement("path", {
	                        d: "M19,4V7H17A1,1 0 0,0 16,8V10H19V13H16V20H13V13H11V10H13V7.5C13,5.56 14.57,4 16.5,4M20,2H4A2,2 0 0,0 2,4V20A2,2 0 0,0 4,22H20A2,2 0 0,0 22,20V4C22,2.89 21.1,2 20,2Z" })
	                );
	                break;
	            case "twitter-icon":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        viewBox: "0 0 24 24",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        "data-name": this.props.dataName
	                    },
	                    React.createElement("path", {
	                        d: "M17.71,9.33C17.64,13.95 14.69,17.11 10.28,17.31C8.46,17.39 7.15,16.81 6,16.08C7.34,16.29 9,15.76 9.9,15C8.58,14.86 7.81,14.19 7.44,13.12C7.82,13.18 8.22,13.16 8.58,13.09C7.39,12.69 6.54,11.95 6.5,10.41C6.83,10.57 7.18,10.71 7.64,10.74C6.75,10.23 6.1,8.38 6.85,7.16C8.17,8.61 9.76,9.79 12.37,9.95C11.71,7.15 15.42,5.63 16.97,7.5C17.63,7.38 18.16,7.14 18.68,6.86C18.47,7.5 18.06,7.97 17.56,8.33C18.1,8.26 18.59,8.13 19,7.92C18.75,8.45 18.19,8.93 17.71,9.33M20,2H4A2,2 0 0,0 2,4V20A2,2 0 0,0 4,22H20A2,2 0 0,0 22,20V4C22,2.89 21.1,2 20,2Z" })
	                );
	                break;
	            case "vk-icon":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        viewBox: "0 0 24 24",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        "data-name": this.props.dataName
	                    },
	                    React.createElement("path", {
	                        d: "M19.54,14.6C21.09,16.04 21.41,16.73 21.46,16.82C22.1,17.88 20.76,17.96 20.76,17.96L18.18,18C18.18,18 17.62,18.11 16.9,17.61C15.93,16.95 15,15.22 14.31,15.45C13.6,15.68 13.62,17.23 13.62,17.23C13.62,17.23 13.62,17.45 13.46,17.62C13.28,17.81 12.93,17.74 12.93,17.74H11.78C11.78,17.74 9.23,18 7,15.67C4.55,13.13 2.39,8.13 2.39,8.13C2.39,8.13 2.27,7.83 2.4,7.66C2.55,7.5 2.97,7.5 2.97,7.5H5.73C5.73,7.5 6,7.5 6.17,7.66C6.32,7.77 6.41,8 6.41,8C6.41,8 6.85,9.11 7.45,10.13C8.6,12.12 9.13,12.55 9.5,12.34C10.1,12.03 9.93,9.53 9.93,9.53C9.93,9.53 9.94,8.62 9.64,8.22C9.41,7.91 8.97,7.81 8.78,7.79C8.62,7.77 8.88,7.41 9.21,7.24C9.71,7 10.58,7 11.62,7C12.43,7 12.66,7.06 12.97,7.13C13.93,7.36 13.6,8.25 13.6,10.37C13.6,11.06 13.5,12 13.97,12.33C14.18,12.47 14.7,12.35 16,10.16C16.6,9.12 17.06,7.89 17.06,7.89C17.06,7.89 17.16,7.68 17.31,7.58C17.47,7.5 17.69,7.5 17.69,7.5H20.59C20.59,7.5 21.47,7.4 21.61,7.79C21.76,8.2 21.28,9.17 20.09,10.74C18.15,13.34 17.93,13.1 19.54,14.6Z" })
	                );
	                break;
	            case "linkedin-icon":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        viewBox: "0 0 24 24",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        "data-name": this.props.dataName
	                    },
	                    React.createElement("path", {
	                        d: "M19,19H16V13.7A1.5,1.5 0 0,0 14.5,12.2A1.5,1.5 0 0,0 13,13.7V19H10V10H13V11.2C13.5,10.36 14.59,9.8 15.5,9.8A3.5,3.5 0 0,1 19,13.3M6.5,8.31C5.5,8.31 4.69,7.5 4.69,6.5A1.81,1.81 0 0,1 6.5,4.69C7.5,4.69 8.31,5.5 8.31,6.5A1.81,1.81 0 0,1 6.5,8.31M8,19H5V10H8M20,2H4C2.89,2 2,2.89 2,4V20A2,2 0 0,0 4,22H20A2,2 0 0,0 22,20V4C22,2.89 21.1,2 20,2Z" })
	                );
	                break;

	            case "star-icon":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        viewBox: "0 0 24 24",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        "data-name": this.props.dataName
	                    },
	                    React.createElement("path", {
	                        d: "M12,15.39L8.24,17.66L9.23,13.38L5.91,10.5L10.29,10.13L12,6.09L13.71,10.13L18.09,10.5L14.77,13.38L15.76,17.66M22,9.24L14.81,8.63L12,2L9.19,8.63L2,9.24L7.45,13.97L5.82,21L12,17.27L18.18,21L16.54,13.97L22,9.24Z" })
	                );
	                break;
	            case "delete-icon":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        viewBox: "0 0 24 24",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        "data-name": this.props.dataName
	                    },
	                    React.createElement("path", { d: "M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z" })
	                );
	                break;
	            case "bookmark-icon":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        viewBox: "0 0 24 24",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        "data-name": this.props.dataName
	                    },
	                    React.createElement("path", {
	                        d: "M17,18V5H7V18L12,15.82L17,18M17,3A2,2 0 0,1 19,5V21L12,18L5,21V5C5,3.89 5.9,3 7,3H17M11,7H13V9H15V11H13V13H11V11H9V9H11V7Z" })
	                );
	                break;
	            case "arrow-left-icon":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        viewBox: "0 0 24 24",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        "data-name": this.props.dataName
	                    },
	                    React.createElement("path", { d: "M20,11V13H8L13.5,18.5L12.08,19.92L4.16,12L12.08,4.08L13.5,5.5L8,11H20Z" })
	                );
	                break;
	            case "arrow-right-icon":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        viewBox: "0 0 24 24",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        "data-name": this.props.dataName
	                    },
	                    React.createElement("path", { d: "M4,11V13H16L10.5,18.5L11.92,19.92L19.84,12L11.92,4.08L10.5,5.5L16,11H4Z" })
	                );
	                break;
	            case "web-icon":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        viewBox: "0 0 24 24",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        "data-name": this.props.dataName
	                    },
	                    React.createElement("path", {
	                        d: "M16.36,14C16.44,13.34 16.5,12.68 16.5,12C16.5,11.32 16.44,10.66 16.36,10H19.74C19.9,10.64 20,11.31 20,12C20,12.69 19.9,13.36 19.74,14M14.59,19.56C15.19,18.45 15.65,17.25 15.97,16H18.92C17.96,17.65 16.43,18.93 14.59,19.56M14.34,14H9.66C9.56,13.34 9.5,12.68 9.5,12C9.5,11.32 9.56,10.65 9.66,10H14.34C14.43,10.65 14.5,11.32 14.5,12C14.5,12.68 14.43,13.34 14.34,14M12,19.96C11.17,18.76 10.5,17.43 10.09,16H13.91C13.5,17.43 12.83,18.76 12,19.96M8,8H5.08C6.03,6.34 7.57,5.06 9.4,4.44C8.8,5.55 8.35,6.75 8,8M5.08,16H8C8.35,17.25 8.8,18.45 9.4,19.56C7.57,18.93 6.03,17.65 5.08,16M4.26,14C4.1,13.36 4,12.69 4,12C4,11.31 4.1,10.64 4.26,10H7.64C7.56,10.66 7.5,11.32 7.5,12C7.5,12.68 7.56,13.34 7.64,14M12,4.03C12.83,5.23 13.5,6.57 13.91,8H10.09C10.5,6.57 11.17,5.23 12,4.03M18.92,8H15.97C15.65,6.75 15.19,5.55 14.59,4.44C16.43,5.07 17.96,6.34 18.92,8M12,2C6.47,2 2,6.5 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z" })
	                );
	                break;
	            case "phone-icon":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        viewBox: "0 0 24 24",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        "data-name": this.props.dataName
	                    },
	                    React.createElement("path", {
	                        d: "M6.62,10.79C8.06,13.62 10.38,15.94 13.21,17.38L15.41,15.18C15.69,14.9 16.08,14.82 16.43,14.93C17.55,15.3 18.75,15.5 20,15.5A1,1 0 0,1 21,16.5V20A1,1 0 0,1 20,21A17,17 0 0,1 3,4A1,1 0 0,1 4,3H7.5A1,1 0 0,1 8.5,4C8.5,5.25 8.7,6.45 9.07,7.57C9.18,7.92 9.1,8.31 8.82,8.59L6.62,10.79Z" })
	                );
	                break;
	            case "skype-icon":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        viewBox: "0 0 24 24",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        "data-name": this.props.dataName
	                    },
	                    React.createElement("path", {
	                        d: "M18,6C20.07,8.04 20.85,10.89 20.36,13.55C20.77,14.27 21,15.11 21,16A5,5 0 0,1 16,21C15.11,21 14.27,20.77 13.55,20.36C10.89,20.85 8.04,20.07 6,18C3.93,15.96 3.15,13.11 3.64,10.45C3.23,9.73 3,8.89 3,8A5,5 0 0,1 8,3C8.89,3 9.73,3.23 10.45,3.64C13.11,3.15 15.96,3.93 18,6M12.04,17.16C14.91,17.16 16.34,15.78 16.34,13.92C16.34,12.73 15.78,11.46 13.61,10.97L11.62,10.53C10.86,10.36 10,10.13 10,9.42C10,8.7 10.6,8.2 11.7,8.2C13.93,8.2 13.72,9.73 14.83,9.73C15.41,9.73 15.91,9.39 15.91,8.8C15.91,7.43 13.72,6.4 11.86,6.4C9.85,6.4 7.7,7.26 7.7,9.54C7.7,10.64 8.09,11.81 10.25,12.35L12.94,13.03C13.75,13.23 13.95,13.68 13.95,14.1C13.95,14.78 13.27,15.45 12.04,15.45C9.63,15.45 9.96,13.6 8.67,13.6C8.09,13.6 7.67,14 7.67,14.57C7.67,15.68 9,17.16 12.04,17.16Z" })
	                );
	                break;
	            case "cellphone-icon":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        viewBox: "0 0 24 24",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        "data-name": this.props.dataName
	                    },
	                    React.createElement("path", {
	                        d: "M16,18H7V4H16M11.5,22A1.5,1.5 0 0,1 10,20.5A1.5,1.5 0 0,1 11.5,19A1.5,1.5 0 0,1 13,20.5A1.5,1.5 0 0,1 11.5,22M15.5,1H7.5A2.5,2.5 0 0,0 5,3.5V20.5A2.5,2.5 0 0,0 7.5,23H15.5A2.5,2.5 0 0,0 18,20.5V3.5A2.5,2.5 0 0,0 15.5,1Z" })
	                );
	                break;
	            case "mail-icon":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        viewBox: "0 0 24 24",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        "data-name": this.props.dataName
	                    },
	                    React.createElement("path", {
	                        d: "M20,4H4A2,2 0 0,0 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V6A2,2 0 0,0 20,4M20,18H4V8L12,13L20,8V18M20,6L12,11L4,6V6H20V6Z" })
	                );
	                break;
	            case "mail-filled-icon":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        viewBox: "0 0 24 24",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        "data-name": this.props.dataName
	                    },
	                    React.createElement("path", {
	                        d: "M20,8L12,13L4,8V6L12,11L20,6M20,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V6C22,4.89 21.1,4 20,4Z" })
	                );
	                break;
	            case "message-icon":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        viewBox: "0 0 24 24",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        "data-name": this.props.dataName
	                    },
	                    React.createElement("path", { d: "M20,2A2,2 0 0,1 22,4V16A2,2 0 0,1 20,18H6L2,22V4C2,2.89 2.9,2 4,2H20M4,4V17.17L5.17,16H20V4H4M6,7H18V9H6V7M6,11H15V13H6V11Z" })
	                );
	                break;
	            case "clock-icon":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        viewBox: "0 0 24 24",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        "data-name": this.props.dataName
	                    },
	                    React.createElement("path", {
	                        d: "M12,20A8,8 0 0,0 20,12A8,8 0 0,0 12,4A8,8 0 0,0 4,12A8,8 0 0,0 12,20M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22C6.47,22 2,17.5 2,12A10,10 0 0,1 12,2M12.5,7V12.25L17,14.92L16.25,16.15L11,13V7H12.5Z" })
	                );
	                break;
	            case "pen-icon":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        viewBox: "0 0 24 24",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        onClick: this.onClick,
	                        "data-name": this.props.dataName
	                    },
	                    React.createElement("path", {
	                        d: "M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z" })
	                );
	                break;
	            case "block-icon":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        viewBox: "0 0 24 24",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        onClick: this.onClick,
	                        "data-name": this.props.dataName
	                    },
	                    React.createElement("path", {
	                        d: "M12,0A12,12 0 0,1 24,12A12,12 0 0,1 12,24A12,12 0 0,1 0,12A12,12 0 0,1 12,0M12,2A10,10 0 0,0 2,12C2,14.4 2.85,16.6 4.26,18.33L18.33,4.26C16.6,2.85 14.4,2 12,2M12,22A10,10 0 0,0 22,12C22,9.6 21.15,7.4 19.74,5.67L5.67,19.74C7.4,21.15 9.6,22 12,22Z" })
	                );
	                break;
	            case "comment-icon":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        viewBox: "0 0 24 24",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        onClick: this.onClick,
	                        "data-name": this.props.dataName
	                    },
	                    React.createElement("path", { d: "M21.99 4c0-1.1-.89-2-1.99-2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h14l4 4-.01-18zM18 14H6v-2h12v2zm0-3H6V9h12v2zm0-3H6V6h12v2z" })
	                );
	                break;
	            case "pay-icon":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        viewBox: "0 0 24 24",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        onClick: this.onClick,
	                        "data-name": this.props.dataName
	                    },
	                    React.createElement("path", { d: "M11 17h2v-1h1c.55 0 1-.45 1-1v-3c0-.55-.45-1-1-1h-3v-1h4V8h-2V7h-2v1h-1c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1h3v1H9v2h2v1zm9-13H4c-1.11 0-1.99.89-1.99 2L2 18c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V6c0-1.11-.89-2-2-2zm0 14H4V6h16v12z" })
	                );
	                break;
	            case "cargo-icon":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        viewBox: "0 0 24 24",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        onClick: this.onClick,
	                        "data-name": this.props.dataName
	                    },
	                    React.createElement("path", { d: "M3 9h4V5H3v4zm0 5h4v-4H3v4zm5 0h4v-4H8v4zm5 0h4v-4h-4v4zM8 9h4V5H8v4zm5-4v4h4V5h-4zm5 9h4v-4h-4v4zM3 19h4v-4H3v4zm5 0h4v-4H8v4zm5 0h4v-4h-4v4zm5 0h4v-4h-4v4zm0-14v4h4V5h-4z" })
	                );
	                break;
	            case "check-circle-icon":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        viewBox: "0 0 24 24",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        onClick: this.onClick,
	                        "data-name": this.props.dataName
	                    },
	                    React.createElement("path", { d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z" })
	                );
	                break;
	            case "edit-icon":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        viewBox: "0 0 24 24",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        onClick: this.onClick,
	                        "data-name": this.props.dataName
	                    },
	                    React.createElement("path", { d: "M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z" }),
	                    React.createElement("path", { d: "M0 0h24v24H0z", fill: "none" })
	                );
	                break;
	            case "view-icon":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        viewBox: "0 0 24 24",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        onClick: this.onClick,
	                        "data-name": this.props.dataName
	                    },
	                    React.createElement("path", { d: "M11.5 9C10.12 9 9 10.12 9 11.5s1.12 2.5 2.5 2.5 2.5-1.12 2.5-2.5S12.88 9 11.5 9zM20 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm-3.21 14.21l-2.91-2.91c-.69.44-1.51.7-2.39.7C9.01 16 7 13.99 7 11.5S9.01 7 11.5 7 16 9.01 16 11.5c0 .88-.26 1.69-.7 2.39l2.91 2.9-1.42 1.42z" })
	                );
	                break;
	            case "add-circle-icon":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        viewBox: "0 0 24 24",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        onClick: this.onClick,
	                        "data-name": this.props.dataName
	                    },
	                    React.createElement("path", { d: "M0 0h24v24H0z", fill: "none" }),
	                    React.createElement("path", { d: "M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z" })
	                );
	                break;
	            case "check-icon":
	                return React.createElement(
	                    "svg",
	                    { xmlns: "http://www.w3.org/2000/svg",
	                        viewBox: "0 0 24 24",
	                        className: this.props.className,
	                        width: this.props.size,
	                        height: this.props.size,
	                        onClick: this.onClick,
	                        "data-name": this.props.dataName
	                    },
	                    React.createElement("path", { d: "M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z" })
	                );
	                break;

	            default:
	                return null;

	        }
	    }
	});

	exports.Icon = Icon;

/***/ },
/* 253 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _stylesThemeController = __webpack_require__(249);

	var React = __webpack_require__(202);

	var ButtonActive = (function (_React$Component) {
	    _inherits(ButtonActive, _React$Component);

	    function ButtonActive() {
	        var _this = this;

	        _classCallCheck(this, ButtonActive);

	        _get(Object.getPrototypeOf(ButtonActive.prototype), 'constructor', this).apply(this, arguments);

	        this.onClick = function () {
	            if (!_this.props.onClick) return;
	            _this.props.onClick(_this.props.buttonId);
	        };
	    }

	    _createClass(ButtonActive, [{
	        key: 'render',
	        value: function render() {

	            var styles = {
	                buttonActive: {
	                    backgroundColor: this.props.themeController.ButtonActive.ButtonActive.backgroundColor,

	                    color: this.props.themeController.ButtonActive.ButtonActive.color,
	                    'webkitBoxShadow': 'none',
	                    'boxShadow': 'none',
	                    'webkitBorderRadius': '1px',
	                    'borderRadius': '1px',
	                    'fontSize': '14px',
	                    'height': '36px',
	                    'lineHeight': '36px',
	                    'width': 'auto',
	                    'cursor': 'pointer',
	                    'border': 'none',
	                    'marginTop': '8px',
	                    'marginBottom': '8px',
	                    'textTransform': 'uppercase',
	                    'paddingLeft': '16px',
	                    'paddingRight': '16px',
	                    'fontWeight': 'bold',
	                    'outline': 'none'
	                },
	                buttonActiveHover: {
	                    WebkitBoxShadow: "none",
	                    boxShadow: "none",
	                    backgroundColor: this.props.themeController.ButtonActive.ButtonActive.hover.backgroundColor
	                },
	                buttonActiveFocus: {
	                    mozAppearance: "none",
	                    border: "none"
	                }
	            };
	            return React.createElement(
	                'button',
	                {
	                    style: styles.buttonActive,
	                    onClick: this.onClick
	                },
	                this.props.caption
	            );
	        }
	    }], [{
	        key: 'propTypes',
	        value: {
	            onClick: React.PropTypes.func.isRequired,
	            buttonId: React.PropTypes.any,
	            caption: React.PropTypes.string,
	            hidden: React.PropTypes.bool
	        },
	        enumerable: true
	    }, {
	        key: 'defaultProps',
	        value: {
	            themeController: _stylesThemeController.ThemeController,
	            caption: "Button",
	            hidden: false
	        },
	        enumerable: true
	    }]);

	    return ButtonActive;
	})(React.Component);

	exports.ButtonActive = ButtonActive;

/***/ },
/* 254 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _SimpleComponentsIcons = __webpack_require__(252);

	var _stylesThemeController = __webpack_require__(249);

	var _utils = __webpack_require__(2);

	// import MessagesCenter from './MessagesCentre';  // переделано на контакт-центр

	var _api = __webpack_require__(1);

	var _Dispatcher = __webpack_require__(4);

	var _AuthDashboard = __webpack_require__(247);

	var React = __webpack_require__(202);
	var Router = __webpack_require__(7);
	var Navigation = Router.Navigation;
	var State = Router.State;

	var MenuItem = React.createClass({
	    displayName: 'MenuItem',

	    getInitialState: function getInitialState() {
	        return {
	            activeInsideItem: ""
	        };
	    },
	    componentDidMount: function componentDidMount() {
	        _Dispatcher.Events.on(_Dispatcher.Events.EV_ROUTE_CHANGED, this.routeChengedHr);
	        this.routeChengedHr();
	    },
	    componentWillUnmount: function componentWillUnmount() {
	        _Dispatcher.Events.rem(_Dispatcher.Events.EV_ROUTE_CHANGED, this.routeChengedHr);
	    },
	    changeActive: function changeActive(e) {
	        //console.log('changeActive ' + e)
	        this.setState({ activeInsideItem: e });
	    },
	    routeChengedHr: function routeChengedHr() {
	        //console.log('[MenuItem] routeChengedHr ' + window.location.hash)
	        var h = window.location.hash;
	        var deep = this.props.deep;
	        //console.log("DEEP = "+deep + ' h=' +h)
	        var m = h.match(/(?:\/)([^\/]+)/g);
	        //console.debug(m)
	        if (m && m.length == 3) {
	            //console.debug(m[2].substr(1))
	            this.changeActive(m[2].substr(1));
	        } else {
	            this.changeActive('');
	        }
	    },

	    render: function render() {
	        var _this = this;

	        //console.log("ACTIVE ITEM");
	        //console.log(this.state.activeInsideItem);
	        //console.log("КОМПОНЕНТ" + this.props.name);
	        //console.debug(this.props);
	        var classNm = 'box-row-nw align-center menu-item';
	        var iconClassNm = 'menu-icon marg-r';
	        if (this.props.active) {
	            classNm += " active";
	            iconClassNm += " active-icon";
	        }
	        var itemIcon = this.props.iconName ? React.createElement(_SimpleComponentsIcons.Icon, { className: iconClassNm, iconName: this.props.iconName, size: 18 }) : null;
	        if (this.props.subItems) {
	            //console.log("ЕСТЬ САБ");
	            var subItems = this.props.subItems.map(function (item) {
	                //console.log(' ? ' + this.state.activeInsideItem + ' ? ' + item.inn + ' ' + (this.state.activeInsideItem===item.inn));
	                if (item.disabled) {
	                    return null;
	                } else {
	                    return React.createElement(MenuItem, {
	                        key: item.name,
	                        href: item.href,
	                        name: item.name,
	                        label: item.label,
	                        iconName: item.iconName,
	                        subItems: item.subItems,
	                        active: _this.state.activeInsideItem === item.name,
	                        deep: _this.props.deep + 1
	                    });
	                }
	            });
	            //console.log('    classNm=' + classNm)

	            return React.createElement(
	                'div',
	                { key: this.props.name },
	                React.createElement(
	                    'a',
	                    { key: this.props.name, href: this.props.href, 'data-name': this.props.name, onClick: this.onClick },
	                    React.createElement(
	                        'div',
	                        { className: classNm },
	                        itemIcon,
	                        React.createElement(
	                            'h4',
	                            { style: {
	                                    'pointerEvents': 'none'
	                                } },
	                            this.props.label
	                        )
	                    )
	                ),
	                subItems
	            );
	        } else {
	            return React.createElement(
	                'a',
	                { key: this.props.name, href: this.props.href, 'data-name': this.props.name, onClick: this.onClick },
	                React.createElement(
	                    'div',
	                    { className: classNm },
	                    itemIcon,
	                    React.createElement(
	                        'h4',
	                        { style: {
	                                'pointerEvents': 'none'
	                            } },
	                        this.props.label
	                    )
	                )
	            );
	        }
	    }
	});

	var LeftMenu = React.createClass({
	    displayName: 'LeftMenu',

	    propTypes: {},

	    getDefaultProps: function getDefaultProps() {
	        return {
	            variables: _stylesThemeController.ThemeController.LeftMenu.LeftMenu
	        };
	    },

	    mixins: [State],
	    getInitialState: function getInitialState() {
	        return {
	            activeItem: "dashboard",
	            hide: false
	        };
	    },
	    changeActive: function changeActive(e) {
	        this.setState({ activeItem: e });
	    },
	    componentDidMount: function componentDidMount() {
	        var r = this.getRoutes();
	        var item = !r || r.length === 2 ? "dashboard" : r[2].name;
	        this.changeActive(item);
	        _Dispatcher.Events.on(_Dispatcher.Events.EV_ROUTE_CHANGED, this.routeChengedHr);
	        //Events.on(Events.EV_PROFILE_UPDATE, this.updateStateWrapper);
	    },
	    updateStateWrapper: function updateStateWrapper(newState) {
	        this.setState(newState);
	    },
	    routeChengedHr: function routeChengedHr() {
	        //console.log('[LeftMenu] routeChengedHr ' + window.location.hash)
	        var h = window.location.hash;
	        if (h === '#/dashboard') {
	            this.changeActive('dashboard');
	        } else {
	            var m = h.match(/\#\/dashboard\/([^\/]+)/);
	            if (m && m.length == 2) {
	                this.changeActive(m[1]);
	            }
	        }
	    },
	    componentWillUnmount: function componentWillUnmount() {
	        _Dispatcher.Events.rem(_Dispatcher.Events.EV_ROUTE_CHANGED, this.routeChengedHr);
	        //Events.rem(Events.EV_PROFILE_UPDATE, this.updateStateWrapper);
	    },
	    render: function render() {
	        var styles = {
	            wrap: {
	                'height': '100%',
	                'width': '220px',
	                'position': 'fixed',
	                'top': '60px',
	                'zIndex': '100'
	            },
	            leftMenu: {
	                WebkitBorderRadius: this.props.variables.borderRadius,
	                borderRadius: this.props.variables.borderRadius,
	                WebkitBoxShadow: this.props.variables.boxShadow,
	                boxShadow: this.props.variables.boxShadow,

	                //cursor            : "pointer"

	                backgroundColor: this.props.variables.backgroundColor,
	                'marginBottom': '10px',
	                'padding': '0'
	            }
	        };

	        //console.log("REFRESH");
	        // var Menu = this.props.items.map(item=> {
	        //     if (item.disabled) {
	        //         return null
	        //     } else {
	        //         return (
	        //             <MenuItem
	        //                 key={item.name}
	        //                 href={item.href}
	        //                 name={item.name}
	        //                 label={item.label}
	        //                 iconName={item.iconName}
	        //                 active={(this.state.activeItem===item.name)}
	        //                 subItems={item.subItems}
	        //                 deep={1}
	        //                 />
	        //         )
	        //     }
	        // });

	        return React.createElement(
	            'div',
	            { style: styles.wrap },
	            React.createElement(
	                'div',
	                { style: styles.leftMenu },
	                React.createElement(ChatPanel, null)
	            )
	        );

	        // return (
	        //     <div style={styles.wrap}>
	        //         <div style={styles.leftMenu}>
	        //             {Menu}
	        //             <ChatPanel/>
	        //         </div>
	        //     </div>
	        // );
	    }
	});

	exports.LeftMenu = LeftMenu;

	// переделано на контакт-центр
	// class ChatPanel extends React.Component {
	//     render=()=>{
	//         return(<div className="chat-panel">
	//                 <MessagesCenter/>
	//             </div>
	//         )
	//     }
	// }

/***/ },
/* 255 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _api = __webpack_require__(1);

	var _utils = __webpack_require__(2);

	var _SimpleComponentsIcons = __webpack_require__(252);

	var _stylesThemeController = __webpack_require__(249);

	var React = __webpack_require__(202);

	var LogoName = (function (_React$Component) {
	    _inherits(LogoName, _React$Component);

	    function LogoName() {
	        _classCallCheck(this, LogoName);

	        _get(Object.getPrototypeOf(LogoName.prototype), 'constructor', this).apply(this, arguments);

	        this.render = function () {
	            return React.createElement(
	                'div',
	                { className: 'logo-name-wrap' },
	                React.createElement(
	                    'a',
	                    { className: 'logo-name' },
	                    'All shippers'
	                )
	            );
	        };
	    }

	    _createClass(LogoName, null, [{
	        key: 'defaultProps',
	        value: {
	            styleVariables: _stylesThemeController.ThemeController.LogoName.LogoName
	        },
	        enumerable: true
	    }]);

	    return LogoName;
	})(React.Component);

	var UpPanel = (function (_React$Component2) {
	    _inherits(UpPanel, _React$Component2);

	    function UpPanel() {
	        _classCallCheck(this, UpPanel);

	        _get(Object.getPrototypeOf(UpPanel.prototype), 'constructor', this).apply(this, arguments);
	    }

	    _createClass(UpPanel, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(
	                'div',
	                { className: 'up-panel' },
	                this.props.children
	            );
	        }
	    }]);

	    return UpPanel;
	})(React.Component);

	exports.UpPanel = UpPanel;

/***/ },
/* 256 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _api = __webpack_require__(1);

	var _utils = __webpack_require__(2);

	var _ClassesLogger = __webpack_require__(3);

	var _AuthDashboard = __webpack_require__(247);

	var _ControlsIcon = __webpack_require__(232);

	var _ControlsNotificationsNotificationCenter = __webpack_require__(257);

	var _ControlsNotificationsNotificationCenter2 = _interopRequireDefault(_ControlsNotificationsNotificationCenter);

	var _Header__ProfileMini = __webpack_require__(262);

	var _Header__ProfileMini2 = _interopRequireDefault(_Header__ProfileMini);

	var React = __webpack_require__(202);

	var Header = (function (_React$Component) {
		_inherits(Header, _React$Component);

		function Header(props) {
			var _this = this;

			_classCallCheck(this, Header);

			_get(Object.getPrototypeOf(Header.prototype), 'constructor', this).call(this, props);

			this.componentWillReceiveProps = function () {
				_this.forceUpdate();
			};

			this.logoutRequest = function () {
				_api.Api.logoutRequest(_utils.Utils.cookieGet('sid')).then(function (res) {
					if (res.err) {
						_ClassesLogger.logger.log('error', 'Error output [logoutRequest]', res.msg);
						return;
					}

					_AuthDashboard.AppState.user.onLogout();
					window.location.hash = "/login";
				});
			};

			this.settingsLink = function () {
				window.location.hash = "/dashboard/profile/settings";
			};

			this.render = function () {
				var hash = location.hash.split('/')[2],
				    links = _this.props.links.map(function (link, i) {
					var active = hash == link.hash ? 'active' : null;

					return React.createElement(
						'li',
						{ className: 'header-menu__item', 'data-state': active, key: i },
						React.createElement(
							'a',
							{ href: link.href, name: link.name },
							link.name
						)
					);
				});

				// <ul className="profile-mini">
				// 	<li>
				// 		<div className="profile-mini__item profile-mini__item-photo">
				// 			<div className="profile-mini__photo">

				// 			</div>
				// 		</div>
				// 	</li>
				// 	<li>
				// 		<div className="profile-mini__item" onClick={this.logoutRequest}>
				// 			<Icon name="exit" className="profile-mini__icon"/>
				// 		</div>
				// 	</li>
				// 	<li>
				// 		<div className="profile-mini__item" onClick={this.settingsLink}>
				// 			<Icon name="settings" className="profile-mini__icon"/>
				// 		</div>
				// 	</li>
				// 	<li>
				// 		<div className="profile-mini__item">
				// 			<NotificationCenter/>
				// 		</div>
				// 	</li>
				// </ul>

				return React.createElement(
					'div',
					{ className: 'page-main__header header' },
					React.createElement(
						'div',
						{ className: 'header__logo' },
						React.createElement(
							'a',
							{ href: '#/dashboard' },
							React.createElement('img', { src: 'http://cargo.chat/static/logotype.png', alt: 'logotype' })
						)
					),
					React.createElement(
						'div',
						{ className: 'header__container' },
						React.createElement(
							'div',
							{ className: 'row row-between row-no-padding' },
							React.createElement(
								'div',
								{ className: 'col' },
								React.createElement(
									'ul',
									{ className: 'header-menu' },
									links
								)
							),
							React.createElement(
								'div',
								{ className: 'col' },
								React.createElement(
									'ul',
									{ className: 'header-menu header-menu--mini-profile' },
									React.createElement(
										'li',
										{ className: 'header-menu__item-photo' },
										React.createElement(_Header__ProfileMini2['default'], { user: _this.props.user })
									),
									React.createElement(
										'li',
										{ className: 'header-menu__item' },
										React.createElement(
											'a',
											null,
											React.createElement(_ControlsIcon.Icon, { name: 'exit', onClick: _this.logoutRequest, size: 24 })
										)
									),
									React.createElement(
										'li',
										{ className: 'header-menu__item' },
										React.createElement(
											'a',
											{ href: '#/dashboard/profile' },
											React.createElement(_ControlsIcon.Icon, { name: 'settings', size: 24 })
										)
									),
									React.createElement(
										'li',
										{ className: 'header-menu__item' },
										React.createElement(_ControlsNotificationsNotificationCenter2['default'], null)
									)
								)
							)
						)
					)
				);
			};
		}

		// <div className="profile-mini__dropdown profile-drop">
		// 	<div className="profile-drop__name">
		// 		{this.props.user.first_name+' '+this.props.user.last_name}
		// 	</div>
		// 	<div className="profile-drop__info">

		// 	</div>
		// </div>
		// <div className="header-profile">
		// 	<div className="header-profile__photo">
		// 		<img src="" alt=""/>
		// 	</div>
		// 	<div className="header-profile__actions">
		// 		<a href="#/dashboard/profile">Profile</a>
		// 	</div>
		// </div>

		_createClass(Header, null, [{
			key: 'propTypes',
			value: {
				links: React.PropTypes.array.isRequired,
				user: React.PropTypes.object.isRequired
			},
			enumerable: true
		}, {
			key: 'defaultProps',
			value: {
				links: [],
				user: {}
			},
			enumerable: true
		}]);

		return Header;
	})(React.Component);

	exports['default'] = Header;
	module.exports = exports['default'];

/***/ },
/* 257 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _AuthDashboard = __webpack_require__(247);

	var _Dispatcher = __webpack_require__(4);

	var _ClassesLogger = __webpack_require__(3);

	var _utils = __webpack_require__(2);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	var _Emoji = __webpack_require__(258);

	var _Icon = __webpack_require__(232);

	var _NotificationsController = __webpack_require__(259);

	var _NotificationsController2 = _interopRequireDefault(_NotificationsController);

	var _NotificationsMessage = __webpack_require__(260);

	var _NotificationsMessage2 = _interopRequireDefault(_NotificationsMessage);

	var _NotificationsEvent = __webpack_require__(261);

	var _NotificationsEvent2 = _interopRequireDefault(_NotificationsEvent);

	// import {newMsgSound} from '../../sounds/new_private_msg.mp3';
	// import {newMsgSound} from 'http://www.suarezgolborne.se/wp-content/slang.mp3';
	// http://mptron.com/agava/sms/03122007/ICQ.mp3
	// http://www.freesound.org/data/previews/234/234524_4019029-lq.mp3

	var React = __webpack_require__(202);

	var NotificationCenter = (function (_React$Component) {
	    _inherits(NotificationCenter, _React$Component);

	    function NotificationCenter() {
	        var _this = this;

	        _classCallCheck(this, NotificationCenter);

	        _get(Object.getPrototypeOf(NotificationCenter.prototype), 'constructor', this).call(this);
	        this.state = {
	            isShow: false,
	            events: []
	        };

	        this.soundClick = function () {
	            var audio = new Audio('http://mptron.com/agava/sms/03122007/ICQ.mp3');
	            audio.play(); // запускаем
	        };

	        this.componentWillMount = function () {
	            _AuthDashboard.AppState.myNotifies = new _NotificationsController2['default']();
	        };

	        this.componentDidMount = function () {
	            _Dispatcher.Events.on(_Dispatcher.Events.EV_SHOW_EVENT, _this.onNewEvent);

	            // по этим событиям надо чистить нотифай-центр
	            _Dispatcher.Events.on(_Dispatcher.Events.EV_MSG_CHANNEL_USER_UPSERT, _this.onChannelUserUpsert);
	            _Dispatcher.Events.on(_Dispatcher.Events.EV_MSG_PRIVATE_UNREADED, _this.onMsgPrivateUnreaded);
	        };

	        this.componentWillUnmount = function () {
	            _Dispatcher.Events.rem(_Dispatcher.Events.EV_SHOW_EVENT, _this.onNewEvent);
	            _Dispatcher.Events.rem(_Dispatcher.Events.EV_MSG_CHANNEL_USER_UPSERT, _this.onChannelUserUpsert);
	            _Dispatcher.Events.rem(_Dispatcher.Events.EV_MSG_PRIVATE_UNREADED, _this.onMsgPrivateUnreaded);
	        };

	        this.shouldComponentUpdate = function (nextProps, nextState) {
	            // logger.log('shouldComponentUpdate', this, this.state, nextState);

	            return nextState.events.length !== _this.state.events.length || nextState.isShow !== _this.state.isShow;
	        };

	        this.onNewEvent = function (event) {
	            // AppState.myNotifies.onNewEvent( event );

	            _AuthDashboard.AppState.myNotifies.addEvent(event);
	            _this.setState({ events: _AuthDashboard.AppState.myNotifies.getEvents(), isShow: true });

	            // проигрываем звук, апи должно отдавать метку, чтобы проигрывать только 1 раз
	            _ClassesLogger.logger.log("звук та-дам!");
	            if (event.received > 0) _this.soundClick();
	        };

	        this.onChannelUserUpsert = function (event) {
	            // logger.log('NC - onChannelUserUpsert', this, event);

	            _AuthDashboard.AppState.myNotifies.removeByFilter('channel_id', 'eq', event.channel_id);
	            _this.setState({ events: _AuthDashboard.AppState.myNotifies.getEvents(), isShow: _AuthDashboard.AppState.myNotifies.countEvents() ? true : false });
	        };

	        this.onMsgPrivateUnreaded = function (event) {
	            // logger.log('NC - onMsgPrivateUnreaded', this, event);

	            _AuthDashboard.AppState.myNotifies.removeByFilter('id', 'lt', event.lrm_id);
	            _this.setState({ events: _AuthDashboard.AppState.myNotifies.getEvents(), isShow: _AuthDashboard.AppState.myNotifies.countEvents() ? true : false });
	        };

	        this.closeEvent = function (id) {
	            _AuthDashboard.AppState.myNotifies.removeById(id);
	            _this.setState({ events: _AuthDashboard.AppState.myNotifies.getEvents(), isShow: _AuthDashboard.AppState.myNotifies.countEvents() ? true : false });
	        };

	        this.toggleNC = function () {
	            _this.setState({ isShow: !_this.state.isShow });
	        };

	        this.closeNC = function () {
	            _this.setState({ isShow: false });
	        };

	        this.clearAll = function () {
	            _AuthDashboard.AppState.myNotifies.clearAll();
	            _this.setState({ isShow: false, events: _AuthDashboard.AppState.myNotifies.getEvents() });
	        };

	        this.gotoChat = function (obj) {
	            var uid = (obj.events || []).length ? obj.events[0].event.user_id : 0;
	            if (!uid) {
	                _Dispatcher.Events.runError('Не удалось распознать номер чата');
	                return;
	            }
	            // чистим все сообщения от юзера
	            _AuthDashboard.AppState.myNotifies.removeByFilter('user_id', 'eq', uid);
	            _this.setState({ isShow: false, events: _AuthDashboard.AppState.myNotifies.getEvents() });
	            _AuthDashboard.AppState.myChats.openChat(uid);
	            // window.location.hash = "dashboard/chat/"+uid;
	        };

	        this.gotoChannel = function (e) {
	            _this.setState({ isShow: false });
	            _AuthDashboard.AppState.myChannels.openChannel(e.channel_id);
	            // window.location.hash = "dashboard/channel/"+e.channel_id;
	        };

	        this.render = function () {

	            var user = null;
	            var eventsList = [];

	            eventsList = _this.state.events.map(function (e, key) {

	                switch (e.event.type) {

	                    case 'msg_private_new':
	                        // для каждого юзера показываем сразу группу сообщений
	                        if (e.event.user_id != user) {
	                            user = e.event.user_id;
	                            var userMessages = _AuthDashboard.AppState.myNotifies.getMessagesByUser(user);
	                            _ClassesLogger.logger.log('rende NC, msg priv new', _this, userMessages);
	                            return React.createElement(_NotificationsMessage2['default'], { key: key,
	                                obj: userMessages,
	                                onClose: _this.closeEvent,
	                                onGoto: _this.gotoChat });
	                        }
	                        break;

	                    case 'msg_channel_invite':
	                        return React.createElement(_NotificationsEvent2['default'], { key: key,
	                            obj: e,
	                            title: 'приглашение',
	                            descr: 'Вы получили приглашение в канал "' + e.event.title + '"',
	                            onClose: _this.closeEvent,
	                            onGoto: _this.gotoChannel });
	                        break;
	                }
	            });

	            if (!eventsList.length) eventsList = React.createElement(
	                'div',
	                { className: 'note-center--no-events' },
	                'Нет уведомлений'
	            );

	            return React.createElement(
	                'div',
	                { className: 'note-center' },
	                React.createElement(
	                    'a',
	                    { onClick: _this.toggleNC },
	                    React.createElement(_Icon.Icon, { name: eventsList.length ? "notifications-active" : "notifications", className: 'profile-mini__icon', size: 24 })
	                ),
	                _this.state.isShow ? React.createElement(
	                    'div',
	                    { className: 'note-area' },
	                    React.createElement(
	                        'div',
	                        { className: 'note-area__header' },
	                        React.createElement(
	                            'span',
	                            { className: 'note-area__header-clear-all', onClick: _this.clearAll },
	                            eventsList.length ? "очистить все" : null
	                        ),
	                        React.createElement(
	                            'span',
	                            { className: 'note-area__header-close', onClick: _this.closeNC },
	                            'закрыть'
	                        )
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'note-area__container' },
	                        eventsList
	                    )
	                ) : null
	            );
	        };
	    }

	    return NotificationCenter;
	})(React.Component);

	exports['default'] = NotificationCenter;
	module.exports = exports['default'];

/***/ },
/* 258 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(202);

	var Emoji = (function (_React$Component) {
	    _inherits(Emoji, _React$Component);

	    function Emoji() {
	        var _this = this;

	        _classCallCheck(this, Emoji);

	        _get(Object.getPrototypeOf(Emoji.prototype), 'constructor', this).apply(this, arguments);

	        this.onClick = function () {
	            var c = _this.props.onClick;
	            if (c) c(_this.props.name);
	        };

	        this.render = function () {

	            switch (_this.props.name) {
	                case "thumbsup":
	                    return React.createElement(
	                        'svg',
	                        { version: '1.1', id: 'Layer_1', xmlns: 'http://www.w3.org/2000/svg', x: '0px', y: '0px',
	                            viewBox: '0 0 256 256', 'enable-background': 'new 0 0 256 256',
	                            className: _this.props.className,
	                            width: _this.props.size,
	                            height: _this.props.size,
	                            onClick: _this.onClick
	                        },
	                        React.createElement(
	                            'g',
	                            null,
	                            React.createElement('path', { 'fill-rule': 'evenodd', 'clip-rule': 'evenodd', fill: '#FDC336', d: 'M128,256c70.5,0,128-57.6,128-128C256,57.5,198.5,0,128,0 C57.5,0,0,57.5,0,128C0,198.4,57.5,256,128,256z' }),
	                            React.createElement('path', { fill: '#FDDD58', d: 'M185.3,79c0,41.4-33.6,74.9-75.1,74.9C68.6,153.9,35,120.4,35,79c0-41.4,33.6-74.9,75.1-74.9 C151.6,4.1,185.3,37.7,185.3,79z' })
	                        ),
	                        React.createElement(
	                            'g',
	                            null,
	                            React.createElement('path', { fill: '#FFFFFF', d: 'M108.2,123.4c-14.1,8.6-35.9,9-48.5,2.6c-19.3-9.8-22.5-35.9-7.3-58.4C67.8,45.1,95.8,22,115.1,31.8 C134.4,41.6,115.7,118.9,108.2,123.4z' }),
	                            React.createElement(
	                                'g',
	                                null,
	                                React.createElement('ellipse', { fill: '#3E99DD', cx: '100.1', cy: '60.6', rx: '14.7', ry: '14.8' }),
	                                React.createElement('path', { 'fill-rule': 'evenodd', 'clip-rule': 'evenodd', fill: '#333333', d: 'M107,60.6c0,3.8-3.1,6.9-6.9,6.9c-3.8,0-6.9-3.1-6.9-6.9 s3.1-6.9,6.9-6.9C103.9,53.7,107,56.8,107,60.6z' }),
	                                React.createElement('ellipse', { fill: '#FFFFFF', cx: '105.4', cy: '54.8', rx: '3.5', ry: '3.5' })
	                            ),
	                            React.createElement('path', { fill: '#FFFFFF', d: 'M147.8,124.1c14.1,8.6,35.9,9,48.5,2.6c19.3-9.8,22.5-35.9,7.3-58.4c-15.3-22.5-43.3-45.6-62.6-35.8 C121.6,42.3,140.3,119.6,147.8,124.1z' }),
	                            React.createElement(
	                                'g',
	                                null,
	                                React.createElement('ellipse', { fill: '#3E99DD', cx: '157.1', cy: '60.6', rx: '14.7', ry: '14.8' }),
	                                React.createElement('path', { 'fill-rule': 'evenodd', 'clip-rule': 'evenodd', fill: '#333333', d: 'M164.1,60.6c0,3.8-3.1,6.9-6.9,6.9c-3.8,0-6.9-3.1-6.9-6.9 c0-3.8,3.1-6.9,6.9-6.9C161,53.7,164.1,56.8,164.1,60.6z' }),
	                                React.createElement('circle', { fill: '#FFFFFF', cx: '162.5', cy: '54.8', r: '3.5' })
	                            ),
	                            React.createElement('path', { fill: '#FF9800', d: 'M65.3,128.1C46,118.3,42.7,92.1,58,69.6C72,49,96.8,27.9,115.6,32.1c-0.2-0.1-0.3-0.2-0.5-0.3 C95.8,22,67.8,45.1,52.5,67.6c-15.3,22.5-12,48.6,7.3,58.4c1.9,1,4,1.7,6.2,2.4C65.7,128.3,65.5,128.2,65.3,128.1z' }),
	                            React.createElement('path', { fill: '#FF9800', d: 'M203.5,68.3c-15.3-22.5-43.3-45.6-62.6-35.8c-0.2,0.1-0.3,0.2-0.5,0.3c18.9-4.2,43.6,16.9,57.6,37.5 c15.3,22.5,12,48.6-7.3,58.4c-0.2,0.1-0.5,0.2-0.7,0.3c2.2-0.6,4.3-1.4,6.2-2.4C215.5,116.9,218.8,90.8,203.5,68.3z' })
	                        ),
	                        React.createElement('path', { fill: '#FDDD58', d: 'M221.7,170.5c-17.8,11.7-57.3,26.1-94.1,26.9c-39.9,0.9-80.8-21.6-90-29c-0.6,0.9-2.8,3.6-3.7,4.4 c15.5,14.8,54,71.1,95.1,70.1c44.6-1.1,76.9-52.4,94.2-68.3C222.1,174,222.6,171.4,221.7,170.5z' }),
	                        React.createElement('path', { fill: '#CC1700', d: 'M217.7,166.3c-17.1,11-54.8,24.7-90,25.4c-38.2,0.8-77.3-20.4-86.1-27.4c-0.6,0.9-2.7,3.4-3.5,4.1 c14.8,13.9,51.7,67.2,91,66.2c42.7-1,73.6-49.5,90.1-64.5C218.1,169.6,218.5,167.2,217.7,166.3z' }),
	                        React.createElement(
	                            'g',
	                            null,
	                            React.createElement(
	                                'g',
	                                null,
	                                React.createElement('path', { fill: '#FF9800', d: 'M193.5,17.2c-0.9,13.5,2,22.3-3.3,30.8c-5.2,8.5-18,32.3-21.3,54.4c-3.2,22.1-2.8,40.6,3.6,53.4 c5.7,11.4,9.2,15.2,39,18.4c9.8,0.4,13.5,0.1,17.1,0.3c11.7-0.7,17-95.7,11-96.1c-8-0.6-15.1-4.4-17-8.6 c-6.5-14.4,5.8-28.1,6.9-42.3c1.4-18.1-6.6-29.6-22.3-27.1C199.6,1.5,194,9.3,193.5,17.2z' })
	                            ),
	                            React.createElement('path', { fill: '#FDDD58', d: 'M235.6,144c9,0,16.4,6.8,16.4,15.2c0,8.4-7.3,15.2-16.4,15.2h-30.5c-9,0-16.4-6.8-16.4-15.2 c0-8.4,7.3-15.2,16.4-15.2H235.6z' }),
	                            React.createElement('path', { fill: '#FDDD58', d: 'M239,109.8c9,0,16.4,6.8,16.4,15.2c0,8.4-7.3,15.2-16.4,15.2h-35.7c-9,0-16.4-6.8-16.4-15.2 c0-8.4,7.3-15.2,16.4-15.2H239z' }),
	                            React.createElement('path', { fill: '#FDDD58', d: 'M232.7,75.7c9,0,16.4,6.8,16.4,15.2c0,8.4-7.3,15.2-16.4,15.2H210c-9,0-16.4-6.8-16.4-15.2 c0-8.4,7.3-15.2,16.4-15.2H232.7z' })
	                        )
	                    );
	                    break;

	                case "laugh":
	                    return React.createElement(
	                        'svg',
	                        { version: '1.1', id: 'Layer_1', xmlns: 'http://www.w3.org/2000/svg', x: '0px', y: '0px',
	                            viewBox: '0 0 256 256', 'enable-background': 'new 0 0 256 256',
	                            className: _this.props.className,
	                            width: _this.props.size,
	                            height: _this.props.size,
	                            onClick: _this.onClick
	                        },
	                        React.createElement(
	                            'g',
	                            null,
	                            React.createElement(
	                                'g',
	                                null,
	                                React.createElement('path', { 'fill-rule': 'evenodd', 'clip-rule': 'evenodd', fill: '#FDC336', d: 'M128,256c70.5,0,128-57.6,128-128C256,57.5,198.5,0,128,0 C57.5,0,0,57.5,0,128C0,198.4,57.5,256,128,256z' }),
	                                React.createElement('path', { fill: '#FDDD58', d: 'M185.3,79c0,41.4-33.6,74.9-75.1,74.9C68.6,153.9,35,120.4,35,79c0-41.4,33.6-74.9,75.1-74.9 C151.6,4.1,185.3,37.7,185.3,79z' })
	                            ),
	                            React.createElement(
	                                'g',
	                                null,
	                                React.createElement('path', { fill: '#FFFFFF', d: 'M111.6,34.5c-25.6-9.8-62.9,13.4-83.2,36c-18.9,21.1-8.8,52.6,9.6,56.6c4,0.9,7.5,1.5,15.4-0.9 c6.7-2,12.4-9.7,22.2-9.7c14.3,0,17.2,8.9,28,5.1C114.1,118.1,137.3,44.3,111.6,34.5z' }),
	                                React.createElement('path', { fill: '#FF9800', d: 'M28.5,70.5c20.3-22.6,57.6-45.9,83.2-36c2.7,1,4.9,2.8,6.6,5.1c-1.3-1.1-2.8-2-4.4-2.6 c-25.9-9.9-61.5,12.9-80.5,34c-17,18.9-9,47.9,7.4,52.6c3.7,1,6.8,1.8,14.1,0.1c6.2-1.4,11.7-8.2,21.1-7.7 c5.2,0.3,8.8,1.7,11.9,3.2c-3.2-1.3-6.9-2.6-12.1-2.6c-9.8,0-15.6,7.7-22.2,9.7c-7.9,2.4-11.3,1.8-15.4,0.9 C19.6,123.1,9.5,91.6,28.5,70.5z' }),
	                                React.createElement(
	                                    'g',
	                                    null,
	                                    React.createElement('path', { fill: '#3E99DD', d: 'M75.8,92.7c-8.2,0-14.8,6.6-14.8,14.7c0,4.6,2.2,8.8,5.5,11.5c2.7-1.3,5.6-2.3,9.1-2.3 c4.1,0,7.3,0.8,10,1.7c3-2.7,4.9-6.6,4.9-10.9C90.5,99.3,83.9,92.7,75.8,92.7z' }),
	                                    React.createElement('ellipse', { 'fill-rule': 'evenodd', 'clip-rule': 'evenodd', fill: '#333333', cx: '75.8', cy: '107.4', rx: '6.9', ry: '6.9' }),
	                                    React.createElement('path', { fill: '#FFFFFF', d: 'M84.6,101.6c0,1.9-1.6,3.5-3.5,3.5c-2,0-3.5-1.6-3.5-3.5c0-1.9,1.6-3.5,3.5-3.5 C83.1,98.1,84.6,99.7,84.6,101.6z' })
	                                ),
	                                React.createElement(
	                                    'g',
	                                    null,
	                                    React.createElement('path', { fill: '#FFFFFF', d: 'M144.4,34.5c25.6-9.8,62.9,13.4,83.2,36c18.9,21.1,8.8,52.6-9.6,56.6c-4,0.9-7.5,1.5-15.4-0.9 c-6.6-2-12.4-9.7-22.2-9.7c-14.3,0-17.2,8.9-28,5.1C142,118.1,118.7,44.3,144.4,34.5z' }),
	                                    React.createElement('path', { fill: '#FF9800', d: 'M227.5,70.5c-20.3-22.6-57.6-45.9-83.2-36c-2.7,1-4.9,2.8-6.6,5.1c1.3-1.1,2.8-2,4.4-2.6 c25.9-9.9,61.5,12.9,80.5,34c17,18.9,9,47.9-7.4,52.6c-3.7,1-6.8,1.8-14.1,0.1c-6.2-1.4-11.7-8.2-21.1-7.7 c-5.2,0.3-8.8,1.7-11.9,3.2c3.1-1.3,6.9-2.6,12.1-2.6c9.8,0,15.6,7.7,22.2,9.7c7.9,2.4,11.3,1.8,15.4,0.9 C236.3,123.1,246.5,91.6,227.5,70.5z' }),
	                                    React.createElement(
	                                        'g',
	                                        null,
	                                        React.createElement('path', { fill: '#3E99DD', d: 'M180.2,92.7c8.2,0,14.8,6.6,14.8,14.7c0,4.6-2.2,8.8-5.5,11.5c-2.7-1.3-5.6-2.3-9.1-2.3 c-4.1,0-7.3,0.8-10,1.7c-3-2.7-4.9-6.6-4.9-10.9C165.5,99.3,172.1,92.7,180.2,92.7z' }),
	                                        React.createElement('ellipse', { 'fill-rule': 'evenodd', 'clip-rule': 'evenodd', fill: '#333333', cx: '180.2', cy: '107.4', rx: '6.9', ry: '6.9' }),
	                                        React.createElement('ellipse', { fill: '#FFFFFF', cx: '174.9', cy: '101.6', rx: '3.5', ry: '3.5' })
	                                    )
	                                )
	                            ),
	                            React.createElement(
	                                'g',
	                                null,
	                                React.createElement('path', { fill: '#FDDD58', d: 'M196,138.2c-5,9.4-29.5,23.9-68.6,24.2c-39.1-0.3-65.5-14-70.5-23.3c-12.9,4.4-19.3,9.3-12.4,24.5 c2.5,8.7,12.4-0.4,23.3,38.6c3,10.6,1,16.3,8.5,27.7c10.3,13.2,29.9,11.5,49.2,11.5c0.6,0,1.2,0,1.9,0c0.6,0,1.2,0,1.9,0 c19.3,0,38.9,1.7,49.2-11.5c7.5-11.4,5.5-17.1,8.5-27.7c11-39,22.3-30.3,24.9-39C218.7,148,208.9,142.6,196,138.2z' }),
	                                React.createElement('path', { fill: '#FFFFFF', d: 'M194.8,138.2c-4.7,8.4-31,21.6-67.7,21.8c-36.8-0.2-63-13.4-67.7-21.8c-12.1,4-16.8,9.2-10.3,22.8 c2.4,7.8,11.6-0.3,22,34.8c2.8,9.6,1,14.7,8,24.9c9.7,11.9,28.1,10.3,46.3,10.3c0.6,0,1.2,0,1.7,0c0.6,0,1.2,0,1.7,0 c18.2,0,36.6,1.5,46.3-10.3c7-10.3,5.2-15.4,8-24.9c10.3-35.1,21-27.3,23.4-35.2C213,147,206.9,142.2,194.8,138.2z' }),
	                                React.createElement(
	                                    'g',
	                                    null,
	                                    React.createElement('path', { fill: '#989898', d: 'M186.2,186.2c-3.8,1.8-14,6.2-27.8,9.6l-6.4-37.8l1.4,38.9c-8,1.7-17,2.9-26.5,3l-2-40c0,0,0,0,0,0 l-3.7,40c-10.1-0.3-19-1.6-26.5-3.2l3.1-39.8l-8,38.6c-11.3-3-18.7-6.6-21.4-8c0.6,1.7,1.2,3.4,1.8,5.4c4.2,2,10.9,4.7,19.9,6.9 l1.1,28.9c1.2,0.4,2.5,0.7,3.7,1l-1.1-29c7.9,1.7,17.2,3.1,27.9,3.3v27.1c1.2,0,2.4,0,3.6,0c0.3,0,0.5,0,0.8,0V204 c10.3-0.1,20-1.4,28.5-3.2l-0.3,29.6c1.4-0.2,2.8-0.4,4.1-0.7l0.2-29.9c11.4-2.7,20.4-6.2,25.7-8.5c1.6-4.8,3.2-8.7,4.7-11.8 l-9-30.4L186.2,186.2z' }),
	                                    React.createElement('path', { fill: '#989898', d: 'M68.3,187.2l6.6-36.9l-9.8,29.2v0C66.1,181.7,67.2,184.2,68.3,187.2z' })
	                                )
	                            )
	                        )
	                    );
	                    break;

	                case "cool":
	                    return React.createElement(
	                        'svg',
	                        { version: '1.1', id: 'Layer_1', xmlns: 'http://www.w3.org/2000/svg', x: '0px', y: '0px',
	                            viewBox: '0 0 256 256', 'enable-background': 'new 0 0 256 256',
	                            className: _this.props.className,
	                            width: _this.props.size,
	                            height: _this.props.size,
	                            onClick: _this.onClick
	                        },
	                        React.createElement(
	                            'g',
	                            null,
	                            React.createElement(
	                                'g',
	                                null,
	                                React.createElement(
	                                    'g',
	                                    null,
	                                    React.createElement('path', { 'fill-rule': 'evenodd', 'clip-rule': 'evenodd', fill: '#FDC336', d: 'M128,256c70.5,0,128-57.6,128-128C256,57.5,198.5,0,128,0 C57.5,0,0,57.5,0,128C0,198.4,57.5,256,128,256z' }),
	                                    React.createElement('ellipse', { fill: '#FDDD58', cx: '110.1', cy: '79', rx: '75.1', ry: '74.9' })
	                                ),
	                                React.createElement('path', { fill: '#FDDD58', d: 'M179.5,177.3c-2.4,0.5,1.5,29-27.1,31.8c-22.8,2.2-31.6,13.1-31.9,13.5c-0.9,1.5-0.9,6.3,3.3,7.4 c2.3,0.6,6.6-1.7,7.5-3.2c0.2-0.2,2-5.1,18.3-5.1c14.5,0,22.2-1.7,26.6-3.9c31-15.8,13.6-36.5,13.1-37.2 C188.1,179.2,185.6,176,179.5,177.3z' }),
	                                React.createElement('path', { fill: '#CC1700', d: 'M165.1,198.6c-7.7,7.2-17.7,4.3-27,6.7c-6.4,1.7-12.9,5.8-16.6,11.4c-4.8,7.2,0.3,16.1,5.2,8.3 c10-15.7,26.5-9.6,42.6-12.9c15.9-3.3,34.8-40.4,6-34.9C169.5,178.3,171,193.1,165.1,198.6z' }),
	                                React.createElement('path', { 'fill-rule': 'evenodd', 'clip-rule': 'evenodd', fill: '#333333', d: 'M250.5,88.5c-2-15-111.2-5.4-116.3,1.4c-0.4,0.5-0.7,1-1,1.5 l-5.2,0.1l-5.1-0.1c-0.3-0.5-0.7-1-1-1.5C116.7,83,7.5,73.5,5.5,88.5c-4.4,32.1,76.9,103,107.7,49.3c2.8-3.1,8.2-8.1,14.8-8.1 c6.6,0,12.1,5.2,14.9,8.3C173.7,191.3,254.9,120.5,250.5,88.5z' })
	                            )
	                        )
	                    );
	                    break;

	                case "furious":
	                    return React.createElement(
	                        'svg',
	                        { version: '1.1', id: 'Layer_1', xmlns: 'http://www.w3.org/2000/svg', x: '0px', y: '0px',
	                            viewBox: '0 0 256 256', 'enable-background': 'new 0 0 256 256',
	                            className: _this.props.className,
	                            width: _this.props.size,
	                            height: _this.props.size,
	                            onClick: _this.onClick
	                        },
	                        React.createElement(
	                            'g',
	                            null,
	                            React.createElement('path', { 'fill-rule': 'evenodd', 'clip-rule': 'evenodd', fill: '#CC1700', d: 'M128,256c70.5,0,128-57.6,128-128C256,57.5,198.5,0,128,0 C57.5,0,0,57.5,0,128C0,198.4,57.5,256,128,256z' }),
	                            React.createElement('ellipse', { fill: '#F7310E', cx: '110.1', cy: '79', rx: '75.1', ry: '74.9' })
	                        ),
	                        React.createElement('path', { 'fill-rule': 'evenodd', 'clip-rule': 'evenodd', fill: '#333333', d: 'M210.9,5c-2.2,8-7,19-21.9,23.8c-1.3,0.2-2.6,0.5-3.8,1 c-0.3,0.1-0.5,0.1-0.8,0.2l0.1,0.2c-3.1,1.6-5.1,4.5-5.1,7.8c0,5.1,4.9,9.3,11,9.3c2.3,0,4.5-0.6,6.3-1.6l0,0 c0,0,14.4-7.8,20.5-21.4C223.5,10.6,214.9-9.3,210.9,5z' }),
	                        React.createElement('path', { 'fill-rule': 'evenodd', 'clip-rule': 'evenodd', fill: '#333333', d: 'M45.1,5c2.2,8,7,19,21.9,23.8c1.3,0.2,2.6,0.5,3.8,1 c0.2,0.1,0.5,0.1,0.8,0.2l-0.1,0.2c3.1,1.6,5.1,4.5,5.1,7.8c0,5.1-4.9,9.3-11,9.3c-2.3,0-4.5-0.6-6.3-1.6l0,0 c0,0-14.4-7.8-20.5-21.4C32.5,10.6,41.1-9.3,45.1,5z' }),
	                        React.createElement(
	                            'g',
	                            null,
	                            React.createElement('path', { 'fill-rule': 'evenodd', 'clip-rule': 'evenodd', fill: '#FFFFFF', d: 'M17.2,101.8c3.8-12.7,10.5-26.3,19.2-37.3 c5.6,0.2,26.1,1.9,37.4,17.7c4.8,6.8,26.6,32,50.3,39.3c-0.2,0.7-0.5,1.2-0.9,1.6c-13.8,13.8-45.8,35.3-65.2,35.8 C27.4,159.6,2.3,151.6,17.2,101.8z' }),
	                            React.createElement('path', { 'fill-rule': 'evenodd', 'clip-rule': 'evenodd', fill: '#333333', d: 'M78.9,76.6c-9.9-16.8-30.2-20.2-35.7-20.9 c-4.8,5.4-5.4,7.6-6.8,8.8c5.6,0.2,26.1,1.9,37.4,17.7c4.8,6.8,26.6,32,50.3,39.3c-0.1,0.2-0.2,0.5-0.3,0.7 c0.3-0.2,0.6-0.5,0.9-0.7c0.4-0.3,0.7-0.8,1-1.5C102.7,110.7,83.2,83.8,78.9,76.6z' }),
	                            React.createElement('path', { 'fill-rule': 'evenodd', 'clip-rule': 'evenodd', fill: '#FFFFFF', d: 'M238.8,101.8c-3.8-12.7-10.5-26.3-19.2-37.3 c-5.6,0.2-26.1,1.9-37.4,17.7c-4.8,6.8-26.6,32-50.3,39.3c0.2,0.7,0.5,1.2,0.9,1.6c13.8,13.8,45.8,35.3,65.2,35.8 C228.6,159.6,253.7,151.6,238.8,101.8z' }),
	                            React.createElement('path', { 'fill-rule': 'evenodd', 'clip-rule': 'evenodd', fill: '#333333', d: 'M177.1,76.6c9.9-16.8,30.2-20.2,35.7-20.9c2.6,2.9,4.1,5,6.8,8.8 c-5.6,0.2-26.1,1.9-37.4,17.7c-4.8,6.8-26.6,32-50.3,39.3c0.1,0.2,0.2,0.5,0.3,0.7c-0.3-0.2-0.6-0.5-0.9-0.7 c-0.4-0.3-0.7-0.8-1-1.5C153.3,110.7,172.8,83.8,177.1,76.6z' }),
	                            React.createElement(
	                                'g',
	                                null,
	                                React.createElement('ellipse', { 'fill-rule': 'evenodd', 'clip-rule': 'evenodd', fill: '#FDC336', cx: '80.3', cy: '124.9', rx: '21.4', ry: '21.4' }),
	                                React.createElement('ellipse', { 'fill-rule': 'evenodd', 'clip-rule': 'evenodd', fill: '#333333', cx: '80.3', cy: '124.9', rx: '9.3', ry: '13.9' }),
	                                React.createElement('ellipse', { fill: '#FFFFFF', cx: '88.1', cy: '116.5', rx: '5.1', ry: '5.1' })
	                            ),
	                            React.createElement(
	                                'g',
	                                null,
	                                React.createElement('ellipse', { 'fill-rule': 'evenodd', 'clip-rule': 'evenodd', fill: '#FDC336', cx: '174.2', cy: '123.8', rx: '21.4', ry: '21.4' }),
	                                React.createElement('path', { 'fill-rule': 'evenodd', 'clip-rule': 'evenodd', fill: '#333333', d: 'M183.5,123.8c0,7.7-4.2,13.9-9.3,13.9c-5.1,0-9.3-6.2-9.3-13.9 c0-7.7,4.2-13.9,9.3-13.9C179.4,109.9,183.5,116.1,183.5,123.8z' }),
	                                React.createElement('ellipse', { fill: '#FFFFFF', cx: '182', cy: '115.5', rx: '5.1', ry: '5.1' })
	                            )
	                        ),
	                        React.createElement('path', { fill: '#FDDD58', d: 'M174.7,191.2c-6.9,0-35.5,19.6-48.5,19.6c-15.9,0-39.7-19.6-44.8-19.6c-14.5,0-23.2,12.1-19.4,27.1 c4,15.7,27.3-1.2,65.2-1.2c22.3,0,64.7,10.1,67,1.2C197.9,203.3,189.2,191.2,174.7,191.2z' }),
	                        React.createElement('path', { fill: '#FF9800', d: 'M174.4,189.9c-6.9,0-35,19.9-48,19.9c-15.8,0-39.8-19.9-44.8-19.9c-14.5,0-23.1,10.2-19.3,22.7 c4,13.2,27.2-1,64.9-1c22.2,0,64.4,8.5,66.7,1C197.5,200.1,188.9,189.9,174.4,189.9z' })
	                    );
	                    break;

	                default:
	                    return null;

	            }
	        };
	    }

	    _createClass(Emoji, null, [{
	        key: 'defaultProps',
	        value: {
	            className: 'emoji',
	            size: 20
	        },
	        enumerable: true
	    }, {
	        key: 'emojiNames',
	        value: ["thumbsup", "laugh", "cool", "furious"],
	        enumerable: true
	    }]);

	    return Emoji;
	})(React.Component);

	exports.Emoji = Emoji;

/***/ },
/* 259 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x2, _x3, _x4) { var _again = true; _function: while (_again) { var object = _x2, property = _x3, receiver = _x4; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x2 = parent; _x3 = property; _x4 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _AuthDashboard = __webpack_require__(247);

	var _Dispatcher = __webpack_require__(4);

	var _ClassesController = __webpack_require__(6);

	var _ClassesController2 = _interopRequireDefault(_ClassesController);

	var _ClassesLogger = __webpack_require__(3);

	var NotificationsController = (function (_Controller) {
	    _inherits(NotificationsController, _Controller);

	    function NotificationsController() {
	        var _this = this;

	        _classCallCheck(this, NotificationsController);

	        _get(Object.getPrototypeOf(NotificationsController.prototype), 'constructor', this).call(this);

	        this.getEvents = function () {
	            // нужно вернуть новый массив, а не ссылку на this.events
	            // для корректной работы shouldComponentUpdate
	            var ev = _this.events.concat();
	            return ev;
	        };

	        this.addEvent = function (event) {
	            // let ev = this.events.concat();
	            // ev.push( {id: this.serial++, event: event} );
	            // this.events = ev;

	            _this.events.unshift({ id: _this.serial++, event: event });

	            // logger.log('NCC - addEvent', this, this.events);
	        };

	        this.removeById = function (id) {
	            var ev = _this.events.concat();
	            ev = ev.filter(function (e) {
	                return e.id != id;
	            });
	            _this.events = ev;
	            // this.events.some( (e, i) => {
	            //     if( e.id == id ) {
	            //         delete this.events[i];
	            //         return true;
	            //     }
	            // });
	        };

	        this.removeByFilter = function (filter, condition, value) {
	            if (condition === undefined) condition = 'eq';

	            var ev = _this.events.concat();
	            switch (condition) {
	                case 'eq':
	                    ev = ev.filter(function (e) {
	                        return e.event[filter] && e.event[filter] != value;
	                    });
	                    break;
	                case 'lt':
	                    ev = ev.filter(function (e) {
	                        return e.event[filter] && e.event[filter] > value;
	                    });
	                    break;
	                case 'gt':
	                    ev = ev.filter(function (e) {
	                        return e.event[filter] && e.event[filter] < value;
	                    });
	                    break;
	            }
	            _this.events = ev;
	        };

	        this.clearAll = function () {
	            _this.events = [];
	        };

	        this.countEvents = function () {
	            return (_this.events || []).length;
	        };

	        this.getMessagesByUser = function (id) {
	            var count = arguments.length <= 1 || arguments[1] === undefined ? 3 : arguments[1];

	            var messages = _this.events.filter(function (e) {
	                return e.event.user_id == id;
	            }) || [];
	            return {
	                total: messages.length,
	                rest: messages.length - count > 0 ? messages.length - count : 0,
	                events: messages.slice(0, count)
	            };
	        };

	        this.getMessageUsers = function () {
	            var users = _this.events.map(function (e) {
	                return e.event.user_id;
	            });
	            return users.filter(function (el, i, arr) {
	                return i == arr.lastIndexOf(el);
	            }); // только уникальные id
	        };

	        this._serialize = function () {};

	        this._restore = function () {};

	        this._save = function () {};

	        this._load = function () {};

	        this.events = [];
	        this.serial = 2000;
	    }

	    return NotificationsController;
	})(_ClassesController2['default']);

	exports['default'] = NotificationsController;
	module.exports = exports['default'];

	// удаляем все ивенты по указанному фильтру
	// фильтр = поле объекта в this.event

	// непрочитанные по юзеру

	// все юзеры, от которых есть непрочитанные

	// 
	//  TODO: сохранять и восстанавливать состояние в другом окне браузера
	//

/***/ },
/* 260 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _ClassesLogger = __webpack_require__(3);

	var _Icon = __webpack_require__(232);

	var React = __webpack_require__(202);

	var NotificationsMessage = (function (_React$Component) {
	    _inherits(NotificationsMessage, _React$Component);

	    function NotificationsMessage() {
	        var _this = this;

	        _classCallCheck(this, NotificationsMessage);

	        _get(Object.getPrototypeOf(NotificationsMessage.prototype), 'constructor', this).apply(this, arguments);

	        this.closeEvent = function () {
	            var c = _this.props.onClose;
	            if (c) c(_this.props.obj.id);
	        };

	        this.gotoEvent = function () {
	            var c = _this.props.onGoto;
	            if (c) c(_this.props.obj);
	        };

	        this.render = function () {

	            var messagesList = _this.props.obj.events;
	            var userCredits = messagesList[0].event.first_name + " " + messagesList[0].event.last_name;
	            var messages = messagesList.map(function (e, key) {
	                return React.createElement(
	                    'div',
	                    { className: 'note-area__message-body', key: key },
	                    e.event.body.length > 100 ? e.event.body.substr(0, 100) + "..." : e.event.body
	                );
	            });

	            // logger.log('render NotificationsMessage2', this, messagesList, messages);

	            return React.createElement(
	                'div',
	                { className: 'note-area__message' },
	                React.createElement(
	                    'div',
	                    { className: 'note-area__message-action-close', onClick: _this.closeEvent },
	                    React.createElement(_Icon.Icon, { name: 'close', size: 18 })
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'note-area__message-content' },
	                    React.createElement(
	                        'div',
	                        { className: 'note-area__message-title' },
	                        _this.props.obj.total == 1 ? "новое сообщение" : "новые сообщения",
	                        ': ',
	                        _this.props.obj.total
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'note-area__message-user', onClick: _this.gotoEvent },
	                        React.createElement(
	                            'span',
	                            null,
	                            userCredits
	                        )
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'note-area__message-user-company' },
	                        messagesList[0].event.comp_name
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'note-area__message-list', onClick: _this.gotoEvent },
	                        messages
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'note-area__message-user' },
	                        React.createElement(
	                            'span',
	                            null,
	                            _this.props.obj.rest ? "+ еще " + _this.props.obj.rest : null
	                        )
	                    )
	                )
	            );
	        };
	    }

	    return NotificationsMessage;
	})(React.Component);

	exports['default'] = NotificationsMessage;
	module.exports = exports['default'];

/***/ },
/* 261 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _ClassesLogger = __webpack_require__(3);

	var _Icon = __webpack_require__(232);

	var React = __webpack_require__(202);

	var NotificationsEvent = (function (_React$Component) {
	    _inherits(NotificationsEvent, _React$Component);

	    function NotificationsEvent() {
	        var _this = this;

	        _classCallCheck(this, NotificationsEvent);

	        _get(Object.getPrototypeOf(NotificationsEvent.prototype), 'constructor', this).apply(this, arguments);

	        this.closeEvent = function () {
	            var c = _this.props.onClose;
	            if (c) c(_this.props.obj.id);
	        };

	        this.gotoEvent = function () {
	            var c = _this.props.onGoto;
	            if (c) c(_this.props.obj.event);
	        };

	        this.render = function () {

	            var event = _this.props.obj.event;

	            return React.createElement(
	                'div',
	                { className: 'note-area__message' },
	                React.createElement(
	                    'div',
	                    { className: 'note-area__message-actionClose', onClick: _this.closeEvent },
	                    React.createElement(_Icon.Icon, { name: 'close', size: 18 })
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'note-area__message-content' },
	                    React.createElement(
	                        'div',
	                        { className: 'note-area__message-title-event' },
	                        _this.props.title
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'note-area__message-descr', onClick: _this.gotoEvent },
	                        React.createElement(
	                            'span',
	                            null,
	                            _this.props.descr
	                        )
	                    )
	                )
	            );
	        };
	    }

	    return NotificationsEvent;
	})(React.Component);

	exports['default'] = NotificationsEvent;
	module.exports = exports['default'];

/***/ },
/* 262 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _api = __webpack_require__(1);

	var _ClassesLogger = __webpack_require__(3);

	var _AuthDashboard = __webpack_require__(247);

	var _UserUserEditDialog = __webpack_require__(263);

	var _ControlsIcon = __webpack_require__(232);

	var _ControlsFormsButtonSimple = __webpack_require__(226);

	var React = __webpack_require__(202);

	var HeaderProfileMini = (function (_React$Component) {
		_inherits(HeaderProfileMini, _React$Component);

		function HeaderProfileMini(props) {
			var _this = this;

			_classCallCheck(this, HeaderProfileMini);

			_get(Object.getPrototypeOf(HeaderProfileMini.prototype), 'constructor', this).call(this, props);
			this.state = {
				user: this.props.user,
				isOpen: false
			};

			this.componentWillReceiveProps = function (nextProps) {
				_this.setState({ user: nextProps.user });
			};

			this.onClick = function () {
				_this.setState({ isOpen: !_this.state.isOpen });
			};

			this.render = function () {
				if (!_this.props.user) return null;

				// logger.log('profile mini', this, this.props.user)

				var user = _this.state.user;
				var comp = _this.state.user.comp;
				var drop = React.createElement(
					'div',
					{ className: 'profile-mini__drop' },
					React.createElement(
						'div',
						{ className: 'profile-mini__drop-name' },
						user.first_name + ' ' + user.last_name,
						comp && comp.name ? React.createElement(
							'p',
							{ className: 'padd-top-s' },
							comp.name
						) : null,
						user.position ? React.createElement(
							'p',
							null,
							user.position
						) : null
					),
					React.createElement(
						'div',
						{ className: 'profile-mini__drop-info' },
						user.email ? React.createElement(
							'p',
							null,
							'E-mail: ',
							user.email
						) : null,
						user.mobile ? React.createElement(
							'p',
							null,
							'Телефон: ',
							user.mobile
						) : null,
						user.icq ? React.createElement(
							'p',
							null,
							'ICQ: ',
							user.icq
						) : null,
						user.skype ? React.createElement(
							'p',
							null,
							'Skype: ',
							user.skype
						) : null,
						user.birthday ? React.createElement(
							'p',
							null,
							'Дата рождения: ',
							user.birthday
						) : null
					)
				);

				return React.createElement(
					'div',
					{ className: 'profile-mini' },
					React.createElement('div', { className: 'profile-mini__photo', onClick: _this.onClick }),
					_this.state.isOpen ? drop : null
				);
			};
		}

		_createClass(HeaderProfileMini, null, [{
			key: 'propTypes',
			value: {
				user: React.PropTypes.object.isRequired
			},
			enumerable: true
		}]);

		return HeaderProfileMini;
	})(React.Component);

	exports['default'] = HeaderProfileMini;
	module.exports = exports['default'];

/***/ },
/* 263 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _utils = __webpack_require__(2);

	var _SimpleComponentsTransparentButton = __webpack_require__(264);

	// import {InputSimple} from '../../SimpleComponents/InputSimple';

	var _SimpleComponentsIcons = __webpack_require__(252);

	var _Dashboard = __webpack_require__(247);

	var _ClassesLogger = __webpack_require__(3);

	var _ClassesLogger2 = _interopRequireDefault(_ClassesLogger);

	var _ControlsFormsButtonSimple = __webpack_require__(226);

	var _ControlsFormsInputSimple = __webpack_require__(225);

	var _ControlsFormsFormGroup = __webpack_require__(224);

	var _ControlsFormsInputDate = __webpack_require__(265);

	var _ControlsModalWindow = __webpack_require__(233);

	var React = __webpack_require__(202);
	var moment = __webpack_require__(268);
	var DatePicker = __webpack_require__(356);

	var UserEditDialog = (function (_React$Component) {
	    _inherits(UserEditDialog, _React$Component);

	    function UserEditDialog(props) {
	        var _this = this;

	        _classCallCheck(this, UserEditDialog);

	        _get(Object.getPrototypeOf(UserEditDialog.prototype), 'constructor', this).call(this, props);

	        this.onChangeHandler = function (obj) {
	            _this.state.isEdit = true;
	            _this.setState(obj);
	        };

	        this.onBirthdayChangeHr = function (d) {
	            _this.state.isEdit = true;
	            _this.setState({ birthday: d.format('YYYY-MM-DD') });
	        };

	        this.state = {
	            isEdit: false,
	            isValidated: false,
	            isModalOpen: false
	        };

	        this.saveChanges = function () {};

	        this.closeModal = function () {
	            _this.setState({ isModalOpen: false });
	        };

	        this.openModal = function () {
	            _this.setState({ isModalOpen: true });
	        };

	        this.render = function () {

	            return React.createElement(
	                'div',
	                null,
	                React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.openModal, caption: 'Изменить данные', type: 'primary' }),
	                React.createElement(
	                    _ControlsModalWindow.ModalWindow,
	                    { isOpen: _this.state.isModalOpen, onClose: _this.closeModal, title: 'Редактирование информации' },
	                    React.createElement(
	                        'div',
	                        { className: 'modal-container__body' },
	                        React.createElement(
	                            _ControlsFormsFormGroup.FormGroup,
	                            { name: 'Фамилия', from: 'last_name' },
	                            React.createElement(_ControlsFormsInputSimple.InputSimple, { name: 'last_name', onChange: _this.onChangeHandler })
	                        ),
	                        React.createElement(
	                            _ControlsFormsFormGroup.FormGroup,
	                            { name: 'Имя', from: 'first_name' },
	                            React.createElement(_ControlsFormsInputSimple.InputSimple, { name: 'first_name', onChange: _this.onChangeHandler })
	                        ),
	                        React.createElement(
	                            _ControlsFormsFormGroup.FormGroup,
	                            { name: 'Отчество', from: 'pat_name' },
	                            React.createElement(_ControlsFormsInputSimple.InputSimple, { name: 'pat_name', onChange: _this.onChangeHandler })
	                        ),
	                        React.createElement(
	                            _ControlsFormsFormGroup.FormGroup,
	                            { name: 'Дата рождения', from: 'pat_name' },
	                            React.createElement(DatePicker, { dateFormat: 'YYYY-MM-DD', selected: moment(_utils.Utils.dateFix(_this.state.birthday, '1982-01-01')), onChange: _this.onBirthdayChangeHr })
	                        ),
	                        React.createElement(
	                            _ControlsFormsFormGroup.FormGroup,
	                            { name: 'Телефон', from: 'mobile' },
	                            React.createElement(_ControlsFormsInputSimple.InputSimple, { name: 'mobile', onChange: _this.onChangeHandler })
	                        ),
	                        React.createElement(
	                            _ControlsFormsFormGroup.FormGroup,
	                            { name: 'ICQ', from: 'icq' },
	                            React.createElement(_ControlsFormsInputSimple.InputSimple, { name: 'icq', onChange: _this.onChangeHandler })
	                        ),
	                        React.createElement(
	                            _ControlsFormsFormGroup.FormGroup,
	                            { name: 'Skype', from: 'skype' },
	                            React.createElement(_ControlsFormsInputSimple.InputSimple, { name: 'skype', onChange: _this.onChangeHandler })
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'modal-container__footer' },
	                            React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { caption: 'Сохранить', onClick: _this.saveChanges })
	                        )
	                    )
	                )
	            );
	        };
	    }

	    // <div>
	    //     <table className="text-form">
	    //         <tbody>
	    //         <tr>
	    //             <td><p className="text-card padd-right">Фамилия</p></td>
	    //             <td className="tbl-width"><InputSimple name="last_name" onChange={this.onChangeHandler} value={this.state.last_name}/></td>
	    //         </tr>
	    //         <tr>
	    //             <td><p className="text-card padd-right">Имя</p></td>
	    //             <td><InputSimple name="first_name" onChange={this.onChangeHandler} value={this.state.first_name}/></td>
	    //         </tr>
	    //         <tr>
	    //             <td><p className="text-card padd-right">Отчество</p></td>
	    //             <td><InputSimple name="pat_name" onChange={this.onChangeHandler} value={this.state.pat_name}/></td>
	    //         </tr>
	    //         <tr>
	    //             <td><p className="text-card padd-right">Должность</p></td>
	    //             <td><InputSimple name="position" onChange={this.onChangeHandler} value={this.state.position}/></td>
	    //         </tr>
	    //         <tr>
	    //             <td><p className="text-card padd-right">Дата рождения</p></td>
	    //             <td><DatePicker dateFormat="YYYY-MM-DD" selected={moment(Utils.dateFix(this.state.birthday, '1982-01-01'))} onChange={this.onBirthdayChangeHr}/></td>
	    //         </tr>
	    //         <tr>
	    //             <td><p className="padd-icon-mod icon-shift"><Icon iconName="cellphone-icon" className="icon-color "/></p></td>
	    //             <td><InputSimple name="mobile" onChange={this.onChangeHandler} value={this.state.mobile}/></td>
	    //         </tr>
	    //         <tr>
	    //             <td><p className="padd-icon-mod icon-shift"><Icon iconName="skype-icon" className="icon-color"/></p></td>
	    //             <td><InputSimple name="skype" onChange={this.onChangeHandler} value={this.state.skype}/></td>
	    //         </tr>
	    //         <tr>
	    //             <td><p className="text-card padd-right">ICQ</p></td>
	    //             <td><InputSimple name="icq" onChange={this.onChangeHandler} value={this.state.icq}/></td>
	    //         </tr>
	    //         </tbody>
	    //     </table>
	    //     <div className="box-row-nw just-end table-pr marg-t">
	    //         <TransparentButton caption="Сохранить" onClick={this.saveChanges}/>
	    //         <TransparentButton caption="Отменить" onClick={this.close}/>
	    //     </div>
	    // </div>

	    _createClass(UserEditDialog, null, [{
	        key: 'propTypes',
	        value: {
	            user: React.PropTypes.object.isRequired
	        },
	        enumerable: true
	    }]);

	    return UserEditDialog;
	})(React.Component);

	exports.UserEditDialog = UserEditDialog;

/***/ },
/* 264 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _stylesThemeController = __webpack_require__(249);

	var React = __webpack_require__(202);

	var TransparentButton = (function (_React$Component) {
	    _inherits(TransparentButton, _React$Component);

	    function TransparentButton() {
	        var _this = this;

	        _classCallCheck(this, TransparentButton);

	        _get(Object.getPrototypeOf(TransparentButton.prototype), 'constructor', this).apply(this, arguments);

	        this.onClick = function () {
	            if (!_this.props.onClick) return;
	            _this.props.onClick(_this.props.buttonId);
	        };
	    }

	    _createClass(TransparentButton, [{
	        key: 'render',
	        value: function render() {

	            var styles = {
	                transparentButton: {
	                    color: this.props.disabled ? this.props.themeController.TransparentButton.TransparentButtonDisabled.color : this.props.themeController.TransparentButton.TransparentButton.color,
	                    cursor: this.props.disabled ? "default" : "pointer",
	                    'webkitBoxShadow': 'none',
	                    'boxShadow': 'none',
	                    'backgroundColor': 'transparent',
	                    'webkitBorderRadius': '1px',
	                    'borderRadius': '1px',
	                    'fontSize': '14px',
	                    'height': '36px',
	                    'lineHeight': '36px',
	                    'width': 'auto',
	                    'border': 'none',
	                    'marginTop': '8px',
	                    'marginBottom': '8px',
	                    'textTransform': 'uppercase',
	                    'paddingLeft': '16px',
	                    'paddingRight': '16px',
	                    'fontWeight': 'bold',
	                    'outline': 'none'
	                },
	                transparentButtonHover: {
	                    WebkitBoxShadow: "none",
	                    boxShadow: "none",
	                    backgroundColor: this.props.themeController.TransparentButton.TransparentButton.hover.backgroundColor
	                },
	                transparentButtonFocus: {
	                    mozAppearance: "none",
	                    border: "none"
	                }
	            };
	            if (this.props.hidden) {
	                return null;
	            }
	            return React.createElement(
	                'button',
	                {
	                    disabled: this.props.disabled,
	                    style: styles.transparentButton,
	                    onClick: this.onClick,
	                    className: this.props.className
	                },
	                this.props.caption
	            );
	        }
	    }], [{
	        key: 'propTypes',
	        value: {
	            onClick: React.PropTypes.func,
	            buttonId: React.PropTypes.any,
	            caption: React.PropTypes.string,
	            hidden: React.PropTypes.bool
	        },
	        enumerable: true
	    }, {
	        key: 'defaultProps',
	        value: {
	            themeController: _stylesThemeController.ThemeController,
	            caption: "Button",
	            hidden: false,
	            className: "",
	            disabled: false
	        },
	        enumerable: true
	    }]);

	    return TransparentButton;
	})(React.Component);

	exports.TransparentButton = TransparentButton;

/***/ },
/* 265 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _SimpleComponentsIcons = __webpack_require__(252);

	var _Dispatcher = __webpack_require__(4);

	var _SimpleComponentsInputSelect = __webpack_require__(266);

	var _SimpleComponentsInputSelect2 = __webpack_require__(267);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	var _utils = __webpack_require__(2);

	var React = __webpack_require__(202);

	var InputDate = React.createClass({
	    displayName: 'InputDate',

	    propTypes: {
	        value: React.PropTypes.string,
	        caption: React.PropTypes.string,
	        onChange: React.PropTypes.func.isRequired,
	        name: React.PropTypes.string,
	        active: React.PropTypes.bool,
	        labelClass: React.PropTypes.string,
	        labelWidth: React.PropTypes.number
	    },

	    getDefaultProps: function getDefaultProps() {
	        return {
	            name: "Date",
	            active: true,
	            labelWidth: 114
	        };
	    },

	    getInitialState: function getInitialState() {
	        if (this.props.value) {
	            return _utils.Utils.extract_ymd_from_date(this.props.value);
	        } else return {
	            day: null,
	            month: null,
	            year: null
	        };
	    },

	    /*
	     updateState(newState){
	     this.setState(newState);
	     var name=this.props.name;
	     var newObj={};
	     var day=newState.day||this.state.day;
	     var month=newState.month||this.state.month;
	     var year=newState.year||this.state.year;
	     newObj[name]=year+'-'+month+'-'+day;
	     this.props.onChange(newObj);
	     },
	     */

	    dayChanged: function dayChanged(caller) {
	        this.dateChanged(this.dateObj.year, this.dateObj.month, caller.getSelectedList()[0].value);
	    },

	    monthChanged: function monthChanged(caller) {
	        this.dateChanged(this.dateObj.year, caller.getSelectedList()[0].value, this.dateObj.day);
	    },

	    yearChanged: function yearChanged(caller) {
	        this.dateChanged(caller.getSelectedList()[0].value, this.dateObj.month, this.dateObj.day);
	    },

	    dateChanged: function dateChanged(y, m, d) {
	        //console.log('[DateSimple] dateChanged ymd=' + y + ',' + m + ',' + d)
	        var o = {};
	        o[this.props.name] = [y, m, d].join('-');
	        this.props.onChange(o);
	    },

	    render: function render() {
	        //console.log('[DateSimple] render')
	        //console.log(this.state)
	        //console.log(' this.props.value=' + this.props.value)

	        // датапровайдеры для селекторов
	        var days = [{ id: -1, value: 'число' }],
	            months = [{ id: -1, value: 'месяц' }],
	            years = [{ id: -1, value: 'год' }];

	        // парсим входящую дату
	        if (this.props.value) {
	            this.dateObj = _utils.Utils.extract_ymd_from_date(this.props.value);
	        } else {
	            // дата не указана - показываем тектовые поля
	            this.dateObj = { year: years[0].value, month: months[0].value, day: days[0].value };
	        }

	        //console.debug(this.dateObj)

	        // заполняем данные для селеторов
	        function zerofill(src, len) {
	            while (src.length < len) src = '0' + src;
	            return src;
	        }

	        // ограничиваем выбор года 3 годами назад и 2 вперед
	        var d = new Date();
	        var startYear = d.getFullYear() - 3;
	        var endYear = d.getFullYear() + 2;

	        var i = undefined;
	        for (i = 1; i <= 31; i++) days.push({ id: i, value: zerofill(String(i), 2) });
	        for (i = 1; i <= 12; i++) months.push({ id: i, value: zerofill(String(i), 2) });
	        for (i = startYear; i <= endYear; i++) years.push({ id: i, value: zerofill(String(i), 4) });

	        // добавляем в данные селекторов недостающие данные (которые могут быть получены извне (в нашем случае this.props.value))
	        if (!find_key_value(days, 'value', this.dateObj.day)) days.splice(1, 0, { id: -2, value: this.dateObj.day });
	        if (!find_key_value(months, 'value', this.dateObj.month)) months.splice(1, 0, {
	            id: -2,
	            value: this.dateObj.month
	        });
	        if (!find_key_value(years, 'value', this.dateObj.year)) years.splice(1, 0, { id: -2, value: this.dateObj.year });

	        // выделяем выбранные данные
	        function set_selected_by_value(src, val) {
	            var o = find_key_value(src, 'value', val);
	            if (o) o.__selected__ = true;
	        }

	        set_selected_by_value(days, this.dateObj.day);
	        set_selected_by_value(months, this.dateObj.month);
	        set_selected_by_value(years, this.dateObj.year);

	        // выделяем выбранные данные по умлочанияю (если они не выбрались в предыдущем шаге)
	        function find_key_value(src, key, val) {
	            for (var _i = 0; _i < src.length; _i++) {
	                if (src[_i][key] === val) return src[_i];
	            }
	            return null;
	        }

	        if (!find_key_value(days, '__selected__', true)) days[0].__selected__ = true;
	        if (!find_key_value(months, '__selected__', true)) months[0].__selected__ = true;
	        if (!find_key_value(years, '__selected__', true)) years[0].__selected__ = true;

	        return React.createElement(
	            'div',
	            null,
	            React.createElement(
	                _SimpleComponentsFlexBox.FlexBox,
	                { alignItems: 'baseline' },
	                React.createElement(
	                    'label',
	                    { style: { flex: "0 0 " + this.props.labelWidth + "px" },
	                        className: "label " + this.props.labelClass },
	                    this.props.caption
	                ),
	                React.createElement(_SimpleComponentsInputSelect2.InputSelect2, { active: this.props.active, noIcon: true, list: days, onChanged: this.dayChanged }),
	                React.createElement('span', null),
	                React.createElement(_SimpleComponentsInputSelect2.InputSelect2, { active: this.props.active, noIcon: true, list: months, onChanged: this.monthChanged }),
	                React.createElement('span', null),
	                React.createElement(_SimpleComponentsInputSelect2.InputSelect2, { active: this.props.active, noIcon: true, list: years, onChanged: this.yearChanged })
	            )
	        );
	    }
	});

	exports.InputDate = InputDate;

	//<Icon iconName="event"/>

/***/ },
/* 266 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _SimpleComponentsIcons = __webpack_require__(252);

	var _Dispatcher = __webpack_require__(4);

	var React = __webpack_require__(202);

	var InputSelect = React.createClass({
	    displayName: 'InputSelect',

	    propTypes: {
	        selectedItem: React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.number]).isRequired, //установленное по умолчанию значение
	        selectedItems: React.PropTypes.array,
	        listItems: React.PropTypes.oneOfType([React.PropTypes.arrayOf(React.PropTypes.shape({
	            id: React.PropTypes.number,
	            name: React.PropTypes.string
	        })), React.PropTypes.arrayOf(React.PropTypes.string), React.PropTypes.arrayOf(React.PropTypes.number)]).isRequired, // массив из вариантов значений
	        getValue: React.PropTypes.func.isRequired, //функция, в которую передается объект с ключом из имени компонента и значением selectedItem
	        name: React.PropTypes.string, //имя компонента передается как ключ в объекте
	        active: React.PropTypes.bool, // признак, может компонент редактироваться или нет
	        caption: React.PropTypes.string,
	        labelWidth: React.PropTypes.number,
	        multiSelect: React.PropTypes.bool,
	        returnKey: React.PropTypes.string
	    },

	    getDefaultProps: function getDefaultProps() {
	        return {
	            selectedItem: undefined,
	            selectedItems: [],
	            listItems: [],
	            getValue: null,
	            name: "select",
	            active: true,
	            labelWidth: 114,
	            multiSelect: false
	        };
	    },

	    componentDidMount: function componentDidMount() {
	        if (this.props.active) {
	            _Dispatcher.Events.on(_Dispatcher.Events.EV_CLICK_ANYWHERE, this.closeList);
	        }
	    },
	    componentWillUnmount: function componentWillUnmount() {
	        if (this.props.active) {
	            _Dispatcher.Events.rem(_Dispatcher.Events.EV_CLICK_ANYWHERE, this.closeList);
	        }
	    },

	    closeList: function closeList() {
	        if (!this.state.hideList) {
	            this.setState({
	                hideList: true,
	                iconName: "select-down"
	            });
	        }
	    },

	    getInitialState: function getInitialState() {
	        var _this = this;

	        var listType = typeof this.props.listItems[0];
	        var values = this.props.listItems.map(function (item, id) {
	            if (listType === "object") {
	                return item[_this.props.returnKey];
	            } else return item;
	        });

	        return {
	            listType: listType,
	            listItems: this.props.listItems,
	            selectedItems: this.props.selectedItems,

	            listValues: values,
	            selectedItem: this.props.selectedItem,
	            hideList: true,
	            iconName: "select-down"
	        };
	    },
	    toggleList: function toggleList() {
	        if (this.props.active) {
	            this.setState({
	                hideList: !this.state.hideList,
	                iconName: this.state.iconName === "select-down" ? "select-up" : "select-down"
	            });
	        }
	    },
	    selectItem: function selectItem(event) {

	        var index = event.target.dataset.index;

	        var itemFromListItem = this.state.listItems[index];

	        console.log(itemFromListItem);
	        var getValue;

	        if (this.state.listType === "object" && this.props.returnKey) {
	            getValue = itemFromListItem[this.props.returnKey];
	            console.log(getValue);
	        } else {
	            getValue = itemFromListItem;
	        }

	        var obj = {}; //  создаем объект для передачи

	        if (!this.props.multiSelect) {

	            obj[this.props.name] = getValue; //вставляем в объект свойство со значением
	            this.props.getValue(obj); //  передаем объект
	            // меняем состояние
	            this.setState({
	                selectedItem: itemFromListItem,
	                selectedValue: getValue,
	                hideList: true,
	                iconName: "select-down"
	            });
	        } else {

	            var newSelectedItems = this.state.selectedItems; // список выбранных значений
	            newSelectedItems.push(getValue); // добавляем новое

	            var newListItems = this.state.listItems; // список невыбранных значений
	            newListItems.splice(index, 1); // убираем

	            obj[this.props.name] = newSelectedItems; //вставляем в объект свойство со значением

	            this.props.getValue(obj);
	            this.setState({
	                listItems: newListItems,
	                selectedItems: newSelectedItems
	            });
	        }
	    },
	    removeFromList: function removeFromList(event) {
	        var obj = {};
	        var index = event.target.dataset.index;
	        var value = this.state.selectedItems[index];
	        console.log("remove " + index + " " + value);
	        var newSelectedItems = this.state.selectedItems;
	        var newListItems = this.state.listItems;
	        newListItems.push(value);
	        console.log(newListItems);
	        newSelectedItems.splice(index, 1);
	        console.log(newSelectedItems);
	        obj[this.props.name] = newSelectedItems;
	        this.props.getValue(obj);
	        this.setState({
	            selectedItems: newSelectedItems,
	            listItems: newListItems
	        });
	    },
	    render: function render() {
	        var _this2 = this;

	        //console.log("MULTITEST");
	        //console.log(this.state);
	        var Selector;

	        var listItems = this.state.listItems;
	        var ListItems = listItems.map(function (item, i) {
	            if (_this2.state.listType === "object") {
	                return React.createElement(
	                    'p',
	                    { 'data-select': 'select', className: 'select-item', 'data-value': item.id, 'data-index': i,
	                        key: i },
	                    item.name
	                );
	            }
	            return React.createElement(
	                'p',
	                { 'data-select': 'select', className: 'select-item', 'data-value': item.id, 'data-index': i, key: i },
	                item
	            );
	        });
	        var list = (function () {
	            if (this.state.hideList) {
	                return null;
	            } else {
	                return ListItems;
	            }
	        }).bind(this);
	        var icon = this.props.noIcon ? null : React.createElement(_SimpleComponentsIcons.Icon, { iconName: this.state.iconName });
	        var labelClass = "label table-prb " + this.state.labelClass;
	        var labelStyle = {
	            flex: "0 0 " + this.props.labelWidth + "px"
	        };
	        var Label = this.props.caption ? React.createElement(
	            'label',
	            { style: labelStyle, className: labelClass },
	            this.props.caption
	        ) : null;
	        if (this.props.multiSelect) {
	            var selectedItems = this.state.selectedItems.length > 0 ? this.state.selectedItems.map(function (item, i) {
	                return React.createElement(
	                    'p',
	                    { key: i },
	                    item,
	                    React.createElement(
	                        'span',
	                        { 'data-index': i, onClick: _this2.removeFromList },
	                        'X'
	                    )
	                );
	            }) : this.props.selectedItem;
	            Selector = React.createElement(
	                'div',
	                { className: 'box-row-nw selected' },
	                React.createElement(
	                    'div',
	                    { className: 'box-row-wr' },
	                    selectedItems
	                ),
	                React.createElement(
	                    'div',
	                    { onClick: this.toggleList },
	                    icon
	                )
	            );
	        } else {
	            Selector = React.createElement(
	                'div',
	                { className: 'box-row-nw selected', onClick: this.toggleList },
	                React.createElement(
	                    'p',
	                    { className: '' },
	                    this.state.selectedItem
	                ),
	                icon
	            );
	        }

	        return React.createElement(
	            'div',
	            { className: 'box-row-nw align-center' },
	            Label,
	            React.createElement(
	                'div',
	                { className: 'select box-cln-nw just-end' },
	                Selector,
	                React.createElement(
	                    'div',
	                    { className: 'select-list', 'data-select': 'select', onClick: this.selectItem },
	                    list()
	                )
	            )
	        );
	    }
	});
	exports.InputSelect = InputSelect;

/***/ },
/* 267 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _SimpleComponentsIcons = __webpack_require__(252);

	var _Dispatcher = __webpack_require__(4);

	var React = __webpack_require__(202);

	var Tag = (function (_React$Component) {
	    _inherits(Tag, _React$Component);

	    function Tag() {
	        _classCallCheck(this, Tag);

	        _get(Object.getPrototypeOf(Tag.prototype), 'constructor', this).apply(this, arguments);
	    }

	    _createClass(Tag, [{
	        key: 'ignoreNextMouseUp',
	        value: function ignoreNextMouseUp(b) {
	            this.props.onMouseDown(b);
	        }
	    }, {
	        key: 'removeItem',
	        value: function removeItem(b) {
	            this.props.onClick(b);
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            console.log('[Tag] render');
	            console.debug(this.props);
	            return React.createElement(
	                'div',
	                { className: 'multi-bord' },
	                React.createElement(
	                    'div',
	                    { className: 'box-row-nw align-center multi-item' },
	                    React.createElement(
	                        'p',
	                        { className: 'marg-tags' },
	                        this.props.item.value
	                    ),
	                    React.createElement(
	                        'span',
	                        { className: 'span-size', onMouseDown: this.props.onMouseDown.bind(null, true),
	                            onClick: this.props.onClick.bind(null, this.props.item) },
	                        React.createElement(
	                            'div',
	                            { className: 'multi-ic' },
	                            React.createElement(_SimpleComponentsIcons.Icon, { iconName: 'close-icon', size: 18 })
	                        )
	                    )
	                )
	            );
	        }
	    }]);

	    return Tag;
	})(React.Component);

	var InputSelect2 = React.createClass({
	    displayName: 'InputSelect2',

	    propTypes: {
	        list: React.PropTypes.arrayOf(React.PropTypes.shape({
	            id: React.PropTypes.any,
	            value: React.PropTypes.any
	        })).isRequired, // массив из вариантов значений
	        onChanged: React.PropTypes.func.isRequired,
	        active: React.PropTypes.bool, // признак, может компонент редактироваться или нет
	        caption: React.PropTypes.string,
	        labelWidth: React.PropTypes.number,
	        multiSelect: React.PropTypes.bool,
	        styleGreed: React.PropTypes.bool
	    },

	    getDefaultProps: function getDefaultProps() {
	        return {
	            list: [],
	            name: "select",
	            active: true,
	            labelWidth: 114,
	            multiSelect: false,
	            styleGreed: false
	        };
	    },

	    componentDidMount: function componentDidMount() {
	        if (this.props.active) {
	            _Dispatcher.Events.on(_Dispatcher.Events.EV_GLOBAL_MOUSE_UP, this.globalMouseUp);
	        }
	    },
	    componentWillUnmount: function componentWillUnmount() {
	        if (this.props.active) {
	            _Dispatcher.Events.rem(_Dispatcher.Events.EV_GLOBAL_MOUSE_UP, this.globalMouseUp);
	        }
	    },

	    getInitialState: function getInitialState() {
	        return {
	            expanded: false,
	            iconName: "select-down",
	            labelClass: ""
	        };
	    },

	    globalMouseUp: function globalMouseUp(e) {
	        //console.log('[InputSelect2] globalMouseUp')
	        if (this.igmu) {
	            this.igmu = false;
	            return;
	        }
	        if (this.state.expanded) this.toggleList();
	    },

	    ignoreNextMouseUp: function ignoreNextMouseUp(b) {
	        //console.log('[InputSelect2] ignoreNextMouseUp ' + b)
	        this.igmu = b;
	    },

	    toggleList: function toggleList() {
	        //console.log('[InputSelect2] toggleList')
	        if (!this.props.active) return;
	        this.setState({
	            expanded: !this.state.expanded,
	            iconName: this.state.iconName === "select-down" ? "select-up" : "select-down"
	        });
	    },

	    toggleInvoke: function toggleInvoke() {
	        //console.log('[InputSelect2] toggleInvoke')
	        if (!this.props.active) return;
	        this.toggleList();
	    },

	    selectItem: function selectItem(obj) {
	        //console.log('[InputSelect2] selectItem')
	        //console.debug(obj)
	        if (!this.props.multiSelect) {
	            this.props.list.forEach(function (i) {
	                delete i.__selected__;
	            });
	        }
	        obj.__selected__ = true;
	        this.toggleList();
	        var f = this.props.onChanged;
	        if (f) f(this);
	    },

	    removeItem: function removeItem(obj) {
	        //console.log('[InputSelect2] removeItem')
	        //console.debug(obj)
	        delete obj.__selected__;
	        this.setState({});
	        var f = this.props.onChanged;
	        if (f) f(this);
	    },

	    /*
	     getObjById (id) {
	     let l = this.props.list
	     for (let i = 0; i < l.length; i++) {
	     if (l[i].id == id) return l[i]
	     }
	     return null;
	     },
	     */

	    // возвращает список выбранных объектов
	    getSelectedList: function getSelectedList() {
	        var l = this.props.list;
	        return this.props.list.filter(function (i) {
	            return i.__selected__;
	        });
	    },

	    // возвражает первый попавшийся выбранный объект
	    getFirstSelectedObj: function getFirstSelectedObj() {
	        for (var i = 0, l = this.props.list; i < l.length; i++) {
	            if (l[i].__selected__) return l[i];
	        }
	        return null;
	    },

	    // возвращает значение указанного ключа первого попавшегося выбранного объекта
	    getFirstSelectedKeyValue: function getFirstSelectedKeyValue(key) {
	        var o = this.getFirstSelectedObj();
	        return o ? o[key] : null;
	    },

	    // возвращает значение первого попавшегося выбранного объекта
	    getFirstSelectedValue: function getFirstSelectedValue() {
	        return this.getFirstSelectedKeyValue('value');
	    },

	    // возвращает true если выбраны все элементы
	    isAllItemsSelected: function isAllItemsSelected() {
	        for (var i = 0, l = this.props.list; i < l.length; i++) {
	            if (!l[i].__selected__) return false;
	        }
	        return true;
	    },

	    render: function render() {
	        var _this = this;

	        //console.log("[InputSelect2] render")
	        //console.log(this.props)
	        //console.log(this.state)

	        //console.debug(this.props);

	        var Selector;

	        var list1 = !this.state.expanded ? null : this.props.list.map(function (item, i) {
	            if (_this.props.multiSelect && item.__selected__) return null;
	            return React.createElement(
	                'div',
	                { 'data-select': 'select', className: 'select-item', key: i,
	                    onMouseDown: _this.ignoreNextMouseUp.bind(null, true), onClick: _this.selectItem.bind(null, item) },
	                item.value
	            );
	        });

	        var icon = this.props.noIcon ? null : React.createElement(_SimpleComponentsIcons.Icon, { iconName: this.state.iconName });

	        var Label = this.props.caption ? React.createElement(
	            'label',
	            { style: { flex: "0 0 " + this.props.labelWidth + "px" },
	                className: "label table-prb marg-md " + this.state.labelClass },
	            this.props.caption
	        ) : null;

	        if (this.props.multiSelect) {
	            var isSelected = false;
	            var selectedItems = this.props.list.map(function (item, i) {
	                if (!item.__selected__) {
	                    return null;
	                } else {
	                    isSelected = true;
	                    if (_this.props.elementClass) {
	                        return React.createElement(_this.props.elementClass, {
	                            item: item,
	                            active: _this.props.active,
	                            onMouseDown: _this.ignoreNextMouseUp,
	                            onClick: _this.removeItem
	                        });
	                    } else {
	                        return React.createElement(
	                            'div',
	                            { key: i },
	                            item.value,
	                            React.createElement(
	                                'span',
	                                { onMouseDown: _this.ignoreNextMouseUp.bind(null, true),
	                                    onClick: _this.removeItem.bind(null, item) },
	                                'X'
	                            )
	                        );
	                    }
	                }
	            });

	            var dropDownButton = this.isAllItemsSelected() ? null : React.createElement(
	                'div',
	                { style: {
	                        'marginRight': '10px'
	                    }, onMouseDown: this.ignoreNextMouseUp.bind(null, true),
	                    onClick: this.toggleInvoke },
	                this.props.active ? icon : null
	            );

	            Selector = React.createElement(
	                'div',
	                { className: 'box-row-nw' },
	                React.createElement(
	                    'div',
	                    {
	                        className: 'box-row-wr selected-tags' },
	                    isSelected ? selectedItems : "Выберите из списка"
	                ),
	                dropDownButton
	            );
	        } else {
	            var firstSelectedValue = undefined;
	            for (var i = 0, l = this.props.list; i < l.length; i++) {
	                if (l[i].__selected__) {
	                    firstSelectedValue = l[i].value;
	                    break;
	                }
	            }

	            Selector = React.createElement(
	                'div',
	                { className: 'box-row-nw selected-ms', onMouseDown: this.ignoreNextMouseUp.bind(null, true),
	                    onClick: this.toggleInvoke },
	                React.createElement(
	                    'div',
	                    { className: '' },
	                    !firstSelectedValue ? "Выберите из списка" : firstSelectedValue
	                ),
	                this.props.active ? icon : null
	            );
	        }

	        return React.createElement(
	            'div',
	            { className: this.props.styleGreed ? "box-row-nw flex-greed align-center" : "box-row-nw align-center" },
	            Label,
	            React.createElement(
	                'div',
	                { className: 'select box-cln-nw' },
	                Selector,
	                list1 ? React.createElement(
	                    'div',
	                    { className: 'select-list', 'data-select': 'select' },
	                    list1
	                ) : null
	            )
	        );
	    }
	});
	exports.InputSelect2 = InputSelect2;
	exports.Tag = Tag;

/***/ },
/* 268 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {//! moment.js
	//! version : 2.10.6
	//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
	//! license : MIT
	//! momentjs.com

	(function (global, factory) {
	     true ? module.exports = factory() :
	    typeof define === 'function' && define.amd ? define(factory) :
	    global.moment = factory()
	}(this, function () { 'use strict';

	    var hookCallback;

	    function utils_hooks__hooks () {
	        return hookCallback.apply(null, arguments);
	    }

	    // This is done to register the method called with moment()
	    // without creating circular dependencies.
	    function setHookCallback (callback) {
	        hookCallback = callback;
	    }

	    function isArray(input) {
	        return Object.prototype.toString.call(input) === '[object Array]';
	    }

	    function isDate(input) {
	        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';
	    }

	    function map(arr, fn) {
	        var res = [], i;
	        for (i = 0; i < arr.length; ++i) {
	            res.push(fn(arr[i], i));
	        }
	        return res;
	    }

	    function hasOwnProp(a, b) {
	        return Object.prototype.hasOwnProperty.call(a, b);
	    }

	    function extend(a, b) {
	        for (var i in b) {
	            if (hasOwnProp(b, i)) {
	                a[i] = b[i];
	            }
	        }

	        if (hasOwnProp(b, 'toString')) {
	            a.toString = b.toString;
	        }

	        if (hasOwnProp(b, 'valueOf')) {
	            a.valueOf = b.valueOf;
	        }

	        return a;
	    }

	    function create_utc__createUTC (input, format, locale, strict) {
	        return createLocalOrUTC(input, format, locale, strict, true).utc();
	    }

	    function defaultParsingFlags() {
	        // We need to deep clone this object.
	        return {
	            empty           : false,
	            unusedTokens    : [],
	            unusedInput     : [],
	            overflow        : -2,
	            charsLeftOver   : 0,
	            nullInput       : false,
	            invalidMonth    : null,
	            invalidFormat   : false,
	            userInvalidated : false,
	            iso             : false
	        };
	    }

	    function getParsingFlags(m) {
	        if (m._pf == null) {
	            m._pf = defaultParsingFlags();
	        }
	        return m._pf;
	    }

	    function valid__isValid(m) {
	        if (m._isValid == null) {
	            var flags = getParsingFlags(m);
	            m._isValid = !isNaN(m._d.getTime()) &&
	                flags.overflow < 0 &&
	                !flags.empty &&
	                !flags.invalidMonth &&
	                !flags.invalidWeekday &&
	                !flags.nullInput &&
	                !flags.invalidFormat &&
	                !flags.userInvalidated;

	            if (m._strict) {
	                m._isValid = m._isValid &&
	                    flags.charsLeftOver === 0 &&
	                    flags.unusedTokens.length === 0 &&
	                    flags.bigHour === undefined;
	            }
	        }
	        return m._isValid;
	    }

	    function valid__createInvalid (flags) {
	        var m = create_utc__createUTC(NaN);
	        if (flags != null) {
	            extend(getParsingFlags(m), flags);
	        }
	        else {
	            getParsingFlags(m).userInvalidated = true;
	        }

	        return m;
	    }

	    var momentProperties = utils_hooks__hooks.momentProperties = [];

	    function copyConfig(to, from) {
	        var i, prop, val;

	        if (typeof from._isAMomentObject !== 'undefined') {
	            to._isAMomentObject = from._isAMomentObject;
	        }
	        if (typeof from._i !== 'undefined') {
	            to._i = from._i;
	        }
	        if (typeof from._f !== 'undefined') {
	            to._f = from._f;
	        }
	        if (typeof from._l !== 'undefined') {
	            to._l = from._l;
	        }
	        if (typeof from._strict !== 'undefined') {
	            to._strict = from._strict;
	        }
	        if (typeof from._tzm !== 'undefined') {
	            to._tzm = from._tzm;
	        }
	        if (typeof from._isUTC !== 'undefined') {
	            to._isUTC = from._isUTC;
	        }
	        if (typeof from._offset !== 'undefined') {
	            to._offset = from._offset;
	        }
	        if (typeof from._pf !== 'undefined') {
	            to._pf = getParsingFlags(from);
	        }
	        if (typeof from._locale !== 'undefined') {
	            to._locale = from._locale;
	        }

	        if (momentProperties.length > 0) {
	            for (i in momentProperties) {
	                prop = momentProperties[i];
	                val = from[prop];
	                if (typeof val !== 'undefined') {
	                    to[prop] = val;
	                }
	            }
	        }

	        return to;
	    }

	    var updateInProgress = false;

	    // Moment prototype object
	    function Moment(config) {
	        copyConfig(this, config);
	        this._d = new Date(config._d != null ? config._d.getTime() : NaN);
	        // Prevent infinite loop in case updateOffset creates new moment
	        // objects.
	        if (updateInProgress === false) {
	            updateInProgress = true;
	            utils_hooks__hooks.updateOffset(this);
	            updateInProgress = false;
	        }
	    }

	    function isMoment (obj) {
	        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);
	    }

	    function absFloor (number) {
	        if (number < 0) {
	            return Math.ceil(number);
	        } else {
	            return Math.floor(number);
	        }
	    }

	    function toInt(argumentForCoercion) {
	        var coercedNumber = +argumentForCoercion,
	            value = 0;

	        if (coercedNumber !== 0 && isFinite(coercedNumber)) {
	            value = absFloor(coercedNumber);
	        }

	        return value;
	    }

	    function compareArrays(array1, array2, dontConvert) {
	        var len = Math.min(array1.length, array2.length),
	            lengthDiff = Math.abs(array1.length - array2.length),
	            diffs = 0,
	            i;
	        for (i = 0; i < len; i++) {
	            if ((dontConvert && array1[i] !== array2[i]) ||
	                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {
	                diffs++;
	            }
	        }
	        return diffs + lengthDiff;
	    }

	    function Locale() {
	    }

	    var locales = {};
	    var globalLocale;

	    function normalizeLocale(key) {
	        return key ? key.toLowerCase().replace('_', '-') : key;
	    }

	    // pick the locale from the array
	    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
	    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
	    function chooseLocale(names) {
	        var i = 0, j, next, locale, split;

	        while (i < names.length) {
	            split = normalizeLocale(names[i]).split('-');
	            j = split.length;
	            next = normalizeLocale(names[i + 1]);
	            next = next ? next.split('-') : null;
	            while (j > 0) {
	                locale = loadLocale(split.slice(0, j).join('-'));
	                if (locale) {
	                    return locale;
	                }
	                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {
	                    //the next array item is better than a shallower substring of this one
	                    break;
	                }
	                j--;
	            }
	            i++;
	        }
	        return null;
	    }

	    function loadLocale(name) {
	        var oldLocale = null;
	        // TODO: Find a better way to register and load all the locales in Node
	        if (!locales[name] && typeof module !== 'undefined' &&
	                module && module.exports) {
	            try {
	                oldLocale = globalLocale._abbr;
	                __webpack_require__(270)("./" + name);
	                // because defineLocale currently also sets the global locale, we
	                // want to undo that for lazy loaded locales
	                locale_locales__getSetGlobalLocale(oldLocale);
	            } catch (e) { }
	        }
	        return locales[name];
	    }

	    // This function will load locale and then set the global locale.  If
	    // no arguments are passed in, it will simply return the current global
	    // locale key.
	    function locale_locales__getSetGlobalLocale (key, values) {
	        var data;
	        if (key) {
	            if (typeof values === 'undefined') {
	                data = locale_locales__getLocale(key);
	            }
	            else {
	                data = defineLocale(key, values);
	            }

	            if (data) {
	                // moment.duration._locale = moment._locale = data;
	                globalLocale = data;
	            }
	        }

	        return globalLocale._abbr;
	    }

	    function defineLocale (name, values) {
	        if (values !== null) {
	            values.abbr = name;
	            locales[name] = locales[name] || new Locale();
	            locales[name].set(values);

	            // backwards compat for now: also set the locale
	            locale_locales__getSetGlobalLocale(name);

	            return locales[name];
	        } else {
	            // useful for testing
	            delete locales[name];
	            return null;
	        }
	    }

	    // returns locale data
	    function locale_locales__getLocale (key) {
	        var locale;

	        if (key && key._locale && key._locale._abbr) {
	            key = key._locale._abbr;
	        }

	        if (!key) {
	            return globalLocale;
	        }

	        if (!isArray(key)) {
	            //short-circuit everything else
	            locale = loadLocale(key);
	            if (locale) {
	                return locale;
	            }
	            key = [key];
	        }

	        return chooseLocale(key);
	    }

	    var aliases = {};

	    function addUnitAlias (unit, shorthand) {
	        var lowerCase = unit.toLowerCase();
	        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
	    }

	    function normalizeUnits(units) {
	        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;
	    }

	    function normalizeObjectUnits(inputObject) {
	        var normalizedInput = {},
	            normalizedProp,
	            prop;

	        for (prop in inputObject) {
	            if (hasOwnProp(inputObject, prop)) {
	                normalizedProp = normalizeUnits(prop);
	                if (normalizedProp) {
	                    normalizedInput[normalizedProp] = inputObject[prop];
	                }
	            }
	        }

	        return normalizedInput;
	    }

	    function makeGetSet (unit, keepTime) {
	        return function (value) {
	            if (value != null) {
	                get_set__set(this, unit, value);
	                utils_hooks__hooks.updateOffset(this, keepTime);
	                return this;
	            } else {
	                return get_set__get(this, unit);
	            }
	        };
	    }

	    function get_set__get (mom, unit) {
	        return mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]();
	    }

	    function get_set__set (mom, unit, value) {
	        return mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
	    }

	    // MOMENTS

	    function getSet (units, value) {
	        var unit;
	        if (typeof units === 'object') {
	            for (unit in units) {
	                this.set(unit, units[unit]);
	            }
	        } else {
	            units = normalizeUnits(units);
	            if (typeof this[units] === 'function') {
	                return this[units](value);
	            }
	        }
	        return this;
	    }

	    function zeroFill(number, targetLength, forceSign) {
	        var absNumber = '' + Math.abs(number),
	            zerosToFill = targetLength - absNumber.length,
	            sign = number >= 0;
	        return (sign ? (forceSign ? '+' : '') : '-') +
	            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
	    }

	    var formattingTokens = /(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;

	    var localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;

	    var formatFunctions = {};

	    var formatTokenFunctions = {};

	    // token:    'M'
	    // padded:   ['MM', 2]
	    // ordinal:  'Mo'
	    // callback: function () { this.month() + 1 }
	    function addFormatToken (token, padded, ordinal, callback) {
	        var func = callback;
	        if (typeof callback === 'string') {
	            func = function () {
	                return this[callback]();
	            };
	        }
	        if (token) {
	            formatTokenFunctions[token] = func;
	        }
	        if (padded) {
	            formatTokenFunctions[padded[0]] = function () {
	                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
	            };
	        }
	        if (ordinal) {
	            formatTokenFunctions[ordinal] = function () {
	                return this.localeData().ordinal(func.apply(this, arguments), token);
	            };
	        }
	    }

	    function removeFormattingTokens(input) {
	        if (input.match(/\[[\s\S]/)) {
	            return input.replace(/^\[|\]$/g, '');
	        }
	        return input.replace(/\\/g, '');
	    }

	    function makeFormatFunction(format) {
	        var array = format.match(formattingTokens), i, length;

	        for (i = 0, length = array.length; i < length; i++) {
	            if (formatTokenFunctions[array[i]]) {
	                array[i] = formatTokenFunctions[array[i]];
	            } else {
	                array[i] = removeFormattingTokens(array[i]);
	            }
	        }

	        return function (mom) {
	            var output = '';
	            for (i = 0; i < length; i++) {
	                output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];
	            }
	            return output;
	        };
	    }

	    // format date using native date object
	    function formatMoment(m, format) {
	        if (!m.isValid()) {
	            return m.localeData().invalidDate();
	        }

	        format = expandFormat(format, m.localeData());
	        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);

	        return formatFunctions[format](m);
	    }

	    function expandFormat(format, locale) {
	        var i = 5;

	        function replaceLongDateFormatTokens(input) {
	            return locale.longDateFormat(input) || input;
	        }

	        localFormattingTokens.lastIndex = 0;
	        while (i >= 0 && localFormattingTokens.test(format)) {
	            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
	            localFormattingTokens.lastIndex = 0;
	            i -= 1;
	        }

	        return format;
	    }

	    var match1         = /\d/;            //       0 - 9
	    var match2         = /\d\d/;          //      00 - 99
	    var match3         = /\d{3}/;         //     000 - 999
	    var match4         = /\d{4}/;         //    0000 - 9999
	    var match6         = /[+-]?\d{6}/;    // -999999 - 999999
	    var match1to2      = /\d\d?/;         //       0 - 99
	    var match1to3      = /\d{1,3}/;       //       0 - 999
	    var match1to4      = /\d{1,4}/;       //       0 - 9999
	    var match1to6      = /[+-]?\d{1,6}/;  // -999999 - 999999

	    var matchUnsigned  = /\d+/;           //       0 - inf
	    var matchSigned    = /[+-]?\d+/;      //    -inf - inf

	    var matchOffset    = /Z|[+-]\d\d:?\d\d/gi; // +00:00 -00:00 +0000 -0000 or Z

	    var matchTimestamp = /[+-]?\d+(\.\d{1,3})?/; // 123456789 123456789.123

	    // any word (or two) characters or numbers including two/three word month in arabic.
	    var matchWord = /[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i;

	    var regexes = {};

	    function isFunction (sth) {
	        // https://github.com/moment/moment/issues/2325
	        return typeof sth === 'function' &&
	            Object.prototype.toString.call(sth) === '[object Function]';
	    }


	    function addRegexToken (token, regex, strictRegex) {
	        regexes[token] = isFunction(regex) ? regex : function (isStrict) {
	            return (isStrict && strictRegex) ? strictRegex : regex;
	        };
	    }

	    function getParseRegexForToken (token, config) {
	        if (!hasOwnProp(regexes, token)) {
	            return new RegExp(unescapeFormat(token));
	        }

	        return regexes[token](config._strict, config._locale);
	    }

	    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
	    function unescapeFormat(s) {
	        return s.replace('\\', '').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {
	            return p1 || p2 || p3 || p4;
	        }).replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
	    }

	    var tokens = {};

	    function addParseToken (token, callback) {
	        var i, func = callback;
	        if (typeof token === 'string') {
	            token = [token];
	        }
	        if (typeof callback === 'number') {
	            func = function (input, array) {
	                array[callback] = toInt(input);
	            };
	        }
	        for (i = 0; i < token.length; i++) {
	            tokens[token[i]] = func;
	        }
	    }

	    function addWeekParseToken (token, callback) {
	        addParseToken(token, function (input, array, config, token) {
	            config._w = config._w || {};
	            callback(input, config._w, config, token);
	        });
	    }

	    function addTimeToArrayFromToken(token, input, config) {
	        if (input != null && hasOwnProp(tokens, token)) {
	            tokens[token](input, config._a, config, token);
	        }
	    }

	    var YEAR = 0;
	    var MONTH = 1;
	    var DATE = 2;
	    var HOUR = 3;
	    var MINUTE = 4;
	    var SECOND = 5;
	    var MILLISECOND = 6;

	    function daysInMonth(year, month) {
	        return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();
	    }

	    // FORMATTING

	    addFormatToken('M', ['MM', 2], 'Mo', function () {
	        return this.month() + 1;
	    });

	    addFormatToken('MMM', 0, 0, function (format) {
	        return this.localeData().monthsShort(this, format);
	    });

	    addFormatToken('MMMM', 0, 0, function (format) {
	        return this.localeData().months(this, format);
	    });

	    // ALIASES

	    addUnitAlias('month', 'M');

	    // PARSING

	    addRegexToken('M',    match1to2);
	    addRegexToken('MM',   match1to2, match2);
	    addRegexToken('MMM',  matchWord);
	    addRegexToken('MMMM', matchWord);

	    addParseToken(['M', 'MM'], function (input, array) {
	        array[MONTH] = toInt(input) - 1;
	    });

	    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
	        var month = config._locale.monthsParse(input, token, config._strict);
	        // if we didn't find a month name, mark the date as invalid.
	        if (month != null) {
	            array[MONTH] = month;
	        } else {
	            getParsingFlags(config).invalidMonth = input;
	        }
	    });

	    // LOCALES

	    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');
	    function localeMonths (m) {
	        return this._months[m.month()];
	    }

	    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');
	    function localeMonthsShort (m) {
	        return this._monthsShort[m.month()];
	    }

	    function localeMonthsParse (monthName, format, strict) {
	        var i, mom, regex;

	        if (!this._monthsParse) {
	            this._monthsParse = [];
	            this._longMonthsParse = [];
	            this._shortMonthsParse = [];
	        }

	        for (i = 0; i < 12; i++) {
	            // make the regex if we don't have it already
	            mom = create_utc__createUTC([2000, i]);
	            if (strict && !this._longMonthsParse[i]) {
	                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');
	                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');
	            }
	            if (!strict && !this._monthsParse[i]) {
	                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
	                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
	            }
	            // test the regex
	            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {
	                return i;
	            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {
	                return i;
	            } else if (!strict && this._monthsParse[i].test(monthName)) {
	                return i;
	            }
	        }
	    }

	    // MOMENTS

	    function setMonth (mom, value) {
	        var dayOfMonth;

	        // TODO: Move this out of here!
	        if (typeof value === 'string') {
	            value = mom.localeData().monthsParse(value);
	            // TODO: Another silent failure?
	            if (typeof value !== 'number') {
	                return mom;
	            }
	        }

	        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
	        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
	        return mom;
	    }

	    function getSetMonth (value) {
	        if (value != null) {
	            setMonth(this, value);
	            utils_hooks__hooks.updateOffset(this, true);
	            return this;
	        } else {
	            return get_set__get(this, 'Month');
	        }
	    }

	    function getDaysInMonth () {
	        return daysInMonth(this.year(), this.month());
	    }

	    function checkOverflow (m) {
	        var overflow;
	        var a = m._a;

	        if (a && getParsingFlags(m).overflow === -2) {
	            overflow =
	                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :
	                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :
	                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :
	                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :
	                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :
	                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :
	                -1;

	            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
	                overflow = DATE;
	            }

	            getParsingFlags(m).overflow = overflow;
	        }

	        return m;
	    }

	    function warn(msg) {
	        if (utils_hooks__hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {
	            console.warn('Deprecation warning: ' + msg);
	        }
	    }

	    function deprecate(msg, fn) {
	        var firstTime = true;

	        return extend(function () {
	            if (firstTime) {
	                warn(msg + '\n' + (new Error()).stack);
	                firstTime = false;
	            }
	            return fn.apply(this, arguments);
	        }, fn);
	    }

	    var deprecations = {};

	    function deprecateSimple(name, msg) {
	        if (!deprecations[name]) {
	            warn(msg);
	            deprecations[name] = true;
	        }
	    }

	    utils_hooks__hooks.suppressDeprecationWarnings = false;

	    var from_string__isoRegex = /^\s*(?:[+-]\d{6}|\d{4})-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T| )(\d\d(:\d\d(:\d\d(\.\d+)?)?)?)?([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;

	    var isoDates = [
	        ['YYYYYY-MM-DD', /[+-]\d{6}-\d{2}-\d{2}/],
	        ['YYYY-MM-DD', /\d{4}-\d{2}-\d{2}/],
	        ['GGGG-[W]WW-E', /\d{4}-W\d{2}-\d/],
	        ['GGGG-[W]WW', /\d{4}-W\d{2}/],
	        ['YYYY-DDD', /\d{4}-\d{3}/]
	    ];

	    // iso time formats and regexes
	    var isoTimes = [
	        ['HH:mm:ss.SSSS', /(T| )\d\d:\d\d:\d\d\.\d+/],
	        ['HH:mm:ss', /(T| )\d\d:\d\d:\d\d/],
	        ['HH:mm', /(T| )\d\d:\d\d/],
	        ['HH', /(T| )\d\d/]
	    ];

	    var aspNetJsonRegex = /^\/?Date\((\-?\d+)/i;

	    // date from iso format
	    function configFromISO(config) {
	        var i, l,
	            string = config._i,
	            match = from_string__isoRegex.exec(string);

	        if (match) {
	            getParsingFlags(config).iso = true;
	            for (i = 0, l = isoDates.length; i < l; i++) {
	                if (isoDates[i][1].exec(string)) {
	                    config._f = isoDates[i][0];
	                    break;
	                }
	            }
	            for (i = 0, l = isoTimes.length; i < l; i++) {
	                if (isoTimes[i][1].exec(string)) {
	                    // match[6] should be 'T' or space
	                    config._f += (match[6] || ' ') + isoTimes[i][0];
	                    break;
	                }
	            }
	            if (string.match(matchOffset)) {
	                config._f += 'Z';
	            }
	            configFromStringAndFormat(config);
	        } else {
	            config._isValid = false;
	        }
	    }

	    // date from iso format or fallback
	    function configFromString(config) {
	        var matched = aspNetJsonRegex.exec(config._i);

	        if (matched !== null) {
	            config._d = new Date(+matched[1]);
	            return;
	        }

	        configFromISO(config);
	        if (config._isValid === false) {
	            delete config._isValid;
	            utils_hooks__hooks.createFromInputFallback(config);
	        }
	    }

	    utils_hooks__hooks.createFromInputFallback = deprecate(
	        'moment construction falls back to js Date. This is ' +
	        'discouraged and will be removed in upcoming major ' +
	        'release. Please refer to ' +
	        'https://github.com/moment/moment/issues/1407 for more info.',
	        function (config) {
	            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
	        }
	    );

	    function createDate (y, m, d, h, M, s, ms) {
	        //can't just apply() to create a date:
	        //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply
	        var date = new Date(y, m, d, h, M, s, ms);

	        //the date constructor doesn't accept years < 1970
	        if (y < 1970) {
	            date.setFullYear(y);
	        }
	        return date;
	    }

	    function createUTCDate (y) {
	        var date = new Date(Date.UTC.apply(null, arguments));
	        if (y < 1970) {
	            date.setUTCFullYear(y);
	        }
	        return date;
	    }

	    addFormatToken(0, ['YY', 2], 0, function () {
	        return this.year() % 100;
	    });

	    addFormatToken(0, ['YYYY',   4],       0, 'year');
	    addFormatToken(0, ['YYYYY',  5],       0, 'year');
	    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');

	    // ALIASES

	    addUnitAlias('year', 'y');

	    // PARSING

	    addRegexToken('Y',      matchSigned);
	    addRegexToken('YY',     match1to2, match2);
	    addRegexToken('YYYY',   match1to4, match4);
	    addRegexToken('YYYYY',  match1to6, match6);
	    addRegexToken('YYYYYY', match1to6, match6);

	    addParseToken(['YYYYY', 'YYYYYY'], YEAR);
	    addParseToken('YYYY', function (input, array) {
	        array[YEAR] = input.length === 2 ? utils_hooks__hooks.parseTwoDigitYear(input) : toInt(input);
	    });
	    addParseToken('YY', function (input, array) {
	        array[YEAR] = utils_hooks__hooks.parseTwoDigitYear(input);
	    });

	    // HELPERS

	    function daysInYear(year) {
	        return isLeapYear(year) ? 366 : 365;
	    }

	    function isLeapYear(year) {
	        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
	    }

	    // HOOKS

	    utils_hooks__hooks.parseTwoDigitYear = function (input) {
	        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
	    };

	    // MOMENTS

	    var getSetYear = makeGetSet('FullYear', false);

	    function getIsLeapYear () {
	        return isLeapYear(this.year());
	    }

	    addFormatToken('w', ['ww', 2], 'wo', 'week');
	    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');

	    // ALIASES

	    addUnitAlias('week', 'w');
	    addUnitAlias('isoWeek', 'W');

	    // PARSING

	    addRegexToken('w',  match1to2);
	    addRegexToken('ww', match1to2, match2);
	    addRegexToken('W',  match1to2);
	    addRegexToken('WW', match1to2, match2);

	    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {
	        week[token.substr(0, 1)] = toInt(input);
	    });

	    // HELPERS

	    // firstDayOfWeek       0 = sun, 6 = sat
	    //                      the day of the week that starts the week
	    //                      (usually sunday or monday)
	    // firstDayOfWeekOfYear 0 = sun, 6 = sat
	    //                      the first week is the week that contains the first
	    //                      of this day of the week
	    //                      (eg. ISO weeks use thursday (4))
	    function weekOfYear(mom, firstDayOfWeek, firstDayOfWeekOfYear) {
	        var end = firstDayOfWeekOfYear - firstDayOfWeek,
	            daysToDayOfWeek = firstDayOfWeekOfYear - mom.day(),
	            adjustedMoment;


	        if (daysToDayOfWeek > end) {
	            daysToDayOfWeek -= 7;
	        }

	        if (daysToDayOfWeek < end - 7) {
	            daysToDayOfWeek += 7;
	        }

	        adjustedMoment = local__createLocal(mom).add(daysToDayOfWeek, 'd');
	        return {
	            week: Math.ceil(adjustedMoment.dayOfYear() / 7),
	            year: adjustedMoment.year()
	        };
	    }

	    // LOCALES

	    function localeWeek (mom) {
	        return weekOfYear(mom, this._week.dow, this._week.doy).week;
	    }

	    var defaultLocaleWeek = {
	        dow : 0, // Sunday is the first day of the week.
	        doy : 6  // The week that contains Jan 1st is the first week of the year.
	    };

	    function localeFirstDayOfWeek () {
	        return this._week.dow;
	    }

	    function localeFirstDayOfYear () {
	        return this._week.doy;
	    }

	    // MOMENTS

	    function getSetWeek (input) {
	        var week = this.localeData().week(this);
	        return input == null ? week : this.add((input - week) * 7, 'd');
	    }

	    function getSetISOWeek (input) {
	        var week = weekOfYear(this, 1, 4).week;
	        return input == null ? week : this.add((input - week) * 7, 'd');
	    }

	    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');

	    // ALIASES

	    addUnitAlias('dayOfYear', 'DDD');

	    // PARSING

	    addRegexToken('DDD',  match1to3);
	    addRegexToken('DDDD', match3);
	    addParseToken(['DDD', 'DDDD'], function (input, array, config) {
	        config._dayOfYear = toInt(input);
	    });

	    // HELPERS

	    //http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
	    function dayOfYearFromWeeks(year, week, weekday, firstDayOfWeekOfYear, firstDayOfWeek) {
	        var week1Jan = 6 + firstDayOfWeek - firstDayOfWeekOfYear, janX = createUTCDate(year, 0, 1 + week1Jan), d = janX.getUTCDay(), dayOfYear;
	        if (d < firstDayOfWeek) {
	            d += 7;
	        }

	        weekday = weekday != null ? 1 * weekday : firstDayOfWeek;

	        dayOfYear = 1 + week1Jan + 7 * (week - 1) - d + weekday;

	        return {
	            year: dayOfYear > 0 ? year : year - 1,
	            dayOfYear: dayOfYear > 0 ?  dayOfYear : daysInYear(year - 1) + dayOfYear
	        };
	    }

	    // MOMENTS

	    function getSetDayOfYear (input) {
	        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;
	        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');
	    }

	    // Pick the first defined of two or three arguments.
	    function defaults(a, b, c) {
	        if (a != null) {
	            return a;
	        }
	        if (b != null) {
	            return b;
	        }
	        return c;
	    }

	    function currentDateArray(config) {
	        var now = new Date();
	        if (config._useUTC) {
	            return [now.getUTCFullYear(), now.getUTCMonth(), now.getUTCDate()];
	        }
	        return [now.getFullYear(), now.getMonth(), now.getDate()];
	    }

	    // convert an array to a date.
	    // the array should mirror the parameters below
	    // note: all values past the year are optional and will default to the lowest possible value.
	    // [year, month, day , hour, minute, second, millisecond]
	    function configFromArray (config) {
	        var i, date, input = [], currentDate, yearToUse;

	        if (config._d) {
	            return;
	        }

	        currentDate = currentDateArray(config);

	        //compute day of the year from weeks and weekdays
	        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
	            dayOfYearFromWeekInfo(config);
	        }

	        //if the day of the year is set, figure out what it is
	        if (config._dayOfYear) {
	            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

	            if (config._dayOfYear > daysInYear(yearToUse)) {
	                getParsingFlags(config)._overflowDayOfYear = true;
	            }

	            date = createUTCDate(yearToUse, 0, config._dayOfYear);
	            config._a[MONTH] = date.getUTCMonth();
	            config._a[DATE] = date.getUTCDate();
	        }

	        // Default to current date.
	        // * if no year, month, day of month are given, default to today
	        // * if day of month is given, default month and year
	        // * if month is given, default only year
	        // * if year is given, don't default anything
	        for (i = 0; i < 3 && config._a[i] == null; ++i) {
	            config._a[i] = input[i] = currentDate[i];
	        }

	        // Zero out whatever was not defaulted, including time
	        for (; i < 7; i++) {
	            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];
	        }

	        // Check for 24:00:00.000
	        if (config._a[HOUR] === 24 &&
	                config._a[MINUTE] === 0 &&
	                config._a[SECOND] === 0 &&
	                config._a[MILLISECOND] === 0) {
	            config._nextDay = true;
	            config._a[HOUR] = 0;
	        }

	        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);
	        // Apply timezone offset from input. The actual utcOffset can be changed
	        // with parseZone.
	        if (config._tzm != null) {
	            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
	        }

	        if (config._nextDay) {
	            config._a[HOUR] = 24;
	        }
	    }

	    function dayOfYearFromWeekInfo(config) {
	        var w, weekYear, week, weekday, dow, doy, temp;

	        w = config._w;
	        if (w.GG != null || w.W != null || w.E != null) {
	            dow = 1;
	            doy = 4;

	            // TODO: We need to take the current isoWeekYear, but that depends on
	            // how we interpret now (local, utc, fixed offset). So create
	            // a now version of current config (take local/utc/offset flags, and
	            // create now).
	            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(local__createLocal(), 1, 4).year);
	            week = defaults(w.W, 1);
	            weekday = defaults(w.E, 1);
	        } else {
	            dow = config._locale._week.dow;
	            doy = config._locale._week.doy;

	            weekYear = defaults(w.gg, config._a[YEAR], weekOfYear(local__createLocal(), dow, doy).year);
	            week = defaults(w.w, 1);

	            if (w.d != null) {
	                // weekday -- low day numbers are considered next week
	                weekday = w.d;
	                if (weekday < dow) {
	                    ++week;
	                }
	            } else if (w.e != null) {
	                // local weekday -- counting starts from begining of week
	                weekday = w.e + dow;
	            } else {
	                // default to begining of week
	                weekday = dow;
	            }
	        }
	        temp = dayOfYearFromWeeks(weekYear, week, weekday, doy, dow);

	        config._a[YEAR] = temp.year;
	        config._dayOfYear = temp.dayOfYear;
	    }

	    utils_hooks__hooks.ISO_8601 = function () {};

	    // date from string and format string
	    function configFromStringAndFormat(config) {
	        // TODO: Move this to another part of the creation flow to prevent circular deps
	        if (config._f === utils_hooks__hooks.ISO_8601) {
	            configFromISO(config);
	            return;
	        }

	        config._a = [];
	        getParsingFlags(config).empty = true;

	        // This array is used to make a Date, either with `new Date` or `Date.UTC`
	        var string = '' + config._i,
	            i, parsedInput, tokens, token, skipped,
	            stringLength = string.length,
	            totalParsedInputLength = 0;

	        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];

	        for (i = 0; i < tokens.length; i++) {
	            token = tokens[i];
	            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];
	            if (parsedInput) {
	                skipped = string.substr(0, string.indexOf(parsedInput));
	                if (skipped.length > 0) {
	                    getParsingFlags(config).unusedInput.push(skipped);
	                }
	                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
	                totalParsedInputLength += parsedInput.length;
	            }
	            // don't parse if it's not a known token
	            if (formatTokenFunctions[token]) {
	                if (parsedInput) {
	                    getParsingFlags(config).empty = false;
	                }
	                else {
	                    getParsingFlags(config).unusedTokens.push(token);
	                }
	                addTimeToArrayFromToken(token, parsedInput, config);
	            }
	            else if (config._strict && !parsedInput) {
	                getParsingFlags(config).unusedTokens.push(token);
	            }
	        }

	        // add remaining unparsed input length to the string
	        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;
	        if (string.length > 0) {
	            getParsingFlags(config).unusedInput.push(string);
	        }

	        // clear _12h flag if hour is <= 12
	        if (getParsingFlags(config).bigHour === true &&
	                config._a[HOUR] <= 12 &&
	                config._a[HOUR] > 0) {
	            getParsingFlags(config).bigHour = undefined;
	        }
	        // handle meridiem
	        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);

	        configFromArray(config);
	        checkOverflow(config);
	    }


	    function meridiemFixWrap (locale, hour, meridiem) {
	        var isPm;

	        if (meridiem == null) {
	            // nothing to do
	            return hour;
	        }
	        if (locale.meridiemHour != null) {
	            return locale.meridiemHour(hour, meridiem);
	        } else if (locale.isPM != null) {
	            // Fallback
	            isPm = locale.isPM(meridiem);
	            if (isPm && hour < 12) {
	                hour += 12;
	            }
	            if (!isPm && hour === 12) {
	                hour = 0;
	            }
	            return hour;
	        } else {
	            // this is not supposed to happen
	            return hour;
	        }
	    }

	    function configFromStringAndArray(config) {
	        var tempConfig,
	            bestMoment,

	            scoreToBeat,
	            i,
	            currentScore;

	        if (config._f.length === 0) {
	            getParsingFlags(config).invalidFormat = true;
	            config._d = new Date(NaN);
	            return;
	        }

	        for (i = 0; i < config._f.length; i++) {
	            currentScore = 0;
	            tempConfig = copyConfig({}, config);
	            if (config._useUTC != null) {
	                tempConfig._useUTC = config._useUTC;
	            }
	            tempConfig._f = config._f[i];
	            configFromStringAndFormat(tempConfig);

	            if (!valid__isValid(tempConfig)) {
	                continue;
	            }

	            // if there is any input that was not parsed add a penalty for that format
	            currentScore += getParsingFlags(tempConfig).charsLeftOver;

	            //or tokens
	            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;

	            getParsingFlags(tempConfig).score = currentScore;

	            if (scoreToBeat == null || currentScore < scoreToBeat) {
	                scoreToBeat = currentScore;
	                bestMoment = tempConfig;
	            }
	        }

	        extend(config, bestMoment || tempConfig);
	    }

	    function configFromObject(config) {
	        if (config._d) {
	            return;
	        }

	        var i = normalizeObjectUnits(config._i);
	        config._a = [i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond];

	        configFromArray(config);
	    }

	    function createFromConfig (config) {
	        var res = new Moment(checkOverflow(prepareConfig(config)));
	        if (res._nextDay) {
	            // Adding is smart enough around DST
	            res.add(1, 'd');
	            res._nextDay = undefined;
	        }

	        return res;
	    }

	    function prepareConfig (config) {
	        var input = config._i,
	            format = config._f;

	        config._locale = config._locale || locale_locales__getLocale(config._l);

	        if (input === null || (format === undefined && input === '')) {
	            return valid__createInvalid({nullInput: true});
	        }

	        if (typeof input === 'string') {
	            config._i = input = config._locale.preparse(input);
	        }

	        if (isMoment(input)) {
	            return new Moment(checkOverflow(input));
	        } else if (isArray(format)) {
	            configFromStringAndArray(config);
	        } else if (format) {
	            configFromStringAndFormat(config);
	        } else if (isDate(input)) {
	            config._d = input;
	        } else {
	            configFromInput(config);
	        }

	        return config;
	    }

	    function configFromInput(config) {
	        var input = config._i;
	        if (input === undefined) {
	            config._d = new Date();
	        } else if (isDate(input)) {
	            config._d = new Date(+input);
	        } else if (typeof input === 'string') {
	            configFromString(config);
	        } else if (isArray(input)) {
	            config._a = map(input.slice(0), function (obj) {
	                return parseInt(obj, 10);
	            });
	            configFromArray(config);
	        } else if (typeof(input) === 'object') {
	            configFromObject(config);
	        } else if (typeof(input) === 'number') {
	            // from milliseconds
	            config._d = new Date(input);
	        } else {
	            utils_hooks__hooks.createFromInputFallback(config);
	        }
	    }

	    function createLocalOrUTC (input, format, locale, strict, isUTC) {
	        var c = {};

	        if (typeof(locale) === 'boolean') {
	            strict = locale;
	            locale = undefined;
	        }
	        // object construction must be done this way.
	        // https://github.com/moment/moment/issues/1423
	        c._isAMomentObject = true;
	        c._useUTC = c._isUTC = isUTC;
	        c._l = locale;
	        c._i = input;
	        c._f = format;
	        c._strict = strict;

	        return createFromConfig(c);
	    }

	    function local__createLocal (input, format, locale, strict) {
	        return createLocalOrUTC(input, format, locale, strict, false);
	    }

	    var prototypeMin = deprecate(
	         'moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548',
	         function () {
	             var other = local__createLocal.apply(null, arguments);
	             return other < this ? this : other;
	         }
	     );

	    var prototypeMax = deprecate(
	        'moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548',
	        function () {
	            var other = local__createLocal.apply(null, arguments);
	            return other > this ? this : other;
	        }
	    );

	    // Pick a moment m from moments so that m[fn](other) is true for all
	    // other. This relies on the function fn to be transitive.
	    //
	    // moments should either be an array of moment objects or an array, whose
	    // first element is an array of moment objects.
	    function pickBy(fn, moments) {
	        var res, i;
	        if (moments.length === 1 && isArray(moments[0])) {
	            moments = moments[0];
	        }
	        if (!moments.length) {
	            return local__createLocal();
	        }
	        res = moments[0];
	        for (i = 1; i < moments.length; ++i) {
	            if (!moments[i].isValid() || moments[i][fn](res)) {
	                res = moments[i];
	            }
	        }
	        return res;
	    }

	    // TODO: Use [].sort instead?
	    function min () {
	        var args = [].slice.call(arguments, 0);

	        return pickBy('isBefore', args);
	    }

	    function max () {
	        var args = [].slice.call(arguments, 0);

	        return pickBy('isAfter', args);
	    }

	    function Duration (duration) {
	        var normalizedInput = normalizeObjectUnits(duration),
	            years = normalizedInput.year || 0,
	            quarters = normalizedInput.quarter || 0,
	            months = normalizedInput.month || 0,
	            weeks = normalizedInput.week || 0,
	            days = normalizedInput.day || 0,
	            hours = normalizedInput.hour || 0,
	            minutes = normalizedInput.minute || 0,
	            seconds = normalizedInput.second || 0,
	            milliseconds = normalizedInput.millisecond || 0;

	        // representation for dateAddRemove
	        this._milliseconds = +milliseconds +
	            seconds * 1e3 + // 1000
	            minutes * 6e4 + // 1000 * 60
	            hours * 36e5; // 1000 * 60 * 60
	        // Because of dateAddRemove treats 24 hours as different from a
	        // day when working around DST, we need to store them separately
	        this._days = +days +
	            weeks * 7;
	        // It is impossible translate months into days without knowing
	        // which months you are are talking about, so we have to store
	        // it separately.
	        this._months = +months +
	            quarters * 3 +
	            years * 12;

	        this._data = {};

	        this._locale = locale_locales__getLocale();

	        this._bubble();
	    }

	    function isDuration (obj) {
	        return obj instanceof Duration;
	    }

	    function offset (token, separator) {
	        addFormatToken(token, 0, 0, function () {
	            var offset = this.utcOffset();
	            var sign = '+';
	            if (offset < 0) {
	                offset = -offset;
	                sign = '-';
	            }
	            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);
	        });
	    }

	    offset('Z', ':');
	    offset('ZZ', '');

	    // PARSING

	    addRegexToken('Z',  matchOffset);
	    addRegexToken('ZZ', matchOffset);
	    addParseToken(['Z', 'ZZ'], function (input, array, config) {
	        config._useUTC = true;
	        config._tzm = offsetFromString(input);
	    });

	    // HELPERS

	    // timezone chunker
	    // '+10:00' > ['10',  '00']
	    // '-1530'  > ['-15', '30']
	    var chunkOffset = /([\+\-]|\d\d)/gi;

	    function offsetFromString(string) {
	        var matches = ((string || '').match(matchOffset) || []);
	        var chunk   = matches[matches.length - 1] || [];
	        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];
	        var minutes = +(parts[1] * 60) + toInt(parts[2]);

	        return parts[0] === '+' ? minutes : -minutes;
	    }

	    // Return a moment from input, that is local/utc/zone equivalent to model.
	    function cloneWithOffset(input, model) {
	        var res, diff;
	        if (model._isUTC) {
	            res = model.clone();
	            diff = (isMoment(input) || isDate(input) ? +input : +local__createLocal(input)) - (+res);
	            // Use low-level api, because this fn is low-level api.
	            res._d.setTime(+res._d + diff);
	            utils_hooks__hooks.updateOffset(res, false);
	            return res;
	        } else {
	            return local__createLocal(input).local();
	        }
	    }

	    function getDateOffset (m) {
	        // On Firefox.24 Date#getTimezoneOffset returns a floating point.
	        // https://github.com/moment/moment/pull/1871
	        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;
	    }

	    // HOOKS

	    // This function will be called whenever a moment is mutated.
	    // It is intended to keep the offset in sync with the timezone.
	    utils_hooks__hooks.updateOffset = function () {};

	    // MOMENTS

	    // keepLocalTime = true means only change the timezone, without
	    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
	    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
	    // +0200, so we adjust the time as needed, to be valid.
	    //
	    // Keeping the time actually adds/subtracts (one hour)
	    // from the actual represented time. That is why we call updateOffset
	    // a second time. In case it wants us to change the offset again
	    // _changeInProgress == true case, then we have to adjust, because
	    // there is no such time in the given timezone.
	    function getSetOffset (input, keepLocalTime) {
	        var offset = this._offset || 0,
	            localAdjust;
	        if (input != null) {
	            if (typeof input === 'string') {
	                input = offsetFromString(input);
	            }
	            if (Math.abs(input) < 16) {
	                input = input * 60;
	            }
	            if (!this._isUTC && keepLocalTime) {
	                localAdjust = getDateOffset(this);
	            }
	            this._offset = input;
	            this._isUTC = true;
	            if (localAdjust != null) {
	                this.add(localAdjust, 'm');
	            }
	            if (offset !== input) {
	                if (!keepLocalTime || this._changeInProgress) {
	                    add_subtract__addSubtract(this, create__createDuration(input - offset, 'm'), 1, false);
	                } else if (!this._changeInProgress) {
	                    this._changeInProgress = true;
	                    utils_hooks__hooks.updateOffset(this, true);
	                    this._changeInProgress = null;
	                }
	            }
	            return this;
	        } else {
	            return this._isUTC ? offset : getDateOffset(this);
	        }
	    }

	    function getSetZone (input, keepLocalTime) {
	        if (input != null) {
	            if (typeof input !== 'string') {
	                input = -input;
	            }

	            this.utcOffset(input, keepLocalTime);

	            return this;
	        } else {
	            return -this.utcOffset();
	        }
	    }

	    function setOffsetToUTC (keepLocalTime) {
	        return this.utcOffset(0, keepLocalTime);
	    }

	    function setOffsetToLocal (keepLocalTime) {
	        if (this._isUTC) {
	            this.utcOffset(0, keepLocalTime);
	            this._isUTC = false;

	            if (keepLocalTime) {
	                this.subtract(getDateOffset(this), 'm');
	            }
	        }
	        return this;
	    }

	    function setOffsetToParsedOffset () {
	        if (this._tzm) {
	            this.utcOffset(this._tzm);
	        } else if (typeof this._i === 'string') {
	            this.utcOffset(offsetFromString(this._i));
	        }
	        return this;
	    }

	    function hasAlignedHourOffset (input) {
	        input = input ? local__createLocal(input).utcOffset() : 0;

	        return (this.utcOffset() - input) % 60 === 0;
	    }

	    function isDaylightSavingTime () {
	        return (
	            this.utcOffset() > this.clone().month(0).utcOffset() ||
	            this.utcOffset() > this.clone().month(5).utcOffset()
	        );
	    }

	    function isDaylightSavingTimeShifted () {
	        if (typeof this._isDSTShifted !== 'undefined') {
	            return this._isDSTShifted;
	        }

	        var c = {};

	        copyConfig(c, this);
	        c = prepareConfig(c);

	        if (c._a) {
	            var other = c._isUTC ? create_utc__createUTC(c._a) : local__createLocal(c._a);
	            this._isDSTShifted = this.isValid() &&
	                compareArrays(c._a, other.toArray()) > 0;
	        } else {
	            this._isDSTShifted = false;
	        }

	        return this._isDSTShifted;
	    }

	    function isLocal () {
	        return !this._isUTC;
	    }

	    function isUtcOffset () {
	        return this._isUTC;
	    }

	    function isUtc () {
	        return this._isUTC && this._offset === 0;
	    }

	    var aspNetRegex = /(\-)?(?:(\d*)\.)?(\d+)\:(\d+)(?:\:(\d+)\.?(\d{3})?)?/;

	    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
	    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
	    var create__isoRegex = /^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/;

	    function create__createDuration (input, key) {
	        var duration = input,
	            // matching against regexp is expensive, do it on demand
	            match = null,
	            sign,
	            ret,
	            diffRes;

	        if (isDuration(input)) {
	            duration = {
	                ms : input._milliseconds,
	                d  : input._days,
	                M  : input._months
	            };
	        } else if (typeof input === 'number') {
	            duration = {};
	            if (key) {
	                duration[key] = input;
	            } else {
	                duration.milliseconds = input;
	            }
	        } else if (!!(match = aspNetRegex.exec(input))) {
	            sign = (match[1] === '-') ? -1 : 1;
	            duration = {
	                y  : 0,
	                d  : toInt(match[DATE])        * sign,
	                h  : toInt(match[HOUR])        * sign,
	                m  : toInt(match[MINUTE])      * sign,
	                s  : toInt(match[SECOND])      * sign,
	                ms : toInt(match[MILLISECOND]) * sign
	            };
	        } else if (!!(match = create__isoRegex.exec(input))) {
	            sign = (match[1] === '-') ? -1 : 1;
	            duration = {
	                y : parseIso(match[2], sign),
	                M : parseIso(match[3], sign),
	                d : parseIso(match[4], sign),
	                h : parseIso(match[5], sign),
	                m : parseIso(match[6], sign),
	                s : parseIso(match[7], sign),
	                w : parseIso(match[8], sign)
	            };
	        } else if (duration == null) {// checks for null or undefined
	            duration = {};
	        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {
	            diffRes = momentsDifference(local__createLocal(duration.from), local__createLocal(duration.to));

	            duration = {};
	            duration.ms = diffRes.milliseconds;
	            duration.M = diffRes.months;
	        }

	        ret = new Duration(duration);

	        if (isDuration(input) && hasOwnProp(input, '_locale')) {
	            ret._locale = input._locale;
	        }

	        return ret;
	    }

	    create__createDuration.fn = Duration.prototype;

	    function parseIso (inp, sign) {
	        // We'd normally use ~~inp for this, but unfortunately it also
	        // converts floats to ints.
	        // inp may be undefined, so careful calling replace on it.
	        var res = inp && parseFloat(inp.replace(',', '.'));
	        // apply sign while we're at it
	        return (isNaN(res) ? 0 : res) * sign;
	    }

	    function positiveMomentsDifference(base, other) {
	        var res = {milliseconds: 0, months: 0};

	        res.months = other.month() - base.month() +
	            (other.year() - base.year()) * 12;
	        if (base.clone().add(res.months, 'M').isAfter(other)) {
	            --res.months;
	        }

	        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));

	        return res;
	    }

	    function momentsDifference(base, other) {
	        var res;
	        other = cloneWithOffset(other, base);
	        if (base.isBefore(other)) {
	            res = positiveMomentsDifference(base, other);
	        } else {
	            res = positiveMomentsDifference(other, base);
	            res.milliseconds = -res.milliseconds;
	            res.months = -res.months;
	        }

	        return res;
	    }

	    function createAdder(direction, name) {
	        return function (val, period) {
	            var dur, tmp;
	            //invert the arguments, but complain about it
	            if (period !== null && !isNaN(+period)) {
	                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period).');
	                tmp = val; val = period; period = tmp;
	            }

	            val = typeof val === 'string' ? +val : val;
	            dur = create__createDuration(val, period);
	            add_subtract__addSubtract(this, dur, direction);
	            return this;
	        };
	    }

	    function add_subtract__addSubtract (mom, duration, isAdding, updateOffset) {
	        var milliseconds = duration._milliseconds,
	            days = duration._days,
	            months = duration._months;
	        updateOffset = updateOffset == null ? true : updateOffset;

	        if (milliseconds) {
	            mom._d.setTime(+mom._d + milliseconds * isAdding);
	        }
	        if (days) {
	            get_set__set(mom, 'Date', get_set__get(mom, 'Date') + days * isAdding);
	        }
	        if (months) {
	            setMonth(mom, get_set__get(mom, 'Month') + months * isAdding);
	        }
	        if (updateOffset) {
	            utils_hooks__hooks.updateOffset(mom, days || months);
	        }
	    }

	    var add_subtract__add      = createAdder(1, 'add');
	    var add_subtract__subtract = createAdder(-1, 'subtract');

	    function moment_calendar__calendar (time, formats) {
	        // We want to compare the start of today, vs this.
	        // Getting start-of-today depends on whether we're local/utc/offset or not.
	        var now = time || local__createLocal(),
	            sod = cloneWithOffset(now, this).startOf('day'),
	            diff = this.diff(sod, 'days', true),
	            format = diff < -6 ? 'sameElse' :
	                diff < -1 ? 'lastWeek' :
	                diff < 0 ? 'lastDay' :
	                diff < 1 ? 'sameDay' :
	                diff < 2 ? 'nextDay' :
	                diff < 7 ? 'nextWeek' : 'sameElse';
	        return this.format(formats && formats[format] || this.localeData().calendar(format, this, local__createLocal(now)));
	    }

	    function clone () {
	        return new Moment(this);
	    }

	    function isAfter (input, units) {
	        var inputMs;
	        units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');
	        if (units === 'millisecond') {
	            input = isMoment(input) ? input : local__createLocal(input);
	            return +this > +input;
	        } else {
	            inputMs = isMoment(input) ? +input : +local__createLocal(input);
	            return inputMs < +this.clone().startOf(units);
	        }
	    }

	    function isBefore (input, units) {
	        var inputMs;
	        units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');
	        if (units === 'millisecond') {
	            input = isMoment(input) ? input : local__createLocal(input);
	            return +this < +input;
	        } else {
	            inputMs = isMoment(input) ? +input : +local__createLocal(input);
	            return +this.clone().endOf(units) < inputMs;
	        }
	    }

	    function isBetween (from, to, units) {
	        return this.isAfter(from, units) && this.isBefore(to, units);
	    }

	    function isSame (input, units) {
	        var inputMs;
	        units = normalizeUnits(units || 'millisecond');
	        if (units === 'millisecond') {
	            input = isMoment(input) ? input : local__createLocal(input);
	            return +this === +input;
	        } else {
	            inputMs = +local__createLocal(input);
	            return +(this.clone().startOf(units)) <= inputMs && inputMs <= +(this.clone().endOf(units));
	        }
	    }

	    function diff (input, units, asFloat) {
	        var that = cloneWithOffset(input, this),
	            zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4,
	            delta, output;

	        units = normalizeUnits(units);

	        if (units === 'year' || units === 'month' || units === 'quarter') {
	            output = monthDiff(this, that);
	            if (units === 'quarter') {
	                output = output / 3;
	            } else if (units === 'year') {
	                output = output / 12;
	            }
	        } else {
	            delta = this - that;
	            output = units === 'second' ? delta / 1e3 : // 1000
	                units === 'minute' ? delta / 6e4 : // 1000 * 60
	                units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60
	                units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst
	                units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst
	                delta;
	        }
	        return asFloat ? output : absFloor(output);
	    }

	    function monthDiff (a, b) {
	        // difference in months
	        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),
	            // b is in (anchor - 1 month, anchor + 1 month)
	            anchor = a.clone().add(wholeMonthDiff, 'months'),
	            anchor2, adjust;

	        if (b - anchor < 0) {
	            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
	            // linear across the month
	            adjust = (b - anchor) / (anchor - anchor2);
	        } else {
	            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
	            // linear across the month
	            adjust = (b - anchor) / (anchor2 - anchor);
	        }

	        return -(wholeMonthDiff + adjust);
	    }

	    utils_hooks__hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';

	    function toString () {
	        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
	    }

	    function moment_format__toISOString () {
	        var m = this.clone().utc();
	        if (0 < m.year() && m.year() <= 9999) {
	            if ('function' === typeof Date.prototype.toISOString) {
	                // native implementation is ~50x faster, use it when we can
	                return this.toDate().toISOString();
	            } else {
	                return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
	            }
	        } else {
	            return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
	        }
	    }

	    function format (inputString) {
	        var output = formatMoment(this, inputString || utils_hooks__hooks.defaultFormat);
	        return this.localeData().postformat(output);
	    }

	    function from (time, withoutSuffix) {
	        if (!this.isValid()) {
	            return this.localeData().invalidDate();
	        }
	        return create__createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);
	    }

	    function fromNow (withoutSuffix) {
	        return this.from(local__createLocal(), withoutSuffix);
	    }

	    function to (time, withoutSuffix) {
	        if (!this.isValid()) {
	            return this.localeData().invalidDate();
	        }
	        return create__createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);
	    }

	    function toNow (withoutSuffix) {
	        return this.to(local__createLocal(), withoutSuffix);
	    }

	    function locale (key) {
	        var newLocaleData;

	        if (key === undefined) {
	            return this._locale._abbr;
	        } else {
	            newLocaleData = locale_locales__getLocale(key);
	            if (newLocaleData != null) {
	                this._locale = newLocaleData;
	            }
	            return this;
	        }
	    }

	    var lang = deprecate(
	        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
	        function (key) {
	            if (key === undefined) {
	                return this.localeData();
	            } else {
	                return this.locale(key);
	            }
	        }
	    );

	    function localeData () {
	        return this._locale;
	    }

	    function startOf (units) {
	        units = normalizeUnits(units);
	        // the following switch intentionally omits break keywords
	        // to utilize falling through the cases.
	        switch (units) {
	        case 'year':
	            this.month(0);
	            /* falls through */
	        case 'quarter':
	        case 'month':
	            this.date(1);
	            /* falls through */
	        case 'week':
	        case 'isoWeek':
	        case 'day':
	            this.hours(0);
	            /* falls through */
	        case 'hour':
	            this.minutes(0);
	            /* falls through */
	        case 'minute':
	            this.seconds(0);
	            /* falls through */
	        case 'second':
	            this.milliseconds(0);
	        }

	        // weeks are a special case
	        if (units === 'week') {
	            this.weekday(0);
	        }
	        if (units === 'isoWeek') {
	            this.isoWeekday(1);
	        }

	        // quarters are also special
	        if (units === 'quarter') {
	            this.month(Math.floor(this.month() / 3) * 3);
	        }

	        return this;
	    }

	    function endOf (units) {
	        units = normalizeUnits(units);
	        if (units === undefined || units === 'millisecond') {
	            return this;
	        }
	        return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');
	    }

	    function to_type__valueOf () {
	        return +this._d - ((this._offset || 0) * 60000);
	    }

	    function unix () {
	        return Math.floor(+this / 1000);
	    }

	    function toDate () {
	        return this._offset ? new Date(+this) : this._d;
	    }

	    function toArray () {
	        var m = this;
	        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];
	    }

	    function toObject () {
	        var m = this;
	        return {
	            years: m.year(),
	            months: m.month(),
	            date: m.date(),
	            hours: m.hours(),
	            minutes: m.minutes(),
	            seconds: m.seconds(),
	            milliseconds: m.milliseconds()
	        };
	    }

	    function moment_valid__isValid () {
	        return valid__isValid(this);
	    }

	    function parsingFlags () {
	        return extend({}, getParsingFlags(this));
	    }

	    function invalidAt () {
	        return getParsingFlags(this).overflow;
	    }

	    addFormatToken(0, ['gg', 2], 0, function () {
	        return this.weekYear() % 100;
	    });

	    addFormatToken(0, ['GG', 2], 0, function () {
	        return this.isoWeekYear() % 100;
	    });

	    function addWeekYearFormatToken (token, getter) {
	        addFormatToken(0, [token, token.length], 0, getter);
	    }

	    addWeekYearFormatToken('gggg',     'weekYear');
	    addWeekYearFormatToken('ggggg',    'weekYear');
	    addWeekYearFormatToken('GGGG',  'isoWeekYear');
	    addWeekYearFormatToken('GGGGG', 'isoWeekYear');

	    // ALIASES

	    addUnitAlias('weekYear', 'gg');
	    addUnitAlias('isoWeekYear', 'GG');

	    // PARSING

	    addRegexToken('G',      matchSigned);
	    addRegexToken('g',      matchSigned);
	    addRegexToken('GG',     match1to2, match2);
	    addRegexToken('gg',     match1to2, match2);
	    addRegexToken('GGGG',   match1to4, match4);
	    addRegexToken('gggg',   match1to4, match4);
	    addRegexToken('GGGGG',  match1to6, match6);
	    addRegexToken('ggggg',  match1to6, match6);

	    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {
	        week[token.substr(0, 2)] = toInt(input);
	    });

	    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
	        week[token] = utils_hooks__hooks.parseTwoDigitYear(input);
	    });

	    // HELPERS

	    function weeksInYear(year, dow, doy) {
	        return weekOfYear(local__createLocal([year, 11, 31 + dow - doy]), dow, doy).week;
	    }

	    // MOMENTS

	    function getSetWeekYear (input) {
	        var year = weekOfYear(this, this.localeData()._week.dow, this.localeData()._week.doy).year;
	        return input == null ? year : this.add((input - year), 'y');
	    }

	    function getSetISOWeekYear (input) {
	        var year = weekOfYear(this, 1, 4).year;
	        return input == null ? year : this.add((input - year), 'y');
	    }

	    function getISOWeeksInYear () {
	        return weeksInYear(this.year(), 1, 4);
	    }

	    function getWeeksInYear () {
	        var weekInfo = this.localeData()._week;
	        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
	    }

	    addFormatToken('Q', 0, 0, 'quarter');

	    // ALIASES

	    addUnitAlias('quarter', 'Q');

	    // PARSING

	    addRegexToken('Q', match1);
	    addParseToken('Q', function (input, array) {
	        array[MONTH] = (toInt(input) - 1) * 3;
	    });

	    // MOMENTS

	    function getSetQuarter (input) {
	        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
	    }

	    addFormatToken('D', ['DD', 2], 'Do', 'date');

	    // ALIASES

	    addUnitAlias('date', 'D');

	    // PARSING

	    addRegexToken('D',  match1to2);
	    addRegexToken('DD', match1to2, match2);
	    addRegexToken('Do', function (isStrict, locale) {
	        return isStrict ? locale._ordinalParse : locale._ordinalParseLenient;
	    });

	    addParseToken(['D', 'DD'], DATE);
	    addParseToken('Do', function (input, array) {
	        array[DATE] = toInt(input.match(match1to2)[0], 10);
	    });

	    // MOMENTS

	    var getSetDayOfMonth = makeGetSet('Date', true);

	    addFormatToken('d', 0, 'do', 'day');

	    addFormatToken('dd', 0, 0, function (format) {
	        return this.localeData().weekdaysMin(this, format);
	    });

	    addFormatToken('ddd', 0, 0, function (format) {
	        return this.localeData().weekdaysShort(this, format);
	    });

	    addFormatToken('dddd', 0, 0, function (format) {
	        return this.localeData().weekdays(this, format);
	    });

	    addFormatToken('e', 0, 0, 'weekday');
	    addFormatToken('E', 0, 0, 'isoWeekday');

	    // ALIASES

	    addUnitAlias('day', 'd');
	    addUnitAlias('weekday', 'e');
	    addUnitAlias('isoWeekday', 'E');

	    // PARSING

	    addRegexToken('d',    match1to2);
	    addRegexToken('e',    match1to2);
	    addRegexToken('E',    match1to2);
	    addRegexToken('dd',   matchWord);
	    addRegexToken('ddd',  matchWord);
	    addRegexToken('dddd', matchWord);

	    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config) {
	        var weekday = config._locale.weekdaysParse(input);
	        // if we didn't get a weekday name, mark the date as invalid
	        if (weekday != null) {
	            week.d = weekday;
	        } else {
	            getParsingFlags(config).invalidWeekday = input;
	        }
	    });

	    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
	        week[token] = toInt(input);
	    });

	    // HELPERS

	    function parseWeekday(input, locale) {
	        if (typeof input !== 'string') {
	            return input;
	        }

	        if (!isNaN(input)) {
	            return parseInt(input, 10);
	        }

	        input = locale.weekdaysParse(input);
	        if (typeof input === 'number') {
	            return input;
	        }

	        return null;
	    }

	    // LOCALES

	    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');
	    function localeWeekdays (m) {
	        return this._weekdays[m.day()];
	    }

	    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');
	    function localeWeekdaysShort (m) {
	        return this._weekdaysShort[m.day()];
	    }

	    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');
	    function localeWeekdaysMin (m) {
	        return this._weekdaysMin[m.day()];
	    }

	    function localeWeekdaysParse (weekdayName) {
	        var i, mom, regex;

	        this._weekdaysParse = this._weekdaysParse || [];

	        for (i = 0; i < 7; i++) {
	            // make the regex if we don't have it already
	            if (!this._weekdaysParse[i]) {
	                mom = local__createLocal([2000, 1]).day(i);
	                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');
	                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
	            }
	            // test the regex
	            if (this._weekdaysParse[i].test(weekdayName)) {
	                return i;
	            }
	        }
	    }

	    // MOMENTS

	    function getSetDayOfWeek (input) {
	        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
	        if (input != null) {
	            input = parseWeekday(input, this.localeData());
	            return this.add(input - day, 'd');
	        } else {
	            return day;
	        }
	    }

	    function getSetLocaleDayOfWeek (input) {
	        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
	        return input == null ? weekday : this.add(input - weekday, 'd');
	    }

	    function getSetISODayOfWeek (input) {
	        // behaves the same as moment#day except
	        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
	        // as a setter, sunday should belong to the previous week.
	        return input == null ? this.day() || 7 : this.day(this.day() % 7 ? input : input - 7);
	    }

	    addFormatToken('H', ['HH', 2], 0, 'hour');
	    addFormatToken('h', ['hh', 2], 0, function () {
	        return this.hours() % 12 || 12;
	    });

	    function meridiem (token, lowercase) {
	        addFormatToken(token, 0, 0, function () {
	            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);
	        });
	    }

	    meridiem('a', true);
	    meridiem('A', false);

	    // ALIASES

	    addUnitAlias('hour', 'h');

	    // PARSING

	    function matchMeridiem (isStrict, locale) {
	        return locale._meridiemParse;
	    }

	    addRegexToken('a',  matchMeridiem);
	    addRegexToken('A',  matchMeridiem);
	    addRegexToken('H',  match1to2);
	    addRegexToken('h',  match1to2);
	    addRegexToken('HH', match1to2, match2);
	    addRegexToken('hh', match1to2, match2);

	    addParseToken(['H', 'HH'], HOUR);
	    addParseToken(['a', 'A'], function (input, array, config) {
	        config._isPm = config._locale.isPM(input);
	        config._meridiem = input;
	    });
	    addParseToken(['h', 'hh'], function (input, array, config) {
	        array[HOUR] = toInt(input);
	        getParsingFlags(config).bigHour = true;
	    });

	    // LOCALES

	    function localeIsPM (input) {
	        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
	        // Using charAt should be more compatible.
	        return ((input + '').toLowerCase().charAt(0) === 'p');
	    }

	    var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i;
	    function localeMeridiem (hours, minutes, isLower) {
	        if (hours > 11) {
	            return isLower ? 'pm' : 'PM';
	        } else {
	            return isLower ? 'am' : 'AM';
	        }
	    }


	    // MOMENTS

	    // Setting the hour should keep the time, because the user explicitly
	    // specified which hour he wants. So trying to maintain the same hour (in
	    // a new timezone) makes sense. Adding/subtracting hours does not follow
	    // this rule.
	    var getSetHour = makeGetSet('Hours', true);

	    addFormatToken('m', ['mm', 2], 0, 'minute');

	    // ALIASES

	    addUnitAlias('minute', 'm');

	    // PARSING

	    addRegexToken('m',  match1to2);
	    addRegexToken('mm', match1to2, match2);
	    addParseToken(['m', 'mm'], MINUTE);

	    // MOMENTS

	    var getSetMinute = makeGetSet('Minutes', false);

	    addFormatToken('s', ['ss', 2], 0, 'second');

	    // ALIASES

	    addUnitAlias('second', 's');

	    // PARSING

	    addRegexToken('s',  match1to2);
	    addRegexToken('ss', match1to2, match2);
	    addParseToken(['s', 'ss'], SECOND);

	    // MOMENTS

	    var getSetSecond = makeGetSet('Seconds', false);

	    addFormatToken('S', 0, 0, function () {
	        return ~~(this.millisecond() / 100);
	    });

	    addFormatToken(0, ['SS', 2], 0, function () {
	        return ~~(this.millisecond() / 10);
	    });

	    addFormatToken(0, ['SSS', 3], 0, 'millisecond');
	    addFormatToken(0, ['SSSS', 4], 0, function () {
	        return this.millisecond() * 10;
	    });
	    addFormatToken(0, ['SSSSS', 5], 0, function () {
	        return this.millisecond() * 100;
	    });
	    addFormatToken(0, ['SSSSSS', 6], 0, function () {
	        return this.millisecond() * 1000;
	    });
	    addFormatToken(0, ['SSSSSSS', 7], 0, function () {
	        return this.millisecond() * 10000;
	    });
	    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
	        return this.millisecond() * 100000;
	    });
	    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
	        return this.millisecond() * 1000000;
	    });


	    // ALIASES

	    addUnitAlias('millisecond', 'ms');

	    // PARSING

	    addRegexToken('S',    match1to3, match1);
	    addRegexToken('SS',   match1to3, match2);
	    addRegexToken('SSS',  match1to3, match3);

	    var token;
	    for (token = 'SSSS'; token.length <= 9; token += 'S') {
	        addRegexToken(token, matchUnsigned);
	    }

	    function parseMs(input, array) {
	        array[MILLISECOND] = toInt(('0.' + input) * 1000);
	    }

	    for (token = 'S'; token.length <= 9; token += 'S') {
	        addParseToken(token, parseMs);
	    }
	    // MOMENTS

	    var getSetMillisecond = makeGetSet('Milliseconds', false);

	    addFormatToken('z',  0, 0, 'zoneAbbr');
	    addFormatToken('zz', 0, 0, 'zoneName');

	    // MOMENTS

	    function getZoneAbbr () {
	        return this._isUTC ? 'UTC' : '';
	    }

	    function getZoneName () {
	        return this._isUTC ? 'Coordinated Universal Time' : '';
	    }

	    var momentPrototype__proto = Moment.prototype;

	    momentPrototype__proto.add          = add_subtract__add;
	    momentPrototype__proto.calendar     = moment_calendar__calendar;
	    momentPrototype__proto.clone        = clone;
	    momentPrototype__proto.diff         = diff;
	    momentPrototype__proto.endOf        = endOf;
	    momentPrototype__proto.format       = format;
	    momentPrototype__proto.from         = from;
	    momentPrototype__proto.fromNow      = fromNow;
	    momentPrototype__proto.to           = to;
	    momentPrototype__proto.toNow        = toNow;
	    momentPrototype__proto.get          = getSet;
	    momentPrototype__proto.invalidAt    = invalidAt;
	    momentPrototype__proto.isAfter      = isAfter;
	    momentPrototype__proto.isBefore     = isBefore;
	    momentPrototype__proto.isBetween    = isBetween;
	    momentPrototype__proto.isSame       = isSame;
	    momentPrototype__proto.isValid      = moment_valid__isValid;
	    momentPrototype__proto.lang         = lang;
	    momentPrototype__proto.locale       = locale;
	    momentPrototype__proto.localeData   = localeData;
	    momentPrototype__proto.max          = prototypeMax;
	    momentPrototype__proto.min          = prototypeMin;
	    momentPrototype__proto.parsingFlags = parsingFlags;
	    momentPrototype__proto.set          = getSet;
	    momentPrototype__proto.startOf      = startOf;
	    momentPrototype__proto.subtract     = add_subtract__subtract;
	    momentPrototype__proto.toArray      = toArray;
	    momentPrototype__proto.toObject     = toObject;
	    momentPrototype__proto.toDate       = toDate;
	    momentPrototype__proto.toISOString  = moment_format__toISOString;
	    momentPrototype__proto.toJSON       = moment_format__toISOString;
	    momentPrototype__proto.toString     = toString;
	    momentPrototype__proto.unix         = unix;
	    momentPrototype__proto.valueOf      = to_type__valueOf;

	    // Year
	    momentPrototype__proto.year       = getSetYear;
	    momentPrototype__proto.isLeapYear = getIsLeapYear;

	    // Week Year
	    momentPrototype__proto.weekYear    = getSetWeekYear;
	    momentPrototype__proto.isoWeekYear = getSetISOWeekYear;

	    // Quarter
	    momentPrototype__proto.quarter = momentPrototype__proto.quarters = getSetQuarter;

	    // Month
	    momentPrototype__proto.month       = getSetMonth;
	    momentPrototype__proto.daysInMonth = getDaysInMonth;

	    // Week
	    momentPrototype__proto.week           = momentPrototype__proto.weeks        = getSetWeek;
	    momentPrototype__proto.isoWeek        = momentPrototype__proto.isoWeeks     = getSetISOWeek;
	    momentPrototype__proto.weeksInYear    = getWeeksInYear;
	    momentPrototype__proto.isoWeeksInYear = getISOWeeksInYear;

	    // Day
	    momentPrototype__proto.date       = getSetDayOfMonth;
	    momentPrototype__proto.day        = momentPrototype__proto.days             = getSetDayOfWeek;
	    momentPrototype__proto.weekday    = getSetLocaleDayOfWeek;
	    momentPrototype__proto.isoWeekday = getSetISODayOfWeek;
	    momentPrototype__proto.dayOfYear  = getSetDayOfYear;

	    // Hour
	    momentPrototype__proto.hour = momentPrototype__proto.hours = getSetHour;

	    // Minute
	    momentPrototype__proto.minute = momentPrototype__proto.minutes = getSetMinute;

	    // Second
	    momentPrototype__proto.second = momentPrototype__proto.seconds = getSetSecond;

	    // Millisecond
	    momentPrototype__proto.millisecond = momentPrototype__proto.milliseconds = getSetMillisecond;

	    // Offset
	    momentPrototype__proto.utcOffset            = getSetOffset;
	    momentPrototype__proto.utc                  = setOffsetToUTC;
	    momentPrototype__proto.local                = setOffsetToLocal;
	    momentPrototype__proto.parseZone            = setOffsetToParsedOffset;
	    momentPrototype__proto.hasAlignedHourOffset = hasAlignedHourOffset;
	    momentPrototype__proto.isDST                = isDaylightSavingTime;
	    momentPrototype__proto.isDSTShifted         = isDaylightSavingTimeShifted;
	    momentPrototype__proto.isLocal              = isLocal;
	    momentPrototype__proto.isUtcOffset          = isUtcOffset;
	    momentPrototype__proto.isUtc                = isUtc;
	    momentPrototype__proto.isUTC                = isUtc;

	    // Timezone
	    momentPrototype__proto.zoneAbbr = getZoneAbbr;
	    momentPrototype__proto.zoneName = getZoneName;

	    // Deprecations
	    momentPrototype__proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);
	    momentPrototype__proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);
	    momentPrototype__proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);
	    momentPrototype__proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. https://github.com/moment/moment/issues/1779', getSetZone);

	    var momentPrototype = momentPrototype__proto;

	    function moment__createUnix (input) {
	        return local__createLocal(input * 1000);
	    }

	    function moment__createInZone () {
	        return local__createLocal.apply(null, arguments).parseZone();
	    }

	    var defaultCalendar = {
	        sameDay : '[Today at] LT',
	        nextDay : '[Tomorrow at] LT',
	        nextWeek : 'dddd [at] LT',
	        lastDay : '[Yesterday at] LT',
	        lastWeek : '[Last] dddd [at] LT',
	        sameElse : 'L'
	    };

	    function locale_calendar__calendar (key, mom, now) {
	        var output = this._calendar[key];
	        return typeof output === 'function' ? output.call(mom, now) : output;
	    }

	    var defaultLongDateFormat = {
	        LTS  : 'h:mm:ss A',
	        LT   : 'h:mm A',
	        L    : 'MM/DD/YYYY',
	        LL   : 'MMMM D, YYYY',
	        LLL  : 'MMMM D, YYYY h:mm A',
	        LLLL : 'dddd, MMMM D, YYYY h:mm A'
	    };

	    function longDateFormat (key) {
	        var format = this._longDateFormat[key],
	            formatUpper = this._longDateFormat[key.toUpperCase()];

	        if (format || !formatUpper) {
	            return format;
	        }

	        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {
	            return val.slice(1);
	        });

	        return this._longDateFormat[key];
	    }

	    var defaultInvalidDate = 'Invalid date';

	    function invalidDate () {
	        return this._invalidDate;
	    }

	    var defaultOrdinal = '%d';
	    var defaultOrdinalParse = /\d{1,2}/;

	    function ordinal (number) {
	        return this._ordinal.replace('%d', number);
	    }

	    function preParsePostFormat (string) {
	        return string;
	    }

	    var defaultRelativeTime = {
	        future : 'in %s',
	        past   : '%s ago',
	        s  : 'a few seconds',
	        m  : 'a minute',
	        mm : '%d minutes',
	        h  : 'an hour',
	        hh : '%d hours',
	        d  : 'a day',
	        dd : '%d days',
	        M  : 'a month',
	        MM : '%d months',
	        y  : 'a year',
	        yy : '%d years'
	    };

	    function relative__relativeTime (number, withoutSuffix, string, isFuture) {
	        var output = this._relativeTime[string];
	        return (typeof output === 'function') ?
	            output(number, withoutSuffix, string, isFuture) :
	            output.replace(/%d/i, number);
	    }

	    function pastFuture (diff, output) {
	        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
	        return typeof format === 'function' ? format(output) : format.replace(/%s/i, output);
	    }

	    function locale_set__set (config) {
	        var prop, i;
	        for (i in config) {
	            prop = config[i];
	            if (typeof prop === 'function') {
	                this[i] = prop;
	            } else {
	                this['_' + i] = prop;
	            }
	        }
	        // Lenient ordinal parsing accepts just a number in addition to
	        // number + (possibly) stuff coming from _ordinalParseLenient.
	        this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + (/\d{1,2}/).source);
	    }

	    var prototype__proto = Locale.prototype;

	    prototype__proto._calendar       = defaultCalendar;
	    prototype__proto.calendar        = locale_calendar__calendar;
	    prototype__proto._longDateFormat = defaultLongDateFormat;
	    prototype__proto.longDateFormat  = longDateFormat;
	    prototype__proto._invalidDate    = defaultInvalidDate;
	    prototype__proto.invalidDate     = invalidDate;
	    prototype__proto._ordinal        = defaultOrdinal;
	    prototype__proto.ordinal         = ordinal;
	    prototype__proto._ordinalParse   = defaultOrdinalParse;
	    prototype__proto.preparse        = preParsePostFormat;
	    prototype__proto.postformat      = preParsePostFormat;
	    prototype__proto._relativeTime   = defaultRelativeTime;
	    prototype__proto.relativeTime    = relative__relativeTime;
	    prototype__proto.pastFuture      = pastFuture;
	    prototype__proto.set             = locale_set__set;

	    // Month
	    prototype__proto.months       =        localeMonths;
	    prototype__proto._months      = defaultLocaleMonths;
	    prototype__proto.monthsShort  =        localeMonthsShort;
	    prototype__proto._monthsShort = defaultLocaleMonthsShort;
	    prototype__proto.monthsParse  =        localeMonthsParse;

	    // Week
	    prototype__proto.week = localeWeek;
	    prototype__proto._week = defaultLocaleWeek;
	    prototype__proto.firstDayOfYear = localeFirstDayOfYear;
	    prototype__proto.firstDayOfWeek = localeFirstDayOfWeek;

	    // Day of Week
	    prototype__proto.weekdays       =        localeWeekdays;
	    prototype__proto._weekdays      = defaultLocaleWeekdays;
	    prototype__proto.weekdaysMin    =        localeWeekdaysMin;
	    prototype__proto._weekdaysMin   = defaultLocaleWeekdaysMin;
	    prototype__proto.weekdaysShort  =        localeWeekdaysShort;
	    prototype__proto._weekdaysShort = defaultLocaleWeekdaysShort;
	    prototype__proto.weekdaysParse  =        localeWeekdaysParse;

	    // Hours
	    prototype__proto.isPM = localeIsPM;
	    prototype__proto._meridiemParse = defaultLocaleMeridiemParse;
	    prototype__proto.meridiem = localeMeridiem;

	    function lists__get (format, index, field, setter) {
	        var locale = locale_locales__getLocale();
	        var utc = create_utc__createUTC().set(setter, index);
	        return locale[field](utc, format);
	    }

	    function list (format, index, field, count, setter) {
	        if (typeof format === 'number') {
	            index = format;
	            format = undefined;
	        }

	        format = format || '';

	        if (index != null) {
	            return lists__get(format, index, field, setter);
	        }

	        var i;
	        var out = [];
	        for (i = 0; i < count; i++) {
	            out[i] = lists__get(format, i, field, setter);
	        }
	        return out;
	    }

	    function lists__listMonths (format, index) {
	        return list(format, index, 'months', 12, 'month');
	    }

	    function lists__listMonthsShort (format, index) {
	        return list(format, index, 'monthsShort', 12, 'month');
	    }

	    function lists__listWeekdays (format, index) {
	        return list(format, index, 'weekdays', 7, 'day');
	    }

	    function lists__listWeekdaysShort (format, index) {
	        return list(format, index, 'weekdaysShort', 7, 'day');
	    }

	    function lists__listWeekdaysMin (format, index) {
	        return list(format, index, 'weekdaysMin', 7, 'day');
	    }

	    locale_locales__getSetGlobalLocale('en', {
	        ordinalParse: /\d{1,2}(th|st|nd|rd)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (toInt(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        }
	    });

	    // Side effect imports
	    utils_hooks__hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', locale_locales__getSetGlobalLocale);
	    utils_hooks__hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', locale_locales__getLocale);

	    var mathAbs = Math.abs;

	    function duration_abs__abs () {
	        var data           = this._data;

	        this._milliseconds = mathAbs(this._milliseconds);
	        this._days         = mathAbs(this._days);
	        this._months       = mathAbs(this._months);

	        data.milliseconds  = mathAbs(data.milliseconds);
	        data.seconds       = mathAbs(data.seconds);
	        data.minutes       = mathAbs(data.minutes);
	        data.hours         = mathAbs(data.hours);
	        data.months        = mathAbs(data.months);
	        data.years         = mathAbs(data.years);

	        return this;
	    }

	    function duration_add_subtract__addSubtract (duration, input, value, direction) {
	        var other = create__createDuration(input, value);

	        duration._milliseconds += direction * other._milliseconds;
	        duration._days         += direction * other._days;
	        duration._months       += direction * other._months;

	        return duration._bubble();
	    }

	    // supports only 2.0-style add(1, 's') or add(duration)
	    function duration_add_subtract__add (input, value) {
	        return duration_add_subtract__addSubtract(this, input, value, 1);
	    }

	    // supports only 2.0-style subtract(1, 's') or subtract(duration)
	    function duration_add_subtract__subtract (input, value) {
	        return duration_add_subtract__addSubtract(this, input, value, -1);
	    }

	    function absCeil (number) {
	        if (number < 0) {
	            return Math.floor(number);
	        } else {
	            return Math.ceil(number);
	        }
	    }

	    function bubble () {
	        var milliseconds = this._milliseconds;
	        var days         = this._days;
	        var months       = this._months;
	        var data         = this._data;
	        var seconds, minutes, hours, years, monthsFromDays;

	        // if we have a mix of positive and negative values, bubble down first
	        // check: https://github.com/moment/moment/issues/2166
	        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||
	                (milliseconds <= 0 && days <= 0 && months <= 0))) {
	            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
	            days = 0;
	            months = 0;
	        }

	        // The following code bubbles up values, see the tests for
	        // examples of what that means.
	        data.milliseconds = milliseconds % 1000;

	        seconds           = absFloor(milliseconds / 1000);
	        data.seconds      = seconds % 60;

	        minutes           = absFloor(seconds / 60);
	        data.minutes      = minutes % 60;

	        hours             = absFloor(minutes / 60);
	        data.hours        = hours % 24;

	        days += absFloor(hours / 24);

	        // convert days to months
	        monthsFromDays = absFloor(daysToMonths(days));
	        months += monthsFromDays;
	        days -= absCeil(monthsToDays(monthsFromDays));

	        // 12 months -> 1 year
	        years = absFloor(months / 12);
	        months %= 12;

	        data.days   = days;
	        data.months = months;
	        data.years  = years;

	        return this;
	    }

	    function daysToMonths (days) {
	        // 400 years have 146097 days (taking into account leap year rules)
	        // 400 years have 12 months === 4800
	        return days * 4800 / 146097;
	    }

	    function monthsToDays (months) {
	        // the reverse of daysToMonths
	        return months * 146097 / 4800;
	    }

	    function as (units) {
	        var days;
	        var months;
	        var milliseconds = this._milliseconds;

	        units = normalizeUnits(units);

	        if (units === 'month' || units === 'year') {
	            days   = this._days   + milliseconds / 864e5;
	            months = this._months + daysToMonths(days);
	            return units === 'month' ? months : months / 12;
	        } else {
	            // handle milliseconds separately because of floating point math errors (issue #1867)
	            days = this._days + Math.round(monthsToDays(this._months));
	            switch (units) {
	                case 'week'   : return days / 7     + milliseconds / 6048e5;
	                case 'day'    : return days         + milliseconds / 864e5;
	                case 'hour'   : return days * 24    + milliseconds / 36e5;
	                case 'minute' : return days * 1440  + milliseconds / 6e4;
	                case 'second' : return days * 86400 + milliseconds / 1000;
	                // Math.floor prevents floating point math errors here
	                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;
	                default: throw new Error('Unknown unit ' + units);
	            }
	        }
	    }

	    // TODO: Use this.as('ms')?
	    function duration_as__valueOf () {
	        return (
	            this._milliseconds +
	            this._days * 864e5 +
	            (this._months % 12) * 2592e6 +
	            toInt(this._months / 12) * 31536e6
	        );
	    }

	    function makeAs (alias) {
	        return function () {
	            return this.as(alias);
	        };
	    }

	    var asMilliseconds = makeAs('ms');
	    var asSeconds      = makeAs('s');
	    var asMinutes      = makeAs('m');
	    var asHours        = makeAs('h');
	    var asDays         = makeAs('d');
	    var asWeeks        = makeAs('w');
	    var asMonths       = makeAs('M');
	    var asYears        = makeAs('y');

	    function duration_get__get (units) {
	        units = normalizeUnits(units);
	        return this[units + 's']();
	    }

	    function makeGetter(name) {
	        return function () {
	            return this._data[name];
	        };
	    }

	    var milliseconds = makeGetter('milliseconds');
	    var seconds      = makeGetter('seconds');
	    var minutes      = makeGetter('minutes');
	    var hours        = makeGetter('hours');
	    var days         = makeGetter('days');
	    var months       = makeGetter('months');
	    var years        = makeGetter('years');

	    function weeks () {
	        return absFloor(this.days() / 7);
	    }

	    var round = Math.round;
	    var thresholds = {
	        s: 45,  // seconds to minute
	        m: 45,  // minutes to hour
	        h: 22,  // hours to day
	        d: 26,  // days to month
	        M: 11   // months to year
	    };

	    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
	    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
	        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
	    }

	    function duration_humanize__relativeTime (posNegDuration, withoutSuffix, locale) {
	        var duration = create__createDuration(posNegDuration).abs();
	        var seconds  = round(duration.as('s'));
	        var minutes  = round(duration.as('m'));
	        var hours    = round(duration.as('h'));
	        var days     = round(duration.as('d'));
	        var months   = round(duration.as('M'));
	        var years    = round(duration.as('y'));

	        var a = seconds < thresholds.s && ['s', seconds]  ||
	                minutes === 1          && ['m']           ||
	                minutes < thresholds.m && ['mm', minutes] ||
	                hours   === 1          && ['h']           ||
	                hours   < thresholds.h && ['hh', hours]   ||
	                days    === 1          && ['d']           ||
	                days    < thresholds.d && ['dd', days]    ||
	                months  === 1          && ['M']           ||
	                months  < thresholds.M && ['MM', months]  ||
	                years   === 1          && ['y']           || ['yy', years];

	        a[2] = withoutSuffix;
	        a[3] = +posNegDuration > 0;
	        a[4] = locale;
	        return substituteTimeAgo.apply(null, a);
	    }

	    // This function allows you to set a threshold for relative time strings
	    function duration_humanize__getSetRelativeTimeThreshold (threshold, limit) {
	        if (thresholds[threshold] === undefined) {
	            return false;
	        }
	        if (limit === undefined) {
	            return thresholds[threshold];
	        }
	        thresholds[threshold] = limit;
	        return true;
	    }

	    function humanize (withSuffix) {
	        var locale = this.localeData();
	        var output = duration_humanize__relativeTime(this, !withSuffix, locale);

	        if (withSuffix) {
	            output = locale.pastFuture(+this, output);
	        }

	        return locale.postformat(output);
	    }

	    var iso_string__abs = Math.abs;

	    function iso_string__toISOString() {
	        // for ISO strings we do not use the normal bubbling rules:
	        //  * milliseconds bubble up until they become hours
	        //  * days do not bubble at all
	        //  * months bubble up until they become years
	        // This is because there is no context-free conversion between hours and days
	        // (think of clock changes)
	        // and also not between days and months (28-31 days per month)
	        var seconds = iso_string__abs(this._milliseconds) / 1000;
	        var days         = iso_string__abs(this._days);
	        var months       = iso_string__abs(this._months);
	        var minutes, hours, years;

	        // 3600 seconds -> 60 minutes -> 1 hour
	        minutes           = absFloor(seconds / 60);
	        hours             = absFloor(minutes / 60);
	        seconds %= 60;
	        minutes %= 60;

	        // 12 months -> 1 year
	        years  = absFloor(months / 12);
	        months %= 12;


	        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
	        var Y = years;
	        var M = months;
	        var D = days;
	        var h = hours;
	        var m = minutes;
	        var s = seconds;
	        var total = this.asSeconds();

	        if (!total) {
	            // this is the same as C#'s (Noda) and python (isodate)...
	            // but not other JS (goog.date)
	            return 'P0D';
	        }

	        return (total < 0 ? '-' : '') +
	            'P' +
	            (Y ? Y + 'Y' : '') +
	            (M ? M + 'M' : '') +
	            (D ? D + 'D' : '') +
	            ((h || m || s) ? 'T' : '') +
	            (h ? h + 'H' : '') +
	            (m ? m + 'M' : '') +
	            (s ? s + 'S' : '');
	    }

	    var duration_prototype__proto = Duration.prototype;

	    duration_prototype__proto.abs            = duration_abs__abs;
	    duration_prototype__proto.add            = duration_add_subtract__add;
	    duration_prototype__proto.subtract       = duration_add_subtract__subtract;
	    duration_prototype__proto.as             = as;
	    duration_prototype__proto.asMilliseconds = asMilliseconds;
	    duration_prototype__proto.asSeconds      = asSeconds;
	    duration_prototype__proto.asMinutes      = asMinutes;
	    duration_prototype__proto.asHours        = asHours;
	    duration_prototype__proto.asDays         = asDays;
	    duration_prototype__proto.asWeeks        = asWeeks;
	    duration_prototype__proto.asMonths       = asMonths;
	    duration_prototype__proto.asYears        = asYears;
	    duration_prototype__proto.valueOf        = duration_as__valueOf;
	    duration_prototype__proto._bubble        = bubble;
	    duration_prototype__proto.get            = duration_get__get;
	    duration_prototype__proto.milliseconds   = milliseconds;
	    duration_prototype__proto.seconds        = seconds;
	    duration_prototype__proto.minutes        = minutes;
	    duration_prototype__proto.hours          = hours;
	    duration_prototype__proto.days           = days;
	    duration_prototype__proto.weeks          = weeks;
	    duration_prototype__proto.months         = months;
	    duration_prototype__proto.years          = years;
	    duration_prototype__proto.humanize       = humanize;
	    duration_prototype__proto.toISOString    = iso_string__toISOString;
	    duration_prototype__proto.toString       = iso_string__toISOString;
	    duration_prototype__proto.toJSON         = iso_string__toISOString;
	    duration_prototype__proto.locale         = locale;
	    duration_prototype__proto.localeData     = localeData;

	    // Deprecations
	    duration_prototype__proto.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', iso_string__toISOString);
	    duration_prototype__proto.lang = lang;

	    // Side effect imports

	    addFormatToken('X', 0, 0, 'unix');
	    addFormatToken('x', 0, 0, 'valueOf');

	    // PARSING

	    addRegexToken('x', matchSigned);
	    addRegexToken('X', matchTimestamp);
	    addParseToken('X', function (input, array, config) {
	        config._d = new Date(parseFloat(input, 10) * 1000);
	    });
	    addParseToken('x', function (input, array, config) {
	        config._d = new Date(toInt(input));
	    });

	    // Side effect imports


	    utils_hooks__hooks.version = '2.10.6';

	    setHookCallback(local__createLocal);

	    utils_hooks__hooks.fn                    = momentPrototype;
	    utils_hooks__hooks.min                   = min;
	    utils_hooks__hooks.max                   = max;
	    utils_hooks__hooks.utc                   = create_utc__createUTC;
	    utils_hooks__hooks.unix                  = moment__createUnix;
	    utils_hooks__hooks.months                = lists__listMonths;
	    utils_hooks__hooks.isDate                = isDate;
	    utils_hooks__hooks.locale                = locale_locales__getSetGlobalLocale;
	    utils_hooks__hooks.invalid               = valid__createInvalid;
	    utils_hooks__hooks.duration              = create__createDuration;
	    utils_hooks__hooks.isMoment              = isMoment;
	    utils_hooks__hooks.weekdays              = lists__listWeekdays;
	    utils_hooks__hooks.parseZone             = moment__createInZone;
	    utils_hooks__hooks.localeData            = locale_locales__getLocale;
	    utils_hooks__hooks.isDuration            = isDuration;
	    utils_hooks__hooks.monthsShort           = lists__listMonthsShort;
	    utils_hooks__hooks.weekdaysMin           = lists__listWeekdaysMin;
	    utils_hooks__hooks.defineLocale          = defineLocale;
	    utils_hooks__hooks.weekdaysShort         = lists__listWeekdaysShort;
	    utils_hooks__hooks.normalizeUnits        = normalizeUnits;
	    utils_hooks__hooks.relativeTimeThreshold = duration_humanize__getSetRelativeTimeThreshold;

	    var _moment = utils_hooks__hooks;

	    return _moment;

	}));
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(269)(module)))

/***/ },
/* 269 */
/***/ function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ },
/* 270 */
/***/ function(module, exports, __webpack_require__) {

	var map = {
		"./af": 271,
		"./af.js": 271,
		"./ar": 272,
		"./ar-ma": 273,
		"./ar-ma.js": 273,
		"./ar-sa": 274,
		"./ar-sa.js": 274,
		"./ar-tn": 275,
		"./ar-tn.js": 275,
		"./ar.js": 272,
		"./az": 276,
		"./az.js": 276,
		"./be": 277,
		"./be.js": 277,
		"./bg": 278,
		"./bg.js": 278,
		"./bn": 279,
		"./bn.js": 279,
		"./bo": 280,
		"./bo.js": 280,
		"./br": 281,
		"./br.js": 281,
		"./bs": 282,
		"./bs.js": 282,
		"./ca": 283,
		"./ca.js": 283,
		"./cs": 284,
		"./cs.js": 284,
		"./cv": 285,
		"./cv.js": 285,
		"./cy": 286,
		"./cy.js": 286,
		"./da": 287,
		"./da.js": 287,
		"./de": 288,
		"./de-at": 289,
		"./de-at.js": 289,
		"./de.js": 288,
		"./el": 290,
		"./el.js": 290,
		"./en-au": 291,
		"./en-au.js": 291,
		"./en-ca": 292,
		"./en-ca.js": 292,
		"./en-gb": 293,
		"./en-gb.js": 293,
		"./eo": 294,
		"./eo.js": 294,
		"./es": 295,
		"./es.js": 295,
		"./et": 296,
		"./et.js": 296,
		"./eu": 297,
		"./eu.js": 297,
		"./fa": 298,
		"./fa.js": 298,
		"./fi": 299,
		"./fi.js": 299,
		"./fo": 300,
		"./fo.js": 300,
		"./fr": 301,
		"./fr-ca": 302,
		"./fr-ca.js": 302,
		"./fr.js": 301,
		"./fy": 303,
		"./fy.js": 303,
		"./gl": 304,
		"./gl.js": 304,
		"./he": 305,
		"./he.js": 305,
		"./hi": 306,
		"./hi.js": 306,
		"./hr": 307,
		"./hr.js": 307,
		"./hu": 308,
		"./hu.js": 308,
		"./hy-am": 309,
		"./hy-am.js": 309,
		"./id": 310,
		"./id.js": 310,
		"./is": 311,
		"./is.js": 311,
		"./it": 312,
		"./it.js": 312,
		"./ja": 313,
		"./ja.js": 313,
		"./jv": 314,
		"./jv.js": 314,
		"./ka": 315,
		"./ka.js": 315,
		"./km": 316,
		"./km.js": 316,
		"./ko": 317,
		"./ko.js": 317,
		"./lb": 318,
		"./lb.js": 318,
		"./lt": 319,
		"./lt.js": 319,
		"./lv": 320,
		"./lv.js": 320,
		"./me": 321,
		"./me.js": 321,
		"./mk": 322,
		"./mk.js": 322,
		"./ml": 323,
		"./ml.js": 323,
		"./mr": 324,
		"./mr.js": 324,
		"./ms": 325,
		"./ms-my": 326,
		"./ms-my.js": 326,
		"./ms.js": 325,
		"./my": 327,
		"./my.js": 327,
		"./nb": 328,
		"./nb.js": 328,
		"./ne": 329,
		"./ne.js": 329,
		"./nl": 330,
		"./nl.js": 330,
		"./nn": 331,
		"./nn.js": 331,
		"./pl": 332,
		"./pl.js": 332,
		"./pt": 333,
		"./pt-br": 334,
		"./pt-br.js": 334,
		"./pt.js": 333,
		"./ro": 335,
		"./ro.js": 335,
		"./ru": 336,
		"./ru.js": 336,
		"./si": 337,
		"./si.js": 337,
		"./sk": 338,
		"./sk.js": 338,
		"./sl": 339,
		"./sl.js": 339,
		"./sq": 340,
		"./sq.js": 340,
		"./sr": 341,
		"./sr-cyrl": 342,
		"./sr-cyrl.js": 342,
		"./sr.js": 341,
		"./sv": 343,
		"./sv.js": 343,
		"./ta": 344,
		"./ta.js": 344,
		"./th": 345,
		"./th.js": 345,
		"./tl-ph": 346,
		"./tl-ph.js": 346,
		"./tr": 347,
		"./tr.js": 347,
		"./tzl": 348,
		"./tzl.js": 348,
		"./tzm": 349,
		"./tzm-latn": 350,
		"./tzm-latn.js": 350,
		"./tzm.js": 349,
		"./uk": 351,
		"./uk.js": 351,
		"./uz": 352,
		"./uz.js": 352,
		"./vi": 353,
		"./vi.js": 353,
		"./zh-cn": 354,
		"./zh-cn.js": 354,
		"./zh-tw": 355,
		"./zh-tw.js": 355
	};
	function webpackContext(req) {
		return __webpack_require__(webpackContextResolve(req));
	};
	function webpackContextResolve(req) {
		return map[req] || (function() { throw new Error("Cannot find module '" + req + "'.") }());
	};
	webpackContext.keys = function webpackContextKeys() {
		return Object.keys(map);
	};
	webpackContext.resolve = webpackContextResolve;
	module.exports = webpackContext;
	webpackContext.id = 270;


/***/ },
/* 271 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : afrikaans (af)
	//! author : Werner Mollentze : https://github.com/wernerm

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var af = moment.defineLocale('af', {
	        months : 'Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des'.split('_'),
	        weekdays : 'Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag'.split('_'),
	        weekdaysShort : 'Son_Maa_Din_Woe_Don_Vry_Sat'.split('_'),
	        weekdaysMin : 'So_Ma_Di_Wo_Do_Vr_Sa'.split('_'),
	        meridiemParse: /vm|nm/i,
	        isPM : function (input) {
	            return /^nm$/i.test(input);
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 12) {
	                return isLower ? 'vm' : 'VM';
	            } else {
	                return isLower ? 'nm' : 'NM';
	            }
	        },
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Vandag om] LT',
	            nextDay : '[Môre om] LT',
	            nextWeek : 'dddd [om] LT',
	            lastDay : '[Gister om] LT',
	            lastWeek : '[Laas] dddd [om] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'oor %s',
	            past : '%s gelede',
	            s : '\'n paar sekondes',
	            m : '\'n minuut',
	            mm : '%d minute',
	            h : '\'n uur',
	            hh : '%d ure',
	            d : '\'n dag',
	            dd : '%d dae',
	            M : '\'n maand',
	            MM : '%d maande',
	            y : '\'n jaar',
	            yy : '%d jaar'
	        },
	        ordinalParse: /\d{1,2}(ste|de)/,
	        ordinal : function (number) {
	            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de'); // Thanks to Joris Röling : https://github.com/jjupiter
	        },
	        week : {
	            dow : 1, // Maandag is die eerste dag van die week.
	            doy : 4  // Die week wat die 4de Januarie bevat is die eerste week van die jaar.
	        }
	    });

	    return af;

	}));

/***/ },
/* 272 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! Locale: Arabic (ar)
	//! Author: Abdel Said: https://github.com/abdelsaid
	//! Changes in months, weekdays: Ahmed Elkhatib
	//! Native plural forms: forabi https://github.com/forabi

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var symbolMap = {
	        '1': '١',
	        '2': '٢',
	        '3': '٣',
	        '4': '٤',
	        '5': '٥',
	        '6': '٦',
	        '7': '٧',
	        '8': '٨',
	        '9': '٩',
	        '0': '٠'
	    }, numberMap = {
	        '١': '1',
	        '٢': '2',
	        '٣': '3',
	        '٤': '4',
	        '٥': '5',
	        '٦': '6',
	        '٧': '7',
	        '٨': '8',
	        '٩': '9',
	        '٠': '0'
	    }, pluralForm = function (n) {
	        return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;
	    }, plurals = {
	        s : ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],
	        m : ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],
	        h : ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],
	        d : ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],
	        M : ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],
	        y : ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']
	    }, pluralize = function (u) {
	        return function (number, withoutSuffix, string, isFuture) {
	            var f = pluralForm(number),
	                str = plurals[u][pluralForm(number)];
	            if (f === 2) {
	                str = str[withoutSuffix ? 0 : 1];
	            }
	            return str.replace(/%d/i, number);
	        };
	    }, months = [
	        'كانون الثاني يناير',
	        'شباط فبراير',
	        'آذار مارس',
	        'نيسان أبريل',
	        'أيار مايو',
	        'حزيران يونيو',
	        'تموز يوليو',
	        'آب أغسطس',
	        'أيلول سبتمبر',
	        'تشرين الأول أكتوبر',
	        'تشرين الثاني نوفمبر',
	        'كانون الأول ديسمبر'
	    ];

	    var ar = moment.defineLocale('ar', {
	        months : months,
	        monthsShort : months,
	        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
	        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'D/\u200FM/\u200FYYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        meridiemParse: /ص|م/,
	        isPM : function (input) {
	            return 'م' === input;
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'ص';
	            } else {
	                return 'م';
	            }
	        },
	        calendar : {
	            sameDay: '[اليوم عند الساعة] LT',
	            nextDay: '[غدًا عند الساعة] LT',
	            nextWeek: 'dddd [عند الساعة] LT',
	            lastDay: '[أمس عند الساعة] LT',
	            lastWeek: 'dddd [عند الساعة] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'بعد %s',
	            past : 'منذ %s',
	            s : pluralize('s'),
	            m : pluralize('m'),
	            mm : pluralize('m'),
	            h : pluralize('h'),
	            hh : pluralize('h'),
	            d : pluralize('d'),
	            dd : pluralize('d'),
	            M : pluralize('M'),
	            MM : pluralize('M'),
	            y : pluralize('y'),
	            yy : pluralize('y')
	        },
	        preparse: function (string) {
	            return string.replace(/\u200f/g, '').replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
	                return numberMap[match];
	            }).replace(/،/g, ',');
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            }).replace(/,/g, '،');
	        },
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ar;

	}));

/***/ },
/* 273 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Moroccan Arabic (ar-ma)
	//! author : ElFadili Yassine : https://github.com/ElFadiliY
	//! author : Abdel Said : https://github.com/abdelsaid

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var ar_ma = moment.defineLocale('ar-ma', {
	        months : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
	        monthsShort : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
	        weekdays : 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	        weekdaysShort : 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
	        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[اليوم على الساعة] LT',
	            nextDay: '[غدا على الساعة] LT',
	            nextWeek: 'dddd [على الساعة] LT',
	            lastDay: '[أمس على الساعة] LT',
	            lastWeek: 'dddd [على الساعة] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'في %s',
	            past : 'منذ %s',
	            s : 'ثوان',
	            m : 'دقيقة',
	            mm : '%d دقائق',
	            h : 'ساعة',
	            hh : '%d ساعات',
	            d : 'يوم',
	            dd : '%d أيام',
	            M : 'شهر',
	            MM : '%d أشهر',
	            y : 'سنة',
	            yy : '%d سنوات'
	        },
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ar_ma;

	}));

/***/ },
/* 274 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Arabic Saudi Arabia (ar-sa)
	//! author : Suhail Alkowaileet : https://github.com/xsoh

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var symbolMap = {
	        '1': '١',
	        '2': '٢',
	        '3': '٣',
	        '4': '٤',
	        '5': '٥',
	        '6': '٦',
	        '7': '٧',
	        '8': '٨',
	        '9': '٩',
	        '0': '٠'
	    }, numberMap = {
	        '١': '1',
	        '٢': '2',
	        '٣': '3',
	        '٤': '4',
	        '٥': '5',
	        '٦': '6',
	        '٧': '7',
	        '٨': '8',
	        '٩': '9',
	        '٠': '0'
	    };

	    var ar_sa = moment.defineLocale('ar-sa', {
	        months : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	        monthsShort : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
	        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        meridiemParse: /ص|م/,
	        isPM : function (input) {
	            return 'م' === input;
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'ص';
	            } else {
	                return 'م';
	            }
	        },
	        calendar : {
	            sameDay: '[اليوم على الساعة] LT',
	            nextDay: '[غدا على الساعة] LT',
	            nextWeek: 'dddd [على الساعة] LT',
	            lastDay: '[أمس على الساعة] LT',
	            lastWeek: 'dddd [على الساعة] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'في %s',
	            past : 'منذ %s',
	            s : 'ثوان',
	            m : 'دقيقة',
	            mm : '%d دقائق',
	            h : 'ساعة',
	            hh : '%d ساعات',
	            d : 'يوم',
	            dd : '%d أيام',
	            M : 'شهر',
	            MM : '%d أشهر',
	            y : 'سنة',
	            yy : '%d سنوات'
	        },
	        preparse: function (string) {
	            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
	                return numberMap[match];
	            }).replace(/،/g, ',');
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            }).replace(/,/g, '،');
	        },
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ar_sa;

	}));

/***/ },
/* 275 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale  : Tunisian Arabic (ar-tn)

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var ar_tn = moment.defineLocale('ar-tn', {
	        months: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	        monthsShort: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
	        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[اليوم على الساعة] LT',
	            nextDay: '[غدا على الساعة] LT',
	            nextWeek: 'dddd [على الساعة] LT',
	            lastDay: '[أمس على الساعة] LT',
	            lastWeek: 'dddd [على الساعة] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'في %s',
	            past: 'منذ %s',
	            s: 'ثوان',
	            m: 'دقيقة',
	            mm: '%d دقائق',
	            h: 'ساعة',
	            hh: '%d ساعات',
	            d: 'يوم',
	            dd: '%d أيام',
	            M: 'شهر',
	            MM: '%d أشهر',
	            y: 'سنة',
	            yy: '%d سنوات'
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return ar_tn;

	}));

/***/ },
/* 276 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : azerbaijani (az)
	//! author : topchiyev : https://github.com/topchiyev

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var suffixes = {
	        1: '-inci',
	        5: '-inci',
	        8: '-inci',
	        70: '-inci',
	        80: '-inci',
	        2: '-nci',
	        7: '-nci',
	        20: '-nci',
	        50: '-nci',
	        3: '-üncü',
	        4: '-üncü',
	        100: '-üncü',
	        6: '-ncı',
	        9: '-uncu',
	        10: '-uncu',
	        30: '-uncu',
	        60: '-ıncı',
	        90: '-ıncı'
	    };

	    var az = moment.defineLocale('az', {
	        months : 'yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr'.split('_'),
	        monthsShort : 'yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek'.split('_'),
	        weekdays : 'Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə'.split('_'),
	        weekdaysShort : 'Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən'.split('_'),
	        weekdaysMin : 'Bz_BE_ÇA_Çə_CA_Cü_Şə'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[bugün saat] LT',
	            nextDay : '[sabah saat] LT',
	            nextWeek : '[gələn həftə] dddd [saat] LT',
	            lastDay : '[dünən] LT',
	            lastWeek : '[keçən həftə] dddd [saat] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s sonra',
	            past : '%s əvvəl',
	            s : 'birneçə saniyyə',
	            m : 'bir dəqiqə',
	            mm : '%d dəqiqə',
	            h : 'bir saat',
	            hh : '%d saat',
	            d : 'bir gün',
	            dd : '%d gün',
	            M : 'bir ay',
	            MM : '%d ay',
	            y : 'bir il',
	            yy : '%d il'
	        },
	        meridiemParse: /gecə|səhər|gündüz|axşam/,
	        isPM : function (input) {
	            return /^(gündüz|axşam)$/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'gecə';
	            } else if (hour < 12) {
	                return 'səhər';
	            } else if (hour < 17) {
	                return 'gündüz';
	            } else {
	                return 'axşam';
	            }
	        },
	        ordinalParse: /\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,
	        ordinal : function (number) {
	            if (number === 0) {  // special case for zero
	                return number + '-ıncı';
	            }
	            var a = number % 10,
	                b = number % 100 - a,
	                c = number >= 100 ? 100 : null;
	            return number + (suffixes[a] || suffixes[b] || suffixes[c]);
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return az;

	}));

/***/ },
/* 277 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : belarusian (be)
	//! author : Dmitry Demidov : https://github.com/demidov91
	//! author: Praleska: http://praleska.pro/
	//! Author : Menelion Elensúle : https://github.com/Oire

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function plural(word, num) {
	        var forms = word.split('_');
	        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
	    }
	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        var format = {
	            'mm': withoutSuffix ? 'хвіліна_хвіліны_хвілін' : 'хвіліну_хвіліны_хвілін',
	            'hh': withoutSuffix ? 'гадзіна_гадзіны_гадзін' : 'гадзіну_гадзіны_гадзін',
	            'dd': 'дзень_дні_дзён',
	            'MM': 'месяц_месяцы_месяцаў',
	            'yy': 'год_гады_гадоў'
	        };
	        if (key === 'm') {
	            return withoutSuffix ? 'хвіліна' : 'хвіліну';
	        }
	        else if (key === 'h') {
	            return withoutSuffix ? 'гадзіна' : 'гадзіну';
	        }
	        else {
	            return number + ' ' + plural(format[key], +number);
	        }
	    }
	    function monthsCaseReplace(m, format) {
	        var months = {
	            'nominative': 'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split('_'),
	            'accusative': 'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split('_')
	        },
	        nounCase = (/D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/).test(format) ?
	            'accusative' :
	            'nominative';
	        return months[nounCase][m.month()];
	    }
	    function weekdaysCaseReplace(m, format) {
	        var weekdays = {
	            'nominative': 'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split('_'),
	            'accusative': 'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split('_')
	        },
	        nounCase = (/\[ ?[Вв] ?(?:мінулую|наступную)? ?\] ?dddd/).test(format) ?
	            'accusative' :
	            'nominative';
	        return weekdays[nounCase][m.day()];
	    }

	    var be = moment.defineLocale('be', {
	        months : monthsCaseReplace,
	        monthsShort : 'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split('_'),
	        weekdays : weekdaysCaseReplace,
	        weekdaysShort : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
	        weekdaysMin : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY г.',
	            LLL : 'D MMMM YYYY г., HH:mm',
	            LLLL : 'dddd, D MMMM YYYY г., HH:mm'
	        },
	        calendar : {
	            sameDay: '[Сёння ў] LT',
	            nextDay: '[Заўтра ў] LT',
	            lastDay: '[Учора ў] LT',
	            nextWeek: function () {
	                return '[У] dddd [ў] LT';
	            },
	            lastWeek: function () {
	                switch (this.day()) {
	                case 0:
	                case 3:
	                case 5:
	                case 6:
	                    return '[У мінулую] dddd [ў] LT';
	                case 1:
	                case 2:
	                case 4:
	                    return '[У мінулы] dddd [ў] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'праз %s',
	            past : '%s таму',
	            s : 'некалькі секунд',
	            m : relativeTimeWithPlural,
	            mm : relativeTimeWithPlural,
	            h : relativeTimeWithPlural,
	            hh : relativeTimeWithPlural,
	            d : 'дзень',
	            dd : relativeTimeWithPlural,
	            M : 'месяц',
	            MM : relativeTimeWithPlural,
	            y : 'год',
	            yy : relativeTimeWithPlural
	        },
	        meridiemParse: /ночы|раніцы|дня|вечара/,
	        isPM : function (input) {
	            return /^(дня|вечара)$/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'ночы';
	            } else if (hour < 12) {
	                return 'раніцы';
	            } else if (hour < 17) {
	                return 'дня';
	            } else {
	                return 'вечара';
	            }
	        },
	        ordinalParse: /\d{1,2}-(і|ы|га)/,
	        ordinal: function (number, period) {
	            switch (period) {
	            case 'M':
	            case 'd':
	            case 'DDD':
	            case 'w':
	            case 'W':
	                return (number % 10 === 2 || number % 10 === 3) && (number % 100 !== 12 && number % 100 !== 13) ? number + '-і' : number + '-ы';
	            case 'D':
	                return number + '-га';
	            default:
	                return number;
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return be;

	}));

/***/ },
/* 278 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : bulgarian (bg)
	//! author : Krasen Borisov : https://github.com/kraz

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var bg = moment.defineLocale('bg', {
	        months : 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split('_'),
	        monthsShort : 'янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),
	        weekdays : 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split('_'),
	        weekdaysShort : 'нед_пон_вто_сря_чет_пет_съб'.split('_'),
	        weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'D.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY H:mm',
	            LLLL : 'dddd, D MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay : '[Днес в] LT',
	            nextDay : '[Утре в] LT',
	            nextWeek : 'dddd [в] LT',
	            lastDay : '[Вчера в] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                case 0:
	                case 3:
	                case 6:
	                    return '[В изминалата] dddd [в] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[В изминалия] dddd [в] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'след %s',
	            past : 'преди %s',
	            s : 'няколко секунди',
	            m : 'минута',
	            mm : '%d минути',
	            h : 'час',
	            hh : '%d часа',
	            d : 'ден',
	            dd : '%d дни',
	            M : 'месец',
	            MM : '%d месеца',
	            y : 'година',
	            yy : '%d години'
	        },
	        ordinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
	        ordinal : function (number) {
	            var lastDigit = number % 10,
	                last2Digits = number % 100;
	            if (number === 0) {
	                return number + '-ев';
	            } else if (last2Digits === 0) {
	                return number + '-ен';
	            } else if (last2Digits > 10 && last2Digits < 20) {
	                return number + '-ти';
	            } else if (lastDigit === 1) {
	                return number + '-ви';
	            } else if (lastDigit === 2) {
	                return number + '-ри';
	            } else if (lastDigit === 7 || lastDigit === 8) {
	                return number + '-ми';
	            } else {
	                return number + '-ти';
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return bg;

	}));

/***/ },
/* 279 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Bengali (bn)
	//! author : Kaushik Gandhi : https://github.com/kaushikgandhi

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var symbolMap = {
	        '1': '১',
	        '2': '২',
	        '3': '৩',
	        '4': '৪',
	        '5': '৫',
	        '6': '৬',
	        '7': '৭',
	        '8': '৮',
	        '9': '৯',
	        '0': '০'
	    },
	    numberMap = {
	        '১': '1',
	        '২': '2',
	        '৩': '3',
	        '৪': '4',
	        '৫': '5',
	        '৬': '6',
	        '৭': '7',
	        '৮': '8',
	        '৯': '9',
	        '০': '0'
	    };

	    var bn = moment.defineLocale('bn', {
	        months : 'জানুয়ারী_ফেবুয়ারী_মার্চ_এপ্রিল_মে_জুন_জুলাই_অগাস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split('_'),
	        monthsShort : 'জানু_ফেব_মার্চ_এপর_মে_জুন_জুল_অগ_সেপ্ট_অক্টো_নভ_ডিসেম্'.split('_'),
	        weekdays : 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পত্তিবার_শুক্রুবার_শনিবার'.split('_'),
	        weekdaysShort : 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পত্তি_শুক্রু_শনি'.split('_'),
	        weekdaysMin : 'রব_সম_মঙ্গ_বু_ব্রিহ_শু_শনি'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm সময়',
	            LTS : 'A h:mm:ss সময়',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm সময়',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm সময়'
	        },
	        calendar : {
	            sameDay : '[আজ] LT',
	            nextDay : '[আগামীকাল] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[গতকাল] LT',
	            lastWeek : '[গত] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s পরে',
	            past : '%s আগে',
	            s : 'কএক সেকেন্ড',
	            m : 'এক মিনিট',
	            mm : '%d মিনিট',
	            h : 'এক ঘন্টা',
	            hh : '%d ঘন্টা',
	            d : 'এক দিন',
	            dd : '%d দিন',
	            M : 'এক মাস',
	            MM : '%d মাস',
	            y : 'এক বছর',
	            yy : '%d বছর'
	        },
	        preparse: function (string) {
	            return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        meridiemParse: /রাত|সকাল|দুপুর|বিকেল|রাত/,
	        isPM: function (input) {
	            return /^(দুপুর|বিকেল|রাত)$/.test(input);
	        },
	        //Bengali is a vast language its spoken
	        //in different forms in various parts of the world.
	        //I have just generalized with most common one used
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'রাত';
	            } else if (hour < 10) {
	                return 'সকাল';
	            } else if (hour < 17) {
	                return 'দুপুর';
	            } else if (hour < 20) {
	                return 'বিকেল';
	            } else {
	                return 'রাত';
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return bn;

	}));

/***/ },
/* 280 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : tibetan (bo)
	//! author : Thupten N. Chakrishar : https://github.com/vajradog

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var symbolMap = {
	        '1': '༡',
	        '2': '༢',
	        '3': '༣',
	        '4': '༤',
	        '5': '༥',
	        '6': '༦',
	        '7': '༧',
	        '8': '༨',
	        '9': '༩',
	        '0': '༠'
	    },
	    numberMap = {
	        '༡': '1',
	        '༢': '2',
	        '༣': '3',
	        '༤': '4',
	        '༥': '5',
	        '༦': '6',
	        '༧': '7',
	        '༨': '8',
	        '༩': '9',
	        '༠': '0'
	    };

	    var bo = moment.defineLocale('bo', {
	        months : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
	        monthsShort : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
	        weekdays : 'གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་'.split('_'),
	        weekdaysShort : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
	        weekdaysMin : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm',
	            LTS : 'A h:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm'
	        },
	        calendar : {
	            sameDay : '[དི་རིང] LT',
	            nextDay : '[སང་ཉིན] LT',
	            nextWeek : '[བདུན་ཕྲག་རྗེས་མ], LT',
	            lastDay : '[ཁ་སང] LT',
	            lastWeek : '[བདུན་ཕྲག་མཐའ་མ] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s ལ་',
	            past : '%s སྔན་ལ',
	            s : 'ལམ་སང',
	            m : 'སྐར་མ་གཅིག',
	            mm : '%d སྐར་མ',
	            h : 'ཆུ་ཚོད་གཅིག',
	            hh : '%d ཆུ་ཚོད',
	            d : 'ཉིན་གཅིག',
	            dd : '%d ཉིན་',
	            M : 'ཟླ་བ་གཅིག',
	            MM : '%d ཟླ་བ',
	            y : 'ལོ་གཅིག',
	            yy : '%d ལོ'
	        },
	        preparse: function (string) {
	            return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,
	        isPM: function (input) {
	            return /^(ཉིན་གུང|དགོང་དག|མཚན་མོ)$/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'མཚན་མོ';
	            } else if (hour < 10) {
	                return 'ཞོགས་ཀས';
	            } else if (hour < 17) {
	                return 'ཉིན་གུང';
	            } else if (hour < 20) {
	                return 'དགོང་དག';
	            } else {
	                return 'མཚན་མོ';
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return bo;

	}));

/***/ },
/* 281 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : breton (br)
	//! author : Jean-Baptiste Le Duigou : https://github.com/jbleduigou

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function relativeTimeWithMutation(number, withoutSuffix, key) {
	        var format = {
	            'mm': 'munutenn',
	            'MM': 'miz',
	            'dd': 'devezh'
	        };
	        return number + ' ' + mutation(format[key], number);
	    }
	    function specialMutationForYears(number) {
	        switch (lastNumber(number)) {
	        case 1:
	        case 3:
	        case 4:
	        case 5:
	        case 9:
	            return number + ' bloaz';
	        default:
	            return number + ' vloaz';
	        }
	    }
	    function lastNumber(number) {
	        if (number > 9) {
	            return lastNumber(number % 10);
	        }
	        return number;
	    }
	    function mutation(text, number) {
	        if (number === 2) {
	            return softMutation(text);
	        }
	        return text;
	    }
	    function softMutation(text) {
	        var mutationTable = {
	            'm': 'v',
	            'b': 'v',
	            'd': 'z'
	        };
	        if (mutationTable[text.charAt(0)] === undefined) {
	            return text;
	        }
	        return mutationTable[text.charAt(0)] + text.substring(1);
	    }

	    var br = moment.defineLocale('br', {
	        months : 'Genver_C\'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu'.split('_'),
	        monthsShort : 'Gen_C\'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker'.split('_'),
	        weekdays : 'Sul_Lun_Meurzh_Merc\'her_Yaou_Gwener_Sadorn'.split('_'),
	        weekdaysShort : 'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'),
	        weekdaysMin : 'Su_Lu_Me_Mer_Ya_Gw_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'h[e]mm A',
	            LTS : 'h[e]mm:ss A',
	            L : 'DD/MM/YYYY',
	            LL : 'D [a viz] MMMM YYYY',
	            LLL : 'D [a viz] MMMM YYYY h[e]mm A',
	            LLLL : 'dddd, D [a viz] MMMM YYYY h[e]mm A'
	        },
	        calendar : {
	            sameDay : '[Hiziv da] LT',
	            nextDay : '[Warc\'hoazh da] LT',
	            nextWeek : 'dddd [da] LT',
	            lastDay : '[Dec\'h da] LT',
	            lastWeek : 'dddd [paset da] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'a-benn %s',
	            past : '%s \'zo',
	            s : 'un nebeud segondennoù',
	            m : 'ur vunutenn',
	            mm : relativeTimeWithMutation,
	            h : 'un eur',
	            hh : '%d eur',
	            d : 'un devezh',
	            dd : relativeTimeWithMutation,
	            M : 'ur miz',
	            MM : relativeTimeWithMutation,
	            y : 'ur bloaz',
	            yy : specialMutationForYears
	        },
	        ordinalParse: /\d{1,2}(añ|vet)/,
	        ordinal : function (number) {
	            var output = (number === 1) ? 'añ' : 'vet';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return br;

	}));

/***/ },
/* 282 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : bosnian (bs)
	//! author : Nedim Cholich : https://github.com/frontyard
	//! based on (hr) translation by Bojan Marković

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function translate(number, withoutSuffix, key) {
	        var result = number + ' ';
	        switch (key) {
	        case 'm':
	            return withoutSuffix ? 'jedna minuta' : 'jedne minute';
	        case 'mm':
	            if (number === 1) {
	                result += 'minuta';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'minute';
	            } else {
	                result += 'minuta';
	            }
	            return result;
	        case 'h':
	            return withoutSuffix ? 'jedan sat' : 'jednog sata';
	        case 'hh':
	            if (number === 1) {
	                result += 'sat';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'sata';
	            } else {
	                result += 'sati';
	            }
	            return result;
	        case 'dd':
	            if (number === 1) {
	                result += 'dan';
	            } else {
	                result += 'dana';
	            }
	            return result;
	        case 'MM':
	            if (number === 1) {
	                result += 'mjesec';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'mjeseca';
	            } else {
	                result += 'mjeseci';
	            }
	            return result;
	        case 'yy':
	            if (number === 1) {
	                result += 'godina';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'godine';
	            } else {
	                result += 'godina';
	            }
	            return result;
	        }
	    }

	    var bs = moment.defineLocale('bs', {
	        months : 'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split('_'),
	        monthsShort : 'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split('_'),
	        weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
	        weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
	        weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD. MM. YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY H:mm',
	            LLLL : 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay  : '[danas u] LT',
	            nextDay  : '[sutra u] LT',
	            nextWeek : function () {
	                switch (this.day()) {
	                case 0:
	                    return '[u] [nedjelju] [u] LT';
	                case 3:
	                    return '[u] [srijedu] [u] LT';
	                case 6:
	                    return '[u] [subotu] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[u] dddd [u] LT';
	                }
	            },
	            lastDay  : '[jučer u] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                case 0:
	                case 3:
	                    return '[prošlu] dddd [u] LT';
	                case 6:
	                    return '[prošle] [subote] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[prošli] dddd [u] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past   : 'prije %s',
	            s      : 'par sekundi',
	            m      : translate,
	            mm     : translate,
	            h      : translate,
	            hh     : translate,
	            d      : 'dan',
	            dd     : translate,
	            M      : 'mjesec',
	            MM     : translate,
	            y      : 'godinu',
	            yy     : translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return bs;

	}));

/***/ },
/* 283 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : catalan (ca)
	//! author : Juan G. Hurtado : https://github.com/juanghurtado

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var ca = moment.defineLocale('ca', {
	        months : 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),
	        monthsShort : 'gen._febr._mar._abr._mai._jun._jul._ag._set._oct._nov._des.'.split('_'),
	        weekdays : 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),
	        weekdaysShort : 'dg._dl._dt._dc._dj._dv._ds.'.split('_'),
	        weekdaysMin : 'Dg_Dl_Dt_Dc_Dj_Dv_Ds'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'LT:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY H:mm',
	            LLLL : 'dddd D MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay : function () {
	                return '[avui a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	            },
	            nextDay : function () {
	                return '[demà a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	            },
	            nextWeek : function () {
	                return 'dddd [a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	            },
	            lastDay : function () {
	                return '[ahir a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	            },
	            lastWeek : function () {
	                return '[el] dddd [passat a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'en %s',
	            past : 'fa %s',
	            s : 'uns segons',
	            m : 'un minut',
	            mm : '%d minuts',
	            h : 'una hora',
	            hh : '%d hores',
	            d : 'un dia',
	            dd : '%d dies',
	            M : 'un mes',
	            MM : '%d mesos',
	            y : 'un any',
	            yy : '%d anys'
	        },
	        ordinalParse: /\d{1,2}(r|n|t|è|a)/,
	        ordinal : function (number, period) {
	            var output = (number === 1) ? 'r' :
	                (number === 2) ? 'n' :
	                (number === 3) ? 'r' :
	                (number === 4) ? 't' : 'è';
	            if (period === 'w' || period === 'W') {
	                output = 'a';
	            }
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return ca;

	}));

/***/ },
/* 284 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : czech (cs)
	//! author : petrbela : https://github.com/petrbela

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var months = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_'),
	        monthsShort = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_');
	    function plural(n) {
	        return (n > 1) && (n < 5) && (~~(n / 10) !== 1);
	    }
	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = number + ' ';
	        switch (key) {
	        case 's':  // a few seconds / in a few seconds / a few seconds ago
	            return (withoutSuffix || isFuture) ? 'pár sekund' : 'pár sekundami';
	        case 'm':  // a minute / in a minute / a minute ago
	            return withoutSuffix ? 'minuta' : (isFuture ? 'minutu' : 'minutou');
	        case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'minuty' : 'minut');
	            } else {
	                return result + 'minutami';
	            }
	            break;
	        case 'h':  // an hour / in an hour / an hour ago
	            return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');
	        case 'hh': // 9 hours / in 9 hours / 9 hours ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'hodiny' : 'hodin');
	            } else {
	                return result + 'hodinami';
	            }
	            break;
	        case 'd':  // a day / in a day / a day ago
	            return (withoutSuffix || isFuture) ? 'den' : 'dnem';
	        case 'dd': // 9 days / in 9 days / 9 days ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'dny' : 'dní');
	            } else {
	                return result + 'dny';
	            }
	            break;
	        case 'M':  // a month / in a month / a month ago
	            return (withoutSuffix || isFuture) ? 'měsíc' : 'měsícem';
	        case 'MM': // 9 months / in 9 months / 9 months ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'měsíce' : 'měsíců');
	            } else {
	                return result + 'měsíci';
	            }
	            break;
	        case 'y':  // a year / in a year / a year ago
	            return (withoutSuffix || isFuture) ? 'rok' : 'rokem';
	        case 'yy': // 9 years / in 9 years / 9 years ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'roky' : 'let');
	            } else {
	                return result + 'lety';
	            }
	            break;
	        }
	    }

	    var cs = moment.defineLocale('cs', {
	        months : months,
	        monthsShort : monthsShort,
	        monthsParse : (function (months, monthsShort) {
	            var i, _monthsParse = [];
	            for (i = 0; i < 12; i++) {
	                // use custom parser to solve problem with July (červenec)
	                _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');
	            }
	            return _monthsParse;
	        }(months, monthsShort)),
	        weekdays : 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),
	        weekdaysShort : 'ne_po_út_st_čt_pá_so'.split('_'),
	        weekdaysMin : 'ne_po_út_st_čt_pá_so'.split('_'),
	        longDateFormat : {
	            LT: 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY H:mm',
	            LLLL : 'dddd D. MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay: '[dnes v] LT',
	            nextDay: '[zítra v] LT',
	            nextWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[v neděli v] LT';
	                case 1:
	                case 2:
	                    return '[v] dddd [v] LT';
	                case 3:
	                    return '[ve středu v] LT';
	                case 4:
	                    return '[ve čtvrtek v] LT';
	                case 5:
	                    return '[v pátek v] LT';
	                case 6:
	                    return '[v sobotu v] LT';
	                }
	            },
	            lastDay: '[včera v] LT',
	            lastWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[minulou neděli v] LT';
	                case 1:
	                case 2:
	                    return '[minulé] dddd [v] LT';
	                case 3:
	                    return '[minulou středu v] LT';
	                case 4:
	                case 5:
	                    return '[minulý] dddd [v] LT';
	                case 6:
	                    return '[minulou sobotu v] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past : 'před %s',
	            s : translate,
	            m : translate,
	            mm : translate,
	            h : translate,
	            hh : translate,
	            d : translate,
	            dd : translate,
	            M : translate,
	            MM : translate,
	            y : translate,
	            yy : translate
	        },
	        ordinalParse : /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return cs;

	}));

/***/ },
/* 285 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : chuvash (cv)
	//! author : Anatoly Mironov : https://github.com/mirontoli

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var cv = moment.defineLocale('cv', {
	        months : 'кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав'.split('_'),
	        monthsShort : 'кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш'.split('_'),
	        weekdays : 'вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун'.split('_'),
	        weekdaysShort : 'выр_тун_ытл_юн_кӗҫ_эрн_шӑм'.split('_'),
	        weekdaysMin : 'вр_тн_ыт_юн_кҫ_эр_шм'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD-MM-YYYY',
	            LL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]',
	            LLL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',
	            LLLL : 'dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm'
	        },
	        calendar : {
	            sameDay: '[Паян] LT [сехетре]',
	            nextDay: '[Ыран] LT [сехетре]',
	            lastDay: '[Ӗнер] LT [сехетре]',
	            nextWeek: '[Ҫитес] dddd LT [сехетре]',
	            lastWeek: '[Иртнӗ] dddd LT [сехетре]',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : function (output) {
	                var affix = /сехет$/i.exec(output) ? 'рен' : /ҫул$/i.exec(output) ? 'тан' : 'ран';
	                return output + affix;
	            },
	            past : '%s каялла',
	            s : 'пӗр-ик ҫеккунт',
	            m : 'пӗр минут',
	            mm : '%d минут',
	            h : 'пӗр сехет',
	            hh : '%d сехет',
	            d : 'пӗр кун',
	            dd : '%d кун',
	            M : 'пӗр уйӑх',
	            MM : '%d уйӑх',
	            y : 'пӗр ҫул',
	            yy : '%d ҫул'
	        },
	        ordinalParse: /\d{1,2}-мӗш/,
	        ordinal : '%d-мӗш',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return cv;

	}));

/***/ },
/* 286 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Welsh (cy)
	//! author : Robert Allen

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var cy = moment.defineLocale('cy', {
	        months: 'Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr'.split('_'),
	        monthsShort: 'Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag'.split('_'),
	        weekdays: 'Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn'.split('_'),
	        weekdaysShort: 'Sul_Llun_Maw_Mer_Iau_Gwe_Sad'.split('_'),
	        weekdaysMin: 'Su_Ll_Ma_Me_Ia_Gw_Sa'.split('_'),
	        // time formats are the same as en-gb
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[Heddiw am] LT',
	            nextDay: '[Yfory am] LT',
	            nextWeek: 'dddd [am] LT',
	            lastDay: '[Ddoe am] LT',
	            lastWeek: 'dddd [diwethaf am] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'mewn %s',
	            past: '%s yn ôl',
	            s: 'ychydig eiliadau',
	            m: 'munud',
	            mm: '%d munud',
	            h: 'awr',
	            hh: '%d awr',
	            d: 'diwrnod',
	            dd: '%d diwrnod',
	            M: 'mis',
	            MM: '%d mis',
	            y: 'blwyddyn',
	            yy: '%d flynedd'
	        },
	        ordinalParse: /\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,
	        // traditional ordinal numbers above 31 are not commonly used in colloquial Welsh
	        ordinal: function (number) {
	            var b = number,
	                output = '',
	                lookup = [
	                    '', 'af', 'il', 'ydd', 'ydd', 'ed', 'ed', 'ed', 'fed', 'fed', 'fed', // 1af to 10fed
	                    'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'fed' // 11eg to 20fed
	                ];
	            if (b > 20) {
	                if (b === 40 || b === 50 || b === 60 || b === 80 || b === 100) {
	                    output = 'fed'; // not 30ain, 70ain or 90ain
	                } else {
	                    output = 'ain';
	                }
	            } else if (b > 0) {
	                output = lookup[b];
	            }
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return cy;

	}));

/***/ },
/* 287 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : danish (da)
	//! author : Ulrik Nielsen : https://github.com/mrbase

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var da = moment.defineLocale('da', {
	        months : 'januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
	        weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
	        weekdaysShort : 'søn_man_tir_ons_tor_fre_lør'.split('_'),
	        weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY HH:mm',
	            LLLL : 'dddd [d.] D. MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[I dag kl.] LT',
	            nextDay : '[I morgen kl.] LT',
	            nextWeek : 'dddd [kl.] LT',
	            lastDay : '[I går kl.] LT',
	            lastWeek : '[sidste] dddd [kl] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'om %s',
	            past : '%s siden',
	            s : 'få sekunder',
	            m : 'et minut',
	            mm : '%d minutter',
	            h : 'en time',
	            hh : '%d timer',
	            d : 'en dag',
	            dd : '%d dage',
	            M : 'en måned',
	            MM : '%d måneder',
	            y : 'et år',
	            yy : '%d år'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return da;

	}));

/***/ },
/* 288 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : german (de)
	//! author : lluchs : https://github.com/lluchs
	//! author: Menelion Elensúle: https://github.com/Oire

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            'm': ['eine Minute', 'einer Minute'],
	            'h': ['eine Stunde', 'einer Stunde'],
	            'd': ['ein Tag', 'einem Tag'],
	            'dd': [number + ' Tage', number + ' Tagen'],
	            'M': ['ein Monat', 'einem Monat'],
	            'MM': [number + ' Monate', number + ' Monaten'],
	            'y': ['ein Jahr', 'einem Jahr'],
	            'yy': [number + ' Jahre', number + ' Jahren']
	        };
	        return withoutSuffix ? format[key][0] : format[key][1];
	    }

	    var de = moment.defineLocale('de', {
	        months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
	        monthsShort : 'Jan._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),
	        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
	        weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
	        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
	        longDateFormat : {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY HH:mm',
	            LLLL : 'dddd, D. MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Heute um] LT [Uhr]',
	            sameElse: 'L',
	            nextDay: '[Morgen um] LT [Uhr]',
	            nextWeek: 'dddd [um] LT [Uhr]',
	            lastDay: '[Gestern um] LT [Uhr]',
	            lastWeek: '[letzten] dddd [um] LT [Uhr]'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : 'vor %s',
	            s : 'ein paar Sekunden',
	            m : processRelativeTime,
	            mm : '%d Minuten',
	            h : processRelativeTime,
	            hh : '%d Stunden',
	            d : processRelativeTime,
	            dd : processRelativeTime,
	            M : processRelativeTime,
	            MM : processRelativeTime,
	            y : processRelativeTime,
	            yy : processRelativeTime
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return de;

	}));

/***/ },
/* 289 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : austrian german (de-at)
	//! author : lluchs : https://github.com/lluchs
	//! author: Menelion Elensúle: https://github.com/Oire
	//! author : Martin Groller : https://github.com/MadMG

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            'm': ['eine Minute', 'einer Minute'],
	            'h': ['eine Stunde', 'einer Stunde'],
	            'd': ['ein Tag', 'einem Tag'],
	            'dd': [number + ' Tage', number + ' Tagen'],
	            'M': ['ein Monat', 'einem Monat'],
	            'MM': [number + ' Monate', number + ' Monaten'],
	            'y': ['ein Jahr', 'einem Jahr'],
	            'yy': [number + ' Jahre', number + ' Jahren']
	        };
	        return withoutSuffix ? format[key][0] : format[key][1];
	    }

	    var de_at = moment.defineLocale('de-at', {
	        months : 'Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
	        monthsShort : 'Jän._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),
	        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
	        weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
	        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
	        longDateFormat : {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY HH:mm',
	            LLLL : 'dddd, D. MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Heute um] LT [Uhr]',
	            sameElse: 'L',
	            nextDay: '[Morgen um] LT [Uhr]',
	            nextWeek: 'dddd [um] LT [Uhr]',
	            lastDay: '[Gestern um] LT [Uhr]',
	            lastWeek: '[letzten] dddd [um] LT [Uhr]'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : 'vor %s',
	            s : 'ein paar Sekunden',
	            m : processRelativeTime,
	            mm : '%d Minuten',
	            h : processRelativeTime,
	            hh : '%d Stunden',
	            d : processRelativeTime,
	            dd : processRelativeTime,
	            M : processRelativeTime,
	            MM : processRelativeTime,
	            y : processRelativeTime,
	            yy : processRelativeTime
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return de_at;

	}));

/***/ },
/* 290 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : modern greek (el)
	//! author : Aggelos Karalias : https://github.com/mehiel

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var el = moment.defineLocale('el', {
	        monthsNominativeEl : 'Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος'.split('_'),
	        monthsGenitiveEl : 'Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου'.split('_'),
	        months : function (momentToFormat, format) {
	            if (/D/.test(format.substring(0, format.indexOf('MMMM')))) { // if there is a day number before 'MMMM'
	                return this._monthsGenitiveEl[momentToFormat.month()];
	            } else {
	                return this._monthsNominativeEl[momentToFormat.month()];
	            }
	        },
	        monthsShort : 'Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ'.split('_'),
	        weekdays : 'Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο'.split('_'),
	        weekdaysShort : 'Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ'.split('_'),
	        weekdaysMin : 'Κυ_Δε_Τρ_Τε_Πε_Πα_Σα'.split('_'),
	        meridiem : function (hours, minutes, isLower) {
	            if (hours > 11) {
	                return isLower ? 'μμ' : 'ΜΜ';
	            } else {
	                return isLower ? 'πμ' : 'ΠΜ';
	            }
	        },
	        isPM : function (input) {
	            return ((input + '').toLowerCase()[0] === 'μ');
	        },
	        meridiemParse : /[ΠΜ]\.?Μ?\.?/i,
	        longDateFormat : {
	            LT : 'h:mm A',
	            LTS : 'h:mm:ss A',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY h:mm A',
	            LLLL : 'dddd, D MMMM YYYY h:mm A'
	        },
	        calendarEl : {
	            sameDay : '[Σήμερα {}] LT',
	            nextDay : '[Αύριο {}] LT',
	            nextWeek : 'dddd [{}] LT',
	            lastDay : '[Χθες {}] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                    case 6:
	                        return '[το προηγούμενο] dddd [{}] LT';
	                    default:
	                        return '[την προηγούμενη] dddd [{}] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        calendar : function (key, mom) {
	            var output = this._calendarEl[key],
	                hours = mom && mom.hours();
	            if (typeof output === 'function') {
	                output = output.apply(mom);
	            }
	            return output.replace('{}', (hours % 12 === 1 ? 'στη' : 'στις'));
	        },
	        relativeTime : {
	            future : 'σε %s',
	            past : '%s πριν',
	            s : 'λίγα δευτερόλεπτα',
	            m : 'ένα λεπτό',
	            mm : '%d λεπτά',
	            h : 'μία ώρα',
	            hh : '%d ώρες',
	            d : 'μία μέρα',
	            dd : '%d μέρες',
	            M : 'ένας μήνας',
	            MM : '%d μήνες',
	            y : 'ένας χρόνος',
	            yy : '%d χρόνια'
	        },
	        ordinalParse: /\d{1,2}η/,
	        ordinal: '%dη',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4st is the first week of the year.
	        }
	    });

	    return el;

	}));

/***/ },
/* 291 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : australian english (en-au)

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var en_au = moment.defineLocale('en-au', {
	        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'h:mm A',
	            LTS : 'h:mm:ss A',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY h:mm A',
	            LLLL : 'dddd, D MMMM YYYY h:mm A'
	        },
	        calendar : {
	            sameDay : '[Today at] LT',
	            nextDay : '[Tomorrow at] LT',
	            nextWeek : 'dddd [at] LT',
	            lastDay : '[Yesterday at] LT',
	            lastWeek : '[Last] dddd [at] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : '%s ago',
	            s : 'a few seconds',
	            m : 'a minute',
	            mm : '%d minutes',
	            h : 'an hour',
	            hh : '%d hours',
	            d : 'a day',
	            dd : '%d days',
	            M : 'a month',
	            MM : '%d months',
	            y : 'a year',
	            yy : '%d years'
	        },
	        ordinalParse: /\d{1,2}(st|nd|rd|th)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return en_au;

	}));

/***/ },
/* 292 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : canadian english (en-ca)
	//! author : Jonathan Abourbih : https://github.com/jonbca

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var en_ca = moment.defineLocale('en-ca', {
	        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'h:mm A',
	            LTS : 'h:mm:ss A',
	            L : 'YYYY-MM-DD',
	            LL : 'D MMMM, YYYY',
	            LLL : 'D MMMM, YYYY h:mm A',
	            LLLL : 'dddd, D MMMM, YYYY h:mm A'
	        },
	        calendar : {
	            sameDay : '[Today at] LT',
	            nextDay : '[Tomorrow at] LT',
	            nextWeek : 'dddd [at] LT',
	            lastDay : '[Yesterday at] LT',
	            lastWeek : '[Last] dddd [at] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : '%s ago',
	            s : 'a few seconds',
	            m : 'a minute',
	            mm : '%d minutes',
	            h : 'an hour',
	            hh : '%d hours',
	            d : 'a day',
	            dd : '%d days',
	            M : 'a month',
	            MM : '%d months',
	            y : 'a year',
	            yy : '%d years'
	        },
	        ordinalParse: /\d{1,2}(st|nd|rd|th)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        }
	    });

	    return en_ca;

	}));

/***/ },
/* 293 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : great britain english (en-gb)
	//! author : Chris Gedrim : https://github.com/chrisgedrim

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var en_gb = moment.defineLocale('en-gb', {
	        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Today at] LT',
	            nextDay : '[Tomorrow at] LT',
	            nextWeek : 'dddd [at] LT',
	            lastDay : '[Yesterday at] LT',
	            lastWeek : '[Last] dddd [at] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : '%s ago',
	            s : 'a few seconds',
	            m : 'a minute',
	            mm : '%d minutes',
	            h : 'an hour',
	            hh : '%d hours',
	            d : 'a day',
	            dd : '%d days',
	            M : 'a month',
	            MM : '%d months',
	            y : 'a year',
	            yy : '%d years'
	        },
	        ordinalParse: /\d{1,2}(st|nd|rd|th)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return en_gb;

	}));

/***/ },
/* 294 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : esperanto (eo)
	//! author : Colin Dean : https://github.com/colindean
	//! komento: Mi estas malcerta se mi korekte traktis akuzativojn en tiu traduko.
	//!          Se ne, bonvolu korekti kaj avizi min por ke mi povas lerni!

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var eo = moment.defineLocale('eo', {
	        months : 'januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aŭg_sep_okt_nov_dec'.split('_'),
	        weekdays : 'Dimanĉo_Lundo_Mardo_Merkredo_Ĵaŭdo_Vendredo_Sabato'.split('_'),
	        weekdaysShort : 'Dim_Lun_Mard_Merk_Ĵaŭ_Ven_Sab'.split('_'),
	        weekdaysMin : 'Di_Lu_Ma_Me_Ĵa_Ve_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'YYYY-MM-DD',
	            LL : 'D[-an de] MMMM, YYYY',
	            LLL : 'D[-an de] MMMM, YYYY HH:mm',
	            LLLL : 'dddd, [la] D[-an de] MMMM, YYYY HH:mm'
	        },
	        meridiemParse: /[ap]\.t\.m/i,
	        isPM: function (input) {
	            return input.charAt(0).toLowerCase() === 'p';
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours > 11) {
	                return isLower ? 'p.t.m.' : 'P.T.M.';
	            } else {
	                return isLower ? 'a.t.m.' : 'A.T.M.';
	            }
	        },
	        calendar : {
	            sameDay : '[Hodiaŭ je] LT',
	            nextDay : '[Morgaŭ je] LT',
	            nextWeek : 'dddd [je] LT',
	            lastDay : '[Hieraŭ je] LT',
	            lastWeek : '[pasinta] dddd [je] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'je %s',
	            past : 'antaŭ %s',
	            s : 'sekundoj',
	            m : 'minuto',
	            mm : '%d minutoj',
	            h : 'horo',
	            hh : '%d horoj',
	            d : 'tago',//ne 'diurno', ĉar estas uzita por proksimumo
	            dd : '%d tagoj',
	            M : 'monato',
	            MM : '%d monatoj',
	            y : 'jaro',
	            yy : '%d jaroj'
	        },
	        ordinalParse: /\d{1,2}a/,
	        ordinal : '%da',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return eo;

	}));

/***/ },
/* 295 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : spanish (es)
	//! author : Julio Napurí : https://github.com/julionc

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var monthsShortDot = 'Ene._Feb._Mar._Abr._May._Jun._Jul._Ago._Sep._Oct._Nov._Dic.'.split('_'),
	        monthsShort = 'Ene_Feb_Mar_Abr_May_Jun_Jul_Ago_Sep_Oct_Nov_Dic'.split('_');

	    var es = moment.defineLocale('es', {
	        months : 'Enero_Febrero_Marzo_Abril_Mayo_Junio_Julio_Agosto_Septiembre_Octubre_Noviembre_Diciembre'.split('_'),
	        monthsShort : function (m, format) {
	            if (/-MMM-/.test(format)) {
	                return monthsShort[m.month()];
	            } else {
	                return monthsShortDot[m.month()];
	            }
	        },
	        weekdays : 'Domingo_Lunes_Martes_Miércoles_Jueves_Viernes_Sábado'.split('_'),
	        weekdaysShort : 'Dom._Lun._Mar._Mié._Jue._Vie._Sáb.'.split('_'),
	        weekdaysMin : 'Do_Lu_Ma_Mi_Ju_Vi_Sá'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D [de] MMMM [de] YYYY',
	            LLL : 'D [de] MMMM [de] YYYY H:mm',
	            LLLL : 'dddd, D [de] MMMM [de] YYYY H:mm'
	        },
	        calendar : {
	            sameDay : function () {
	                return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            nextDay : function () {
	                return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            nextWeek : function () {
	                return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            lastDay : function () {
	                return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            lastWeek : function () {
	                return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'en %s',
	            past : 'hace %s',
	            s : 'unos segundos',
	            m : 'un minuto',
	            mm : '%d minutos',
	            h : 'una hora',
	            hh : '%d horas',
	            d : 'un día',
	            dd : '%d días',
	            M : 'un mes',
	            MM : '%d meses',
	            y : 'un año',
	            yy : '%d años'
	        },
	        ordinalParse : /\d{1,2}º/,
	        ordinal : '%dº',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return es;

	}));

/***/ },
/* 296 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : estonian (et)
	//! author : Henry Kehlmann : https://github.com/madhenry
	//! improvements : Illimar Tambek : https://github.com/ragulka

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            's' : ['mõne sekundi', 'mõni sekund', 'paar sekundit'],
	            'm' : ['ühe minuti', 'üks minut'],
	            'mm': [number + ' minuti', number + ' minutit'],
	            'h' : ['ühe tunni', 'tund aega', 'üks tund'],
	            'hh': [number + ' tunni', number + ' tundi'],
	            'd' : ['ühe päeva', 'üks päev'],
	            'M' : ['kuu aja', 'kuu aega', 'üks kuu'],
	            'MM': [number + ' kuu', number + ' kuud'],
	            'y' : ['ühe aasta', 'aasta', 'üks aasta'],
	            'yy': [number + ' aasta', number + ' aastat']
	        };
	        if (withoutSuffix) {
	            return format[key][2] ? format[key][2] : format[key][1];
	        }
	        return isFuture ? format[key][0] : format[key][1];
	    }

	    var et = moment.defineLocale('et', {
	        months        : 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),
	        monthsShort   : 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),
	        weekdays      : 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'),
	        weekdaysShort : 'P_E_T_K_N_R_L'.split('_'),
	        weekdaysMin   : 'P_E_T_K_N_R_L'.split('_'),
	        longDateFormat : {
	            LT   : 'H:mm',
	            LTS : 'H:mm:ss',
	            L    : 'DD.MM.YYYY',
	            LL   : 'D. MMMM YYYY',
	            LLL  : 'D. MMMM YYYY H:mm',
	            LLLL : 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay  : '[Täna,] LT',
	            nextDay  : '[Homme,] LT',
	            nextWeek : '[Järgmine] dddd LT',
	            lastDay  : '[Eile,] LT',
	            lastWeek : '[Eelmine] dddd LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s pärast',
	            past   : '%s tagasi',
	            s      : processRelativeTime,
	            m      : processRelativeTime,
	            mm     : processRelativeTime,
	            h      : processRelativeTime,
	            hh     : processRelativeTime,
	            d      : processRelativeTime,
	            dd     : '%d päeva',
	            M      : processRelativeTime,
	            MM     : processRelativeTime,
	            y      : processRelativeTime,
	            yy     : processRelativeTime
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return et;

	}));

/***/ },
/* 297 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : euskara (eu)
	//! author : Eneko Illarramendi : https://github.com/eillarra

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var eu = moment.defineLocale('eu', {
	        months : 'urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua'.split('_'),
	        monthsShort : 'urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.'.split('_'),
	        weekdays : 'igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata'.split('_'),
	        weekdaysShort : 'ig._al._ar._az._og._ol._lr.'.split('_'),
	        weekdaysMin : 'ig_al_ar_az_og_ol_lr'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'YYYY-MM-DD',
	            LL : 'YYYY[ko] MMMM[ren] D[a]',
	            LLL : 'YYYY[ko] MMMM[ren] D[a] HH:mm',
	            LLLL : 'dddd, YYYY[ko] MMMM[ren] D[a] HH:mm',
	            l : 'YYYY-M-D',
	            ll : 'YYYY[ko] MMM D[a]',
	            lll : 'YYYY[ko] MMM D[a] HH:mm',
	            llll : 'ddd, YYYY[ko] MMM D[a] HH:mm'
	        },
	        calendar : {
	            sameDay : '[gaur] LT[etan]',
	            nextDay : '[bihar] LT[etan]',
	            nextWeek : 'dddd LT[etan]',
	            lastDay : '[atzo] LT[etan]',
	            lastWeek : '[aurreko] dddd LT[etan]',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s barru',
	            past : 'duela %s',
	            s : 'segundo batzuk',
	            m : 'minutu bat',
	            mm : '%d minutu',
	            h : 'ordu bat',
	            hh : '%d ordu',
	            d : 'egun bat',
	            dd : '%d egun',
	            M : 'hilabete bat',
	            MM : '%d hilabete',
	            y : 'urte bat',
	            yy : '%d urte'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return eu;

	}));

/***/ },
/* 298 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Persian (fa)
	//! author : Ebrahim Byagowi : https://github.com/ebraminio

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var symbolMap = {
	        '1': '۱',
	        '2': '۲',
	        '3': '۳',
	        '4': '۴',
	        '5': '۵',
	        '6': '۶',
	        '7': '۷',
	        '8': '۸',
	        '9': '۹',
	        '0': '۰'
	    }, numberMap = {
	        '۱': '1',
	        '۲': '2',
	        '۳': '3',
	        '۴': '4',
	        '۵': '5',
	        '۶': '6',
	        '۷': '7',
	        '۸': '8',
	        '۹': '9',
	        '۰': '0'
	    };

	    var fa = moment.defineLocale('fa', {
	        months : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
	        monthsShort : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
	        weekdays : 'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split('_'),
	        weekdaysShort : 'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split('_'),
	        weekdaysMin : 'ی_د_س_چ_پ_ج_ش'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        meridiemParse: /قبل از ظهر|بعد از ظهر/,
	        isPM: function (input) {
	            return /بعد از ظهر/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'قبل از ظهر';
	            } else {
	                return 'بعد از ظهر';
	            }
	        },
	        calendar : {
	            sameDay : '[امروز ساعت] LT',
	            nextDay : '[فردا ساعت] LT',
	            nextWeek : 'dddd [ساعت] LT',
	            lastDay : '[دیروز ساعت] LT',
	            lastWeek : 'dddd [پیش] [ساعت] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'در %s',
	            past : '%s پیش',
	            s : 'چندین ثانیه',
	            m : 'یک دقیقه',
	            mm : '%d دقیقه',
	            h : 'یک ساعت',
	            hh : '%d ساعت',
	            d : 'یک روز',
	            dd : '%d روز',
	            M : 'یک ماه',
	            MM : '%d ماه',
	            y : 'یک سال',
	            yy : '%d سال'
	        },
	        preparse: function (string) {
	            return string.replace(/[۰-۹]/g, function (match) {
	                return numberMap[match];
	            }).replace(/،/g, ',');
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            }).replace(/,/g, '،');
	        },
	        ordinalParse: /\d{1,2}م/,
	        ordinal : '%dم',
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return fa;

	}));

/***/ },
/* 299 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : finnish (fi)
	//! author : Tarmo Aidantausta : https://github.com/bleadof

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' '),
	        numbersFuture = [
	            'nolla', 'yhden', 'kahden', 'kolmen', 'neljän', 'viiden', 'kuuden',
	            numbersPast[7], numbersPast[8], numbersPast[9]
	        ];
	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = '';
	        switch (key) {
	        case 's':
	            return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';
	        case 'm':
	            return isFuture ? 'minuutin' : 'minuutti';
	        case 'mm':
	            result = isFuture ? 'minuutin' : 'minuuttia';
	            break;
	        case 'h':
	            return isFuture ? 'tunnin' : 'tunti';
	        case 'hh':
	            result = isFuture ? 'tunnin' : 'tuntia';
	            break;
	        case 'd':
	            return isFuture ? 'päivän' : 'päivä';
	        case 'dd':
	            result = isFuture ? 'päivän' : 'päivää';
	            break;
	        case 'M':
	            return isFuture ? 'kuukauden' : 'kuukausi';
	        case 'MM':
	            result = isFuture ? 'kuukauden' : 'kuukautta';
	            break;
	        case 'y':
	            return isFuture ? 'vuoden' : 'vuosi';
	        case 'yy':
	            result = isFuture ? 'vuoden' : 'vuotta';
	            break;
	        }
	        result = verbalNumber(number, isFuture) + ' ' + result;
	        return result;
	    }
	    function verbalNumber(number, isFuture) {
	        return number < 10 ? (isFuture ? numbersFuture[number] : numbersPast[number]) : number;
	    }

	    var fi = moment.defineLocale('fi', {
	        months : 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),
	        monthsShort : 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split('_'),
	        weekdays : 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),
	        weekdaysShort : 'su_ma_ti_ke_to_pe_la'.split('_'),
	        weekdaysMin : 'su_ma_ti_ke_to_pe_la'.split('_'),
	        longDateFormat : {
	            LT : 'HH.mm',
	            LTS : 'HH.mm.ss',
	            L : 'DD.MM.YYYY',
	            LL : 'Do MMMM[ta] YYYY',
	            LLL : 'Do MMMM[ta] YYYY, [klo] HH.mm',
	            LLLL : 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',
	            l : 'D.M.YYYY',
	            ll : 'Do MMM YYYY',
	            lll : 'Do MMM YYYY, [klo] HH.mm',
	            llll : 'ddd, Do MMM YYYY, [klo] HH.mm'
	        },
	        calendar : {
	            sameDay : '[tänään] [klo] LT',
	            nextDay : '[huomenna] [klo] LT',
	            nextWeek : 'dddd [klo] LT',
	            lastDay : '[eilen] [klo] LT',
	            lastWeek : '[viime] dddd[na] [klo] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s päästä',
	            past : '%s sitten',
	            s : translate,
	            m : translate,
	            mm : translate,
	            h : translate,
	            hh : translate,
	            d : translate,
	            dd : translate,
	            M : translate,
	            MM : translate,
	            y : translate,
	            yy : translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return fi;

	}));

/***/ },
/* 300 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : faroese (fo)
	//! author : Ragnar Johannesen : https://github.com/ragnar123

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var fo = moment.defineLocale('fo', {
	        months : 'januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
	        weekdays : 'sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur'.split('_'),
	        weekdaysShort : 'sun_mán_týs_mik_hós_frí_ley'.split('_'),
	        weekdaysMin : 'su_má_tý_mi_hó_fr_le'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D. MMMM, YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Í dag kl.] LT',
	            nextDay : '[Í morgin kl.] LT',
	            nextWeek : 'dddd [kl.] LT',
	            lastDay : '[Í gjár kl.] LT',
	            lastWeek : '[síðstu] dddd [kl] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'um %s',
	            past : '%s síðani',
	            s : 'fá sekund',
	            m : 'ein minutt',
	            mm : '%d minuttir',
	            h : 'ein tími',
	            hh : '%d tímar',
	            d : 'ein dagur',
	            dd : '%d dagar',
	            M : 'ein mánaði',
	            MM : '%d mánaðir',
	            y : 'eitt ár',
	            yy : '%d ár'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return fo;

	}));

/***/ },
/* 301 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : french (fr)
	//! author : John Fischer : https://github.com/jfroffice

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var fr = moment.defineLocale('fr', {
	        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
	        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
	        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
	        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
	        weekdaysMin : 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Aujourd\'hui à] LT',
	            nextDay: '[Demain à] LT',
	            nextWeek: 'dddd [à] LT',
	            lastDay: '[Hier à] LT',
	            lastWeek: 'dddd [dernier à] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'dans %s',
	            past : 'il y a %s',
	            s : 'quelques secondes',
	            m : 'une minute',
	            mm : '%d minutes',
	            h : 'une heure',
	            hh : '%d heures',
	            d : 'un jour',
	            dd : '%d jours',
	            M : 'un mois',
	            MM : '%d mois',
	            y : 'un an',
	            yy : '%d ans'
	        },
	        ordinalParse: /\d{1,2}(er|)/,
	        ordinal : function (number) {
	            return number + (number === 1 ? 'er' : '');
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return fr;

	}));

/***/ },
/* 302 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : canadian french (fr-ca)
	//! author : Jonathan Abourbih : https://github.com/jonbca

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var fr_ca = moment.defineLocale('fr-ca', {
	        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
	        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
	        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
	        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
	        weekdaysMin : 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'YYYY-MM-DD',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Aujourd\'hui à] LT',
	            nextDay: '[Demain à] LT',
	            nextWeek: 'dddd [à] LT',
	            lastDay: '[Hier à] LT',
	            lastWeek: 'dddd [dernier à] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'dans %s',
	            past : 'il y a %s',
	            s : 'quelques secondes',
	            m : 'une minute',
	            mm : '%d minutes',
	            h : 'une heure',
	            hh : '%d heures',
	            d : 'un jour',
	            dd : '%d jours',
	            M : 'un mois',
	            MM : '%d mois',
	            y : 'un an',
	            yy : '%d ans'
	        },
	        ordinalParse: /\d{1,2}(er|e)/,
	        ordinal : function (number) {
	            return number + (number === 1 ? 'er' : 'e');
	        }
	    });

	    return fr_ca;

	}));

/***/ },
/* 303 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : frisian (fy)
	//! author : Robin van der Vliet : https://github.com/robin0van0der0v

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var monthsShortWithDots = 'jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.'.split('_'),
	        monthsShortWithoutDots = 'jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_');

	    var fy = moment.defineLocale('fy', {
	        months : 'jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber'.split('_'),
	        monthsShort : function (m, format) {
	            if (/-MMM-/.test(format)) {
	                return monthsShortWithoutDots[m.month()];
	            } else {
	                return monthsShortWithDots[m.month()];
	            }
	        },
	        weekdays : 'snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon'.split('_'),
	        weekdaysShort : 'si._mo._ti._wo._to._fr._so.'.split('_'),
	        weekdaysMin : 'Si_Mo_Ti_Wo_To_Fr_So'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD-MM-YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[hjoed om] LT',
	            nextDay: '[moarn om] LT',
	            nextWeek: 'dddd [om] LT',
	            lastDay: '[juster om] LT',
	            lastWeek: '[ôfrûne] dddd [om] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'oer %s',
	            past : '%s lyn',
	            s : 'in pear sekonden',
	            m : 'ien minút',
	            mm : '%d minuten',
	            h : 'ien oere',
	            hh : '%d oeren',
	            d : 'ien dei',
	            dd : '%d dagen',
	            M : 'ien moanne',
	            MM : '%d moannen',
	            y : 'ien jier',
	            yy : '%d jierren'
	        },
	        ordinalParse: /\d{1,2}(ste|de)/,
	        ordinal : function (number) {
	            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return fy;

	}));

/***/ },
/* 304 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : galician (gl)
	//! author : Juan G. Hurtado : https://github.com/juanghurtado

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var gl = moment.defineLocale('gl', {
	        months : 'Xaneiro_Febreiro_Marzo_Abril_Maio_Xuño_Xullo_Agosto_Setembro_Outubro_Novembro_Decembro'.split('_'),
	        monthsShort : 'Xan._Feb._Mar._Abr._Mai._Xuñ._Xul._Ago._Set._Out._Nov._Dec.'.split('_'),
	        weekdays : 'Domingo_Luns_Martes_Mércores_Xoves_Venres_Sábado'.split('_'),
	        weekdaysShort : 'Dom._Lun._Mar._Mér._Xov._Ven._Sáb.'.split('_'),
	        weekdaysMin : 'Do_Lu_Ma_Mé_Xo_Ve_Sá'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY H:mm',
	            LLLL : 'dddd D MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay : function () {
	                return '[hoxe ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';
	            },
	            nextDay : function () {
	                return '[mañá ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';
	            },
	            nextWeek : function () {
	                return 'dddd [' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';
	            },
	            lastDay : function () {
	                return '[onte ' + ((this.hours() !== 1) ? 'á' : 'a') + '] LT';
	            },
	            lastWeek : function () {
	                return '[o] dddd [pasado ' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : function (str) {
	                if (str === 'uns segundos') {
	                    return 'nuns segundos';
	                }
	                return 'en ' + str;
	            },
	            past : 'hai %s',
	            s : 'uns segundos',
	            m : 'un minuto',
	            mm : '%d minutos',
	            h : 'unha hora',
	            hh : '%d horas',
	            d : 'un día',
	            dd : '%d días',
	            M : 'un mes',
	            MM : '%d meses',
	            y : 'un ano',
	            yy : '%d anos'
	        },
	        ordinalParse : /\d{1,2}º/,
	        ordinal : '%dº',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return gl;

	}));

/***/ },
/* 305 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Hebrew (he)
	//! author : Tomer Cohen : https://github.com/tomer
	//! author : Moshe Simantov : https://github.com/DevelopmentIL
	//! author : Tal Ater : https://github.com/TalAter

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var he = moment.defineLocale('he', {
	        months : 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split('_'),
	        monthsShort : 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),
	        weekdays : 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),
	        weekdaysShort : 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),
	        weekdaysMin : 'א_ב_ג_ד_ה_ו_ש'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D [ב]MMMM YYYY',
	            LLL : 'D [ב]MMMM YYYY HH:mm',
	            LLLL : 'dddd, D [ב]MMMM YYYY HH:mm',
	            l : 'D/M/YYYY',
	            ll : 'D MMM YYYY',
	            lll : 'D MMM YYYY HH:mm',
	            llll : 'ddd, D MMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[היום ב־]LT',
	            nextDay : '[מחר ב־]LT',
	            nextWeek : 'dddd [בשעה] LT',
	            lastDay : '[אתמול ב־]LT',
	            lastWeek : '[ביום] dddd [האחרון בשעה] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'בעוד %s',
	            past : 'לפני %s',
	            s : 'מספר שניות',
	            m : 'דקה',
	            mm : '%d דקות',
	            h : 'שעה',
	            hh : function (number) {
	                if (number === 2) {
	                    return 'שעתיים';
	                }
	                return number + ' שעות';
	            },
	            d : 'יום',
	            dd : function (number) {
	                if (number === 2) {
	                    return 'יומיים';
	                }
	                return number + ' ימים';
	            },
	            M : 'חודש',
	            MM : function (number) {
	                if (number === 2) {
	                    return 'חודשיים';
	                }
	                return number + ' חודשים';
	            },
	            y : 'שנה',
	            yy : function (number) {
	                if (number === 2) {
	                    return 'שנתיים';
	                } else if (number % 10 === 0 && number !== 10) {
	                    return number + ' שנה';
	                }
	                return number + ' שנים';
	            }
	        }
	    });

	    return he;

	}));

/***/ },
/* 306 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : hindi (hi)
	//! author : Mayank Singhal : https://github.com/mayanksinghal

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var symbolMap = {
	        '1': '१',
	        '2': '२',
	        '3': '३',
	        '4': '४',
	        '5': '५',
	        '6': '६',
	        '7': '७',
	        '8': '८',
	        '9': '९',
	        '0': '०'
	    },
	    numberMap = {
	        '१': '1',
	        '२': '2',
	        '३': '3',
	        '४': '4',
	        '५': '5',
	        '६': '6',
	        '७': '7',
	        '८': '8',
	        '९': '9',
	        '०': '0'
	    };

	    var hi = moment.defineLocale('hi', {
	        months : 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split('_'),
	        monthsShort : 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),
	        weekdays : 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
	        weekdaysShort : 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),
	        weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm बजे',
	            LTS : 'A h:mm:ss बजे',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm बजे',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm बजे'
	        },
	        calendar : {
	            sameDay : '[आज] LT',
	            nextDay : '[कल] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[कल] LT',
	            lastWeek : '[पिछले] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s में',
	            past : '%s पहले',
	            s : 'कुछ ही क्षण',
	            m : 'एक मिनट',
	            mm : '%d मिनट',
	            h : 'एक घंटा',
	            hh : '%d घंटे',
	            d : 'एक दिन',
	            dd : '%d दिन',
	            M : 'एक महीने',
	            MM : '%d महीने',
	            y : 'एक वर्ष',
	            yy : '%d वर्ष'
	        },
	        preparse: function (string) {
	            return string.replace(/[१२३४५६७८९०]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        // Hindi notation for meridiems are quite fuzzy in practice. While there exists
	        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.
	        meridiemParse: /रात|सुबह|दोपहर|शाम/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'रात') {
	                return hour < 4 ? hour : hour + 12;
	            } else if (meridiem === 'सुबह') {
	                return hour;
	            } else if (meridiem === 'दोपहर') {
	                return hour >= 10 ? hour : hour + 12;
	            } else if (meridiem === 'शाम') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'रात';
	            } else if (hour < 10) {
	                return 'सुबह';
	            } else if (hour < 17) {
	                return 'दोपहर';
	            } else if (hour < 20) {
	                return 'शाम';
	            } else {
	                return 'रात';
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return hi;

	}));

/***/ },
/* 307 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : hrvatski (hr)
	//! author : Bojan Marković : https://github.com/bmarkovic

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function translate(number, withoutSuffix, key) {
	        var result = number + ' ';
	        switch (key) {
	        case 'm':
	            return withoutSuffix ? 'jedna minuta' : 'jedne minute';
	        case 'mm':
	            if (number === 1) {
	                result += 'minuta';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'minute';
	            } else {
	                result += 'minuta';
	            }
	            return result;
	        case 'h':
	            return withoutSuffix ? 'jedan sat' : 'jednog sata';
	        case 'hh':
	            if (number === 1) {
	                result += 'sat';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'sata';
	            } else {
	                result += 'sati';
	            }
	            return result;
	        case 'dd':
	            if (number === 1) {
	                result += 'dan';
	            } else {
	                result += 'dana';
	            }
	            return result;
	        case 'MM':
	            if (number === 1) {
	                result += 'mjesec';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'mjeseca';
	            } else {
	                result += 'mjeseci';
	            }
	            return result;
	        case 'yy':
	            if (number === 1) {
	                result += 'godina';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'godine';
	            } else {
	                result += 'godina';
	            }
	            return result;
	        }
	    }

	    var hr = moment.defineLocale('hr', {
	        months : 'siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac'.split('_'),
	        monthsShort : 'sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.'.split('_'),
	        weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
	        weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
	        weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD. MM. YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY H:mm',
	            LLLL : 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay  : '[danas u] LT',
	            nextDay  : '[sutra u] LT',
	            nextWeek : function () {
	                switch (this.day()) {
	                case 0:
	                    return '[u] [nedjelju] [u] LT';
	                case 3:
	                    return '[u] [srijedu] [u] LT';
	                case 6:
	                    return '[u] [subotu] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[u] dddd [u] LT';
	                }
	            },
	            lastDay  : '[jučer u] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                case 0:
	                case 3:
	                    return '[prošlu] dddd [u] LT';
	                case 6:
	                    return '[prošle] [subote] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[prošli] dddd [u] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past   : 'prije %s',
	            s      : 'par sekundi',
	            m      : translate,
	            mm     : translate,
	            h      : translate,
	            hh     : translate,
	            d      : 'dan',
	            dd     : translate,
	            M      : 'mjesec',
	            MM     : translate,
	            y      : 'godinu',
	            yy     : translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return hr;

	}));

/***/ },
/* 308 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : hungarian (hu)
	//! author : Adam Brunner : https://github.com/adambrunner

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');
	    function translate(number, withoutSuffix, key, isFuture) {
	        var num = number,
	            suffix;
	        switch (key) {
	        case 's':
	            return (isFuture || withoutSuffix) ? 'néhány másodperc' : 'néhány másodperce';
	        case 'm':
	            return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');
	        case 'mm':
	            return num + (isFuture || withoutSuffix ? ' perc' : ' perce');
	        case 'h':
	            return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');
	        case 'hh':
	            return num + (isFuture || withoutSuffix ? ' óra' : ' órája');
	        case 'd':
	            return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');
	        case 'dd':
	            return num + (isFuture || withoutSuffix ? ' nap' : ' napja');
	        case 'M':
	            return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
	        case 'MM':
	            return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
	        case 'y':
	            return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');
	        case 'yy':
	            return num + (isFuture || withoutSuffix ? ' év' : ' éve');
	        }
	        return '';
	    }
	    function week(isFuture) {
	        return (isFuture ? '' : '[múlt] ') + '[' + weekEndings[this.day()] + '] LT[-kor]';
	    }

	    var hu = moment.defineLocale('hu', {
	        months : 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split('_'),
	        monthsShort : 'jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec'.split('_'),
	        weekdays : 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),
	        weekdaysShort : 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),
	        weekdaysMin : 'v_h_k_sze_cs_p_szo'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'YYYY.MM.DD.',
	            LL : 'YYYY. MMMM D.',
	            LLL : 'YYYY. MMMM D. H:mm',
	            LLLL : 'YYYY. MMMM D., dddd H:mm'
	        },
	        meridiemParse: /de|du/i,
	        isPM: function (input) {
	            return input.charAt(1).toLowerCase() === 'u';
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 12) {
	                return isLower === true ? 'de' : 'DE';
	            } else {
	                return isLower === true ? 'du' : 'DU';
	            }
	        },
	        calendar : {
	            sameDay : '[ma] LT[-kor]',
	            nextDay : '[holnap] LT[-kor]',
	            nextWeek : function () {
	                return week.call(this, true);
	            },
	            lastDay : '[tegnap] LT[-kor]',
	            lastWeek : function () {
	                return week.call(this, false);
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s múlva',
	            past : '%s',
	            s : translate,
	            m : translate,
	            mm : translate,
	            h : translate,
	            hh : translate,
	            d : translate,
	            dd : translate,
	            M : translate,
	            MM : translate,
	            y : translate,
	            yy : translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return hu;

	}));

/***/ },
/* 309 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Armenian (hy-am)
	//! author : Armendarabyan : https://github.com/armendarabyan

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function monthsCaseReplace(m, format) {
	        var months = {
	            'nominative': 'հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր'.split('_'),
	            'accusative': 'հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի'.split('_')
	        },
	        nounCase = (/D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/).test(format) ?
	            'accusative' :
	            'nominative';
	        return months[nounCase][m.month()];
	    }
	    function monthsShortCaseReplace(m, format) {
	        var monthsShort = 'հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ'.split('_');
	        return monthsShort[m.month()];
	    }
	    function weekdaysCaseReplace(m, format) {
	        var weekdays = 'կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ'.split('_');
	        return weekdays[m.day()];
	    }

	    var hy_am = moment.defineLocale('hy-am', {
	        months : monthsCaseReplace,
	        monthsShort : monthsShortCaseReplace,
	        weekdays : weekdaysCaseReplace,
	        weekdaysShort : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
	        weekdaysMin : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY թ.',
	            LLL : 'D MMMM YYYY թ., HH:mm',
	            LLLL : 'dddd, D MMMM YYYY թ., HH:mm'
	        },
	        calendar : {
	            sameDay: '[այսօր] LT',
	            nextDay: '[վաղը] LT',
	            lastDay: '[երեկ] LT',
	            nextWeek: function () {
	                return 'dddd [օրը ժամը] LT';
	            },
	            lastWeek: function () {
	                return '[անցած] dddd [օրը ժամը] LT';
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : '%s հետո',
	            past : '%s առաջ',
	            s : 'մի քանի վայրկյան',
	            m : 'րոպե',
	            mm : '%d րոպե',
	            h : 'ժամ',
	            hh : '%d ժամ',
	            d : 'օր',
	            dd : '%d օր',
	            M : 'ամիս',
	            MM : '%d ամիս',
	            y : 'տարի',
	            yy : '%d տարի'
	        },
	        meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,
	        isPM: function (input) {
	            return /^(ցերեկվա|երեկոյան)$/.test(input);
	        },
	        meridiem : function (hour) {
	            if (hour < 4) {
	                return 'գիշերվա';
	            } else if (hour < 12) {
	                return 'առավոտվա';
	            } else if (hour < 17) {
	                return 'ցերեկվա';
	            } else {
	                return 'երեկոյան';
	            }
	        },
	        ordinalParse: /\d{1,2}|\d{1,2}-(ին|րդ)/,
	        ordinal: function (number, period) {
	            switch (period) {
	            case 'DDD':
	            case 'w':
	            case 'W':
	            case 'DDDo':
	                if (number === 1) {
	                    return number + '-ին';
	                }
	                return number + '-րդ';
	            default:
	                return number;
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return hy_am;

	}));

/***/ },
/* 310 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Bahasa Indonesia (id)
	//! author : Mohammad Satrio Utomo : https://github.com/tyok
	//! reference: http://id.wikisource.org/wiki/Pedoman_Umum_Ejaan_Bahasa_Indonesia_yang_Disempurnakan

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var id = moment.defineLocale('id', {
	        months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nov_Des'.split('_'),
	        weekdays : 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),
	        weekdaysShort : 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),
	        weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),
	        longDateFormat : {
	            LT : 'HH.mm',
	            LTS : 'HH.mm.ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY [pukul] HH.mm',
	            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
	        },
	        meridiemParse: /pagi|siang|sore|malam/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'pagi') {
	                return hour;
	            } else if (meridiem === 'siang') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === 'sore' || meridiem === 'malam') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 11) {
	                return 'pagi';
	            } else if (hours < 15) {
	                return 'siang';
	            } else if (hours < 19) {
	                return 'sore';
	            } else {
	                return 'malam';
	            }
	        },
	        calendar : {
	            sameDay : '[Hari ini pukul] LT',
	            nextDay : '[Besok pukul] LT',
	            nextWeek : 'dddd [pukul] LT',
	            lastDay : '[Kemarin pukul] LT',
	            lastWeek : 'dddd [lalu pukul] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'dalam %s',
	            past : '%s yang lalu',
	            s : 'beberapa detik',
	            m : 'semenit',
	            mm : '%d menit',
	            h : 'sejam',
	            hh : '%d jam',
	            d : 'sehari',
	            dd : '%d hari',
	            M : 'sebulan',
	            MM : '%d bulan',
	            y : 'setahun',
	            yy : '%d tahun'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return id;

	}));

/***/ },
/* 311 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : icelandic (is)
	//! author : Hinrik Örn Sigurðsson : https://github.com/hinrik

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function plural(n) {
	        if (n % 100 === 11) {
	            return true;
	        } else if (n % 10 === 1) {
	            return false;
	        }
	        return true;
	    }
	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = number + ' ';
	        switch (key) {
	        case 's':
	            return withoutSuffix || isFuture ? 'nokkrar sekúndur' : 'nokkrum sekúndum';
	        case 'm':
	            return withoutSuffix ? 'mínúta' : 'mínútu';
	        case 'mm':
	            if (plural(number)) {
	                return result + (withoutSuffix || isFuture ? 'mínútur' : 'mínútum');
	            } else if (withoutSuffix) {
	                return result + 'mínúta';
	            }
	            return result + 'mínútu';
	        case 'hh':
	            if (plural(number)) {
	                return result + (withoutSuffix || isFuture ? 'klukkustundir' : 'klukkustundum');
	            }
	            return result + 'klukkustund';
	        case 'd':
	            if (withoutSuffix) {
	                return 'dagur';
	            }
	            return isFuture ? 'dag' : 'degi';
	        case 'dd':
	            if (plural(number)) {
	                if (withoutSuffix) {
	                    return result + 'dagar';
	                }
	                return result + (isFuture ? 'daga' : 'dögum');
	            } else if (withoutSuffix) {
	                return result + 'dagur';
	            }
	            return result + (isFuture ? 'dag' : 'degi');
	        case 'M':
	            if (withoutSuffix) {
	                return 'mánuður';
	            }
	            return isFuture ? 'mánuð' : 'mánuði';
	        case 'MM':
	            if (plural(number)) {
	                if (withoutSuffix) {
	                    return result + 'mánuðir';
	                }
	                return result + (isFuture ? 'mánuði' : 'mánuðum');
	            } else if (withoutSuffix) {
	                return result + 'mánuður';
	            }
	            return result + (isFuture ? 'mánuð' : 'mánuði');
	        case 'y':
	            return withoutSuffix || isFuture ? 'ár' : 'ári';
	        case 'yy':
	            if (plural(number)) {
	                return result + (withoutSuffix || isFuture ? 'ár' : 'árum');
	            }
	            return result + (withoutSuffix || isFuture ? 'ár' : 'ári');
	        }
	    }

	    var is = moment.defineLocale('is', {
	        months : 'janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des'.split('_'),
	        weekdays : 'sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur'.split('_'),
	        weekdaysShort : 'sun_mán_þri_mið_fim_fös_lau'.split('_'),
	        weekdaysMin : 'Su_Má_Þr_Mi_Fi_Fö_La'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY [kl.] H:mm',
	            LLLL : 'dddd, D. MMMM YYYY [kl.] H:mm'
	        },
	        calendar : {
	            sameDay : '[í dag kl.] LT',
	            nextDay : '[á morgun kl.] LT',
	            nextWeek : 'dddd [kl.] LT',
	            lastDay : '[í gær kl.] LT',
	            lastWeek : '[síðasta] dddd [kl.] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'eftir %s',
	            past : 'fyrir %s síðan',
	            s : translate,
	            m : translate,
	            mm : translate,
	            h : 'klukkustund',
	            hh : translate,
	            d : translate,
	            dd : translate,
	            M : translate,
	            MM : translate,
	            y : translate,
	            yy : translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return is;

	}));

/***/ },
/* 312 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : italian (it)
	//! author : Lorenzo : https://github.com/aliem
	//! author: Mattia Larentis: https://github.com/nostalgiaz

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var it = moment.defineLocale('it', {
	        months : 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),
	        monthsShort : 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),
	        weekdays : 'Domenica_Lunedì_Martedì_Mercoledì_Giovedì_Venerdì_Sabato'.split('_'),
	        weekdaysShort : 'Dom_Lun_Mar_Mer_Gio_Ven_Sab'.split('_'),
	        weekdaysMin : 'D_L_Ma_Me_G_V_S'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Oggi alle] LT',
	            nextDay: '[Domani alle] LT',
	            nextWeek: 'dddd [alle] LT',
	            lastDay: '[Ieri alle] LT',
	            lastWeek: function () {
	                switch (this.day()) {
	                    case 0:
	                        return '[la scorsa] dddd [alle] LT';
	                    default:
	                        return '[lo scorso] dddd [alle] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : function (s) {
	                return ((/^[0-9].+$/).test(s) ? 'tra' : 'in') + ' ' + s;
	            },
	            past : '%s fa',
	            s : 'alcuni secondi',
	            m : 'un minuto',
	            mm : '%d minuti',
	            h : 'un\'ora',
	            hh : '%d ore',
	            d : 'un giorno',
	            dd : '%d giorni',
	            M : 'un mese',
	            MM : '%d mesi',
	            y : 'un anno',
	            yy : '%d anni'
	        },
	        ordinalParse : /\d{1,2}º/,
	        ordinal: '%dº',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return it;

	}));

/***/ },
/* 313 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : japanese (ja)
	//! author : LI Long : https://github.com/baryon

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var ja = moment.defineLocale('ja', {
	        months : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	        weekdays : '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),
	        weekdaysShort : '日_月_火_水_木_金_土'.split('_'),
	        weekdaysMin : '日_月_火_水_木_金_土'.split('_'),
	        longDateFormat : {
	            LT : 'Ah時m分',
	            LTS : 'Ah時m分s秒',
	            L : 'YYYY/MM/DD',
	            LL : 'YYYY年M月D日',
	            LLL : 'YYYY年M月D日Ah時m分',
	            LLLL : 'YYYY年M月D日Ah時m分 dddd'
	        },
	        meridiemParse: /午前|午後/i,
	        isPM : function (input) {
	            return input === '午後';
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return '午前';
	            } else {
	                return '午後';
	            }
	        },
	        calendar : {
	            sameDay : '[今日] LT',
	            nextDay : '[明日] LT',
	            nextWeek : '[来週]dddd LT',
	            lastDay : '[昨日] LT',
	            lastWeek : '[前週]dddd LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s後',
	            past : '%s前',
	            s : '数秒',
	            m : '1分',
	            mm : '%d分',
	            h : '1時間',
	            hh : '%d時間',
	            d : '1日',
	            dd : '%d日',
	            M : '1ヶ月',
	            MM : '%dヶ月',
	            y : '1年',
	            yy : '%d年'
	        }
	    });

	    return ja;

	}));

/***/ },
/* 314 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Boso Jowo (jv)
	//! author : Rony Lantip : https://github.com/lantip
	//! reference: http://jv.wikipedia.org/wiki/Basa_Jawa

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var jv = moment.defineLocale('jv', {
	        months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des'.split('_'),
	        weekdays : 'Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu'.split('_'),
	        weekdaysShort : 'Min_Sen_Sel_Reb_Kem_Jem_Sep'.split('_'),
	        weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sp'.split('_'),
	        longDateFormat : {
	            LT : 'HH.mm',
	            LTS : 'HH.mm.ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY [pukul] HH.mm',
	            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
	        },
	        meridiemParse: /enjing|siyang|sonten|ndalu/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'enjing') {
	                return hour;
	            } else if (meridiem === 'siyang') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === 'sonten' || meridiem === 'ndalu') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 11) {
	                return 'enjing';
	            } else if (hours < 15) {
	                return 'siyang';
	            } else if (hours < 19) {
	                return 'sonten';
	            } else {
	                return 'ndalu';
	            }
	        },
	        calendar : {
	            sameDay : '[Dinten puniko pukul] LT',
	            nextDay : '[Mbenjang pukul] LT',
	            nextWeek : 'dddd [pukul] LT',
	            lastDay : '[Kala wingi pukul] LT',
	            lastWeek : 'dddd [kepengker pukul] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'wonten ing %s',
	            past : '%s ingkang kepengker',
	            s : 'sawetawis detik',
	            m : 'setunggal menit',
	            mm : '%d menit',
	            h : 'setunggal jam',
	            hh : '%d jam',
	            d : 'sedinten',
	            dd : '%d dinten',
	            M : 'sewulan',
	            MM : '%d wulan',
	            y : 'setaun',
	            yy : '%d taun'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return jv;

	}));

/***/ },
/* 315 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Georgian (ka)
	//! author : Irakli Janiashvili : https://github.com/irakli-janiashvili

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function monthsCaseReplace(m, format) {
	        var months = {
	            'nominative': 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_'),
	            'accusative': 'იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს'.split('_')
	        },
	        nounCase = (/D[oD] *MMMM?/).test(format) ?
	            'accusative' :
	            'nominative';
	        return months[nounCase][m.month()];
	    }
	    function weekdaysCaseReplace(m, format) {
	        var weekdays = {
	            'nominative': 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),
	            'accusative': 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_')
	        },
	        nounCase = (/(წინა|შემდეგ)/).test(format) ?
	            'accusative' :
	            'nominative';
	        return weekdays[nounCase][m.day()];
	    }

	    var ka = moment.defineLocale('ka', {
	        months : monthsCaseReplace,
	        monthsShort : 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),
	        weekdays : weekdaysCaseReplace,
	        weekdaysShort : 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),
	        weekdaysMin : 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),
	        longDateFormat : {
	            LT : 'h:mm A',
	            LTS : 'h:mm:ss A',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY h:mm A',
	            LLLL : 'dddd, D MMMM YYYY h:mm A'
	        },
	        calendar : {
	            sameDay : '[დღეს] LT[-ზე]',
	            nextDay : '[ხვალ] LT[-ზე]',
	            lastDay : '[გუშინ] LT[-ზე]',
	            nextWeek : '[შემდეგ] dddd LT[-ზე]',
	            lastWeek : '[წინა] dddd LT-ზე',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : function (s) {
	                return (/(წამი|წუთი|საათი|წელი)/).test(s) ?
	                    s.replace(/ი$/, 'ში') :
	                    s + 'ში';
	            },
	            past : function (s) {
	                if ((/(წამი|წუთი|საათი|დღე|თვე)/).test(s)) {
	                    return s.replace(/(ი|ე)$/, 'ის წინ');
	                }
	                if ((/წელი/).test(s)) {
	                    return s.replace(/წელი$/, 'წლის წინ');
	                }
	            },
	            s : 'რამდენიმე წამი',
	            m : 'წუთი',
	            mm : '%d წუთი',
	            h : 'საათი',
	            hh : '%d საათი',
	            d : 'დღე',
	            dd : '%d დღე',
	            M : 'თვე',
	            MM : '%d თვე',
	            y : 'წელი',
	            yy : '%d წელი'
	        },
	        ordinalParse: /0|1-ლი|მე-\d{1,2}|\d{1,2}-ე/,
	        ordinal : function (number) {
	            if (number === 0) {
	                return number;
	            }
	            if (number === 1) {
	                return number + '-ლი';
	            }
	            if ((number < 20) || (number <= 100 && (number % 20 === 0)) || (number % 100 === 0)) {
	                return 'მე-' + number;
	            }
	            return number + '-ე';
	        },
	        week : {
	            dow : 1,
	            doy : 7
	        }
	    });

	    return ka;

	}));

/***/ },
/* 316 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : khmer (km)
	//! author : Kruy Vanna : https://github.com/kruyvanna

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var km = moment.defineLocale('km', {
	        months: 'មករា_កុម្ភៈ_មិនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'),
	        monthsShort: 'មករា_កុម្ភៈ_មិនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'),
	        weekdays: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
	        weekdaysShort: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
	        weekdaysMin: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[ថ្ងៃនៈ ម៉ោង] LT',
	            nextDay: '[ស្អែក ម៉ោង] LT',
	            nextWeek: 'dddd [ម៉ោង] LT',
	            lastDay: '[ម្សិលមិញ ម៉ោង] LT',
	            lastWeek: 'dddd [សប្តាហ៍មុន] [ម៉ោង] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%sទៀត',
	            past: '%sមុន',
	            s: 'ប៉ុន្មានវិនាទី',
	            m: 'មួយនាទី',
	            mm: '%d នាទី',
	            h: 'មួយម៉ោង',
	            hh: '%d ម៉ោង',
	            d: 'មួយថ្ងៃ',
	            dd: '%d ថ្ងៃ',
	            M: 'មួយខែ',
	            MM: '%d ខែ',
	            y: 'មួយឆ្នាំ',
	            yy: '%d ឆ្នាំ'
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return km;

	}));

/***/ },
/* 317 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : korean (ko)
	//!
	//! authors
	//!
	//! - Kyungwook, Park : https://github.com/kyungw00k
	//! - Jeeeyul Lee <jeeeyul@gmail.com>

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var ko = moment.defineLocale('ko', {
	        months : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
	        monthsShort : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
	        weekdays : '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),
	        weekdaysShort : '일_월_화_수_목_금_토'.split('_'),
	        weekdaysMin : '일_월_화_수_목_금_토'.split('_'),
	        longDateFormat : {
	            LT : 'A h시 m분',
	            LTS : 'A h시 m분 s초',
	            L : 'YYYY.MM.DD',
	            LL : 'YYYY년 MMMM D일',
	            LLL : 'YYYY년 MMMM D일 A h시 m분',
	            LLLL : 'YYYY년 MMMM D일 dddd A h시 m분'
	        },
	        calendar : {
	            sameDay : '오늘 LT',
	            nextDay : '내일 LT',
	            nextWeek : 'dddd LT',
	            lastDay : '어제 LT',
	            lastWeek : '지난주 dddd LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s 후',
	            past : '%s 전',
	            s : '몇초',
	            ss : '%d초',
	            m : '일분',
	            mm : '%d분',
	            h : '한시간',
	            hh : '%d시간',
	            d : '하루',
	            dd : '%d일',
	            M : '한달',
	            MM : '%d달',
	            y : '일년',
	            yy : '%d년'
	        },
	        ordinalParse : /\d{1,2}일/,
	        ordinal : '%d일',
	        meridiemParse : /오전|오후/,
	        isPM : function (token) {
	            return token === '오후';
	        },
	        meridiem : function (hour, minute, isUpper) {
	            return hour < 12 ? '오전' : '오후';
	        }
	    });

	    return ko;

	}));

/***/ },
/* 318 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Luxembourgish (lb)
	//! author : mweimerskirch : https://github.com/mweimerskirch, David Raison : https://github.com/kwisatz

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            'm': ['eng Minutt', 'enger Minutt'],
	            'h': ['eng Stonn', 'enger Stonn'],
	            'd': ['een Dag', 'engem Dag'],
	            'M': ['ee Mount', 'engem Mount'],
	            'y': ['ee Joer', 'engem Joer']
	        };
	        return withoutSuffix ? format[key][0] : format[key][1];
	    }
	    function processFutureTime(string) {
	        var number = string.substr(0, string.indexOf(' '));
	        if (eifelerRegelAppliesToNumber(number)) {
	            return 'a ' + string;
	        }
	        return 'an ' + string;
	    }
	    function processPastTime(string) {
	        var number = string.substr(0, string.indexOf(' '));
	        if (eifelerRegelAppliesToNumber(number)) {
	            return 'viru ' + string;
	        }
	        return 'virun ' + string;
	    }
	    /**
	     * Returns true if the word before the given number loses the '-n' ending.
	     * e.g. 'an 10 Deeg' but 'a 5 Deeg'
	     *
	     * @param number {integer}
	     * @returns {boolean}
	     */
	    function eifelerRegelAppliesToNumber(number) {
	        number = parseInt(number, 10);
	        if (isNaN(number)) {
	            return false;
	        }
	        if (number < 0) {
	            // Negative Number --> always true
	            return true;
	        } else if (number < 10) {
	            // Only 1 digit
	            if (4 <= number && number <= 7) {
	                return true;
	            }
	            return false;
	        } else if (number < 100) {
	            // 2 digits
	            var lastDigit = number % 10, firstDigit = number / 10;
	            if (lastDigit === 0) {
	                return eifelerRegelAppliesToNumber(firstDigit);
	            }
	            return eifelerRegelAppliesToNumber(lastDigit);
	        } else if (number < 10000) {
	            // 3 or 4 digits --> recursively check first digit
	            while (number >= 10) {
	                number = number / 10;
	            }
	            return eifelerRegelAppliesToNumber(number);
	        } else {
	            // Anything larger than 4 digits: recursively check first n-3 digits
	            number = number / 1000;
	            return eifelerRegelAppliesToNumber(number);
	        }
	    }

	    var lb = moment.defineLocale('lb', {
	        months: 'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
	        monthsShort: 'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),
	        weekdays: 'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split('_'),
	        weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),
	        weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),
	        longDateFormat: {
	            LT: 'H:mm [Auer]',
	            LTS: 'H:mm:ss [Auer]',
	            L: 'DD.MM.YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY H:mm [Auer]',
	            LLLL: 'dddd, D. MMMM YYYY H:mm [Auer]'
	        },
	        calendar: {
	            sameDay: '[Haut um] LT',
	            sameElse: 'L',
	            nextDay: '[Muer um] LT',
	            nextWeek: 'dddd [um] LT',
	            lastDay: '[Gëschter um] LT',
	            lastWeek: function () {
	                // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule
	                switch (this.day()) {
	                    case 2:
	                    case 4:
	                        return '[Leschten] dddd [um] LT';
	                    default:
	                        return '[Leschte] dddd [um] LT';
	                }
	            }
	        },
	        relativeTime : {
	            future : processFutureTime,
	            past : processPastTime,
	            s : 'e puer Sekonnen',
	            m : processRelativeTime,
	            mm : '%d Minutten',
	            h : processRelativeTime,
	            hh : '%d Stonnen',
	            d : processRelativeTime,
	            dd : '%d Deeg',
	            M : processRelativeTime,
	            MM : '%d Méint',
	            y : processRelativeTime,
	            yy : '%d Joer'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return lb;

	}));

/***/ },
/* 319 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Lithuanian (lt)
	//! author : Mindaugas Mozūras : https://github.com/mmozuras

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var units = {
	        'm' : 'minutė_minutės_minutę',
	        'mm': 'minutės_minučių_minutes',
	        'h' : 'valanda_valandos_valandą',
	        'hh': 'valandos_valandų_valandas',
	        'd' : 'diena_dienos_dieną',
	        'dd': 'dienos_dienų_dienas',
	        'M' : 'mėnuo_mėnesio_mėnesį',
	        'MM': 'mėnesiai_mėnesių_mėnesius',
	        'y' : 'metai_metų_metus',
	        'yy': 'metai_metų_metus'
	    },
	    weekDays = 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split('_');
	    function translateSeconds(number, withoutSuffix, key, isFuture) {
	        if (withoutSuffix) {
	            return 'kelios sekundės';
	        } else {
	            return isFuture ? 'kelių sekundžių' : 'kelias sekundes';
	        }
	    }
	    function monthsCaseReplace(m, format) {
	        var months = {
	                'nominative': 'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split('_'),
	                'accusative': 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split('_')
	            },
	            nounCase = (/D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/).test(format) ?
	                'accusative' :
	                'nominative';
	        return months[nounCase][m.month()];
	    }
	    function translateSingular(number, withoutSuffix, key, isFuture) {
	        return withoutSuffix ? forms(key)[0] : (isFuture ? forms(key)[1] : forms(key)[2]);
	    }
	    function special(number) {
	        return number % 10 === 0 || (number > 10 && number < 20);
	    }
	    function forms(key) {
	        return units[key].split('_');
	    }
	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = number + ' ';
	        if (number === 1) {
	            return result + translateSingular(number, withoutSuffix, key[0], isFuture);
	        } else if (withoutSuffix) {
	            return result + (special(number) ? forms(key)[1] : forms(key)[0]);
	        } else {
	            if (isFuture) {
	                return result + forms(key)[1];
	            } else {
	                return result + (special(number) ? forms(key)[1] : forms(key)[2]);
	            }
	        }
	    }
	    function relativeWeekDay(moment, format) {
	        var nominative = format.indexOf('dddd HH:mm') === -1,
	            weekDay = weekDays[moment.day()];
	        return nominative ? weekDay : weekDay.substring(0, weekDay.length - 2) + 'į';
	    }

	    var lt = moment.defineLocale('lt', {
	        months : monthsCaseReplace,
	        monthsShort : 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),
	        weekdays : relativeWeekDay,
	        weekdaysShort : 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),
	        weekdaysMin : 'S_P_A_T_K_Pn_Š'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'YYYY-MM-DD',
	            LL : 'YYYY [m.] MMMM D [d.]',
	            LLL : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
	            LLLL : 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',
	            l : 'YYYY-MM-DD',
	            ll : 'YYYY [m.] MMMM D [d.]',
	            lll : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
	            llll : 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]'
	        },
	        calendar : {
	            sameDay : '[Šiandien] LT',
	            nextDay : '[Rytoj] LT',
	            nextWeek : 'dddd LT',
	            lastDay : '[Vakar] LT',
	            lastWeek : '[Praėjusį] dddd LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'po %s',
	            past : 'prieš %s',
	            s : translateSeconds,
	            m : translateSingular,
	            mm : translate,
	            h : translateSingular,
	            hh : translate,
	            d : translateSingular,
	            dd : translate,
	            M : translateSingular,
	            MM : translate,
	            y : translateSingular,
	            yy : translate
	        },
	        ordinalParse: /\d{1,2}-oji/,
	        ordinal : function (number) {
	            return number + '-oji';
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return lt;

	}));

/***/ },
/* 320 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : latvian (lv)
	//! author : Kristaps Karlsons : https://github.com/skakri
	//! author : Jānis Elmeris : https://github.com/JanisE

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var units = {
	        'm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),
	        'mm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),
	        'h': 'stundas_stundām_stunda_stundas'.split('_'),
	        'hh': 'stundas_stundām_stunda_stundas'.split('_'),
	        'd': 'dienas_dienām_diena_dienas'.split('_'),
	        'dd': 'dienas_dienām_diena_dienas'.split('_'),
	        'M': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
	        'MM': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
	        'y': 'gada_gadiem_gads_gadi'.split('_'),
	        'yy': 'gada_gadiem_gads_gadi'.split('_')
	    };
	    /**
	     * @param withoutSuffix boolean true = a length of time; false = before/after a period of time.
	     */
	    function format(forms, number, withoutSuffix) {
	        if (withoutSuffix) {
	            // E.g. "21 minūte", "3 minūtes".
	            return number % 10 === 1 && number !== 11 ? forms[2] : forms[3];
	        } else {
	            // E.g. "21 minūtes" as in "pēc 21 minūtes".
	            // E.g. "3 minūtēm" as in "pēc 3 minūtēm".
	            return number % 10 === 1 && number !== 11 ? forms[0] : forms[1];
	        }
	    }
	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        return number + ' ' + format(units[key], number, withoutSuffix);
	    }
	    function relativeTimeWithSingular(number, withoutSuffix, key) {
	        return format(units[key], number, withoutSuffix);
	    }
	    function relativeSeconds(number, withoutSuffix) {
	        return withoutSuffix ? 'dažas sekundes' : 'dažām sekundēm';
	    }

	    var lv = moment.defineLocale('lv', {
	        months : 'janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec'.split('_'),
	        weekdays : 'svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena'.split('_'),
	        weekdaysShort : 'Sv_P_O_T_C_Pk_S'.split('_'),
	        weekdaysMin : 'Sv_P_O_T_C_Pk_S'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY.',
	            LL : 'YYYY. [gada] D. MMMM',
	            LLL : 'YYYY. [gada] D. MMMM, HH:mm',
	            LLLL : 'YYYY. [gada] D. MMMM, dddd, HH:mm'
	        },
	        calendar : {
	            sameDay : '[Šodien pulksten] LT',
	            nextDay : '[Rīt pulksten] LT',
	            nextWeek : 'dddd [pulksten] LT',
	            lastDay : '[Vakar pulksten] LT',
	            lastWeek : '[Pagājušā] dddd [pulksten] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'pēc %s',
	            past : 'pirms %s',
	            s : relativeSeconds,
	            m : relativeTimeWithSingular,
	            mm : relativeTimeWithPlural,
	            h : relativeTimeWithSingular,
	            hh : relativeTimeWithPlural,
	            d : relativeTimeWithSingular,
	            dd : relativeTimeWithPlural,
	            M : relativeTimeWithSingular,
	            MM : relativeTimeWithPlural,
	            y : relativeTimeWithSingular,
	            yy : relativeTimeWithPlural
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return lv;

	}));

/***/ },
/* 321 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Montenegrin (me)
	//! author : Miodrag Nikač <miodrag@restartit.me> : https://github.com/miodragnikac

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var translator = {
	        words: { //Different grammatical cases
	            m: ['jedan minut', 'jednog minuta'],
	            mm: ['minut', 'minuta', 'minuta'],
	            h: ['jedan sat', 'jednog sata'],
	            hh: ['sat', 'sata', 'sati'],
	            dd: ['dan', 'dana', 'dana'],
	            MM: ['mjesec', 'mjeseca', 'mjeseci'],
	            yy: ['godina', 'godine', 'godina']
	        },
	        correctGrammaticalCase: function (number, wordKey) {
	            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
	        },
	        translate: function (number, withoutSuffix, key) {
	            var wordKey = translator.words[key];
	            if (key.length === 1) {
	                return withoutSuffix ? wordKey[0] : wordKey[1];
	            } else {
	                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
	            }
	        }
	    };

	    var me = moment.defineLocale('me', {
	        months: ['januar', 'februar', 'mart', 'april', 'maj', 'jun', 'jul', 'avgust', 'septembar', 'oktobar', 'novembar', 'decembar'],
	        monthsShort: ['jan.', 'feb.', 'mar.', 'apr.', 'maj', 'jun', 'jul', 'avg.', 'sep.', 'okt.', 'nov.', 'dec.'],
	        weekdays: ['nedjelja', 'ponedjeljak', 'utorak', 'srijeda', 'četvrtak', 'petak', 'subota'],
	        weekdaysShort: ['ned.', 'pon.', 'uto.', 'sri.', 'čet.', 'pet.', 'sub.'],
	        weekdaysMin: ['ne', 'po', 'ut', 'sr', 'če', 'pe', 'su'],
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS : 'H:mm:ss',
	            L: 'DD. MM. YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY H:mm',
	            LLLL: 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar: {
	            sameDay: '[danas u] LT',
	            nextDay: '[sjutra u] LT',

	            nextWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[u] [nedjelju] [u] LT';
	                case 3:
	                    return '[u] [srijedu] [u] LT';
	                case 6:
	                    return '[u] [subotu] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[u] dddd [u] LT';
	                }
	            },
	            lastDay  : '[juče u] LT',
	            lastWeek : function () {
	                var lastWeekDays = [
	                    '[prošle] [nedjelje] [u] LT',
	                    '[prošlog] [ponedjeljka] [u] LT',
	                    '[prošlog] [utorka] [u] LT',
	                    '[prošle] [srijede] [u] LT',
	                    '[prošlog] [četvrtka] [u] LT',
	                    '[prošlog] [petka] [u] LT',
	                    '[prošle] [subote] [u] LT'
	                ];
	                return lastWeekDays[this.day()];
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past   : 'prije %s',
	            s      : 'nekoliko sekundi',
	            m      : translator.translate,
	            mm     : translator.translate,
	            h      : translator.translate,
	            hh     : translator.translate,
	            d      : 'dan',
	            dd     : translator.translate,
	            M      : 'mjesec',
	            MM     : translator.translate,
	            y      : 'godinu',
	            yy     : translator.translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return me;

	}));

/***/ },
/* 322 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : macedonian (mk)
	//! author : Borislav Mickov : https://github.com/B0k0

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var mk = moment.defineLocale('mk', {
	        months : 'јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември'.split('_'),
	        monthsShort : 'јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек'.split('_'),
	        weekdays : 'недела_понеделник_вторник_среда_четврток_петок_сабота'.split('_'),
	        weekdaysShort : 'нед_пон_вто_сре_чет_пет_саб'.split('_'),
	        weekdaysMin : 'нe_пo_вт_ср_че_пе_сa'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'D.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY H:mm',
	            LLLL : 'dddd, D MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay : '[Денес во] LT',
	            nextDay : '[Утре во] LT',
	            nextWeek : 'dddd [во] LT',
	            lastDay : '[Вчера во] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                case 0:
	                case 3:
	                case 6:
	                    return '[Во изминатата] dddd [во] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[Во изминатиот] dddd [во] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'после %s',
	            past : 'пред %s',
	            s : 'неколку секунди',
	            m : 'минута',
	            mm : '%d минути',
	            h : 'час',
	            hh : '%d часа',
	            d : 'ден',
	            dd : '%d дена',
	            M : 'месец',
	            MM : '%d месеци',
	            y : 'година',
	            yy : '%d години'
	        },
	        ordinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
	        ordinal : function (number) {
	            var lastDigit = number % 10,
	                last2Digits = number % 100;
	            if (number === 0) {
	                return number + '-ев';
	            } else if (last2Digits === 0) {
	                return number + '-ен';
	            } else if (last2Digits > 10 && last2Digits < 20) {
	                return number + '-ти';
	            } else if (lastDigit === 1) {
	                return number + '-ви';
	            } else if (lastDigit === 2) {
	                return number + '-ри';
	            } else if (lastDigit === 7 || lastDigit === 8) {
	                return number + '-ми';
	            } else {
	                return number + '-ти';
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return mk;

	}));

/***/ },
/* 323 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : malayalam (ml)
	//! author : Floyd Pink : https://github.com/floydpink

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var ml = moment.defineLocale('ml', {
	        months : 'ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ'.split('_'),
	        monthsShort : 'ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.'.split('_'),
	        weekdays : 'ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച'.split('_'),
	        weekdaysShort : 'ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി'.split('_'),
	        weekdaysMin : 'ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm -നു',
	            LTS : 'A h:mm:ss -നു',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm -നു',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm -നു'
	        },
	        calendar : {
	            sameDay : '[ഇന്ന്] LT',
	            nextDay : '[നാളെ] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[ഇന്നലെ] LT',
	            lastWeek : '[കഴിഞ്ഞ] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s കഴിഞ്ഞ്',
	            past : '%s മുൻപ്',
	            s : 'അൽപ നിമിഷങ്ങൾ',
	            m : 'ഒരു മിനിറ്റ്',
	            mm : '%d മിനിറ്റ്',
	            h : 'ഒരു മണിക്കൂർ',
	            hh : '%d മണിക്കൂർ',
	            d : 'ഒരു ദിവസം',
	            dd : '%d ദിവസം',
	            M : 'ഒരു മാസം',
	            MM : '%d മാസം',
	            y : 'ഒരു വർഷം',
	            yy : '%d വർഷം'
	        },
	        meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,
	        isPM : function (input) {
	            return /^(ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി)$/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'രാത്രി';
	            } else if (hour < 12) {
	                return 'രാവിലെ';
	            } else if (hour < 17) {
	                return 'ഉച്ച കഴിഞ്ഞ്';
	            } else if (hour < 20) {
	                return 'വൈകുന്നേരം';
	            } else {
	                return 'രാത്രി';
	            }
	        }
	    });

	    return ml;

	}));

/***/ },
/* 324 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Marathi (mr)
	//! author : Harshad Kale : https://github.com/kalehv

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var symbolMap = {
	        '1': '१',
	        '2': '२',
	        '3': '३',
	        '4': '४',
	        '5': '५',
	        '6': '६',
	        '7': '७',
	        '8': '८',
	        '9': '९',
	        '0': '०'
	    },
	    numberMap = {
	        '१': '1',
	        '२': '2',
	        '३': '3',
	        '४': '4',
	        '५': '5',
	        '६': '6',
	        '७': '7',
	        '८': '8',
	        '९': '9',
	        '०': '0'
	    };

	    var mr = moment.defineLocale('mr', {
	        months : 'जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split('_'),
	        monthsShort: 'जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split('_'),
	        weekdays : 'रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
	        weekdaysShort : 'रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि'.split('_'),
	        weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm वाजता',
	            LTS : 'A h:mm:ss वाजता',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm वाजता',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm वाजता'
	        },
	        calendar : {
	            sameDay : '[आज] LT',
	            nextDay : '[उद्या] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[काल] LT',
	            lastWeek: '[मागील] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s नंतर',
	            past : '%s पूर्वी',
	            s : 'सेकंद',
	            m: 'एक मिनिट',
	            mm: '%d मिनिटे',
	            h : 'एक तास',
	            hh : '%d तास',
	            d : 'एक दिवस',
	            dd : '%d दिवस',
	            M : 'एक महिना',
	            MM : '%d महिने',
	            y : 'एक वर्ष',
	            yy : '%d वर्षे'
	        },
	        preparse: function (string) {
	            return string.replace(/[१२३४५६७८९०]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        meridiemParse: /रात्री|सकाळी|दुपारी|सायंकाळी/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'रात्री') {
	                return hour < 4 ? hour : hour + 12;
	            } else if (meridiem === 'सकाळी') {
	                return hour;
	            } else if (meridiem === 'दुपारी') {
	                return hour >= 10 ? hour : hour + 12;
	            } else if (meridiem === 'सायंकाळी') {
	                return hour + 12;
	            }
	        },
	        meridiem: function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'रात्री';
	            } else if (hour < 10) {
	                return 'सकाळी';
	            } else if (hour < 17) {
	                return 'दुपारी';
	            } else if (hour < 20) {
	                return 'सायंकाळी';
	            } else {
	                return 'रात्री';
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return mr;

	}));

/***/ },
/* 325 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Bahasa Malaysia (ms-MY)
	//! author : Weldan Jamili : https://github.com/weldan

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var ms = moment.defineLocale('ms', {
	        months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
	        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
	        weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
	        weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
	        weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
	        longDateFormat : {
	            LT : 'HH.mm',
	            LTS : 'HH.mm.ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY [pukul] HH.mm',
	            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
	        },
	        meridiemParse: /pagi|tengahari|petang|malam/,
	        meridiemHour: function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'pagi') {
	                return hour;
	            } else if (meridiem === 'tengahari') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === 'petang' || meridiem === 'malam') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 11) {
	                return 'pagi';
	            } else if (hours < 15) {
	                return 'tengahari';
	            } else if (hours < 19) {
	                return 'petang';
	            } else {
	                return 'malam';
	            }
	        },
	        calendar : {
	            sameDay : '[Hari ini pukul] LT',
	            nextDay : '[Esok pukul] LT',
	            nextWeek : 'dddd [pukul] LT',
	            lastDay : '[Kelmarin pukul] LT',
	            lastWeek : 'dddd [lepas pukul] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'dalam %s',
	            past : '%s yang lepas',
	            s : 'beberapa saat',
	            m : 'seminit',
	            mm : '%d minit',
	            h : 'sejam',
	            hh : '%d jam',
	            d : 'sehari',
	            dd : '%d hari',
	            M : 'sebulan',
	            MM : '%d bulan',
	            y : 'setahun',
	            yy : '%d tahun'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ms;

	}));

/***/ },
/* 326 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Bahasa Malaysia (ms-MY)
	//! author : Weldan Jamili : https://github.com/weldan

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var ms_my = moment.defineLocale('ms-my', {
	        months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
	        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
	        weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
	        weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
	        weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
	        longDateFormat : {
	            LT : 'HH.mm',
	            LTS : 'HH.mm.ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY [pukul] HH.mm',
	            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
	        },
	        meridiemParse: /pagi|tengahari|petang|malam/,
	        meridiemHour: function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'pagi') {
	                return hour;
	            } else if (meridiem === 'tengahari') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === 'petang' || meridiem === 'malam') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 11) {
	                return 'pagi';
	            } else if (hours < 15) {
	                return 'tengahari';
	            } else if (hours < 19) {
	                return 'petang';
	            } else {
	                return 'malam';
	            }
	        },
	        calendar : {
	            sameDay : '[Hari ini pukul] LT',
	            nextDay : '[Esok pukul] LT',
	            nextWeek : 'dddd [pukul] LT',
	            lastDay : '[Kelmarin pukul] LT',
	            lastWeek : 'dddd [lepas pukul] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'dalam %s',
	            past : '%s yang lepas',
	            s : 'beberapa saat',
	            m : 'seminit',
	            mm : '%d minit',
	            h : 'sejam',
	            hh : '%d jam',
	            d : 'sehari',
	            dd : '%d hari',
	            M : 'sebulan',
	            MM : '%d bulan',
	            y : 'setahun',
	            yy : '%d tahun'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ms_my;

	}));

/***/ },
/* 327 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Burmese (my)
	//! author : Squar team, mysquar.com

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var symbolMap = {
	        '1': '၁',
	        '2': '၂',
	        '3': '၃',
	        '4': '၄',
	        '5': '၅',
	        '6': '၆',
	        '7': '၇',
	        '8': '၈',
	        '9': '၉',
	        '0': '၀'
	    }, numberMap = {
	        '၁': '1',
	        '၂': '2',
	        '၃': '3',
	        '၄': '4',
	        '၅': '5',
	        '၆': '6',
	        '၇': '7',
	        '၈': '8',
	        '၉': '9',
	        '၀': '0'
	    };

	    var my = moment.defineLocale('my', {
	        months: 'ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ'.split('_'),
	        monthsShort: 'ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ'.split('_'),
	        weekdays: 'တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ'.split('_'),
	        weekdaysShort: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),
	        weekdaysMin: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),

	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[ယနေ.] LT [မှာ]',
	            nextDay: '[မနက်ဖြန်] LT [မှာ]',
	            nextWeek: 'dddd LT [မှာ]',
	            lastDay: '[မနေ.က] LT [မှာ]',
	            lastWeek: '[ပြီးခဲ့သော] dddd LT [မှာ]',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'လာမည့် %s မှာ',
	            past: 'လွန်ခဲ့သော %s က',
	            s: 'စက္ကန်.အနည်းငယ်',
	            m: 'တစ်မိနစ်',
	            mm: '%d မိနစ်',
	            h: 'တစ်နာရီ',
	            hh: '%d နာရီ',
	            d: 'တစ်ရက်',
	            dd: '%d ရက်',
	            M: 'တစ်လ',
	            MM: '%d လ',
	            y: 'တစ်နှစ်',
	            yy: '%d နှစ်'
	        },
	        preparse: function (string) {
	            return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return my;

	}));

/***/ },
/* 328 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : norwegian bokmål (nb)
	//! authors : Espen Hovlandsdal : https://github.com/rexxars
	//!           Sigurd Gartmann : https://github.com/sigurdga

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var nb = moment.defineLocale('nb', {
	        months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
	        weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
	        weekdaysShort : 'søn_man_tirs_ons_tors_fre_lør'.split('_'),
	        weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),
	        longDateFormat : {
	            LT : 'H.mm',
	            LTS : 'H.mm.ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY [kl.] H.mm',
	            LLLL : 'dddd D. MMMM YYYY [kl.] H.mm'
	        },
	        calendar : {
	            sameDay: '[i dag kl.] LT',
	            nextDay: '[i morgen kl.] LT',
	            nextWeek: 'dddd [kl.] LT',
	            lastDay: '[i går kl.] LT',
	            lastWeek: '[forrige] dddd [kl.] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'om %s',
	            past : 'for %s siden',
	            s : 'noen sekunder',
	            m : 'ett minutt',
	            mm : '%d minutter',
	            h : 'en time',
	            hh : '%d timer',
	            d : 'en dag',
	            dd : '%d dager',
	            M : 'en måned',
	            MM : '%d måneder',
	            y : 'ett år',
	            yy : '%d år'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return nb;

	}));

/***/ },
/* 329 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : nepali/nepalese
	//! author : suvash : https://github.com/suvash

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var symbolMap = {
	        '1': '१',
	        '2': '२',
	        '3': '३',
	        '4': '४',
	        '5': '५',
	        '6': '६',
	        '7': '७',
	        '8': '८',
	        '9': '९',
	        '0': '०'
	    },
	    numberMap = {
	        '१': '1',
	        '२': '2',
	        '३': '3',
	        '४': '4',
	        '५': '5',
	        '६': '6',
	        '७': '7',
	        '८': '8',
	        '९': '9',
	        '०': '0'
	    };

	    var ne = moment.defineLocale('ne', {
	        months : 'जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर'.split('_'),
	        monthsShort : 'जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.'.split('_'),
	        weekdays : 'आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार'.split('_'),
	        weekdaysShort : 'आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.'.split('_'),
	        weekdaysMin : 'आइ._सो._मङ्_बु._बि._शु._श.'.split('_'),
	        longDateFormat : {
	            LT : 'Aको h:mm बजे',
	            LTS : 'Aको h:mm:ss बजे',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, Aको h:mm बजे',
	            LLLL : 'dddd, D MMMM YYYY, Aको h:mm बजे'
	        },
	        preparse: function (string) {
	            return string.replace(/[१२३४५६७८९०]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        meridiemParse: /राती|बिहान|दिउँसो|बेलुका|साँझ|राती/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'राती') {
	                return hour < 3 ? hour : hour + 12;
	            } else if (meridiem === 'बिहान') {
	                return hour;
	            } else if (meridiem === 'दिउँसो') {
	                return hour >= 10 ? hour : hour + 12;
	            } else if (meridiem === 'बेलुका' || meridiem === 'साँझ') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 3) {
	                return 'राती';
	            } else if (hour < 10) {
	                return 'बिहान';
	            } else if (hour < 15) {
	                return 'दिउँसो';
	            } else if (hour < 18) {
	                return 'बेलुका';
	            } else if (hour < 20) {
	                return 'साँझ';
	            } else {
	                return 'राती';
	            }
	        },
	        calendar : {
	            sameDay : '[आज] LT',
	            nextDay : '[भोली] LT',
	            nextWeek : '[आउँदो] dddd[,] LT',
	            lastDay : '[हिजो] LT',
	            lastWeek : '[गएको] dddd[,] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%sमा',
	            past : '%s अगाडी',
	            s : 'केही समय',
	            m : 'एक मिनेट',
	            mm : '%d मिनेट',
	            h : 'एक घण्टा',
	            hh : '%d घण्टा',
	            d : 'एक दिन',
	            dd : '%d दिन',
	            M : 'एक महिना',
	            MM : '%d महिना',
	            y : 'एक बर्ष',
	            yy : '%d बर्ष'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ne;

	}));

/***/ },
/* 330 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : dutch (nl)
	//! author : Joris Röling : https://github.com/jjupiter

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),
	        monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');

	    var nl = moment.defineLocale('nl', {
	        months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),
	        monthsShort : function (m, format) {
	            if (/-MMM-/.test(format)) {
	                return monthsShortWithoutDots[m.month()];
	            } else {
	                return monthsShortWithDots[m.month()];
	            }
	        },
	        weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),
	        weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),
	        weekdaysMin : 'Zo_Ma_Di_Wo_Do_Vr_Za'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD-MM-YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[vandaag om] LT',
	            nextDay: '[morgen om] LT',
	            nextWeek: 'dddd [om] LT',
	            lastDay: '[gisteren om] LT',
	            lastWeek: '[afgelopen] dddd [om] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'over %s',
	            past : '%s geleden',
	            s : 'een paar seconden',
	            m : 'één minuut',
	            mm : '%d minuten',
	            h : 'één uur',
	            hh : '%d uur',
	            d : 'één dag',
	            dd : '%d dagen',
	            M : 'één maand',
	            MM : '%d maanden',
	            y : 'één jaar',
	            yy : '%d jaar'
	        },
	        ordinalParse: /\d{1,2}(ste|de)/,
	        ordinal : function (number) {
	            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return nl;

	}));

/***/ },
/* 331 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : norwegian nynorsk (nn)
	//! author : https://github.com/mechuwind

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var nn = moment.defineLocale('nn', {
	        months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
	        weekdays : 'sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag'.split('_'),
	        weekdaysShort : 'sun_mån_tys_ons_tor_fre_lau'.split('_'),
	        weekdaysMin : 'su_må_ty_on_to_fr_lø'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[I dag klokka] LT',
	            nextDay: '[I morgon klokka] LT',
	            nextWeek: 'dddd [klokka] LT',
	            lastDay: '[I går klokka] LT',
	            lastWeek: '[Føregåande] dddd [klokka] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'om %s',
	            past : 'for %s sidan',
	            s : 'nokre sekund',
	            m : 'eit minutt',
	            mm : '%d minutt',
	            h : 'ein time',
	            hh : '%d timar',
	            d : 'ein dag',
	            dd : '%d dagar',
	            M : 'ein månad',
	            MM : '%d månader',
	            y : 'eit år',
	            yy : '%d år'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return nn;

	}));

/***/ },
/* 332 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : polish (pl)
	//! author : Rafal Hirsz : https://github.com/evoL

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_'),
	        monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_');
	    function plural(n) {
	        return (n % 10 < 5) && (n % 10 > 1) && ((~~(n / 10) % 10) !== 1);
	    }
	    function translate(number, withoutSuffix, key) {
	        var result = number + ' ';
	        switch (key) {
	        case 'm':
	            return withoutSuffix ? 'minuta' : 'minutę';
	        case 'mm':
	            return result + (plural(number) ? 'minuty' : 'minut');
	        case 'h':
	            return withoutSuffix  ? 'godzina'  : 'godzinę';
	        case 'hh':
	            return result + (plural(number) ? 'godziny' : 'godzin');
	        case 'MM':
	            return result + (plural(number) ? 'miesiące' : 'miesięcy');
	        case 'yy':
	            return result + (plural(number) ? 'lata' : 'lat');
	        }
	    }

	    var pl = moment.defineLocale('pl', {
	        months : function (momentToFormat, format) {
	            if (format === '') {
	                // Hack: if format empty we know this is used to generate
	                // RegExp by moment. Give then back both valid forms of months
	                // in RegExp ready format.
	                return '(' + monthsSubjective[momentToFormat.month()] + '|' + monthsNominative[momentToFormat.month()] + ')';
	            } else if (/D MMMM/.test(format)) {
	                return monthsSubjective[momentToFormat.month()];
	            } else {
	                return monthsNominative[momentToFormat.month()];
	            }
	        },
	        monthsShort : 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),
	        weekdays : 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),
	        weekdaysShort : 'nie_pon_wt_śr_czw_pt_sb'.split('_'),
	        weekdaysMin : 'N_Pn_Wt_Śr_Cz_Pt_So'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Dziś o] LT',
	            nextDay: '[Jutro o] LT',
	            nextWeek: '[W] dddd [o] LT',
	            lastDay: '[Wczoraj o] LT',
	            lastWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[W zeszłą niedzielę o] LT';
	                case 3:
	                    return '[W zeszłą środę o] LT';
	                case 6:
	                    return '[W zeszłą sobotę o] LT';
	                default:
	                    return '[W zeszły] dddd [o] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past : '%s temu',
	            s : 'kilka sekund',
	            m : translate,
	            mm : translate,
	            h : translate,
	            hh : translate,
	            d : '1 dzień',
	            dd : '%d dni',
	            M : 'miesiąc',
	            MM : translate,
	            y : 'rok',
	            yy : translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return pl;

	}));

/***/ },
/* 333 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : portuguese (pt)
	//! author : Jefferson : https://github.com/jalex79

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var pt = moment.defineLocale('pt', {
	        months : 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),
	        monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),
	        weekdays : 'Domingo_Segunda-Feira_Terça-Feira_Quarta-Feira_Quinta-Feira_Sexta-Feira_Sábado'.split('_'),
	        weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
	        weekdaysMin : 'Dom_2ª_3ª_4ª_5ª_6ª_Sáb'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D [de] MMMM [de] YYYY',
	            LLL : 'D [de] MMMM [de] YYYY HH:mm',
	            LLLL : 'dddd, D [de] MMMM [de] YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Hoje às] LT',
	            nextDay: '[Amanhã às] LT',
	            nextWeek: 'dddd [às] LT',
	            lastDay: '[Ontem às] LT',
	            lastWeek: function () {
	                return (this.day() === 0 || this.day() === 6) ?
	                    '[Último] dddd [às] LT' : // Saturday + Sunday
	                    '[Última] dddd [às] LT'; // Monday - Friday
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'em %s',
	            past : 'há %s',
	            s : 'segundos',
	            m : 'um minuto',
	            mm : '%d minutos',
	            h : 'uma hora',
	            hh : '%d horas',
	            d : 'um dia',
	            dd : '%d dias',
	            M : 'um mês',
	            MM : '%d meses',
	            y : 'um ano',
	            yy : '%d anos'
	        },
	        ordinalParse: /\d{1,2}º/,
	        ordinal : '%dº',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return pt;

	}));

/***/ },
/* 334 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : brazilian portuguese (pt-br)
	//! author : Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var pt_br = moment.defineLocale('pt-br', {
	        months : 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),
	        monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),
	        weekdays : 'Domingo_Segunda-Feira_Terça-Feira_Quarta-Feira_Quinta-Feira_Sexta-Feira_Sábado'.split('_'),
	        weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
	        weekdaysMin : 'Dom_2ª_3ª_4ª_5ª_6ª_Sáb'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D [de] MMMM [de] YYYY',
	            LLL : 'D [de] MMMM [de] YYYY [às] HH:mm',
	            LLLL : 'dddd, D [de] MMMM [de] YYYY [às] HH:mm'
	        },
	        calendar : {
	            sameDay: '[Hoje às] LT',
	            nextDay: '[Amanhã às] LT',
	            nextWeek: 'dddd [às] LT',
	            lastDay: '[Ontem às] LT',
	            lastWeek: function () {
	                return (this.day() === 0 || this.day() === 6) ?
	                    '[Último] dddd [às] LT' : // Saturday + Sunday
	                    '[Última] dddd [às] LT'; // Monday - Friday
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'em %s',
	            past : '%s atrás',
	            s : 'poucos segundos',
	            m : 'um minuto',
	            mm : '%d minutos',
	            h : 'uma hora',
	            hh : '%d horas',
	            d : 'um dia',
	            dd : '%d dias',
	            M : 'um mês',
	            MM : '%d meses',
	            y : 'um ano',
	            yy : '%d anos'
	        },
	        ordinalParse: /\d{1,2}º/,
	        ordinal : '%dº'
	    });

	    return pt_br;

	}));

/***/ },
/* 335 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : romanian (ro)
	//! author : Vlad Gurdiga : https://github.com/gurdiga
	//! author : Valentin Agachi : https://github.com/avaly

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        var format = {
	                'mm': 'minute',
	                'hh': 'ore',
	                'dd': 'zile',
	                'MM': 'luni',
	                'yy': 'ani'
	            },
	            separator = ' ';
	        if (number % 100 >= 20 || (number >= 100 && number % 100 === 0)) {
	            separator = ' de ';
	        }
	        return number + separator + format[key];
	    }

	    var ro = moment.defineLocale('ro', {
	        months : 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),
	        monthsShort : 'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),
	        weekdays : 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),
	        weekdaysShort : 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),
	        weekdaysMin : 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY H:mm',
	            LLLL : 'dddd, D MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay: '[azi la] LT',
	            nextDay: '[mâine la] LT',
	            nextWeek: 'dddd [la] LT',
	            lastDay: '[ieri la] LT',
	            lastWeek: '[fosta] dddd [la] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'peste %s',
	            past : '%s în urmă',
	            s : 'câteva secunde',
	            m : 'un minut',
	            mm : relativeTimeWithPlural,
	            h : 'o oră',
	            hh : relativeTimeWithPlural,
	            d : 'o zi',
	            dd : relativeTimeWithPlural,
	            M : 'o lună',
	            MM : relativeTimeWithPlural,
	            y : 'un an',
	            yy : relativeTimeWithPlural
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ro;

	}));

/***/ },
/* 336 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : russian (ru)
	//! author : Viktorminator : https://github.com/Viktorminator
	//! Author : Menelion Elensúle : https://github.com/Oire

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function plural(word, num) {
	        var forms = word.split('_');
	        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
	    }
	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        var format = {
	            'mm': withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',
	            'hh': 'час_часа_часов',
	            'dd': 'день_дня_дней',
	            'MM': 'месяц_месяца_месяцев',
	            'yy': 'год_года_лет'
	        };
	        if (key === 'm') {
	            return withoutSuffix ? 'минута' : 'минуту';
	        }
	        else {
	            return number + ' ' + plural(format[key], +number);
	        }
	    }
	    function monthsCaseReplace(m, format) {
	        var months = {
	            'nominative': 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),
	            'accusative': 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_')
	        },
	        nounCase = (/D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/).test(format) ?
	            'accusative' :
	            'nominative';
	        return months[nounCase][m.month()];
	    }
	    function monthsShortCaseReplace(m, format) {
	        var monthsShort = {
	            'nominative': 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split('_'),
	            'accusative': 'янв_фев_мар_апр_мая_июня_июля_авг_сен_окт_ноя_дек'.split('_')
	        },
	        nounCase = (/D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/).test(format) ?
	            'accusative' :
	            'nominative';
	        return monthsShort[nounCase][m.month()];
	    }
	    function weekdaysCaseReplace(m, format) {
	        var weekdays = {
	            'nominative': 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),
	            'accusative': 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_')
	        },
	        nounCase = (/\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\] ?dddd/).test(format) ?
	            'accusative' :
	            'nominative';
	        return weekdays[nounCase][m.day()];
	    }

	    var ru = moment.defineLocale('ru', {
	        months : monthsCaseReplace,
	        monthsShort : monthsShortCaseReplace,
	        weekdays : weekdaysCaseReplace,
	        weekdaysShort : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
	        weekdaysMin : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
	        monthsParse : [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[й|я]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i],
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY г.',
	            LLL : 'D MMMM YYYY г., HH:mm',
	            LLLL : 'dddd, D MMMM YYYY г., HH:mm'
	        },
	        calendar : {
	            sameDay: '[Сегодня в] LT',
	            nextDay: '[Завтра в] LT',
	            lastDay: '[Вчера в] LT',
	            nextWeek: function () {
	                return this.day() === 2 ? '[Во] dddd [в] LT' : '[В] dddd [в] LT';
	            },
	            lastWeek: function (now) {
	                if (now.week() !== this.week()) {
	                    switch (this.day()) {
	                    case 0:
	                        return '[В прошлое] dddd [в] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                        return '[В прошлый] dddd [в] LT';
	                    case 3:
	                    case 5:
	                    case 6:
	                        return '[В прошлую] dddd [в] LT';
	                    }
	                } else {
	                    if (this.day() === 2) {
	                        return '[Во] dddd [в] LT';
	                    } else {
	                        return '[В] dddd [в] LT';
	                    }
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'через %s',
	            past : '%s назад',
	            s : 'несколько секунд',
	            m : relativeTimeWithPlural,
	            mm : relativeTimeWithPlural,
	            h : 'час',
	            hh : relativeTimeWithPlural,
	            d : 'день',
	            dd : relativeTimeWithPlural,
	            M : 'месяц',
	            MM : relativeTimeWithPlural,
	            y : 'год',
	            yy : relativeTimeWithPlural
	        },
	        meridiemParse: /ночи|утра|дня|вечера/i,
	        isPM : function (input) {
	            return /^(дня|вечера)$/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'ночи';
	            } else if (hour < 12) {
	                return 'утра';
	            } else if (hour < 17) {
	                return 'дня';
	            } else {
	                return 'вечера';
	            }
	        },
	        ordinalParse: /\d{1,2}-(й|го|я)/,
	        ordinal: function (number, period) {
	            switch (period) {
	            case 'M':
	            case 'd':
	            case 'DDD':
	                return number + '-й';
	            case 'D':
	                return number + '-го';
	            case 'w':
	            case 'W':
	                return number + '-я';
	            default:
	                return number;
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ru;

	}));

/***/ },
/* 337 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Sinhalese (si)
	//! author : Sampath Sitinamaluwa : https://github.com/sampathsris

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var si = moment.defineLocale('si', {
	        months : 'ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්'.split('_'),
	        monthsShort : 'ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ'.split('_'),
	        weekdays : 'ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා'.split('_'),
	        weekdaysShort : 'ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන'.split('_'),
	        weekdaysMin : 'ඉ_ස_අ_බ_බ්‍ර_සි_සෙ'.split('_'),
	        longDateFormat : {
	            LT : 'a h:mm',
	            LTS : 'a h:mm:ss',
	            L : 'YYYY/MM/DD',
	            LL : 'YYYY MMMM D',
	            LLL : 'YYYY MMMM D, a h:mm',
	            LLLL : 'YYYY MMMM D [වැනි] dddd, a h:mm:ss'
	        },
	        calendar : {
	            sameDay : '[අද] LT[ට]',
	            nextDay : '[හෙට] LT[ට]',
	            nextWeek : 'dddd LT[ට]',
	            lastDay : '[ඊයේ] LT[ට]',
	            lastWeek : '[පසුගිය] dddd LT[ට]',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%sකින්',
	            past : '%sකට පෙර',
	            s : 'තත්පර කිහිපය',
	            m : 'මිනිත්තුව',
	            mm : 'මිනිත්තු %d',
	            h : 'පැය',
	            hh : 'පැය %d',
	            d : 'දිනය',
	            dd : 'දින %d',
	            M : 'මාසය',
	            MM : 'මාස %d',
	            y : 'වසර',
	            yy : 'වසර %d'
	        },
	        ordinalParse: /\d{1,2} වැනි/,
	        ordinal : function (number) {
	            return number + ' වැනි';
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours > 11) {
	                return isLower ? 'ප.ව.' : 'පස් වරු';
	            } else {
	                return isLower ? 'පෙ.ව.' : 'පෙර වරු';
	            }
	        }
	    });

	    return si;

	}));

/***/ },
/* 338 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : slovak (sk)
	//! author : Martin Minka : https://github.com/k2s
	//! based on work of petrbela : https://github.com/petrbela

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var months = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split('_'),
	        monthsShort = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');
	    function plural(n) {
	        return (n > 1) && (n < 5);
	    }
	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = number + ' ';
	        switch (key) {
	        case 's':  // a few seconds / in a few seconds / a few seconds ago
	            return (withoutSuffix || isFuture) ? 'pár sekúnd' : 'pár sekundami';
	        case 'm':  // a minute / in a minute / a minute ago
	            return withoutSuffix ? 'minúta' : (isFuture ? 'minútu' : 'minútou');
	        case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'minúty' : 'minút');
	            } else {
	                return result + 'minútami';
	            }
	            break;
	        case 'h':  // an hour / in an hour / an hour ago
	            return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');
	        case 'hh': // 9 hours / in 9 hours / 9 hours ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'hodiny' : 'hodín');
	            } else {
	                return result + 'hodinami';
	            }
	            break;
	        case 'd':  // a day / in a day / a day ago
	            return (withoutSuffix || isFuture) ? 'deň' : 'dňom';
	        case 'dd': // 9 days / in 9 days / 9 days ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'dni' : 'dní');
	            } else {
	                return result + 'dňami';
	            }
	            break;
	        case 'M':  // a month / in a month / a month ago
	            return (withoutSuffix || isFuture) ? 'mesiac' : 'mesiacom';
	        case 'MM': // 9 months / in 9 months / 9 months ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'mesiace' : 'mesiacov');
	            } else {
	                return result + 'mesiacmi';
	            }
	            break;
	        case 'y':  // a year / in a year / a year ago
	            return (withoutSuffix || isFuture) ? 'rok' : 'rokom';
	        case 'yy': // 9 years / in 9 years / 9 years ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'roky' : 'rokov');
	            } else {
	                return result + 'rokmi';
	            }
	            break;
	        }
	    }

	    var sk = moment.defineLocale('sk', {
	        months : months,
	        monthsShort : monthsShort,
	        monthsParse : (function (months, monthsShort) {
	            var i, _monthsParse = [];
	            for (i = 0; i < 12; i++) {
	                // use custom parser to solve problem with July (červenec)
	                _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');
	            }
	            return _monthsParse;
	        }(months, monthsShort)),
	        weekdays : 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),
	        weekdaysShort : 'ne_po_ut_st_št_pi_so'.split('_'),
	        weekdaysMin : 'ne_po_ut_st_št_pi_so'.split('_'),
	        longDateFormat : {
	            LT: 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY H:mm',
	            LLLL : 'dddd D. MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay: '[dnes o] LT',
	            nextDay: '[zajtra o] LT',
	            nextWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[v nedeľu o] LT';
	                case 1:
	                case 2:
	                    return '[v] dddd [o] LT';
	                case 3:
	                    return '[v stredu o] LT';
	                case 4:
	                    return '[vo štvrtok o] LT';
	                case 5:
	                    return '[v piatok o] LT';
	                case 6:
	                    return '[v sobotu o] LT';
	                }
	            },
	            lastDay: '[včera o] LT',
	            lastWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[minulú nedeľu o] LT';
	                case 1:
	                case 2:
	                    return '[minulý] dddd [o] LT';
	                case 3:
	                    return '[minulú stredu o] LT';
	                case 4:
	                case 5:
	                    return '[minulý] dddd [o] LT';
	                case 6:
	                    return '[minulú sobotu o] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past : 'pred %s',
	            s : translate,
	            m : translate,
	            mm : translate,
	            h : translate,
	            hh : translate,
	            d : translate,
	            dd : translate,
	            M : translate,
	            MM : translate,
	            y : translate,
	            yy : translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return sk;

	}));

/***/ },
/* 339 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : slovenian (sl)
	//! author : Robert Sedovšek : https://github.com/sedovsek

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var result = number + ' ';
	        switch (key) {
	        case 's':
	            return withoutSuffix || isFuture ? 'nekaj sekund' : 'nekaj sekundami';
	        case 'm':
	            return withoutSuffix ? 'ena minuta' : 'eno minuto';
	        case 'mm':
	            if (number === 1) {
	                result += withoutSuffix ? 'minuta' : 'minuto';
	            } else if (number === 2) {
	                result += withoutSuffix || isFuture ? 'minuti' : 'minutama';
	            } else if (number < 5) {
	                result += withoutSuffix || isFuture ? 'minute' : 'minutami';
	            } else {
	                result += withoutSuffix || isFuture ? 'minut' : 'minutami';
	            }
	            return result;
	        case 'h':
	            return withoutSuffix ? 'ena ura' : 'eno uro';
	        case 'hh':
	            if (number === 1) {
	                result += withoutSuffix ? 'ura' : 'uro';
	            } else if (number === 2) {
	                result += withoutSuffix || isFuture ? 'uri' : 'urama';
	            } else if (number < 5) {
	                result += withoutSuffix || isFuture ? 'ure' : 'urami';
	            } else {
	                result += withoutSuffix || isFuture ? 'ur' : 'urami';
	            }
	            return result;
	        case 'd':
	            return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';
	        case 'dd':
	            if (number === 1) {
	                result += withoutSuffix || isFuture ? 'dan' : 'dnem';
	            } else if (number === 2) {
	                result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';
	            } else {
	                result += withoutSuffix || isFuture ? 'dni' : 'dnevi';
	            }
	            return result;
	        case 'M':
	            return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';
	        case 'MM':
	            if (number === 1) {
	                result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';
	            } else if (number === 2) {
	                result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';
	            } else if (number < 5) {
	                result += withoutSuffix || isFuture ? 'mesece' : 'meseci';
	            } else {
	                result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';
	            }
	            return result;
	        case 'y':
	            return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';
	        case 'yy':
	            if (number === 1) {
	                result += withoutSuffix || isFuture ? 'leto' : 'letom';
	            } else if (number === 2) {
	                result += withoutSuffix || isFuture ? 'leti' : 'letoma';
	            } else if (number < 5) {
	                result += withoutSuffix || isFuture ? 'leta' : 'leti';
	            } else {
	                result += withoutSuffix || isFuture ? 'let' : 'leti';
	            }
	            return result;
	        }
	    }

	    var sl = moment.defineLocale('sl', {
	        months : 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),
	        monthsShort : 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),
	        weekdays : 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),
	        weekdaysShort : 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),
	        weekdaysMin : 'ne_po_to_sr_če_pe_so'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD. MM. YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY H:mm',
	            LLLL : 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay  : '[danes ob] LT',
	            nextDay  : '[jutri ob] LT',

	            nextWeek : function () {
	                switch (this.day()) {
	                case 0:
	                    return '[v] [nedeljo] [ob] LT';
	                case 3:
	                    return '[v] [sredo] [ob] LT';
	                case 6:
	                    return '[v] [soboto] [ob] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[v] dddd [ob] LT';
	                }
	            },
	            lastDay  : '[včeraj ob] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                case 0:
	                    return '[prejšnjo] [nedeljo] [ob] LT';
	                case 3:
	                    return '[prejšnjo] [sredo] [ob] LT';
	                case 6:
	                    return '[prejšnjo] [soboto] [ob] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[prejšnji] dddd [ob] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'čez %s',
	            past   : 'pred %s',
	            s      : processRelativeTime,
	            m      : processRelativeTime,
	            mm     : processRelativeTime,
	            h      : processRelativeTime,
	            hh     : processRelativeTime,
	            d      : processRelativeTime,
	            dd     : processRelativeTime,
	            M      : processRelativeTime,
	            MM     : processRelativeTime,
	            y      : processRelativeTime,
	            yy     : processRelativeTime
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return sl;

	}));

/***/ },
/* 340 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Albanian (sq)
	//! author : Flakërim Ismani : https://github.com/flakerimi
	//! author: Menelion Elensúle: https://github.com/Oire (tests)
	//! author : Oerd Cukalla : https://github.com/oerd (fixes)

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var sq = moment.defineLocale('sq', {
	        months : 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split('_'),
	        monthsShort : 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),
	        weekdays : 'E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split('_'),
	        weekdaysShort : 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),
	        weekdaysMin : 'D_H_Ma_Më_E_P_Sh'.split('_'),
	        meridiemParse: /PD|MD/,
	        isPM: function (input) {
	            return input.charAt(0) === 'M';
	        },
	        meridiem : function (hours, minutes, isLower) {
	            return hours < 12 ? 'PD' : 'MD';
	        },
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Sot në] LT',
	            nextDay : '[Nesër në] LT',
	            nextWeek : 'dddd [në] LT',
	            lastDay : '[Dje në] LT',
	            lastWeek : 'dddd [e kaluar në] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'në %s',
	            past : '%s më parë',
	            s : 'disa sekonda',
	            m : 'një minutë',
	            mm : '%d minuta',
	            h : 'një orë',
	            hh : '%d orë',
	            d : 'një ditë',
	            dd : '%d ditë',
	            M : 'një muaj',
	            MM : '%d muaj',
	            y : 'një vit',
	            yy : '%d vite'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return sq;

	}));

/***/ },
/* 341 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Serbian-latin (sr)
	//! author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var translator = {
	        words: { //Different grammatical cases
	            m: ['jedan minut', 'jedne minute'],
	            mm: ['minut', 'minute', 'minuta'],
	            h: ['jedan sat', 'jednog sata'],
	            hh: ['sat', 'sata', 'sati'],
	            dd: ['dan', 'dana', 'dana'],
	            MM: ['mesec', 'meseca', 'meseci'],
	            yy: ['godina', 'godine', 'godina']
	        },
	        correctGrammaticalCase: function (number, wordKey) {
	            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
	        },
	        translate: function (number, withoutSuffix, key) {
	            var wordKey = translator.words[key];
	            if (key.length === 1) {
	                return withoutSuffix ? wordKey[0] : wordKey[1];
	            } else {
	                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
	            }
	        }
	    };

	    var sr = moment.defineLocale('sr', {
	        months: ['januar', 'februar', 'mart', 'april', 'maj', 'jun', 'jul', 'avgust', 'septembar', 'oktobar', 'novembar', 'decembar'],
	        monthsShort: ['jan.', 'feb.', 'mar.', 'apr.', 'maj', 'jun', 'jul', 'avg.', 'sep.', 'okt.', 'nov.', 'dec.'],
	        weekdays: ['nedelja', 'ponedeljak', 'utorak', 'sreda', 'četvrtak', 'petak', 'subota'],
	        weekdaysShort: ['ned.', 'pon.', 'uto.', 'sre.', 'čet.', 'pet.', 'sub.'],
	        weekdaysMin: ['ne', 'po', 'ut', 'sr', 'če', 'pe', 'su'],
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS : 'H:mm:ss',
	            L: 'DD. MM. YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY H:mm',
	            LLLL: 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar: {
	            sameDay: '[danas u] LT',
	            nextDay: '[sutra u] LT',
	            nextWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[u] [nedelju] [u] LT';
	                case 3:
	                    return '[u] [sredu] [u] LT';
	                case 6:
	                    return '[u] [subotu] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[u] dddd [u] LT';
	                }
	            },
	            lastDay  : '[juče u] LT',
	            lastWeek : function () {
	                var lastWeekDays = [
	                    '[prošle] [nedelje] [u] LT',
	                    '[prošlog] [ponedeljka] [u] LT',
	                    '[prošlog] [utorka] [u] LT',
	                    '[prošle] [srede] [u] LT',
	                    '[prošlog] [četvrtka] [u] LT',
	                    '[prošlog] [petka] [u] LT',
	                    '[prošle] [subote] [u] LT'
	                ];
	                return lastWeekDays[this.day()];
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past   : 'pre %s',
	            s      : 'nekoliko sekundi',
	            m      : translator.translate,
	            mm     : translator.translate,
	            h      : translator.translate,
	            hh     : translator.translate,
	            d      : 'dan',
	            dd     : translator.translate,
	            M      : 'mesec',
	            MM     : translator.translate,
	            y      : 'godinu',
	            yy     : translator.translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return sr;

	}));

/***/ },
/* 342 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Serbian-cyrillic (sr-cyrl)
	//! author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var translator = {
	        words: { //Different grammatical cases
	            m: ['један минут', 'једне минуте'],
	            mm: ['минут', 'минуте', 'минута'],
	            h: ['један сат', 'једног сата'],
	            hh: ['сат', 'сата', 'сати'],
	            dd: ['дан', 'дана', 'дана'],
	            MM: ['месец', 'месеца', 'месеци'],
	            yy: ['година', 'године', 'година']
	        },
	        correctGrammaticalCase: function (number, wordKey) {
	            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
	        },
	        translate: function (number, withoutSuffix, key) {
	            var wordKey = translator.words[key];
	            if (key.length === 1) {
	                return withoutSuffix ? wordKey[0] : wordKey[1];
	            } else {
	                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
	            }
	        }
	    };

	    var sr_cyrl = moment.defineLocale('sr-cyrl', {
	        months: ['јануар', 'фебруар', 'март', 'април', 'мај', 'јун', 'јул', 'август', 'септембар', 'октобар', 'новембар', 'децембар'],
	        monthsShort: ['јан.', 'феб.', 'мар.', 'апр.', 'мај', 'јун', 'јул', 'авг.', 'сеп.', 'окт.', 'нов.', 'дец.'],
	        weekdays: ['недеља', 'понедељак', 'уторак', 'среда', 'четвртак', 'петак', 'субота'],
	        weekdaysShort: ['нед.', 'пон.', 'уто.', 'сре.', 'чет.', 'пет.', 'суб.'],
	        weekdaysMin: ['не', 'по', 'ут', 'ср', 'че', 'пе', 'су'],
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS : 'H:mm:ss',
	            L: 'DD. MM. YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY H:mm',
	            LLLL: 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar: {
	            sameDay: '[данас у] LT',
	            nextDay: '[сутра у] LT',
	            nextWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[у] [недељу] [у] LT';
	                case 3:
	                    return '[у] [среду] [у] LT';
	                case 6:
	                    return '[у] [суботу] [у] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[у] dddd [у] LT';
	                }
	            },
	            lastDay  : '[јуче у] LT',
	            lastWeek : function () {
	                var lastWeekDays = [
	                    '[прошле] [недеље] [у] LT',
	                    '[прошлог] [понедељка] [у] LT',
	                    '[прошлог] [уторка] [у] LT',
	                    '[прошле] [среде] [у] LT',
	                    '[прошлог] [четвртка] [у] LT',
	                    '[прошлог] [петка] [у] LT',
	                    '[прошле] [суботе] [у] LT'
	                ];
	                return lastWeekDays[this.day()];
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'за %s',
	            past   : 'пре %s',
	            s      : 'неколико секунди',
	            m      : translator.translate,
	            mm     : translator.translate,
	            h      : translator.translate,
	            hh     : translator.translate,
	            d      : 'дан',
	            dd     : translator.translate,
	            M      : 'месец',
	            MM     : translator.translate,
	            y      : 'годину',
	            yy     : translator.translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return sr_cyrl;

	}));

/***/ },
/* 343 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : swedish (sv)
	//! author : Jens Alm : https://github.com/ulmus

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var sv = moment.defineLocale('sv', {
	        months : 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
	        weekdays : 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),
	        weekdaysShort : 'sön_mån_tis_ons_tor_fre_lör'.split('_'),
	        weekdaysMin : 'sö_må_ti_on_to_fr_lö'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'YYYY-MM-DD',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Idag] LT',
	            nextDay: '[Imorgon] LT',
	            lastDay: '[Igår] LT',
	            nextWeek: '[På] dddd LT',
	            lastWeek: '[I] dddd[s] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'om %s',
	            past : 'för %s sedan',
	            s : 'några sekunder',
	            m : 'en minut',
	            mm : '%d minuter',
	            h : 'en timme',
	            hh : '%d timmar',
	            d : 'en dag',
	            dd : '%d dagar',
	            M : 'en månad',
	            MM : '%d månader',
	            y : 'ett år',
	            yy : '%d år'
	        },
	        ordinalParse: /\d{1,2}(e|a)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'e' :
	                (b === 1) ? 'a' :
	                (b === 2) ? 'a' :
	                (b === 3) ? 'e' : 'e';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return sv;

	}));

/***/ },
/* 344 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : tamil (ta)
	//! author : Arjunkumar Krishnamoorthy : https://github.com/tk120404

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var ta = moment.defineLocale('ta', {
	        months : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
	        monthsShort : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
	        weekdays : 'ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை'.split('_'),
	        weekdaysShort : 'ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி'.split('_'),
	        weekdaysMin : 'ஞா_தி_செ_பு_வி_வெ_ச'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, HH:mm',
	            LLLL : 'dddd, D MMMM YYYY, HH:mm'
	        },
	        calendar : {
	            sameDay : '[இன்று] LT',
	            nextDay : '[நாளை] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[நேற்று] LT',
	            lastWeek : '[கடந்த வாரம்] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s இல்',
	            past : '%s முன்',
	            s : 'ஒரு சில விநாடிகள்',
	            m : 'ஒரு நிமிடம்',
	            mm : '%d நிமிடங்கள்',
	            h : 'ஒரு மணி நேரம்',
	            hh : '%d மணி நேரம்',
	            d : 'ஒரு நாள்',
	            dd : '%d நாட்கள்',
	            M : 'ஒரு மாதம்',
	            MM : '%d மாதங்கள்',
	            y : 'ஒரு வருடம்',
	            yy : '%d ஆண்டுகள்'
	        },
	        ordinalParse: /\d{1,2}வது/,
	        ordinal : function (number) {
	            return number + 'வது';
	        },
	        // refer http://ta.wikipedia.org/s/1er1
	        meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 2) {
	                return ' யாமம்';
	            } else if (hour < 6) {
	                return ' வைகறை';  // வைகறை
	            } else if (hour < 10) {
	                return ' காலை'; // காலை
	            } else if (hour < 14) {
	                return ' நண்பகல்'; // நண்பகல்
	            } else if (hour < 18) {
	                return ' எற்பாடு'; // எற்பாடு
	            } else if (hour < 22) {
	                return ' மாலை'; // மாலை
	            } else {
	                return ' யாமம்';
	            }
	        },
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'யாமம்') {
	                return hour < 2 ? hour : hour + 12;
	            } else if (meridiem === 'வைகறை' || meridiem === 'காலை') {
	                return hour;
	            } else if (meridiem === 'நண்பகல்') {
	                return hour >= 10 ? hour : hour + 12;
	            } else {
	                return hour + 12;
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ta;

	}));

/***/ },
/* 345 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : thai (th)
	//! author : Kridsada Thanabulpong : https://github.com/sirn

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var th = moment.defineLocale('th', {
	        months : 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),
	        monthsShort : 'มกรา_กุมภา_มีนา_เมษา_พฤษภา_มิถุนา_กรกฎา_สิงหา_กันยา_ตุลา_พฤศจิกา_ธันวา'.split('_'),
	        weekdays : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),
	        weekdaysShort : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split('_'), // yes, three characters difference
	        weekdaysMin : 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),
	        longDateFormat : {
	            LT : 'H นาฬิกา m นาที',
	            LTS : 'H นาฬิกา m นาที s วินาที',
	            L : 'YYYY/MM/DD',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY เวลา H นาฬิกา m นาที',
	            LLLL : 'วันddddที่ D MMMM YYYY เวลา H นาฬิกา m นาที'
	        },
	        meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,
	        isPM: function (input) {
	            return input === 'หลังเที่ยง';
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'ก่อนเที่ยง';
	            } else {
	                return 'หลังเที่ยง';
	            }
	        },
	        calendar : {
	            sameDay : '[วันนี้ เวลา] LT',
	            nextDay : '[พรุ่งนี้ เวลา] LT',
	            nextWeek : 'dddd[หน้า เวลา] LT',
	            lastDay : '[เมื่อวานนี้ เวลา] LT',
	            lastWeek : '[วัน]dddd[ที่แล้ว เวลา] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'อีก %s',
	            past : '%sที่แล้ว',
	            s : 'ไม่กี่วินาที',
	            m : '1 นาที',
	            mm : '%d นาที',
	            h : '1 ชั่วโมง',
	            hh : '%d ชั่วโมง',
	            d : '1 วัน',
	            dd : '%d วัน',
	            M : '1 เดือน',
	            MM : '%d เดือน',
	            y : '1 ปี',
	            yy : '%d ปี'
	        }
	    });

	    return th;

	}));

/***/ },
/* 346 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Tagalog/Filipino (tl-ph)
	//! author : Dan Hagman

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var tl_ph = moment.defineLocale('tl-ph', {
	        months : 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split('_'),
	        monthsShort : 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),
	        weekdays : 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split('_'),
	        weekdaysShort : 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),
	        weekdaysMin : 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'MM/D/YYYY',
	            LL : 'MMMM D, YYYY',
	            LLL : 'MMMM D, YYYY HH:mm',
	            LLLL : 'dddd, MMMM DD, YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Ngayon sa] LT',
	            nextDay: '[Bukas sa] LT',
	            nextWeek: 'dddd [sa] LT',
	            lastDay: '[Kahapon sa] LT',
	            lastWeek: 'dddd [huling linggo] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'sa loob ng %s',
	            past : '%s ang nakalipas',
	            s : 'ilang segundo',
	            m : 'isang minuto',
	            mm : '%d minuto',
	            h : 'isang oras',
	            hh : '%d oras',
	            d : 'isang araw',
	            dd : '%d araw',
	            M : 'isang buwan',
	            MM : '%d buwan',
	            y : 'isang taon',
	            yy : '%d taon'
	        },
	        ordinalParse: /\d{1,2}/,
	        ordinal : function (number) {
	            return number;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return tl_ph;

	}));

/***/ },
/* 347 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : turkish (tr)
	//! authors : Erhan Gundogan : https://github.com/erhangundogan,
	//!           Burak Yiğit Kaya: https://github.com/BYK

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var suffixes = {
	        1: '\'inci',
	        5: '\'inci',
	        8: '\'inci',
	        70: '\'inci',
	        80: '\'inci',
	        2: '\'nci',
	        7: '\'nci',
	        20: '\'nci',
	        50: '\'nci',
	        3: '\'üncü',
	        4: '\'üncü',
	        100: '\'üncü',
	        6: '\'ncı',
	        9: '\'uncu',
	        10: '\'uncu',
	        30: '\'uncu',
	        60: '\'ıncı',
	        90: '\'ıncı'
	    };

	    var tr = moment.defineLocale('tr', {
	        months : 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split('_'),
	        monthsShort : 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),
	        weekdays : 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split('_'),
	        weekdaysShort : 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),
	        weekdaysMin : 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[bugün saat] LT',
	            nextDay : '[yarın saat] LT',
	            nextWeek : '[haftaya] dddd [saat] LT',
	            lastDay : '[dün] LT',
	            lastWeek : '[geçen hafta] dddd [saat] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s sonra',
	            past : '%s önce',
	            s : 'birkaç saniye',
	            m : 'bir dakika',
	            mm : '%d dakika',
	            h : 'bir saat',
	            hh : '%d saat',
	            d : 'bir gün',
	            dd : '%d gün',
	            M : 'bir ay',
	            MM : '%d ay',
	            y : 'bir yıl',
	            yy : '%d yıl'
	        },
	        ordinalParse: /\d{1,2}'(inci|nci|üncü|ncı|uncu|ıncı)/,
	        ordinal : function (number) {
	            if (number === 0) {  // special case for zero
	                return number + '\'ıncı';
	            }
	            var a = number % 10,
	                b = number % 100 - a,
	                c = number >= 100 ? 100 : null;
	            return number + (suffixes[a] || suffixes[b] || suffixes[c]);
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return tr;

	}));

/***/ },
/* 348 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : talossan (tzl)
	//! author : Robin van der Vliet : https://github.com/robin0van0der0v with the help of Iustì Canun

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';



	    var tzl = moment.defineLocale('tzl', {
	        months : 'Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar'.split('_'),
	        monthsShort : 'Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec'.split('_'),
	        weekdays : 'Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi'.split('_'),
	        weekdaysShort : 'Súl_Lún_Mai_Már_Xhú_Vié_Sát'.split('_'),
	        weekdaysMin : 'Sú_Lú_Ma_Má_Xh_Vi_Sá'.split('_'),
	        longDateFormat : {
	            LT : 'HH.mm',
	            LTS : 'LT.ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM [dallas] YYYY',
	            LLL : 'D. MMMM [dallas] YYYY LT',
	            LLLL : 'dddd, [li] D. MMMM [dallas] YYYY LT'
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours > 11) {
	                return isLower ? 'd\'o' : 'D\'O';
	            } else {
	                return isLower ? 'd\'a' : 'D\'A';
	            }
	        },
	        calendar : {
	            sameDay : '[oxhi à] LT',
	            nextDay : '[demà à] LT',
	            nextWeek : 'dddd [à] LT',
	            lastDay : '[ieiri à] LT',
	            lastWeek : '[sür el] dddd [lasteu à] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'osprei %s',
	            past : 'ja%s',
	            s : processRelativeTime,
	            m : processRelativeTime,
	            mm : processRelativeTime,
	            h : processRelativeTime,
	            hh : processRelativeTime,
	            d : processRelativeTime,
	            dd : processRelativeTime,
	            M : processRelativeTime,
	            MM : processRelativeTime,
	            y : processRelativeTime,
	            yy : processRelativeTime
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            's': ['viensas secunds', '\'iensas secunds'],
	            'm': ['\'n míut', '\'iens míut'],
	            'mm': [number + ' míuts', ' ' + number + ' míuts'],
	            'h': ['\'n þora', '\'iensa þora'],
	            'hh': [number + ' þoras', ' ' + number + ' þoras'],
	            'd': ['\'n ziua', '\'iensa ziua'],
	            'dd': [number + ' ziuas', ' ' + number + ' ziuas'],
	            'M': ['\'n mes', '\'iens mes'],
	            'MM': [number + ' mesen', ' ' + number + ' mesen'],
	            'y': ['\'n ar', '\'iens ar'],
	            'yy': [number + ' ars', ' ' + number + ' ars']
	        };
	        return isFuture ? format[key][0] : (withoutSuffix ? format[key][0] : format[key][1].trim());
	    }

	    return tzl;

	}));

/***/ },
/* 349 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Morocco Central Atlas Tamaziɣt (tzm)
	//! author : Abdel Said : https://github.com/abdelsaid

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var tzm = moment.defineLocale('tzm', {
	        months : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
	        monthsShort : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
	        weekdays : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
	        weekdaysShort : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
	        weekdaysMin : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[ⴰⵙⴷⵅ ⴴ] LT',
	            nextDay: '[ⴰⵙⴽⴰ ⴴ] LT',
	            nextWeek: 'dddd [ⴴ] LT',
	            lastDay: '[ⴰⵚⴰⵏⵜ ⴴ] LT',
	            lastWeek: 'dddd [ⴴ] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s',
	            past : 'ⵢⴰⵏ %s',
	            s : 'ⵉⵎⵉⴽ',
	            m : 'ⵎⵉⵏⵓⴺ',
	            mm : '%d ⵎⵉⵏⵓⴺ',
	            h : 'ⵙⴰⵄⴰ',
	            hh : '%d ⵜⴰⵙⵙⴰⵄⵉⵏ',
	            d : 'ⴰⵙⵙ',
	            dd : '%d oⵙⵙⴰⵏ',
	            M : 'ⴰⵢoⵓⵔ',
	            MM : '%d ⵉⵢⵢⵉⵔⵏ',
	            y : 'ⴰⵙⴳⴰⵙ',
	            yy : '%d ⵉⵙⴳⴰⵙⵏ'
	        },
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return tzm;

	}));

/***/ },
/* 350 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Morocco Central Atlas Tamaziɣt in Latin (tzm-latn)
	//! author : Abdel Said : https://github.com/abdelsaid

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var tzm_latn = moment.defineLocale('tzm-latn', {
	        months : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
	        monthsShort : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
	        weekdays : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
	        weekdaysShort : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
	        weekdaysMin : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[asdkh g] LT',
	            nextDay: '[aska g] LT',
	            nextWeek: 'dddd [g] LT',
	            lastDay: '[assant g] LT',
	            lastWeek: 'dddd [g] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'dadkh s yan %s',
	            past : 'yan %s',
	            s : 'imik',
	            m : 'minuḍ',
	            mm : '%d minuḍ',
	            h : 'saɛa',
	            hh : '%d tassaɛin',
	            d : 'ass',
	            dd : '%d ossan',
	            M : 'ayowr',
	            MM : '%d iyyirn',
	            y : 'asgas',
	            yy : '%d isgasn'
	        },
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return tzm_latn;

	}));

/***/ },
/* 351 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : ukrainian (uk)
	//! author : zemlanin : https://github.com/zemlanin
	//! Author : Menelion Elensúle : https://github.com/Oire

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function plural(word, num) {
	        var forms = word.split('_');
	        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
	    }
	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        var format = {
	            'mm': 'хвилина_хвилини_хвилин',
	            'hh': 'година_години_годин',
	            'dd': 'день_дні_днів',
	            'MM': 'місяць_місяці_місяців',
	            'yy': 'рік_роки_років'
	        };
	        if (key === 'm') {
	            return withoutSuffix ? 'хвилина' : 'хвилину';
	        }
	        else if (key === 'h') {
	            return withoutSuffix ? 'година' : 'годину';
	        }
	        else {
	            return number + ' ' + plural(format[key], +number);
	        }
	    }
	    function monthsCaseReplace(m, format) {
	        var months = {
	            'nominative': 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_'),
	            'accusative': 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_')
	        },
	        nounCase = (/D[oD]? *MMMM?/).test(format) ?
	            'accusative' :
	            'nominative';
	        return months[nounCase][m.month()];
	    }
	    function weekdaysCaseReplace(m, format) {
	        var weekdays = {
	            'nominative': 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),
	            'accusative': 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),
	            'genitive': 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')
	        },
	        nounCase = (/(\[[ВвУу]\]) ?dddd/).test(format) ?
	            'accusative' :
	            ((/\[?(?:минулої|наступної)? ?\] ?dddd/).test(format) ?
	                'genitive' :
	                'nominative');
	        return weekdays[nounCase][m.day()];
	    }
	    function processHoursFunction(str) {
	        return function () {
	            return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';
	        };
	    }

	    var uk = moment.defineLocale('uk', {
	        months : monthsCaseReplace,
	        monthsShort : 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),
	        weekdays : weekdaysCaseReplace,
	        weekdaysShort : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
	        weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY р.',
	            LLL : 'D MMMM YYYY р., HH:mm',
	            LLLL : 'dddd, D MMMM YYYY р., HH:mm'
	        },
	        calendar : {
	            sameDay: processHoursFunction('[Сьогодні '),
	            nextDay: processHoursFunction('[Завтра '),
	            lastDay: processHoursFunction('[Вчора '),
	            nextWeek: processHoursFunction('[У] dddd ['),
	            lastWeek: function () {
	                switch (this.day()) {
	                case 0:
	                case 3:
	                case 5:
	                case 6:
	                    return processHoursFunction('[Минулої] dddd [').call(this);
	                case 1:
	                case 2:
	                case 4:
	                    return processHoursFunction('[Минулого] dddd [').call(this);
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'за %s',
	            past : '%s тому',
	            s : 'декілька секунд',
	            m : relativeTimeWithPlural,
	            mm : relativeTimeWithPlural,
	            h : 'годину',
	            hh : relativeTimeWithPlural,
	            d : 'день',
	            dd : relativeTimeWithPlural,
	            M : 'місяць',
	            MM : relativeTimeWithPlural,
	            y : 'рік',
	            yy : relativeTimeWithPlural
	        },
	        // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason
	        meridiemParse: /ночі|ранку|дня|вечора/,
	        isPM: function (input) {
	            return /^(дня|вечора)$/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'ночі';
	            } else if (hour < 12) {
	                return 'ранку';
	            } else if (hour < 17) {
	                return 'дня';
	            } else {
	                return 'вечора';
	            }
	        },
	        ordinalParse: /\d{1,2}-(й|го)/,
	        ordinal: function (number, period) {
	            switch (period) {
	            case 'M':
	            case 'd':
	            case 'DDD':
	            case 'w':
	            case 'W':
	                return number + '-й';
	            case 'D':
	                return number + '-го';
	            default:
	                return number;
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return uk;

	}));

/***/ },
/* 352 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : uzbek (uz)
	//! author : Sardor Muminov : https://github.com/muminoff

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var uz = moment.defineLocale('uz', {
	        months : 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),
	        monthsShort : 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),
	        weekdays : 'Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба'.split('_'),
	        weekdaysShort : 'Якш_Душ_Сеш_Чор_Пай_Жум_Шан'.split('_'),
	        weekdaysMin : 'Як_Ду_Се_Чо_Па_Жу_Ша'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'D MMMM YYYY, dddd HH:mm'
	        },
	        calendar : {
	            sameDay : '[Бугун соат] LT [да]',
	            nextDay : '[Эртага] LT [да]',
	            nextWeek : 'dddd [куни соат] LT [да]',
	            lastDay : '[Кеча соат] LT [да]',
	            lastWeek : '[Утган] dddd [куни соат] LT [да]',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'Якин %s ичида',
	            past : 'Бир неча %s олдин',
	            s : 'фурсат',
	            m : 'бир дакика',
	            mm : '%d дакика',
	            h : 'бир соат',
	            hh : '%d соат',
	            d : 'бир кун',
	            dd : '%d кун',
	            M : 'бир ой',
	            MM : '%d ой',
	            y : 'бир йил',
	            yy : '%d йил'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return uz;

	}));

/***/ },
/* 353 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : vietnamese (vi)
	//! author : Bang Nguyen : https://github.com/bangnk

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var vi = moment.defineLocale('vi', {
	        months : 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split('_'),
	        monthsShort : 'Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12'.split('_'),
	        weekdays : 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split('_'),
	        weekdaysShort : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
	        weekdaysMin : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM [năm] YYYY',
	            LLL : 'D MMMM [năm] YYYY HH:mm',
	            LLLL : 'dddd, D MMMM [năm] YYYY HH:mm',
	            l : 'DD/M/YYYY',
	            ll : 'D MMM YYYY',
	            lll : 'D MMM YYYY HH:mm',
	            llll : 'ddd, D MMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Hôm nay lúc] LT',
	            nextDay: '[Ngày mai lúc] LT',
	            nextWeek: 'dddd [tuần tới lúc] LT',
	            lastDay: '[Hôm qua lúc] LT',
	            lastWeek: 'dddd [tuần rồi lúc] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : '%s tới',
	            past : '%s trước',
	            s : 'vài giây',
	            m : 'một phút',
	            mm : '%d phút',
	            h : 'một giờ',
	            hh : '%d giờ',
	            d : 'một ngày',
	            dd : '%d ngày',
	            M : 'một tháng',
	            MM : '%d tháng',
	            y : 'một năm',
	            yy : '%d năm'
	        },
	        ordinalParse: /\d{1,2}/,
	        ordinal : function (number) {
	            return number;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return vi;

	}));

/***/ },
/* 354 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : chinese (zh-cn)
	//! author : suupic : https://github.com/suupic
	//! author : Zeno Zeng : https://github.com/zenozeng

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var zh_cn = moment.defineLocale('zh-cn', {
	        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
	        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
	        weekdaysShort : '周日_周一_周二_周三_周四_周五_周六'.split('_'),
	        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
	        longDateFormat : {
	            LT : 'Ah点mm分',
	            LTS : 'Ah点m分s秒',
	            L : 'YYYY-MM-DD',
	            LL : 'YYYY年MMMD日',
	            LLL : 'YYYY年MMMD日Ah点mm分',
	            LLLL : 'YYYY年MMMD日ddddAh点mm分',
	            l : 'YYYY-MM-DD',
	            ll : 'YYYY年MMMD日',
	            lll : 'YYYY年MMMD日Ah点mm分',
	            llll : 'YYYY年MMMD日ddddAh点mm分'
	        },
	        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
	        meridiemHour: function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === '凌晨' || meridiem === '早上' ||
	                    meridiem === '上午') {
	                return hour;
	            } else if (meridiem === '下午' || meridiem === '晚上') {
	                return hour + 12;
	            } else {
	                // '中午'
	                return hour >= 11 ? hour : hour + 12;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            var hm = hour * 100 + minute;
	            if (hm < 600) {
	                return '凌晨';
	            } else if (hm < 900) {
	                return '早上';
	            } else if (hm < 1130) {
	                return '上午';
	            } else if (hm < 1230) {
	                return '中午';
	            } else if (hm < 1800) {
	                return '下午';
	            } else {
	                return '晚上';
	            }
	        },
	        calendar : {
	            sameDay : function () {
	                return this.minutes() === 0 ? '[今天]Ah[点整]' : '[今天]LT';
	            },
	            nextDay : function () {
	                return this.minutes() === 0 ? '[明天]Ah[点整]' : '[明天]LT';
	            },
	            lastDay : function () {
	                return this.minutes() === 0 ? '[昨天]Ah[点整]' : '[昨天]LT';
	            },
	            nextWeek : function () {
	                var startOfWeek, prefix;
	                startOfWeek = moment().startOf('week');
	                prefix = this.unix() - startOfWeek.unix() >= 7 * 24 * 3600 ? '[下]' : '[本]';
	                return this.minutes() === 0 ? prefix + 'dddAh点整' : prefix + 'dddAh点mm';
	            },
	            lastWeek : function () {
	                var startOfWeek, prefix;
	                startOfWeek = moment().startOf('week');
	                prefix = this.unix() < startOfWeek.unix()  ? '[上]' : '[本]';
	                return this.minutes() === 0 ? prefix + 'dddAh点整' : prefix + 'dddAh点mm';
	            },
	            sameElse : 'LL'
	        },
	        ordinalParse: /\d{1,2}(日|月|周)/,
	        ordinal : function (number, period) {
	            switch (period) {
	            case 'd':
	            case 'D':
	            case 'DDD':
	                return number + '日';
	            case 'M':
	                return number + '月';
	            case 'w':
	            case 'W':
	                return number + '周';
	            default:
	                return number;
	            }
	        },
	        relativeTime : {
	            future : '%s内',
	            past : '%s前',
	            s : '几秒',
	            m : '1 分钟',
	            mm : '%d 分钟',
	            h : '1 小时',
	            hh : '%d 小时',
	            d : '1 天',
	            dd : '%d 天',
	            M : '1 个月',
	            MM : '%d 个月',
	            y : '1 年',
	            yy : '%d 年'
	        },
	        week : {
	            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return zh_cn;

	}));

/***/ },
/* 355 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : traditional chinese (zh-tw)
	//! author : Ben : https://github.com/ben-lin

	(function (global, factory) {
	    true ? factory(__webpack_require__(268)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var zh_tw = moment.defineLocale('zh-tw', {
	        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
	        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
	        weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),
	        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
	        longDateFormat : {
	            LT : 'Ah點mm分',
	            LTS : 'Ah點m分s秒',
	            L : 'YYYY年MMMD日',
	            LL : 'YYYY年MMMD日',
	            LLL : 'YYYY年MMMD日Ah點mm分',
	            LLLL : 'YYYY年MMMD日ddddAh點mm分',
	            l : 'YYYY年MMMD日',
	            ll : 'YYYY年MMMD日',
	            lll : 'YYYY年MMMD日Ah點mm分',
	            llll : 'YYYY年MMMD日ddddAh點mm分'
	        },
	        meridiemParse: /早上|上午|中午|下午|晚上/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === '早上' || meridiem === '上午') {
	                return hour;
	            } else if (meridiem === '中午') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === '下午' || meridiem === '晚上') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            var hm = hour * 100 + minute;
	            if (hm < 900) {
	                return '早上';
	            } else if (hm < 1130) {
	                return '上午';
	            } else if (hm < 1230) {
	                return '中午';
	            } else if (hm < 1800) {
	                return '下午';
	            } else {
	                return '晚上';
	            }
	        },
	        calendar : {
	            sameDay : '[今天]LT',
	            nextDay : '[明天]LT',
	            nextWeek : '[下]ddddLT',
	            lastDay : '[昨天]LT',
	            lastWeek : '[上]ddddLT',
	            sameElse : 'L'
	        },
	        ordinalParse: /\d{1,2}(日|月|週)/,
	        ordinal : function (number, period) {
	            switch (period) {
	            case 'd' :
	            case 'D' :
	            case 'DDD' :
	                return number + '日';
	            case 'M' :
	                return number + '月';
	            case 'w' :
	            case 'W' :
	                return number + '週';
	            default :
	                return number;
	            }
	        },
	        relativeTime : {
	            future : '%s內',
	            past : '%s前',
	            s : '幾秒',
	            m : '一分鐘',
	            mm : '%d分鐘',
	            h : '一小時',
	            hh : '%d小時',
	            d : '一天',
	            dd : '%d天',
	            M : '一個月',
	            MM : '%d個月',
	            y : '一年',
	            yy : '%d年'
	        }
	    });

	    return zh_tw;

	}));

/***/ },
/* 356 */
/***/ function(module, exports, __webpack_require__) {

	!function(t,e){ true?module.exports=e(__webpack_require__(11),__webpack_require__(357),__webpack_require__(268),__webpack_require__(358)):"function"==typeof define&&define.amd?define(["react","tether","moment","react-onclickoutside"],e):"object"==typeof exports?exports.DatePicker=e(require("react"),require("tether"),require("moment"),require("react-onclickoutside")):t.DatePicker=e(t.React,t.Tether,t.moment,t.OnClickOutside)}(this,function(t,e,n,r){return function(t){function e(r){if(n[r])return n[r].exports;var o=n[r]={exports:{},id:r,loaded:!1};return t[r].call(o.exports,o,o.exports,e),o.loaded=!0,o.exports}var n={};return e.m=t,e.c=n,e.p="",e(0)}([function(t,e,n){"use strict";var r=n(1),o=n(2),i=(n(4),n(5)),a=n(60),s=n(7),c=n(61),u=r.createClass({displayName:"DatePicker",propTypes:{weekdays:r.PropTypes.arrayOf(r.PropTypes.string),locale:r.PropTypes.string,dateFormatCalendar:r.PropTypes.string,popoverAttachment:r.PropTypes.string,popoverTargetAttachment:r.PropTypes.string,popoverTargetOffset:r.PropTypes.string,weekStart:r.PropTypes.string,onChange:r.PropTypes.func.isRequired,onBlur:r.PropTypes.func},getDefaultProps:function(){return{weekdays:["Su","Mo","Tu","We","Th","Fr","Sa"],locale:"en",dateFormatCalendar:"MMMM YYYY",moment:s,onChange:function(){},disabled:!1}},getInitialState:function(){return{focus:!1,virtualFocus:!1,selected:this.props.selected}},componentWillReceiveProps:function(t){this.setState({selected:t.selected})},shouldComponentUpdate:function(t,e){return!(c(t,this.props)&&c(e,this.state))},getValue:function(){return this.state.selected},handleFocus:function(){this.setState({focus:!0})},handleBlur:function(){this.setState({virtualFocus:!1},function(){setTimeout(function(){this.state.virtualFocus||"function"!=typeof this.props.onBlur||(this.props.onBlur(this.state.selected),this.hideCalendar())}.bind(this),200)}.bind(this))},hideCalendar:function(){setTimeout(function(){this.setState({focus:!1})}.bind(this),0)},handleSelect:function(t){this.setSelected(t),setTimeout(function(){this.hideCalendar()}.bind(this),200)},setSelected:function(t){this.setState({selected:t.moment(),virtualFocus:!0},function(){this.props.onChange(this.state.selected)}.bind(this))},clearSelected:function(){null!==this.state.selected&&this.setState({selected:null},function(){this.props.onChange(null)}.bind(this))},onInputClick:function(){this.setState({focus:!0,virtualFocus:!0})},calendar:function(){return this.state.focus?r.createElement(o,{attachment:this.props.popoverAttachment,targetAttachment:this.props.popoverTargetAttachment,targetOffset:this.props.popoverTargetOffset},r.createElement(i,{weekdays:this.props.weekdays,locale:this.props.locale,moment:this.props.moment,dateFormat:this.props.dateFormatCalendar,selected:this.state.selected,onSelect:this.handleSelect,hideCalendar:this.hideCalendar,minDate:this.props.minDate,maxDate:this.props.maxDate,excludeDates:this.props.excludeDates,weekStart:this.props.weekStart})):void 0},render:function(){var t=null;return this.props.isClearable&&null!=this.state.selected&&(t=r.createElement("button",{className:"close-icon",onClick:this.clearSelected})),r.createElement("div",{className:"datepicker__input-container"},r.createElement(a,{name:this.props.name,date:this.state.selected,dateFormat:this.props.dateFormat,focus:this.state.focus,onFocus:this.handleFocus,onBlur:this.handleBlur,handleClick:this.onInputClick,handleEnter:this.hideCalendar,setSelected:this.setSelected,clearSelected:this.clearSelected,hideCalendar:this.hideCalendar,placeholderText:this.props.placeholderText,disabled:this.props.disabled,className:this.props.className,title:this.props.title,readOnly:this.props.readOnly,required:this.props.required}),t,this.props.disabled?null:this.calendar())}});t.exports=u},function(e,n){e.exports=t},function(t,e,n){"use strict";var r=n(1),o=r.createClass({displayName:"Popover",propTypes:{attachment:r.PropTypes.string,targetAttachment:r.PropTypes.string,targetOffset:r.PropTypes.string},getDefaultProps:function(){return{attachment:"top left",targetAttachment:"bottom left",targetOffset:"10px 0"}},componentWillMount:function(){var t=document.createElement("span");t.className="datepicker__container",this._popoverElement=t,document.querySelector("body").appendChild(this._popoverElement)},componentDidMount:function(){this._renderPopover()},componentDidUpdate:function(){this._renderPopover()},_popoverComponent:function(){var t=this.props.className;return r.createElement("div",{className:t},this.props.children)},_tetherOptions:function(){return{element:this._popoverElement,target:this.getDOMNode().parentElement.querySelector("input"),attachment:this.props.attachment,targetAttachment:this.props.targetAttachment,targetOffset:this.props.targetOffset,optimizations:{moveElement:!1},constraints:[{to:"window",attachment:"together"}]}},_renderPopover:function(){if(r.render(this._popoverComponent(),this._popoverElement),null!=this._tether)this._tether.setOptions(this._tetherOptions());else if(window&&document){var t=n(3);this._tether=new t(this._tetherOptions())}},componentWillUnmount:function(){this._tether.destroy(),r.unmountComponentAtNode(this._popoverElement),this._popoverElement.parentNode&&this._popoverElement.parentNode.removeChild(this._popoverElement)},render:function(){return r.createElement("span",null)}});t.exports=o},function(t,n){t.exports=e},function(t,e){"use strict";function n(t){this._date=t}n.prototype.isBefore=function(t){return this._date.isBefore(t._date,"day")},n.prototype.isAfter=function(t){return this._date.isAfter(t._date,"day")},n.prototype.sameDay=function(t){return this._date.isSame(t._date,"day")},n.prototype.sameMonth=function(t){return this._date.isSame(t._date,"month")},n.prototype.day=function(){return this._date.date()},n.prototype.mapDaysInWeek=function(t){for(var e=[],r=this._date.clone(),o=0;7>o;o++){var i=new n(r.clone().add(o,"days"));e[o]=t(i,o)}return e},n.prototype.mapWeeksInMonth=function(t){for(var e=[],r=this._date.clone().startOf("month").startOf("week"),o=0;6>o;o++){var i=new n(r.clone().add(o,"weeks"));e[o]=t(i,o)}return e},n.prototype.weekInMonth=function(t){var e=this._date.clone(),n=this._date.clone().weekday(7);return e.isSame(t._date,"month")||n.isSame(t._date,"month")},n.prototype.format=function(){return this._date.format.apply(this._date,arguments)},n.prototype.localeFormat=function(){var t=Array.prototype.slice.call(arguments),e=t.shift();return this._date.locale(e).format.apply(this._date,t)},n.prototype.addMonth=function(){return new n(this._date.clone().add(1,"month"))},n.prototype.subtractMonth=function(){return new n(this._date.clone().subtract(1,"month"))},n.prototype.clone=function(){return new n(this._date.clone())},n.prototype.safeClone=function(t){return this._date?this.clone():(void 0===t&&(t=null),new n(t))},n.prototype.moment=function(){return this._date},t.exports=n},function(t,e,n){"use strict";var r=n(1),o=n(6),i=n(4),a=n(8),s=n(56),c=r.createClass({displayName:"Calendar",mixins:[n(59)],propTypes:{weekdays:r.PropTypes.array.isRequired,locale:r.PropTypes.string,moment:r.PropTypes.func.isRequired,dateFormat:r.PropTypes.string.isRequired,selected:r.PropTypes.object.isRequired,onSelect:r.PropTypes.func.isRequired,hideCalendar:r.PropTypes.func.isRequired,minDate:r.PropTypes.object,maxDate:r.PropTypes.object,excludeDates:r.PropTypes.array,weekStart:r.PropTypes.string.isRequired},handleClickOutside:function(){this.props.hideCalendar()},getInitialState:function(){return{date:new i(this.props.selected).safeClone(this.props.moment())}},getDefaultProps:function(){return{weekStart:"1"}},componentWillMount:function(){this.initializeMomentLocale()},componentWillReceiveProps:function(t){null!==t.selected&&t.selected!==this.props.selected&&this.setState({date:new i(t.selected).clone()})},initializeMomentLocale:function(){var t=this.props.weekdays.slice(0);t=t.concat(t.splice(0,this.props.weekStart)),this.props.moment.locale(this.props.locale,{week:{dow:this.props.weekStart},weekdaysMin:t})},increaseMonth:function(){this.setState({date:this.state.date.addMonth()})},decreaseMonth:function(){this.setState({date:this.state.date.subtractMonth()})},weeks:function(){return this.state.date.mapWeeksInMonth(this.renderWeek)},handleDayClick:function(t){this.props.onSelect(t)},renderWeek:function(t,e){return t.weekInMonth(this.state.date)?r.createElement("div",{key:e},this.days(t)):void 0},renderDay:function(t,e){var n,c,u=new i(this.props.minDate).safeClone(),p=new i(this.props.maxDate).safeClone();return this.props.excludeDates&&Array.isArray(this.props.excludeDates)&&(n=a(this.props.excludeDates,function(t){return new i(t).safeClone()})),c=t.isBefore(u)||t.isAfter(p)||s(n,function(e){return t.sameDay(e)}),r.createElement(o,{key:e,day:t,date:this.state.date,onClick:this.handleDayClick.bind(this,t),selected:new i(this.props.selected),disabled:c})},days:function(t){return t.mapDaysInWeek(this.renderDay)},header:function(){return this.props.moment.weekdaysMin().map(function(t,e){return r.createElement("div",{className:"datepicker__day",key:e},t)})},render:function(){return r.createElement("div",{className:"datepicker"},r.createElement("div",{className:"datepicker__triangle"}),r.createElement("div",{className:"datepicker__header"},r.createElement("a",{className:"datepicker__navigation datepicker__navigation--previous",onClick:this.decreaseMonth}),r.createElement("span",{className:"datepicker__current-month"},this.state.date.localeFormat(this.props.locale,this.props.dateFormat)),r.createElement("a",{className:"datepicker__navigation datepicker__navigation--next",onClick:this.increaseMonth}),r.createElement("div",null,this.header())),r.createElement("div",{className:"datepicker__month"},this.weeks()))}});t.exports=c},function(t,e,n){"use strict";var r=n(1),o=n(7),i=r.createClass({displayName:"Day",handleClick:function(t){this.props.disabled||this.props.onClick(t)},isWeekend:function(){var t=this.props.day.moment().weekday();return 5===t||6===t},render:function(){var t=["datepicker__day"];return this.props.disabled&&t.push("datepicker__day--disabled"),this.props.day.sameDay(this.props.selected)&&t.push("datepicker__day--selected"),this.props.day.sameDay(o())&&t.push("datepicker__day--today"),this.isWeekend()&&t.push("datepicker__day--weekend"),r.createElement("div",{className:t.join(" "),onClick:this.handleClick},this.props.day.day())}});t.exports=i},function(t,e){t.exports=n},function(t,e,n){function r(t,e,n){var r=s(t)?o:a;return e=i(e,n,3),r(t,e)}var o=n(9),i=n(10),a=n(50),s=n(31);t.exports=r},function(t,e){function n(t,e){for(var n=-1,r=t.length,o=Array(r);++n<r;)o[n]=e(t[n],n,t);return o}t.exports=n},function(t,e,n){function r(t,e,n){var r=typeof t;return"function"==r?void 0===e?t:a(t,e,n):null==t?s:"object"==r?o(t):void 0===e?c(t):i(t,e)}var o=n(11),i=n(39),a=n(46),s=n(47),c=n(48);t.exports=r},function(t,e,n){function r(t){var e=i(t);if(1==e.length&&e[0][2]){var n=e[0][0],r=e[0][1];return function(t){return null==t?!1:t[n]===r&&(void 0!==r||n in a(t))}}return function(t){return o(t,e)}}var o=n(12),i=n(36),a=n(35);t.exports=r},function(t,e,n){function r(t,e,n){var r=e.length,a=r,s=!n;if(null==t)return!a;for(t=i(t);r--;){var c=e[r];if(s&&c[2]?c[1]!==t[c[0]]:!(c[0]in t))return!1}for(;++r<a;){c=e[r];var u=c[0],p=t[u],l=c[1];if(s&&c[2]){if(void 0===p&&!(u in t))return!1}else{var f=n?n(p,l,u):void 0;if(!(void 0===f?o(l,p,n,!0):f))return!1}}return!0}var o=n(13),i=n(35);t.exports=r},function(t,e,n){function r(t,e,n,s,c,u){return t===e?!0:null==t||null==e||!i(t)&&!a(e)?t!==t&&e!==e:o(t,e,r,n,s,c,u)}var o=n(14),i=n(23),a=n(24);t.exports=r},function(t,e,n){function r(t,e,n,r,f,m,v){var y=s(t),g=s(e),b=p,x=p;y||(b=h.call(t),b==u?b=l:b!=l&&(y=c(t))),g||(x=h.call(e),x==u?x=l:x!=l&&(g=c(e)));var _=b==l,k=x==l,w=b==x;if(w&&!y&&!_)return i(t,e,b);if(!f){var C=_&&d.call(t,"__wrapped__"),j=k&&d.call(e,"__wrapped__");if(C||j)return n(C?t.value():t,j?e.value():e,r,f,m,v)}if(!w)return!1;m||(m=[]),v||(v=[]);for(var D=m.length;D--;)if(m[D]==t)return v[D]==e;m.push(t),v.push(e);var S=(y?o:a)(t,e,n,r,f,m,v);return m.pop(),v.pop(),S}var o=n(15),i=n(17),a=n(18),s=n(31),c=n(34),u="[object Arguments]",p="[object Array]",l="[object Object]",f=Object.prototype,d=f.hasOwnProperty,h=f.toString;t.exports=r},function(t,e,n){function r(t,e,n,r,i,a,s){var c=-1,u=t.length,p=e.length;if(u!=p&&!(i&&p>u))return!1;for(;++c<u;){var l=t[c],f=e[c],d=r?r(i?f:l,i?l:f,c):void 0;if(void 0!==d){if(d)continue;return!1}if(i){if(!o(e,function(t){return l===t||n(l,t,r,i,a,s)}))return!1}else if(l!==f&&!n(l,f,r,i,a,s))return!1}return!0}var o=n(16);t.exports=r},function(t,e){function n(t,e){for(var n=-1,r=t.length;++n<r;)if(e(t[n],n,t))return!0;return!1}t.exports=n},function(t,e){function n(t,e,n){switch(n){case r:case o:return+t==+e;case i:return t.name==e.name&&t.message==e.message;case a:return t!=+t?e!=+e:t==+e;case s:case c:return t==e+""}return!1}var r="[object Boolean]",o="[object Date]",i="[object Error]",a="[object Number]",s="[object RegExp]",c="[object String]";t.exports=n},function(t,e,n){function r(t,e,n,r,i,s,c){var u=o(t),p=u.length,l=o(e),f=l.length;if(p!=f&&!i)return!1;for(var d=p;d--;){var h=u[d];if(!(i?h in e:a.call(e,h)))return!1}for(var m=i;++d<p;){h=u[d];var v=t[h],y=e[h],g=r?r(i?y:v,i?v:y,h):void 0;if(!(void 0===g?n(v,y,r,i,s,c):g))return!1;m||(m="constructor"==h)}if(!m){var b=t.constructor,x=e.constructor;if(b!=x&&"constructor"in t&&"constructor"in e&&!("function"==typeof b&&b instanceof b&&"function"==typeof x&&x instanceof x))return!1}return!0}var o=n(19),i=Object.prototype,a=i.hasOwnProperty;t.exports=r},function(t,e,n){var r=n(20),o=n(25),i=n(23),a=n(29),s=r(Object,"keys"),c=s?function(t){var e=null==t?void 0:t.constructor;return"function"==typeof e&&e.prototype===t||"function"!=typeof t&&o(t)?a(t):i(t)?s(t):[]}:a;t.exports=c},function(t,e,n){function r(t,e){var n=null==t?void 0:t[e];return o(n)?n:void 0}var o=n(21);t.exports=r},function(t,e,n){function r(t){return null==t?!1:o(t)?p.test(c.call(t)):i(t)&&a.test(t)}var o=n(22),i=n(24),a=/^\[object .+?Constructor\]$/,s=Object.prototype,c=Function.prototype.toString,u=s.hasOwnProperty,p=RegExp("^"+c.call(u).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");t.exports=r},function(t,e,n){function r(t){return o(t)&&s.call(t)==i}var o=n(23),i="[object Function]",a=Object.prototype,s=a.toString;t.exports=r},function(t,e){function n(t){var e=typeof t;return!!t&&("object"==e||"function"==e)}t.exports=n},function(t,e){function n(t){return!!t&&"object"==typeof t}t.exports=n},function(t,e,n){function r(t){return null!=t&&i(o(t))}var o=n(26),i=n(28);t.exports=r},function(t,e,n){var r=n(27),o=r("length");t.exports=o},function(t,e){function n(t){return function(e){return null==e?void 0:e[t]}}t.exports=n},function(t,e){function n(t){return"number"==typeof t&&t>-1&&t%1==0&&r>=t}var r=9007199254740991;t.exports=n},function(t,e,n){function r(t){for(var e=c(t),n=e.length,r=n&&t.length,u=!!r&&s(r)&&(i(t)||o(t)),l=-1,f=[];++l<n;){var d=e[l];(u&&a(d,r)||p.call(t,d))&&f.push(d)}return f}var o=n(30),i=n(31),a=n(32),s=n(28),c=n(33),u=Object.prototype,p=u.hasOwnProperty;t.exports=r},function(t,e,n){function r(t){return i(t)&&o(t)&&s.call(t,"callee")&&!c.call(t,"callee")}var o=n(25),i=n(24),a=Object.prototype,s=a.hasOwnProperty,c=a.propertyIsEnumerable;t.exports=r},function(t,e,n){var r=n(20),o=n(28),i=n(24),a="[object Array]",s=Object.prototype,c=s.toString,u=r(Array,"isArray"),p=u||function(t){return i(t)&&o(t.length)&&c.call(t)==a};t.exports=p},function(t,e){function n(t,e){return t="number"==typeof t||r.test(t)?+t:-1,e=null==e?o:e,t>-1&&t%1==0&&e>t}var r=/^\d+$/,o=9007199254740991;t.exports=n},function(t,e,n){function r(t){if(null==t)return[];c(t)||(t=Object(t));var e=t.length;e=e&&s(e)&&(i(t)||o(t))&&e||0;for(var n=t.constructor,r=-1,u="function"==typeof n&&n.prototype===t,l=Array(e),f=e>0;++r<e;)l[r]=r+"";for(var d in t)f&&a(d,e)||"constructor"==d&&(u||!p.call(t,d))||l.push(d);return l}var o=n(30),i=n(31),a=n(32),s=n(28),c=n(23),u=Object.prototype,p=u.hasOwnProperty;t.exports=r},function(t,e,n){function r(t){return i(t)&&o(t.length)&&!!P[T.call(t)]}var o=n(28),i=n(24),a="[object Arguments]",s="[object Array]",c="[object Boolean]",u="[object Date]",p="[object Error]",l="[object Function]",f="[object Map]",d="[object Number]",h="[object Object]",m="[object RegExp]",v="[object Set]",y="[object String]",g="[object WeakMap]",b="[object ArrayBuffer]",x="[object Float32Array]",_="[object Float64Array]",k="[object Int8Array]",w="[object Int16Array]",C="[object Int32Array]",j="[object Uint8Array]",D="[object Uint8ClampedArray]",S="[object Uint16Array]",O="[object Uint32Array]",P={};P[x]=P[_]=P[k]=P[w]=P[C]=P[j]=P[D]=P[S]=P[O]=!0,P[a]=P[s]=P[b]=P[c]=P[u]=P[p]=P[l]=P[f]=P[d]=P[h]=P[m]=P[v]=P[y]=P[g]=!1;var E=Object.prototype,T=E.toString;t.exports=r},function(t,e,n){function r(t){return o(t)?t:Object(t)}var o=n(23);t.exports=r},function(t,e,n){function r(t){for(var e=i(t),n=e.length;n--;)e[n][2]=o(e[n][1]);return e}var o=n(37),i=n(38);t.exports=r},function(t,e,n){function r(t){return t===t&&!o(t)}var o=n(23);t.exports=r},function(t,e,n){function r(t){t=i(t);for(var e=-1,n=o(t),r=n.length,a=Array(r);++e<r;){var s=n[e];a[e]=[s,t[s]]}return a}var o=n(19),i=n(35);t.exports=r},function(t,e,n){function r(t,e){var n=s(t),r=c(t)&&u(e),d=t+"";return t=f(t),function(s){if(null==s)return!1;var c=d;if(s=l(s),(n||!r)&&!(c in s)){if(s=1==t.length?s:o(s,a(t,0,-1)),null==s)return!1;c=p(t),s=l(s)}return s[c]===e?void 0!==e||c in s:i(e,s[c],void 0,!0)}}var o=n(40),i=n(13),a=n(41),s=n(31),c=n(42),u=n(37),p=n(43),l=n(35),f=n(44);t.exports=r},function(t,e,n){function r(t,e,n){if(null!=t){void 0!==n&&n in o(t)&&(e=[n]);for(var r=0,i=e.length;null!=t&&i>r;)t=t[e[r++]];return r&&r==i?t:void 0}}var o=n(35);t.exports=r},function(t,e){function n(t,e,n){var r=-1,o=t.length;e=null==e?0:+e||0,0>e&&(e=-e>o?0:o+e),n=void 0===n||n>o?o:+n||0,0>n&&(n+=o),o=e>n?0:n-e>>>0,e>>>=0;for(var i=Array(o);++r<o;)i[r]=t[r+e];return i}t.exports=n},function(t,e,n){function r(t,e){var n=typeof t;if("string"==n&&s.test(t)||"number"==n)return!0;if(o(t))return!1;var r=!a.test(t);return r||null!=e&&t in i(e)}var o=n(31),i=n(35),a=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\n\\]|\\.)*?\1)\]/,s=/^\w*$/;t.exports=r},function(t,e){function n(t){var e=t?t.length:0;return e?t[e-1]:void 0}t.exports=n},function(t,e,n){function r(t){if(i(t))return t;var e=[];return o(t).replace(a,function(t,n,r,o){e.push(r?o.replace(s,"$1"):n||t)}),e}var o=n(45),i=n(31),a=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\n\\]|\\.)*?)\2)\]/g,s=/\\(\\)?/g;t.exports=r},function(t,e){function n(t){return null==t?"":t+""}t.exports=n},function(t,e,n){function r(t,e,n){if("function"!=typeof t)return o;if(void 0===e)return t;switch(n){case 1:return function(n){return t.call(e,n)};case 3:return function(n,r,o){return t.call(e,n,r,o)};case 4:return function(n,r,o,i){return t.call(e,n,r,o,i)};case 5:return function(n,r,o,i,a){return t.call(e,n,r,o,i,a)}}return function(){return t.apply(e,arguments)}}var o=n(47);t.exports=r},function(t,e){function n(t){return t}t.exports=n},function(t,e,n){function r(t){return a(t)?o(t):i(t)}var o=n(27),i=n(49),a=n(42);t.exports=r},function(t,e,n){function r(t){var e=t+"";return t=i(t),function(n){return o(n,t,e)}}var o=n(40),i=n(44);t.exports=r},function(t,e,n){function r(t,e){var n=-1,r=i(t)?Array(t.length):[];return o(t,function(t,o,i){r[++n]=e(t,o,i)}),r}var o=n(51),i=n(25);t.exports=r},function(t,e,n){var r=n(52),o=n(55),i=o(r);t.exports=i},function(t,e,n){function r(t,e){return o(t,e,i)}var o=n(53),i=n(19);t.exports=r},function(t,e,n){var r=n(54),o=r();t.exports=o},function(t,e,n){function r(t){return function(e,n,r){for(var i=o(e),a=r(e),s=a.length,c=t?s:-1;t?c--:++c<s;){var u=a[c];if(n(i[u],u,i)===!1)break}return e}}var o=n(35);t.exports=r},function(t,e,n){function r(t,e){return function(n,r){var s=n?o(n):0;if(!i(s))return t(n,r);for(var c=e?s:-1,u=a(n);(e?c--:++c<s)&&r(u[c],c,u)!==!1;);return n}}var o=n(26),i=n(28),a=n(35);t.exports=r},function(t,e,n){function r(t,e,n){var r=s(t)?o:a;return n&&c(t,e,n)&&(e=void 0),("function"!=typeof e||void 0!==n)&&(e=i(e,n,3)),r(t,e)}var o=n(16),i=n(10),a=n(57),s=n(31),c=n(58);t.exports=r},function(t,e,n){function r(t,e){var n;return o(t,function(t,r,o){return n=e(t,r,o),!n}),!!n}var o=n(51);t.exports=r},function(t,e,n){function r(t,e,n){if(!a(n))return!1;var r=typeof e;if("number"==r?o(n)&&i(e,n.length):"string"==r&&e in n){var s=n[e];return t===t?t===s:s!==s}return!1}var o=n(25),i=n(32),a=n(23);t.exports=r},function(t,e){t.exports=r},function(t,e,n){"use strict";var r=n(1),o=n(4),i=n(7),a=r.createClass({displayName:"DateInput",getDefaultProps:function(){return{dateFormat:"YYYY-MM-DD",className:"datepicker__input",onBlur:function(){}}},componentDidMount:function(){this.toggleFocus(this.props.focus)},componentWillReceiveProps:function(t){this.toggleFocus(t.focus)},toggleFocus:function(t){t?r.findDOMNode(this.refs.input).focus():r.findDOMNode(this.refs.input).blur()},handleChange:function(t){var e=t.target.value,n=i(e,this.props.dateFormat,!0);n.isValid()?this.props.setSelected(new o(n)):""===e&&this.props.clearSelected()},safeDateFormat:function(t){return t?t.format(this.props.dateFormat):null},handleKeyDown:function(t){switch(t.key){case"Enter":t.preventDefault(),this.props.handleEnter();break;case"Escape":t.preventDefault(),this.props.hideCalendar()}},handleClick:function(t){this.props.disabled||this.props.handleClick(t)},render:function(){return r.createElement("input",{ref:"input",type:"text",name:this.props.name,value:this.safeDateFormat(this.props.date),onClick:this.handleClick,onKeyDown:this.handleKeyDown,onFocus:this.props.onFocus,onBlur:this.props.onBlur,onChange:this.handleChange,className:this.props.className,disabled:this.props.disabled,placeholder:this.props.placeholderText,readOnly:this.props.readOnly,required:this.props.required})}});t.exports=a},function(t,e,n){function r(t,e,n,r){n="function"==typeof n?i(n,r,3):void 0;var a=n?n(t,e):void 0;return void 0===a?o(t,e,n):!!a}var o=n(13),i=n(46);t.exports=r}])});

/***/ },
/* 357 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*! tether 1.1.0 */

	(function(root, factory) {
	  if (true) {
	    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if (typeof exports === 'object') {
	    module.exports = factory(require, exports, module);
	  } else {
	    root.Tether = factory();
	  }
	}(this, function(require, exports, module) {

	'use strict';

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	var TetherBase = undefined;
	if (typeof TetherBase === 'undefined') {
	  TetherBase = { modules: [] };
	}

	function getScrollParent(el) {
	  var _getComputedStyle = getComputedStyle(el);

	  var position = _getComputedStyle.position;

	  if (position === 'fixed') {
	    return el;
	  }

	  var parent = el;
	  while (parent = parent.parentNode) {
	    var style = undefined;
	    try {
	      style = getComputedStyle(parent);
	    } catch (err) {}

	    if (typeof style === 'undefined' || style === null) {
	      return parent;
	    }

	    var _style = style;
	    var overflow = _style.overflow;
	    var overflowX = _style.overflowX;
	    var overflowY = _style.overflowY;

	    if (/(auto|scroll)/.test(overflow + overflowY + overflowX)) {
	      if (position !== 'absolute' || ['relative', 'absolute', 'fixed'].indexOf(style.position) >= 0) {
	        return parent;
	      }
	    }
	  }

	  return document.body;
	}

	var uniqueId = (function () {
	  var id = 0;
	  return function () {
	    return ++id;
	  };
	})();

	var zeroPosCache = {};
	var getOrigin = function getOrigin(doc) {
	  // getBoundingClientRect is unfortunately too accurate.  It introduces a pixel or two of
	  // jitter as the user scrolls that messes with our ability to detect if two positions
	  // are equivilant or not.  We place an element at the top left of the page that will
	  // get the same jitter, so we can cancel the two out.
	  var node = doc._tetherZeroElement;
	  if (typeof node === 'undefined') {
	    node = doc.createElement('div');
	    node.setAttribute('data-tether-id', uniqueId());
	    extend(node.style, {
	      top: 0,
	      left: 0,
	      position: 'absolute'
	    });

	    doc.body.appendChild(node);

	    doc._tetherZeroElement = node;
	  }

	  var id = node.getAttribute('data-tether-id');
	  if (typeof zeroPosCache[id] === 'undefined') {
	    zeroPosCache[id] = {};

	    var rect = node.getBoundingClientRect();
	    for (var k in rect) {
	      // Can't use extend, as on IE9, elements don't resolve to be hasOwnProperty
	      zeroPosCache[id][k] = rect[k];
	    }

	    // Clear the cache when this position call is done
	    defer(function () {
	      delete zeroPosCache[id];
	    });
	  }

	  return zeroPosCache[id];
	};

	function getBounds(el) {
	  var doc = undefined;
	  if (el === document) {
	    doc = document;
	    el = document.documentElement;
	  } else {
	    doc = el.ownerDocument;
	  }

	  var docEl = doc.documentElement;

	  var box = {};
	  // The original object returned by getBoundingClientRect is immutable, so we clone it
	  // We can't use extend because the properties are not considered part of the object by hasOwnProperty in IE9
	  var rect = el.getBoundingClientRect();
	  for (var k in rect) {
	    box[k] = rect[k];
	  }

	  var origin = getOrigin(doc);

	  box.top -= origin.top;
	  box.left -= origin.left;

	  if (typeof box.width === 'undefined') {
	    box.width = document.body.scrollWidth - box.left - box.right;
	  }
	  if (typeof box.height === 'undefined') {
	    box.height = document.body.scrollHeight - box.top - box.bottom;
	  }

	  box.top = box.top - docEl.clientTop;
	  box.left = box.left - docEl.clientLeft;
	  box.right = doc.body.clientWidth - box.width - box.left;
	  box.bottom = doc.body.clientHeight - box.height - box.top;

	  return box;
	}

	function getOffsetParent(el) {
	  return el.offsetParent || document.documentElement;
	}

	function getScrollBarSize() {
	  var inner = document.createElement('div');
	  inner.style.width = '100%';
	  inner.style.height = '200px';

	  var outer = document.createElement('div');
	  extend(outer.style, {
	    position: 'absolute',
	    top: 0,
	    left: 0,
	    pointerEvents: 'none',
	    visibility: 'hidden',
	    width: '200px',
	    height: '150px',
	    overflow: 'hidden'
	  });

	  outer.appendChild(inner);

	  document.body.appendChild(outer);

	  var widthContained = inner.offsetWidth;
	  outer.style.overflow = 'scroll';
	  var widthScroll = inner.offsetWidth;

	  if (widthContained === widthScroll) {
	    widthScroll = outer.clientWidth;
	  }

	  document.body.removeChild(outer);

	  var width = widthContained - widthScroll;

	  return { width: width, height: width };
	}

	function extend() {
	  var out = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	  var args = [];

	  Array.prototype.push.apply(args, arguments);

	  args.slice(1).forEach(function (obj) {
	    if (obj) {
	      for (var key in obj) {
	        if (({}).hasOwnProperty.call(obj, key)) {
	          out[key] = obj[key];
	        }
	      }
	    }
	  });

	  return out;
	}

	function removeClass(el, name) {
	  if (typeof el.classList !== 'undefined') {
	    name.split(' ').forEach(function (cls) {
	      if (cls.trim()) {
	        el.classList.remove(cls);
	      }
	    });
	  } else {
	    var regex = new RegExp('(^| )' + name.split(' ').join('|') + '( |$)', 'gi');
	    var className = getClassName(el).replace(regex, ' ');
	    setClassName(el, className);
	  }
	}

	function addClass(el, name) {
	  if (typeof el.classList !== 'undefined') {
	    name.split(' ').forEach(function (cls) {
	      if (cls.trim()) {
	        el.classList.add(cls);
	      }
	    });
	  } else {
	    removeClass(el, name);
	    var cls = getClassName(el) + (' ' + name);
	    setClassName(el, cls);
	  }
	}

	function hasClass(el, name) {
	  if (typeof el.classList !== 'undefined') {
	    return el.classList.contains(name);
	  }
	  var className = getClassName(el);
	  return new RegExp('(^| )' + name + '( |$)', 'gi').test(className);
	}

	function getClassName(el) {
	  if (el.className instanceof SVGAnimatedString) {
	    return el.className.baseVal;
	  }
	  return el.className;
	}

	function setClassName(el, className) {
	  el.setAttribute('class', className);
	}

	function updateClasses(el, add, all) {
	  // Of the set of 'all' classes, we need the 'add' classes, and only the
	  // 'add' classes to be set.
	  all.forEach(function (cls) {
	    if (add.indexOf(cls) === -1 && hasClass(el, cls)) {
	      removeClass(el, cls);
	    }
	  });

	  add.forEach(function (cls) {
	    if (!hasClass(el, cls)) {
	      addClass(el, cls);
	    }
	  });
	}

	var deferred = [];

	var defer = function defer(fn) {
	  deferred.push(fn);
	};

	var flush = function flush() {
	  var fn = undefined;
	  while (fn = deferred.pop()) {
	    fn();
	  }
	};

	var Evented = (function () {
	  function Evented() {
	    _classCallCheck(this, Evented);
	  }

	  _createClass(Evented, [{
	    key: 'on',
	    value: function on(event, handler, ctx) {
	      var once = arguments.length <= 3 || arguments[3] === undefined ? false : arguments[3];

	      if (typeof this.bindings === 'undefined') {
	        this.bindings = {};
	      }
	      if (typeof this.bindings[event] === 'undefined') {
	        this.bindings[event] = [];
	      }
	      this.bindings[event].push({ handler: handler, ctx: ctx, once: once });
	    }
	  }, {
	    key: 'once',
	    value: function once(event, handler, ctx) {
	      this.on(event, handler, ctx, true);
	    }
	  }, {
	    key: 'off',
	    value: function off(event, handler) {
	      if (typeof this.bindings !== 'undefined' && typeof this.bindings[event] !== 'undefined') {
	        return;
	      }

	      if (typeof handler === 'undefined') {
	        delete this.bindings[event];
	      } else {
	        var i = 0;
	        while (i < this.bindings[event].length) {
	          if (this.bindings[event][i].handler === handler) {
	            this.bindings[event].splice(i, 1);
	          } else {
	            ++i;
	          }
	        }
	      }
	    }
	  }, {
	    key: 'trigger',
	    value: function trigger(event) {
	      if (typeof this.bindings !== 'undefined' && this.bindings[event]) {
	        var i = 0;

	        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	          args[_key - 1] = arguments[_key];
	        }

	        while (i < this.bindings[event].length) {
	          var _bindings$event$i = this.bindings[event][i];
	          var handler = _bindings$event$i.handler;
	          var ctx = _bindings$event$i.ctx;
	          var once = _bindings$event$i.once;

	          var context = ctx;
	          if (typeof context === 'undefined') {
	            context = this;
	          }

	          handler.apply(context, args);

	          if (once) {
	            this.bindings[event].splice(i, 1);
	          } else {
	            ++i;
	          }
	        }
	      }
	    }
	  }]);

	  return Evented;
	})();

	TetherBase.Utils = {
	  getScrollParent: getScrollParent,
	  getBounds: getBounds,
	  getOffsetParent: getOffsetParent,
	  extend: extend,
	  addClass: addClass,
	  removeClass: removeClass,
	  hasClass: hasClass,
	  updateClasses: updateClasses,
	  defer: defer,
	  flush: flush,
	  uniqueId: uniqueId,
	  Evented: Evented,
	  getScrollBarSize: getScrollBarSize
	};
	/* globals TetherBase, performance */

	'use strict';

	var _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	if (typeof TetherBase === 'undefined') {
	  throw new Error('You must include the utils.js file before tether.js');
	}

	var _TetherBase$Utils = TetherBase.Utils;
	var getScrollParent = _TetherBase$Utils.getScrollParent;
	var getBounds = _TetherBase$Utils.getBounds;
	var getOffsetParent = _TetherBase$Utils.getOffsetParent;
	var extend = _TetherBase$Utils.extend;
	var addClass = _TetherBase$Utils.addClass;
	var removeClass = _TetherBase$Utils.removeClass;
	var updateClasses = _TetherBase$Utils.updateClasses;
	var defer = _TetherBase$Utils.defer;
	var flush = _TetherBase$Utils.flush;
	var getScrollBarSize = _TetherBase$Utils.getScrollBarSize;

	function within(a, b) {
	  var diff = arguments.length <= 2 || arguments[2] === undefined ? 1 : arguments[2];

	  return a + diff >= b && b >= a - diff;
	}

	var transformKey = (function () {
	  if (typeof document === 'undefined') {
	    return '';
	  }
	  var el = document.createElement('div');

	  var transforms = ['transform', 'webkitTransform', 'OTransform', 'MozTransform', 'msTransform'];
	  for (var i = 0; i < transforms.length; ++i) {
	    var key = transforms[i];
	    if (el.style[key] !== undefined) {
	      return key;
	    }
	  }
	})();

	var tethers = [];

	var position = function position() {
	  tethers.forEach(function (tether) {
	    tether.position(false);
	  });
	  flush();
	};

	function now() {
	  if (typeof performance !== 'undefined' && typeof performance.now !== 'undefined') {
	    return performance.now();
	  }
	  return +new Date();
	}

	(function () {
	  var lastCall = null;
	  var lastDuration = null;
	  var pendingTimeout = null;

	  var tick = function tick() {
	    if (typeof lastDuration !== 'undefined' && lastDuration > 16) {
	      // We voluntarily throttle ourselves if we can't manage 60fps
	      lastDuration = Math.min(lastDuration - 16, 250);

	      // Just in case this is the last event, remember to position just once more
	      pendingTimeout = setTimeout(tick, 250);
	      return;
	    }

	    if (typeof lastCall !== 'undefined' && now() - lastCall < 10) {
	      // Some browsers call events a little too frequently, refuse to run more than is reasonable
	      return;
	    }

	    if (typeof pendingTimeout !== 'undefined') {
	      clearTimeout(pendingTimeout);
	      pendingTimeout = null;
	    }

	    lastCall = now();
	    position();
	    lastDuration = now() - lastCall;
	  };

	  if (typeof window !== 'undefined') {
	    ['resize', 'scroll', 'touchmove'].forEach(function (event) {
	      window.addEventListener(event, tick);
	    });
	  }
	})();

	var MIRROR_LR = {
	  center: 'center',
	  left: 'right',
	  right: 'left'
	};

	var MIRROR_TB = {
	  middle: 'middle',
	  top: 'bottom',
	  bottom: 'top'
	};

	var OFFSET_MAP = {
	  top: 0,
	  left: 0,
	  middle: '50%',
	  center: '50%',
	  bottom: '100%',
	  right: '100%'
	};

	var autoToFixedAttachment = function autoToFixedAttachment(attachment, relativeToAttachment) {
	  var left = attachment.left;
	  var top = attachment.top;

	  if (left === 'auto') {
	    left = MIRROR_LR[relativeToAttachment.left];
	  }

	  if (top === 'auto') {
	    top = MIRROR_TB[relativeToAttachment.top];
	  }

	  return { left: left, top: top };
	};

	var attachmentToOffset = function attachmentToOffset(attachment) {
	  var left = attachment.left;
	  var top = attachment.top;

	  if (typeof OFFSET_MAP[attachment.left] !== 'undefined') {
	    left = OFFSET_MAP[attachment.left];
	  }

	  if (typeof OFFSET_MAP[attachment.top] !== 'undefined') {
	    top = OFFSET_MAP[attachment.top];
	  }

	  return { left: left, top: top };
	};

	function addOffset() {
	  var out = { top: 0, left: 0 };

	  for (var _len = arguments.length, offsets = Array(_len), _key = 0; _key < _len; _key++) {
	    offsets[_key] = arguments[_key];
	  }

	  offsets.forEach(function (_ref) {
	    var top = _ref.top;
	    var left = _ref.left;

	    if (typeof top === 'string') {
	      top = parseFloat(top, 10);
	    }
	    if (typeof left === 'string') {
	      left = parseFloat(left, 10);
	    }

	    out.top += top;
	    out.left += left;
	  });

	  return out;
	}

	function offsetToPx(offset, size) {
	  if (typeof offset.left === 'string' && offset.left.indexOf('%') !== -1) {
	    offset.left = parseFloat(offset.left, 10) / 100 * size.width;
	  }
	  if (typeof offset.top === 'string' && offset.top.indexOf('%') !== -1) {
	    offset.top = parseFloat(offset.top, 10) / 100 * size.height;
	  }

	  return offset;
	}

	var parseOffset = function parseOffset(value) {
	  var _value$split = value.split(' ');

	  var _value$split2 = _slicedToArray(_value$split, 2);

	  var top = _value$split2[0];
	  var left = _value$split2[1];

	  return { top: top, left: left };
	};
	var parseAttachment = parseOffset;

	var TetherClass = (function () {
	  function TetherClass(options) {
	    var _this = this;

	    _classCallCheck(this, TetherClass);

	    this.position = this.position.bind(this);

	    tethers.push(this);

	    this.history = [];

	    this.setOptions(options, false);

	    TetherBase.modules.forEach(function (module) {
	      if (typeof module.initialize !== 'undefined') {
	        module.initialize.call(_this);
	      }
	    });

	    this.position();
	  }

	  _createClass(TetherClass, [{
	    key: 'getClass',
	    value: function getClass() {
	      var key = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];
	      var classes = this.options.classes;

	      if (typeof classes !== 'undefined' && classes[key]) {
	        return this.options.classes[key];
	      } else if (this.options.classPrefix) {
	        return this.options.classPrefix + '-' + key;
	      } else {
	        return key;
	      }
	    }
	  }, {
	    key: 'setOptions',
	    value: function setOptions(options) {
	      var _this2 = this;

	      var pos = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];

	      var defaults = {
	        offset: '0 0',
	        targetOffset: '0 0',
	        targetAttachment: 'auto auto',
	        classPrefix: 'tether'
	      };

	      this.options = extend(defaults, options);

	      var _options = this.options;
	      var element = _options.element;
	      var target = _options.target;
	      var targetModifier = _options.targetModifier;

	      this.element = element;
	      this.target = target;
	      this.targetModifier = targetModifier;

	      if (this.target === 'viewport') {
	        this.target = document.body;
	        this.targetModifier = 'visible';
	      } else if (this.target === 'scroll-handle') {
	        this.target = document.body;
	        this.targetModifier = 'scroll-handle';
	      }

	      ['element', 'target'].forEach(function (key) {
	        if (typeof _this2[key] === 'undefined') {
	          throw new Error('Tether Error: Both element and target must be defined');
	        }

	        if (typeof _this2[key].jquery !== 'undefined') {
	          _this2[key] = _this2[key][0];
	        } else if (typeof _this2[key] === 'string') {
	          _this2[key] = document.querySelector(_this2[key]);
	        }
	      });

	      addClass(this.element, this.getClass('element'));
	      if (!(this.options.addTargetClasses === false)) {
	        addClass(this.target, this.getClass('target'));
	      }

	      if (!this.options.attachment) {
	        throw new Error('Tether Error: You must provide an attachment');
	      }

	      this.targetAttachment = parseAttachment(this.options.targetAttachment);
	      this.attachment = parseAttachment(this.options.attachment);
	      this.offset = parseOffset(this.options.offset);
	      this.targetOffset = parseOffset(this.options.targetOffset);

	      if (typeof this.scrollParent !== 'undefined') {
	        this.disable();
	      }

	      if (this.targetModifier === 'scroll-handle') {
	        this.scrollParent = this.target;
	      } else {
	        this.scrollParent = getScrollParent(this.target);
	      }

	      if (!(this.options.enabled === false)) {
	        this.enable(pos);
	      }
	    }
	  }, {
	    key: 'getTargetBounds',
	    value: function getTargetBounds() {
	      if (typeof this.targetModifier !== 'undefined') {
	        if (this.targetModifier === 'visible') {
	          if (this.target === document.body) {
	            return { top: pageYOffset, left: pageXOffset, height: innerHeight, width: innerWidth };
	          } else {
	            var bounds = getBounds(this.target);

	            var out = {
	              height: bounds.height,
	              width: bounds.width,
	              top: bounds.top,
	              left: bounds.left
	            };

	            out.height = Math.min(out.height, bounds.height - (pageYOffset - bounds.top));
	            out.height = Math.min(out.height, bounds.height - (bounds.top + bounds.height - (pageYOffset + innerHeight)));
	            out.height = Math.min(innerHeight, out.height);
	            out.height -= 2;

	            out.width = Math.min(out.width, bounds.width - (pageXOffset - bounds.left));
	            out.width = Math.min(out.width, bounds.width - (bounds.left + bounds.width - (pageXOffset + innerWidth)));
	            out.width = Math.min(innerWidth, out.width);
	            out.width -= 2;

	            if (out.top < pageYOffset) {
	              out.top = pageYOffset;
	            }
	            if (out.left < pageXOffset) {
	              out.left = pageXOffset;
	            }

	            return out;
	          }
	        } else if (this.targetModifier === 'scroll-handle') {
	          var bounds = undefined;
	          var target = this.target;
	          if (target === document.body) {
	            target = document.documentElement;

	            bounds = {
	              left: pageXOffset,
	              top: pageYOffset,
	              height: innerHeight,
	              width: innerWidth
	            };
	          } else {
	            bounds = getBounds(target);
	          }

	          var style = getComputedStyle(target);

	          var hasBottomScroll = target.scrollWidth > target.clientWidth || [style.overflow, style.overflowX].indexOf('scroll') >= 0 || this.target !== document.body;

	          var scrollBottom = 0;
	          if (hasBottomScroll) {
	            scrollBottom = 15;
	          }

	          var height = bounds.height - parseFloat(style.borderTopWidth) - parseFloat(style.borderBottomWidth) - scrollBottom;

	          var out = {
	            width: 15,
	            height: height * 0.975 * (height / target.scrollHeight),
	            left: bounds.left + bounds.width - parseFloat(style.borderLeftWidth) - 15
	          };

	          var fitAdj = 0;
	          if (height < 408 && this.target === document.body) {
	            fitAdj = -0.00011 * Math.pow(height, 2) - 0.00727 * height + 22.58;
	          }

	          if (this.target !== document.body) {
	            out.height = Math.max(out.height, 24);
	          }

	          var scrollPercentage = this.target.scrollTop / (target.scrollHeight - height);
	          out.top = scrollPercentage * (height - out.height - fitAdj) + bounds.top + parseFloat(style.borderTopWidth);

	          if (this.target === document.body) {
	            out.height = Math.max(out.height, 24);
	          }

	          return out;
	        }
	      } else {
	        return getBounds(this.target);
	      }
	    }
	  }, {
	    key: 'clearCache',
	    value: function clearCache() {
	      this._cache = {};
	    }
	  }, {
	    key: 'cache',
	    value: function cache(k, getter) {
	      // More than one module will often need the same DOM info, so
	      // we keep a cache which is cleared on each position call
	      if (typeof this._cache === 'undefined') {
	        this._cache = {};
	      }

	      if (typeof this._cache[k] === 'undefined') {
	        this._cache[k] = getter.call(this);
	      }

	      return this._cache[k];
	    }
	  }, {
	    key: 'enable',
	    value: function enable() {
	      var pos = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];

	      if (!(this.options.addTargetClasses === false)) {
	        addClass(this.target, this.getClass('enabled'));
	      }
	      addClass(this.element, this.getClass('enabled'));
	      this.enabled = true;

	      if (this.scrollParent !== document) {
	        this.scrollParent.addEventListener('scroll', this.position);
	      }

	      if (pos) {
	        this.position();
	      }
	    }
	  }, {
	    key: 'disable',
	    value: function disable() {
	      removeClass(this.target, this.getClass('enabled'));
	      removeClass(this.element, this.getClass('enabled'));
	      this.enabled = false;

	      if (typeof this.scrollParent !== 'undefined') {
	        this.scrollParent.removeEventListener('scroll', this.position);
	      }
	    }
	  }, {
	    key: 'destroy',
	    value: function destroy() {
	      var _this3 = this;

	      this.disable();

	      tethers.forEach(function (tether, i) {
	        if (tether === _this3) {
	          tethers.splice(i, 1);
	          return;
	        }
	      });
	    }
	  }, {
	    key: 'updateAttachClasses',
	    value: function updateAttachClasses(elementAttach, targetAttach) {
	      var _this4 = this;

	      elementAttach = elementAttach || this.attachment;
	      targetAttach = targetAttach || this.targetAttachment;
	      var sides = ['left', 'top', 'bottom', 'right', 'middle', 'center'];

	      if (typeof this._addAttachClasses !== 'undefined' && this._addAttachClasses.length) {
	        // updateAttachClasses can be called more than once in a position call, so
	        // we need to clean up after ourselves such that when the last defer gets
	        // ran it doesn't add any extra classes from previous calls.
	        this._addAttachClasses.splice(0, this._addAttachClasses.length);
	      }

	      if (typeof this._addAttachClasses === 'undefined') {
	        this._addAttachClasses = [];
	      }
	      var add = this._addAttachClasses;

	      if (elementAttach.top) {
	        add.push(this.getClass('element-attached') + '-' + elementAttach.top);
	      }
	      if (elementAttach.left) {
	        add.push(this.getClass('element-attached') + '-' + elementAttach.left);
	      }
	      if (targetAttach.top) {
	        add.push(this.getClass('target-attached') + '-' + targetAttach.top);
	      }
	      if (targetAttach.left) {
	        add.push(this.getClass('target-attached') + '-' + targetAttach.left);
	      }

	      var all = [];
	      sides.forEach(function (side) {
	        all.push(_this4.getClass('element-attached') + '-' + side);
	        all.push(_this4.getClass('target-attached') + '-' + side);
	      });

	      defer(function () {
	        if (!(typeof _this4._addAttachClasses !== 'undefined')) {
	          return;
	        }

	        updateClasses(_this4.element, _this4._addAttachClasses, all);
	        if (!(_this4.options.addTargetClasses === false)) {
	          updateClasses(_this4.target, _this4._addAttachClasses, all);
	        }

	        delete _this4._addAttachClasses;
	      });
	    }
	  }, {
	    key: 'position',
	    value: function position() {
	      var _this5 = this;

	      var flushChanges = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];

	      // flushChanges commits the changes immediately, leave true unless you are positioning multiple
	      // tethers (in which case call Tether.Utils.flush yourself when you're done)

	      if (!this.enabled) {
	        return;
	      }

	      this.clearCache();

	      // Turn 'auto' attachments into the appropriate corner or edge
	      var targetAttachment = autoToFixedAttachment(this.targetAttachment, this.attachment);

	      this.updateAttachClasses(this.attachment, targetAttachment);

	      var elementPos = this.cache('element-bounds', function () {
	        return getBounds(_this5.element);
	      });

	      var width = elementPos.width;
	      var height = elementPos.height;

	      if (width === 0 && height === 0 && typeof this.lastSize !== 'undefined') {
	        var _lastSize = this.lastSize;

	        // We cache the height and width to make it possible to position elements that are
	        // getting hidden.
	        width = _lastSize.width;
	        height = _lastSize.height;
	      } else {
	        this.lastSize = { width: width, height: height };
	      }

	      var targetPos = this.cache('target-bounds', function () {
	        return _this5.getTargetBounds();
	      });
	      var targetSize = targetPos;

	      // Get an actual px offset from the attachment
	      var offset = offsetToPx(attachmentToOffset(this.attachment), { width: width, height: height });
	      var targetOffset = offsetToPx(attachmentToOffset(targetAttachment), targetSize);

	      var manualOffset = offsetToPx(this.offset, { width: width, height: height });
	      var manualTargetOffset = offsetToPx(this.targetOffset, targetSize);

	      // Add the manually provided offset
	      offset = addOffset(offset, manualOffset);
	      targetOffset = addOffset(targetOffset, manualTargetOffset);

	      // It's now our goal to make (element position + offset) == (target position + target offset)
	      var left = targetPos.left + targetOffset.left - offset.left;
	      var top = targetPos.top + targetOffset.top - offset.top;

	      for (var i = 0; i < TetherBase.modules.length; ++i) {
	        var _module2 = TetherBase.modules[i];
	        var ret = _module2.position.call(this, {
	          left: left,
	          top: top,
	          targetAttachment: targetAttachment,
	          targetPos: targetPos,
	          elementPos: elementPos,
	          offset: offset,
	          targetOffset: targetOffset,
	          manualOffset: manualOffset,
	          manualTargetOffset: manualTargetOffset,
	          scrollbarSize: scrollbarSize,
	          attachment: this.attachment
	        });

	        if (ret === false) {
	          return false;
	        } else if (typeof ret === 'undefined' || typeof ret !== 'object') {
	          continue;
	        } else {
	          top = ret.top;
	          left = ret.left;
	        }
	      }

	      // We describe the position three different ways to give the optimizer
	      // a chance to decide the best possible way to position the element
	      // with the fewest repaints.
	      var next = {
	        // It's position relative to the page (absolute positioning when
	        // the element is a child of the body)
	        page: {
	          top: top,
	          left: left
	        },

	        // It's position relative to the viewport (fixed positioning)
	        viewport: {
	          top: top - pageYOffset,
	          bottom: pageYOffset - top - height + innerHeight,
	          left: left - pageXOffset,
	          right: pageXOffset - left - width + innerWidth
	        }
	      };

	      var scrollbarSize = undefined;
	      if (document.body.scrollWidth > window.innerWidth) {
	        scrollbarSize = this.cache('scrollbar-size', getScrollBarSize);
	        next.viewport.bottom -= scrollbarSize.height;
	      }

	      if (document.body.scrollHeight > window.innerHeight) {
	        scrollbarSize = this.cache('scrollbar-size', getScrollBarSize);
	        next.viewport.right -= scrollbarSize.width;
	      }

	      if (['', 'static'].indexOf(document.body.style.position) === -1 || ['', 'static'].indexOf(document.body.parentElement.style.position) === -1) {
	        // Absolute positioning in the body will be relative to the page, not the 'initial containing block'
	        next.page.bottom = document.body.scrollHeight - top - height;
	        next.page.right = document.body.scrollWidth - left - width;
	      }

	      if (typeof this.options.optimizations !== 'undefined' && this.options.optimizations.moveElement !== false && !(typeof this.targetModifier !== 'undefined')) {
	        (function () {
	          var offsetParent = _this5.cache('target-offsetparent', function () {
	            return getOffsetParent(_this5.target);
	          });
	          var offsetPosition = _this5.cache('target-offsetparent-bounds', function () {
	            return getBounds(offsetParent);
	          });
	          var offsetParentStyle = getComputedStyle(offsetParent);
	          var offsetParentSize = offsetPosition;

	          var offsetBorder = {};
	          ['Top', 'Left', 'Bottom', 'Right'].forEach(function (side) {
	            offsetBorder[side.toLowerCase()] = parseFloat(offsetParentStyle['border' + side + 'Width']);
	          });

	          offsetPosition.right = document.body.scrollWidth - offsetPosition.left - offsetParentSize.width + offsetBorder.right;
	          offsetPosition.bottom = document.body.scrollHeight - offsetPosition.top - offsetParentSize.height + offsetBorder.bottom;

	          if (next.page.top >= offsetPosition.top + offsetBorder.top && next.page.bottom >= offsetPosition.bottom) {
	            if (next.page.left >= offsetPosition.left + offsetBorder.left && next.page.right >= offsetPosition.right) {
	              // We're within the visible part of the target's scroll parent
	              var scrollTop = offsetParent.scrollTop;
	              var scrollLeft = offsetParent.scrollLeft;

	              // It's position relative to the target's offset parent (absolute positioning when
	              // the element is moved to be a child of the target's offset parent).
	              next.offset = {
	                top: next.page.top - offsetPosition.top + scrollTop - offsetBorder.top,
	                left: next.page.left - offsetPosition.left + scrollLeft - offsetBorder.left
	              };
	            }
	          }
	        })();
	      }

	      // We could also travel up the DOM and try each containing context, rather than only
	      // looking at the body, but we're gonna get diminishing returns.

	      this.move(next);

	      this.history.unshift(next);

	      if (this.history.length > 3) {
	        this.history.pop();
	      }

	      if (flushChanges) {
	        flush();
	      }

	      return true;
	    }

	    // THE ISSUE
	  }, {
	    key: 'move',
	    value: function move(pos) {
	      var _this6 = this;

	      if (!(typeof this.element.parentNode !== 'undefined')) {
	        return;
	      }

	      var same = {};

	      for (var type in pos) {
	        same[type] = {};

	        for (var key in pos[type]) {
	          var found = false;

	          for (var i = 0; i < this.history.length; ++i) {
	            var point = this.history[i];
	            if (typeof point[type] !== 'undefined' && !within(point[type][key], pos[type][key])) {
	              found = true;
	              break;
	            }
	          }

	          if (!found) {
	            same[type][key] = true;
	          }
	        }
	      }

	      var css = { top: '', left: '', right: '', bottom: '' };

	      var transcribe = function transcribe(_same, _pos) {
	        var hasOptimizations = typeof _this6.options.optimizations !== 'undefined';
	        var gpu = hasOptimizations ? _this6.options.optimizations.gpu : null;
	        if (gpu !== false) {
	          var yPos = undefined,
	              xPos = undefined;
	          if (_same.top) {
	            css.top = 0;
	            yPos = _pos.top;
	          } else {
	            css.bottom = 0;
	            yPos = -_pos.bottom;
	          }

	          if (_same.left) {
	            css.left = 0;
	            xPos = _pos.left;
	          } else {
	            css.right = 0;
	            xPos = -_pos.right;
	          }

	          css[transformKey] = 'translateX(' + Math.round(xPos) + 'px) translateY(' + Math.round(yPos) + 'px)';

	          if (transformKey !== 'msTransform') {
	            // The Z transform will keep this in the GPU (faster, and prevents artifacts),
	            // but IE9 doesn't support 3d transforms and will choke.
	            css[transformKey] += " translateZ(0)";
	          }
	        } else {
	          if (_same.top) {
	            css.top = _pos.top + 'px';
	          } else {
	            css.bottom = _pos.bottom + 'px';
	          }

	          if (_same.left) {
	            css.left = _pos.left + 'px';
	          } else {
	            css.right = _pos.right + 'px';
	          }
	        }
	      };

	      var moved = false;
	      if ((same.page.top || same.page.bottom) && (same.page.left || same.page.right)) {
	        css.position = 'absolute';
	        transcribe(same.page, pos.page);
	      } else if ((same.viewport.top || same.viewport.bottom) && (same.viewport.left || same.viewport.right)) {
	        css.position = 'fixed';
	        transcribe(same.viewport, pos.viewport);
	      } else if (typeof same.offset !== 'undefined' && same.offset.top && same.offset.left) {
	        (function () {
	          css.position = 'absolute';
	          var offsetParent = _this6.cache('target-offsetparent', function () {
	            return getOffsetParent(_this6.target);
	          });

	          if (getOffsetParent(_this6.element) !== offsetParent) {
	            defer(function () {
	              _this6.element.parentNode.removeChild(_this6.element);
	              offsetParent.appendChild(_this6.element);
	            });
	          }

	          transcribe(same.offset, pos.offset);
	          moved = true;
	        })();
	      } else {
	        css.position = 'absolute';
	        transcribe({ top: true, left: true }, pos.page);
	      }

	      if (!moved) {
	        var offsetParentIsBody = true;
	        var currentNode = this.element.parentNode;
	        while (currentNode && currentNode.tagName !== 'BODY') {
	          if (getComputedStyle(currentNode).position !== 'static') {
	            offsetParentIsBody = false;
	            break;
	          }

	          currentNode = currentNode.parentNode;
	        }

	        if (!offsetParentIsBody) {
	          this.element.parentNode.removeChild(this.element);
	          document.body.appendChild(this.element);
	        }
	      }

	      // Any css change will trigger a repaint, so let's avoid one if nothing changed
	      var writeCSS = {};
	      var write = false;
	      for (var key in css) {
	        var val = css[key];
	        var elVal = this.element.style[key];

	        if (elVal !== '' && val !== '' && ['top', 'left', 'bottom', 'right'].indexOf(key) >= 0) {
	          elVal = parseFloat(elVal);
	          val = parseFloat(val);
	        }

	        if (elVal !== val) {
	          write = true;
	          writeCSS[key] = val;
	        }
	      }

	      if (write) {
	        defer(function () {
	          extend(_this6.element.style, writeCSS);
	        });
	      }
	    }
	  }]);

	  return TetherClass;
	})();

	TetherClass.modules = [];

	TetherBase.position = position;

	var Tether = extend(TetherClass, TetherBase);
	/* globals TetherBase */

	'use strict';

	var _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();

	var _TetherBase$Utils = TetherBase.Utils;
	var getBounds = _TetherBase$Utils.getBounds;
	var extend = _TetherBase$Utils.extend;
	var updateClasses = _TetherBase$Utils.updateClasses;
	var defer = _TetherBase$Utils.defer;

	var BOUNDS_FORMAT = ['left', 'top', 'right', 'bottom'];

	function getBoundingRect(tether, to) {
	  if (to === 'scrollParent') {
	    to = tether.scrollParent;
	  } else if (to === 'window') {
	    to = [pageXOffset, pageYOffset, innerWidth + pageXOffset, innerHeight + pageYOffset];
	  }

	  if (to === document) {
	    to = to.documentElement;
	  }

	  if (typeof to.nodeType !== 'undefined') {
	    (function () {
	      var size = getBounds(to);
	      var pos = size;
	      var style = getComputedStyle(to);

	      to = [pos.left, pos.top, size.width + pos.left, size.height + pos.top];

	      BOUNDS_FORMAT.forEach(function (side, i) {
	        side = side[0].toUpperCase() + side.substr(1);
	        if (side === 'Top' || side === 'Left') {
	          to[i] += parseFloat(style['border' + side + 'Width']);
	        } else {
	          to[i] -= parseFloat(style['border' + side + 'Width']);
	        }
	      });
	    })();
	  }

	  return to;
	}

	TetherBase.modules.push({
	  position: function position(_ref) {
	    var _this = this;

	    var top = _ref.top;
	    var left = _ref.left;
	    var targetAttachment = _ref.targetAttachment;

	    if (!this.options.constraints) {
	      return true;
	    }

	    var _cache = this.cache('element-bounds', function () {
	      return getBounds(_this.element);
	    });

	    var height = _cache.height;
	    var width = _cache.width;

	    if (width === 0 && height === 0 && typeof this.lastSize !== 'undefined') {
	      var _lastSize = this.lastSize;

	      // Handle the item getting hidden as a result of our positioning without glitching
	      // the classes in and out
	      width = _lastSize.width;
	      height = _lastSize.height;
	    }

	    var targetSize = this.cache('target-bounds', function () {
	      return _this.getTargetBounds();
	    });

	    var targetHeight = targetSize.height;
	    var targetWidth = targetSize.width;

	    var allClasses = [this.getClass('pinned'), this.getClass('out-of-bounds')];

	    this.options.constraints.forEach(function (constraint) {
	      var outOfBoundsClass = constraint.outOfBoundsClass;
	      var pinnedClass = constraint.pinnedClass;

	      if (outOfBoundsClass) {
	        allClasses.push(outOfBoundsClass);
	      }
	      if (pinnedClass) {
	        allClasses.push(pinnedClass);
	      }
	    });

	    allClasses.forEach(function (cls) {
	      ['left', 'top', 'right', 'bottom'].forEach(function (side) {
	        allClasses.push(cls + '-' + side);
	      });
	    });

	    var addClasses = [];

	    var tAttachment = extend({}, targetAttachment);
	    var eAttachment = extend({}, this.attachment);

	    this.options.constraints.forEach(function (constraint) {
	      var to = constraint.to;
	      var attachment = constraint.attachment;
	      var pin = constraint.pin;

	      if (typeof attachment === 'undefined') {
	        attachment = '';
	      }

	      var changeAttachX = undefined,
	          changeAttachY = undefined;
	      if (attachment.indexOf(' ') >= 0) {
	        var _attachment$split = attachment.split(' ');

	        var _attachment$split2 = _slicedToArray(_attachment$split, 2);

	        changeAttachY = _attachment$split2[0];
	        changeAttachX = _attachment$split2[1];
	      } else {
	        changeAttachX = changeAttachY = attachment;
	      }

	      var bounds = getBoundingRect(_this, to);

	      if (changeAttachY === 'target' || changeAttachY === 'both') {
	        if (top < bounds[1] && tAttachment.top === 'top') {
	          top += targetHeight;
	          tAttachment.top = 'bottom';
	        }

	        if (top + height > bounds[3] && tAttachment.top === 'bottom') {
	          top -= targetHeight;
	          tAttachment.top = 'top';
	        }
	      }

	      if (changeAttachY === 'together') {
	        if (top < bounds[1] && tAttachment.top === 'top') {
	          if (eAttachment.top === 'bottom') {
	            top += targetHeight;
	            tAttachment.top = 'bottom';

	            top += height;
	            eAttachment.top = 'top';
	          } else if (eAttachment.top === 'top') {
	            top += targetHeight;
	            tAttachment.top = 'bottom';

	            top -= height;
	            eAttachment.top = 'bottom';
	          }
	        }

	        if (top + height > bounds[3] && tAttachment.top === 'bottom') {
	          if (eAttachment.top === 'top') {
	            top -= targetHeight;
	            tAttachment.top = 'top';

	            top -= height;
	            eAttachment.top = 'bottom';
	          } else if (eAttachment.top === 'bottom') {
	            top -= targetHeight;
	            tAttachment.top = 'top';

	            top += height;
	            eAttachment.top = 'top';
	          }
	        }

	        if (tAttachment.top === 'middle') {
	          if (top + height > bounds[3] && eAttachment.top === 'top') {
	            top -= height;
	            eAttachment.top = 'bottom';
	          } else if (top < bounds[1] && eAttachment.top === 'bottom') {
	            top += height;
	            eAttachment.top = 'top';
	          }
	        }
	      }

	      if (changeAttachX === 'target' || changeAttachX === 'both') {
	        if (left < bounds[0] && tAttachment.left === 'left') {
	          left += targetWidth;
	          tAttachment.left = 'right';
	        }

	        if (left + width > bounds[2] && tAttachment.left === 'right') {
	          left -= targetWidth;
	          tAttachment.left = 'left';
	        }
	      }

	      if (changeAttachX === 'together') {
	        if (left < bounds[0] && tAttachment.left === 'left') {
	          if (eAttachment.left === 'right') {
	            left += targetWidth;
	            tAttachment.left = 'right';

	            left += width;
	            eAttachment.left = 'left';
	          } else if (eAttachment.left === 'left') {
	            left += targetWidth;
	            tAttachment.left = 'right';

	            left -= width;
	            eAttachment.left = 'right';
	          }
	        } else if (left + width > bounds[2] && tAttachment.left === 'right') {
	          if (eAttachment.left === 'left') {
	            left -= targetWidth;
	            tAttachment.left = 'left';

	            left -= width;
	            eAttachment.left = 'right';
	          } else if (eAttachment.left === 'right') {
	            left -= targetWidth;
	            tAttachment.left = 'left';

	            left += width;
	            eAttachment.left = 'left';
	          }
	        } else if (tAttachment.left === 'center') {
	          if (left + width > bounds[2] && eAttachment.left === 'left') {
	            left -= width;
	            eAttachment.left = 'right';
	          } else if (left < bounds[0] && eAttachment.left === 'right') {
	            left += width;
	            eAttachment.left = 'left';
	          }
	        }
	      }

	      if (changeAttachY === 'element' || changeAttachY === 'both') {
	        if (top < bounds[1] && eAttachment.top === 'bottom') {
	          top += height;
	          eAttachment.top = 'top';
	        }

	        if (top + height > bounds[3] && eAttachment.top === 'top') {
	          top -= height;
	          eAttachment.top = 'bottom';
	        }
	      }

	      if (changeAttachX === 'element' || changeAttachX === 'both') {
	        if (left < bounds[0] && eAttachment.left === 'right') {
	          left += width;
	          eAttachment.left = 'left';
	        }

	        if (left + width > bounds[2] && eAttachment.left === 'left') {
	          left -= width;
	          eAttachment.left = 'right';
	        }
	      }

	      if (typeof pin === 'string') {
	        pin = pin.split(',').map(function (p) {
	          return p.trim();
	        });
	      } else if (pin === true) {
	        pin = ['top', 'left', 'right', 'bottom'];
	      }

	      pin = pin || [];

	      var pinned = [];
	      var oob = [];

	      if (top < bounds[1]) {
	        if (pin.indexOf('top') >= 0) {
	          top = bounds[1];
	          pinned.push('top');
	        } else {
	          oob.push('top');
	        }
	      }

	      if (top + height > bounds[3]) {
	        if (pin.indexOf('bottom') >= 0) {
	          top = bounds[3] - height;
	          pinned.push('bottom');
	        } else {
	          oob.push('bottom');
	        }
	      }

	      if (left < bounds[0]) {
	        if (pin.indexOf('left') >= 0) {
	          left = bounds[0];
	          pinned.push('left');
	        } else {
	          oob.push('left');
	        }
	      }

	      if (left + width > bounds[2]) {
	        if (pin.indexOf('right') >= 0) {
	          left = bounds[2] - width;
	          pinned.push('right');
	        } else {
	          oob.push('right');
	        }
	      }

	      if (pinned.length) {
	        (function () {
	          var pinnedClass = undefined;
	          if (typeof _this.options.pinnedClass !== 'undefined') {
	            pinnedClass = _this.options.pinnedClass;
	          } else {
	            pinnedClass = _this.getClass('pinned');
	          }

	          addClasses.push(pinnedClass);
	          pinned.forEach(function (side) {
	            addClasses.push(pinnedClass + '-' + side);
	          });
	        })();
	      }

	      if (oob.length) {
	        (function () {
	          var oobClass = undefined;
	          if (typeof _this.options.outOfBoundsClass !== 'undefined') {
	            oobClass = _this.options.outOfBoundsClass;
	          } else {
	            oobClass = _this.getClass('out-of-bounds');
	          }

	          addClasses.push(oobClass);
	          oob.forEach(function (side) {
	            addClasses.push(oobClass + '-' + side);
	          });
	        })();
	      }

	      if (pinned.indexOf('left') >= 0 || pinned.indexOf('right') >= 0) {
	        eAttachment.left = tAttachment.left = false;
	      }
	      if (pinned.indexOf('top') >= 0 || pinned.indexOf('bottom') >= 0) {
	        eAttachment.top = tAttachment.top = false;
	      }

	      if (tAttachment.top !== targetAttachment.top || tAttachment.left !== targetAttachment.left || eAttachment.top !== _this.attachment.top || eAttachment.left !== _this.attachment.left) {
	        _this.updateAttachClasses(eAttachment, tAttachment);
	      }
	    });

	    defer(function () {
	      if (!(_this.options.addTargetClasses === false)) {
	        updateClasses(_this.target, addClasses, allClasses);
	      }
	      updateClasses(_this.element, addClasses, allClasses);
	    });

	    return { top: top, left: left };
	  }
	});
	/* globals TetherBase */

	'use strict';

	var _TetherBase$Utils = TetherBase.Utils;
	var getBounds = _TetherBase$Utils.getBounds;
	var updateClasses = _TetherBase$Utils.updateClasses;
	var defer = _TetherBase$Utils.defer;

	TetherBase.modules.push({
	  position: function position(_ref) {
	    var _this = this;

	    var top = _ref.top;
	    var left = _ref.left;

	    var _cache = this.cache('element-bounds', function () {
	      return getBounds(_this.element);
	    });

	    var height = _cache.height;
	    var width = _cache.width;

	    var targetPos = this.getTargetBounds();

	    var bottom = top + height;
	    var right = left + width;

	    var abutted = [];
	    if (top <= targetPos.bottom && bottom >= targetPos.top) {
	      ['left', 'right'].forEach(function (side) {
	        var targetPosSide = targetPos[side];
	        if (targetPosSide === left || targetPosSide === right) {
	          abutted.push(side);
	        }
	      });
	    }

	    if (left <= targetPos.right && right >= targetPos.left) {
	      ['top', 'bottom'].forEach(function (side) {
	        var targetPosSide = targetPos[side];
	        if (targetPosSide === top || targetPosSide === bottom) {
	          abutted.push(side);
	        }
	      });
	    }

	    var allClasses = [];
	    var addClasses = [];

	    var sides = ['left', 'top', 'right', 'bottom'];
	    allClasses.push(this.getClass('abutted'));
	    sides.forEach(function (side) {
	      allClasses.push(_this.getClass('abutted') + '-' + side);
	    });

	    if (abutted.length) {
	      addClasses.push(this.getClass('abutted'));
	    }

	    abutted.forEach(function (side) {
	      addClasses.push(_this.getClass('abutted') + '-' + side);
	    });

	    defer(function () {
	      if (!(_this.options.addTargetClasses === false)) {
	        updateClasses(_this.target, addClasses, allClasses);
	      }
	      updateClasses(_this.element, addClasses, allClasses);
	    });

	    return true;
	  }
	});
	/* globals TetherBase */

	'use strict';

	var _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();

	TetherBase.modules.push({
	  position: function position(_ref) {
	    var top = _ref.top;
	    var left = _ref.left;

	    if (!this.options.shift) {
	      return;
	    }

	    var shift = this.options.shift;
	    if (typeof this.options.shift === 'function') {
	      shift = this.options.shift.call(this, { top: top, left: left });
	    }

	    var shiftTop = undefined,
	        shiftLeft = undefined;
	    if (typeof shift === 'string') {
	      shift = shift.split(' ');
	      shift[1] = shift[1] || shift[0];

	      var _shift = shift;

	      var _shift2 = _slicedToArray(_shift, 2);

	      shiftTop = _shift2[0];
	      shiftLeft = _shift2[1];

	      shiftTop = parseFloat(shiftTop, 10);
	      shiftLeft = parseFloat(shiftLeft, 10);
	    } else {
	      shiftTop = shift.top;
	      shiftLeft = shift.left;
	    }

	    top += shiftTop;
	    left += shiftLeft;

	    return { top: top, left: left };
	  }
	});
	return Tether;

	}));


/***/ },
/* 358 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
	 * A mixin for handling (effectively) onClickOutside for React components.
	 * Note that we're not intercepting any events in this approach, and we're
	 * not using double events for capturing and discarding in layers or wrappers.
	 *
	 * The idea is that components define function
	 *
	 *   handleClickOutside: function() { ... }
	 *
	 * If no such function is defined, an error will be thrown, as this means
	 * either it still needs to be written, or the component should not be using
	 * this mixing since it will not exhibit onClickOutside behaviour.
	 *
	 */
	(function (root, factory) {
	  if (true) {
	    // AMD. Register as an anonymous module.
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(11)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if (typeof exports === 'object') {
	    // Node. Note that this does not work with strict
	    // CommonJS, but only CommonJS-like environments
	    // that support module.exports
	    module.exports = factory(require('react'));
	  } else {
	    // Browser globals (root is window)
	    root.OnClickOutside = factory(React);
	  }
	}(this, function (React) {
	  "use strict";

	  // Use a parallel array because we can't use
	  // objects as keys, they get toString-coerced
	  var registeredComponents = [];
	  var handlers = [];

	  var IGNORE_CLASS = 'ignore-react-onclickoutside';

	  return {
	    componentDidMount: function() {
	      if(!this.handleClickOutside)
	        throw new Error("Component lacks a handleClickOutside(event) function for processing outside click events.");

	      var fn = this.__outsideClickHandler = (function(localNode, eventHandler) {
	        return function(evt) {
	          var source = evt.target;
	          var found = false;
	          // If source=local then this event came from "somewhere"
	          // inside and should be ignored. We could handle this with
	          // a layered approach, too, but that requires going back to
	          // thinking in terms of Dom node nesting, running counter
	          // to React's "you shouldn't care about the DOM" philosophy.
	          while(source.parentNode) {
	            found = (source === localNode || source.classList.contains(IGNORE_CLASS));
	            if(found) return;
	            source = source.parentNode;
	          }
	          eventHandler(evt);
	        }
	      }(React.findDOMNode(this), this.handleClickOutside));

	      var pos = registeredComponents.length;
	      registeredComponents.push(this);
	      handlers[pos] = fn;

	      // If there is a truthy disableOnClickOutside property for this
	      // component, don't immediately start listening for outside events.
	      if (!this.props.disableOnClickOutside) {
	        this.enableOnClickOutside();
	      }
	    },

	    componentWillUnmount: function() {
	      this.disableOnClickOutside();
	      this.__outsideClickHandler = false;
	      var pos = registeredComponents.indexOf(this);
	      if( pos>-1) {
	        if (handlers[pos]) {
	          // clean up so we don't leak memory
	          handlers.splice(pos, 1);
	          registeredComponents.splice(pos, 1);
	        }
	      }
	    },

	    /**
	     * Can be called to explicitly enable event listening
	     * for clicks and touches outside of this element.
	     */
	    enableOnClickOutside: function() {
	      var fn = this.__outsideClickHandler;
	      document.addEventListener("mousedown", fn);
	      document.addEventListener("touchstart", fn);
	    },

	    /**
	     * Can be called to explicitly disable event listening
	     * for clicks and touches outside of this element.
	     */
	    disableOnClickOutside: function(fn) {
	      var fn = this.__outsideClickHandler;
	      document.removeEventListener("mousedown", fn);
	      document.removeEventListener("touchstart", fn);
	    }
	  };

	}));


/***/ },
/* 359 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _AuthDashboard = __webpack_require__(247);

	var _Dispatcher = __webpack_require__(4);

	var _ClassesLogger = __webpack_require__(3);

	var _utils = __webpack_require__(2);

	var _Channels = __webpack_require__(360);

	var _Channels2 = _interopRequireDefault(_Channels);

	var _Groups = __webpack_require__(365);

	var _Groups2 = _interopRequireDefault(_Groups);

	var _Contacts = __webpack_require__(366);

	var _Contacts2 = _interopRequireDefault(_Contacts);

	var _SimpleComponentsHint = __webpack_require__(363);

	var _SimpleComponentsHint2 = _interopRequireDefault(_SimpleComponentsHint);

	var _ControlsModalWindow = __webpack_require__(233);

	var _SimpleComponentsIcons = __webpack_require__(252);

	// import {TransparentButton} from '../../SimpleComponents/TransparentButton';
	// import {InputSimple} from '../../SimpleComponents/InputSimple';
	// import {FlexBox} from '../../SimpleComponents/FlexBox';

	// import {ButtonSimple} from '../../Controls/Forms/ButtonSimple';
	// import {InputSimple} from '../../Controls/Forms/InputSimple';
	// import {FormGroup} from '../../Controls/Forms/FormGroup';

	var _ChannelsController = __webpack_require__(369);

	var _ChannelsController2 = _interopRequireDefault(_ChannelsController);

	var _ChatsController = __webpack_require__(374);

	var _ChatsController2 = _interopRequireDefault(_ChatsController);

	var _ContactsController = __webpack_require__(377);

	var _ContactsController2 = _interopRequireDefault(_ContactsController);

	var _ContactCenter__Block = __webpack_require__(378);

	var _ContactCenter__Block2 = _interopRequireDefault(_ContactCenter__Block);

	var _Channels__CreateChannel = __webpack_require__(379);

	var _Channels__CreateChannel2 = _interopRequireDefault(_Channels__CreateChannel);

	var _ClassesWatchController = __webpack_require__(380);

	var _ClassesWatchController2 = _interopRequireDefault(_ClassesWatchController);

	var _ChannelChannel = __webpack_require__(381);

	var _ChannelChannel2 = _interopRequireDefault(_ChannelChannel);

	var _ChatChat = __webpack_require__(391);

	var _ChatChat2 = _interopRequireDefault(_ChatChat);

	/**
	 * ContactCenter <- Channels, Groups <- ChannelsController    = список каналов и групп в контакт-центре
	 *               <- Chats            <- ChatsController       = список приватов в контакт-центе
	 *               <- Contacts         <- ContactsController    = список контактов
	 */

	var React = __webpack_require__(202);

	var ContactCenter = (function (_React$Component) {
	    _inherits(ContactCenter, _React$Component);

	    function ContactCenter(props) {
	        var _this = this;

	        _classCallCheck(this, ContactCenter);

	        _get(Object.getPrototypeOf(ContactCenter.prototype), 'constructor', this).call(this, props);

	        this.state = {
	            // isOpenModalChannelCreate: false,
	            isOpenModal: false,
	            modalType: '',

	            ccHeight: 900,

	            // channels
	            channelsHeight: 200,
	            channelsFilter: "all",
	            channelsSearchString: '',
	            channelsShowSearch: false,

	            // groups
	            groupsHeight: 200,
	            groupsFilter: "all",
	            groupsSearchString: '',
	            groupsShowSearch: false,

	            // contacts
	            contactsHeight: 200,
	            contactsFilter: "all",
	            contactsSearchString: '',
	            contactsShowSearch: false,

	            // context to show chat or channel into floating div
	            isShowContext: false,
	            contextType: '',
	            contextId: null
	        };

	        this.componentWillMount = function () {
	            // контакты, каналы, группы, чаты будут доступны на каждой странице
	            _AuthDashboard.AppState.myContacts = new _ContactsController2['default']();
	            _AuthDashboard.AppState.myChannels = new _ChannelsController2['default']();
	            _AuthDashboard.AppState.myChats = new _ChatsController2['default']();
	            _AuthDashboard.AppState.myWatch = new _ClassesWatchController2['default']();

	            // WATCH TESTS
	            // AppState.myWatch.regUsers([11,12,13]);
	            // AppState.myWatch.regUsers([12,13,14]);
	            // AppState.myWatch.regUsers([15,66]);
	            // AppState.myWatch.setUsersOnline( {online: [15,66]} );
	            // logger.log('is user online = ' + AppState.myWatch.isUserOnline(11));
	            // logger.log('is user online = ' + AppState.myWatch.isUserOnline(15));
	            // logger.log('is user online = ' + AppState.myWatch.isUserOnline(100));
	            // AppState.myWatch.setOneUserOnline( {user_id: 11} );
	            // AppState.myWatch.setOneUserOffline( {user_id: 66} );
	            // logger.log('is user online = ' + AppState.myWatch.isUserOnline(11));
	        };

	        this.componentDidMount = function () {
	            // контакт-центр висит на каждой странице, делаем тут основные
	            // подписки на события по каналам и приватам
	            //
	            // события будут транслированы в контроллеры каналов или чатов,
	            // вся логика обновления контакт-центра и истории сообщений там
	            //
	            // каналы
	            _Dispatcher.Events.on(_Dispatcher.Events.EV_MSG_CHANNEL_NEW, _this.onChannelEvent);
	            _Dispatcher.Events.on(_Dispatcher.Events.EV_MSG_CHANNEL_CORRECT, _this.onChannelEvent);
	            _Dispatcher.Events.on(_Dispatcher.Events.EV_MSG_CHANNEL_ERASE, _this.onChannelEvent);
	            _Dispatcher.Events.on(_Dispatcher.Events.EV_MSG_CHANNEL_UNREADED, _this.onChannelEvent);
	            _Dispatcher.Events.on(_Dispatcher.Events.EV_MSG_CHANNEL_INVITE, _this.onChannelEvent);
	            _Dispatcher.Events.on(_Dispatcher.Events.EV_MSG_CHANNEL_USER_UPSERT, _this.onChannelEvent);
	            _Dispatcher.Events.on(_Dispatcher.Events.EV_MSG_CHANNEL_USER_LEAVE, _this.onChannelEvent);
	            _Dispatcher.Events.on(_Dispatcher.Events.EV_MSG_CHANNEL_ORDERS, _this.onChannelEvent);
	            _AuthDashboard.AppState.myChannels.on('Channels_open', _this.onOpenChannel);
	            _AuthDashboard.AppState.myChannels.on('Channels_close', _this.onCloseContext);
	            // переделать
	            _Dispatcher.Events.on(_Dispatcher.Events.EV_MSG_CHANNEL_DELETED, _this.onChannelDeleted);

	            // чаты-приваты
	            _Dispatcher.Events.on(_Dispatcher.Events.EV_MSG_PRIVATE_NEW, _this.onChatEvent);
	            _Dispatcher.Events.on(_Dispatcher.Events.EV_MSG_PRIVATE_UNREADED, _this.onChatEvent);
	            _Dispatcher.Events.on(_Dispatcher.Events.EV_MSG_PRIVATE_INTERLOCUTOR_LRM, _this.onChatEvent);
	            _AuthDashboard.AppState.myChats.on('Chats_open', _this.onOpenChat);
	            _AuthDashboard.AppState.myChats.on('Chats_close', _this.onCloseContext);

	            // статусы онлайн-офлайн
	            _Dispatcher.Events.on(_Dispatcher.Events.EV_WEBSOCKET_REG, _AuthDashboard.AppState.myWatch.watchUsers);
	            _Dispatcher.Events.on(_Dispatcher.Events.EV_WATCH_USERS_INIT, _AuthDashboard.AppState.myWatch.setUsersOnline);
	            _Dispatcher.Events.on(_Dispatcher.Events.EV_USER_ONLINE, _AuthDashboard.AppState.myWatch.setOneUserOnline);
	            _Dispatcher.Events.on(_Dispatcher.Events.EV_USER_OFFLINE, _AuthDashboard.AppState.myWatch.setOneUserOffline);

	            _utils.Utils.addWindowEvent('resize', _this.onResizeWindow);

	            _this.recalcHeights();
	        };

	        this.componentWillUnmount = function () {
	            // каналы
	            _Dispatcher.Events.rem(_Dispatcher.Events.EV_MSG_CHANNEL_NEW, _this.onChannelEvent);
	            _Dispatcher.Events.rem(_Dispatcher.Events.EV_MSG_CHANNEL_CORRECT, _this.onChannelEvent);
	            _Dispatcher.Events.rem(_Dispatcher.Events.EV_MSG_CHANNEL_ERASE, _this.onChannelEvent);
	            _Dispatcher.Events.rem(_Dispatcher.Events.EV_MSG_CHANNEL_UNREADED, _this.onChannelEvent);
	            _Dispatcher.Events.rem(_Dispatcher.Events.EV_MSG_CHANNEL_INVITE, _this.onChannelEvent);
	            _Dispatcher.Events.rem(_Dispatcher.Events.EV_MSG_CHANNEL_USER_LEAVE, _this.onChannelEvent);
	            _Dispatcher.Events.rem(_Dispatcher.Events.EV_MSG_CHANNEL_USER_UPSERT, _this.onChannelEvent);
	            _AuthDashboard.AppState.myChannels.rem('Channels_open', _this.onOpenChannel);
	            _AuthDashboard.AppState.myChannels.rem('Channels_close', _this.onCloseContext);

	            _Dispatcher.Events.rem(_Dispatcher.Events.EV_MSG_CHANNEL_DELETED, _this.onChannelDeleted);

	            // чаты-приваты
	            _Dispatcher.Events.rem(_Dispatcher.Events.EV_MSG_PRIVATE_NEW, _this.onChatEvent);
	            _Dispatcher.Events.rem(_Dispatcher.Events.EV_MSG_PRIVATE_UNREADED, _this.onChatEvent);
	            _Dispatcher.Events.rem(_Dispatcher.Events.EV_MSG_PRIVATE_INTERLOCUTOR_LRM, _this.onChatEvent);
	            _AuthDashboard.AppState.myChats.rem('Chats_open', _this.onOpenChat);
	            _AuthDashboard.AppState.myChats.rem('Chats_close', _this.onCloseContext);

	            // статусы онлайн-офлайн
	            _Dispatcher.Events.rem(_Dispatcher.Events.EV_WEBSOCKET_REG, _AuthDashboard.AppState.myWatch.watchUsers);
	            _Dispatcher.Events.rem(_Dispatcher.Events.EV_WATCH_USERS_INIT, _AuthDashboard.AppState.myWatch.setUsersOnline); // список всех юзеров онлайн
	            _Dispatcher.Events.rem(_Dispatcher.Events.EV_USER_ONLINE, _AuthDashboard.AppState.myWatch.setOneUserOnline);
	            _Dispatcher.Events.rem(_Dispatcher.Events.EV_USER_OFFLINE, _AuthDashboard.AppState.myWatch.setOneUserOffline);

	            _utils.Utils.remWindowEvent('resize', _this.onResizeWindow);
	        };

	        this.onChatEvent = function (event) {
	            _AuthDashboard.AppState.myChats.onChatEvent(event);
	        };

	        this.onChannelEvent = function (event) {
	            _AuthDashboard.AppState.myChannels.onChannelEvent(event);
	        };

	        this.onChannelDeleted = function (event) {
	            _AuthDashboard.AppState.myChannels.destroyСhannel(event.channel_id);
	        };

	        this.isShowBlock = function (name) {
	            return !_this.hideBlock.some(function (block) {
	                return block == name;
	            });
	        };

	        this.openModalGroupCreate = function () {
	            _this.setState({ isOpenModal: true, modalType: "group" });
	        };

	        this.openModalChannelCreate = function () {
	            _this.setState({ isOpenModal: true, modalType: "channel" });
	        };

	        this.closeModal = function () {
	            _this.setState({ isOpenModal: false, modalType: '' });
	        };

	        this.onChangeHandler = function (obj) {
	            _this.setState(obj);
	        };

	        this.createGroup = function (title) {
	            _ClassesLogger.logger.log('create group t= ' + title, _this);
	            _AuthDashboard.AppState.myChannels.createGroup(title);
	            _this.closeModal();
	        };

	        this.createChannel = function (title) {
	            _ClassesLogger.logger.log('create channel t= ' + title, _this);
	            _AuthDashboard.AppState.myChannels.createChannel(title);
	            _this.closeModal();
	        };

	        this.onResizeWindow = function () {
	            _this.recalcHeights();
	            _this.setState({ ccHeight: _this.ccHeight });
	        };

	        this.recalcHeights = function () {

	            _this.ccHeight = _utils.Utils.getClientHeight() - 80; // высота всего контакт-центра
	            var blockHided = 1; // высота блока в свернутом виде
	            var blockOpen = 10; // дефолтное значение, будет пересчитано в зависимости от видимости блоков
	            var blockWrapper = 90; // высота обертки блока (тайтл, переключатели)
	            var cntHided = _this.hideBlock.length || 0; // сколько блоков скрыто
	            var cntAll = Object.keys(_this.blockClassNames).length || 0; // сколько открыто

	            var areaHeight = _this.ccHeight - blockWrapper * cntAll; // высота ареи под блоки (за минусом оберток блоков)

	            if (cntHided != cntAll) {
	                blockOpen = Math.ceil((areaHeight - blockHided * cntHided) / (cntAll - cntHided) + cntHided * 10);
	            }

	            // размеры блоков
	            _this.setState({ ccHeight: _this.ccHeight,
	                channelsHeight: _this.isShowBlock('channels') ? blockOpen : blockHided,
	                contactsHeight: _this.isShowBlock('contacts') ? blockOpen : blockHided,
	                groupsHeight: _this.isShowBlock('groups') ? blockOpen : blockHided });
	        };

	        this.onSearch = function (e) {
	            if (!e.target.dataset.name) return;
	            _this.setState(_defineProperty({}, e.target.dataset.name + 'SearchString', e.target.value));
	        };

	        this.toggleSearch = function (name) {
	            var _setState2;

	            if (!name) return;
	            _this.setState((_setState2 = {}, _defineProperty(_setState2, name + 'ShowSearch', !_this.state[name + 'ShowSearch']), _defineProperty(_setState2, name + 'SearchString', ''), _setState2));
	        };

	        this.toggleFilter = function (e) {
	            if (!e.target.dataset.name) return;
	            _this.setState(_defineProperty({}, e.target.dataset.name + 'Filter', e.target.dataset.value));
	        };

	        this.onOpenChat = function (id) {
	            // logger.log('onOpenChat id= '+id, this);
	            _this.setState({ isShowContext: true, contextType: 'chat', contextId: id });
	        };

	        this.onOpenChannel = function (id) {
	            // logger.log('onOpenChannel id= '+id, this);
	            _this.setState({ isShowContext: true, contextType: 'channel', contextId: id });
	        };

	        this.onCloseContext = function () {
	            _this.setState({ isShowContext: false, contextType: '', contextId: null });
	        };

	        this.render = function () {

	            // подгоняем высоту под экран
	            var ccStyle = { height: _this.state.ccHeight + "px" };

	            return React.createElement(
	                'div',
	                null,
	                React.createElement(
	                    'div',
	                    { className: 'contact-center', style: ccStyle },
	                    React.createElement(
	                        _ContactCenter__Block2['default'],
	                        { name: 'channels',
	                            title: 'Каналы',
	                            activeFilter: _this.state.channelsFilter,
	                            onToggleFilter: _this.toggleFilter,
	                            onToggleSearch: _this.toggleSearch,
	                            onSearchChange: _this.onSearch,
	                            onCreate: _this.openModalChannelCreate },
	                        React.createElement(_Channels2['default'], { height: _this.state.channelsHeight,
	                            filter: _this.state.channelsFilter,
	                            searchString: _this.state.channelsSearchString })
	                    ),
	                    React.createElement(
	                        _ContactCenter__Block2['default'],
	                        { name: 'contacts',
	                            title: 'Сообщения',
	                            activeFilter: _this.state.contactsFilter,
	                            onToggleFilter: _this.toggleFilter,
	                            onToggleSearch: _this.toggleSearch,
	                            onSearchChange: _this.onSearch },
	                        React.createElement(_Contacts2['default'], { height: _this.state.contactsHeight,
	                            filter: _this.state.contactsFilter,
	                            searchString: _this.state.contactsSearchString })
	                    ),
	                    React.createElement(
	                        _ContactCenter__Block2['default'],
	                        { name: 'groups',
	                            title: 'Группы',
	                            activeFilter: _this.state.groupsFilter,
	                            onToggleFilter: _this.toggleFilter,
	                            onToggleSearch: _this.toggleSearch,
	                            onSearchChange: _this.onSearch,
	                            onCreate: _this.openModalGroupCreate },
	                        React.createElement(_Groups2['default'], { height: _this.state.groupsHeight,
	                            filter: _this.state.groupsFilter,
	                            searchString: _this.state.groupsSearchString })
	                    ),
	                    React.createElement(
	                        _ControlsModalWindow.ModalWindow,
	                        { isOpen: _this.state.isOpenModal,
	                            onClose: _this.closeModal,
	                            title: _this.state.modalType == 'group' ? "Новая группа" : "Новый канал" },
	                        React.createElement(_Channels__CreateChannel2['default'],
	                        // type={this.state.modalType}
	                        { onSave: _this.state.modalType == 'group' ? _this.createGroup : _this.createChannel,
	                            onClose: _this.closeModal })
	                    )
	                ),
	                _this.state.isShowContext && _this.state.contextId ? React.createElement(
	                    'div',
	                    { className: 'channel-container' },
	                    _this.state.contextType == 'chat' ? React.createElement(_ChatChat2['default'], { id: _this.state.contextId }) : null,
	                    _this.state.contextType == 'channel' ? React.createElement(_ChannelChannel2['default'], { id: _this.state.contextId }) : null
	                ) : null
	            );
	        };

	        this.hideBlock = [];
	        this.blockStdClassName = "contact-center__box-header";
	        this.blockClassNames = { channels: this.blockStdClassName,
	            contacts: this.blockStdClassName,
	            groups: this.blockStdClassName
	        };
	    }

	    // <ModalWindow title="Новая группа" isOpen={this.state.isOpenModalGroupCreate} onClose={this.closeModalGroupCreate}>
	    //                         <FlexBox direction="row" alignItems="center">
	    //                             <label className="label label-width-md">Название группы</label>
	    //                             <InputSimple name="channelName" placeholder="" onChange={this.onChangeHandler} />
	    //                         </FlexBox>
	    //                         <div className="box-row-nw just-end marg-t">
	    //                             <TransparentButton onClick={this.createGroup} caption="Создать"/>
	    //                             <TransparentButton onClick={this.closeModalGroupCreate} caption="Отменить"/>
	    //                         </div>
	    //                     </ModalWindow>

	    // <div className="channel">
	    //                             { this.state.contextType == 'chat' ? <Chat id={this.state.contextId} /> : null }
	    //                             { this.state.contextType == 'channel' ? <Channel id={this.state.contextId} /> : null }
	    //                         </div>

	    // toggleTab = (tab=0) =>{
	    //     if(this.state.tabs.active == tab) return;

	    //     switch(tab){
	    //         case 0:
	    //             this.setState({ active: 0, content: <Contacts/> });
	    //         break;
	    //         case 1:
	    //             this.setState({ active: 1, content: <Privates/> });
	    //         break;
	    //     }

	    // };

	    // componentDidMount = () => {
	    //     this.toggleTab();
	    // };

	    // return(
	    //             <div className="contact-center">
	    //                 <Channels/>

	    //                 <div className="contact-center__box">
	    //                     <div className="contact-center__box-header">
	    //                         {tabs}
	    //                     </div>
	    //                     <div className="contact-center__box-content">
	    //                         {this.state.content}
	    //                     </div>
	    //                 </div>          

	    //                 <Groups/>
	    //             </div>
	    //         )
	    return ContactCenter;
	})(React.Component);

	exports['default'] = ContactCenter;
	module.exports = exports['default'];

	// toggleBlock =(e)=> {

	//     if ( !e.target.dataset ) return;

	//     // добавляем или убираем скрытые блоки
	//     if( this.hideBlock.some( block => block == e.target.dataset.name) ) {
	//         this.hideBlock = this.hideBlock.filter( block => block != e.target.dataset.name );
	//         this.blockClassNames[e.target.dataset.name] = this.blockStdClassName;
	//     } else {
	//         this.hideBlock.push( e.target.dataset.name );
	//         this.blockClassNames[e.target.dataset.name] = this.blockStdClassName + "-hidden";
	//     }
	//     this.recalcHeights();
	// }

	// пересчет высоты остальных блоков при их открытии/закрытии
	// TODO: в новом дизайне переделать на css и флексах

/***/ },
/* 360 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _AuthDashboard = __webpack_require__(247);

	var _Dispatcher = __webpack_require__(4);

	var _ClassesLoggerJs = __webpack_require__(3);

	var _SimpleComponentsLoading = __webpack_require__(361);

	var _SimpleComponentsModalWindow = __webpack_require__(362);

	var _SimpleComponentsTransparentButtonJs = __webpack_require__(264);

	var _SimpleComponentsInputSimple = __webpack_require__(248);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	var _SimpleComponentsHintJs = __webpack_require__(363);

	var _SimpleComponentsHintJs2 = _interopRequireDefault(_SimpleComponentsHintJs);

	var _Channels__OneChannelJs = __webpack_require__(364);

	var _Channels__OneChannelJs2 = _interopRequireDefault(_Channels__OneChannelJs);

	var React = __webpack_require__(202);

	var Channels = (function (_React$Component) {
	    _inherits(Channels, _React$Component);

	    function Channels(props) {
	        var _this = this;

	        _classCallCheck(this, Channels);

	        _get(Object.getPrototypeOf(Channels.prototype), 'constructor', this).call(this, props);
	        this.state = {
	            channels: [],
	            isLoading: true
	        };

	        this.componentWillMount = function () {};

	        this.componentDidMount = function () {
	            _this._subs('on');
	            _this._getData();
	        };

	        this.componentWillUnmount = function () {
	            _this._subs('rem');
	        };

	        this.componentWillReceiveProps = function (nextProps) {
	            _this._subs('rem');
	            _this._subs('on');
	            _this._getData();
	        };

	        this.updateChannelsList = function (channels) {
	            _this.setState({ channels: _AuthDashboard.AppState.myChannels.getAllChannels(), isLoading: false });
	        };

	        this.render = function () {

	            if (_this.state.isLoading) {
	                return React.createElement(
	                    'div',
	                    null,
	                    React.createElement(
	                        'div',
	                        { className: 'not_found' },
	                        'Загрузка...'
	                    )
	                );
	            }

	            if (!(_this.state.channels || []).length) {
	                return React.createElement(
	                    'div',
	                    null,
	                    React.createElement(
	                        'div',
	                        { className: 'not_found' },
	                        'Список каналов пуст'
	                    )
	                );
	            }

	            // поиск
	            var channelsList = _this.state.channels;
	            var searchString = _this.props.searchString.trim().toLowerCase();
	            if (searchString.length) {
	                channelsList = channelsList.filter(function (channel) {
	                    return channel.title.toLowerCase().match(searchString);
	                });
	            }

	            var style = { height: _this.props.height + "px" };
	            var channels = [];

	            channelsList.forEach(function (channel, i) {
	                //
	                // TODO: возможно, нужно будет еще делать фильтр по comp_id
	                // 
	                if (_this.props.filter == "my" && channel.flags != 2) return;
	                channels.push(React.createElement(_Channels__OneChannelJs2['default'], { key: i,
	                    id: channel.id,
	                    title: channel.title,
	                    users: channel.users,
	                    unreaded: channel.unreaded,
	                    comp_id: channel.comp_id,
	                    comp_name: channel.comp_name,
	                    orders: channel.orders,
	                    flags: channel.flags }));
	            });

	            if (!channels.length) {
	                channels.push(React.createElement(
	                    'div',
	                    { className: 'not_found', key: 1 },
	                    'Не найдено.'
	                ));
	            }

	            return React.createElement(
	                'div',
	                null,
	                channels
	            );
	        };
	    }

	    // return (
	    //             <div className="channels" style={style}>
	    //                 {channels}
	    //             </div>
	    //         )

	    _createClass(Channels, [{
	        key: '_subs',
	        value: function _subs(action) {
	            _AuthDashboard.AppState.myChannels[action]("Channels_getlist_complete", this.updateChannelsList);
	            _AuthDashboard.AppState.myChannels[action]("Channels_update", this.updateChannelsList);
	        }
	    }, {
	        key: '_getData',
	        value: function _getData() {
	            if (_AuthDashboard.AppState.myChannels.isReady) {
	                this.setState({ channels: _AuthDashboard.AppState.myChannels.getAllChannels(), isLoading: false });
	            }
	        }
	    }]);

	    return Channels;
	})(React.Component);

	exports['default'] = Channels;
	module.exports = exports['default'];

/***/ },
/* 361 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(202);
	/*
	 props:
	 dontShow
	 className
	 dataRecived
	 */

	var Loading = (function (_React$Component) {
	    _inherits(Loading, _React$Component);

	    function Loading() {
	        _classCallCheck(this, Loading);

	        _get(Object.getPrototypeOf(Loading.prototype), "constructor", this).apply(this, arguments);
	    }

	    _createClass(Loading, [{
	        key: "render",
	        value: function render() {
	            if (this.props.dataRecived) {
	                return React.createElement(
	                    "div",
	                    { className: this.props.className },
	                    this.props.children
	                );
	            } else {

	                if (this.props.dontShow) {
	                    return null;
	                } else {
	                    return React.createElement(
	                        "div",
	                        { className: "box-row-wr" },
	                        "Loading..."
	                    );
	                }
	            }
	        }
	    }], [{
	        key: "propTypes",
	        value: {

	            className: React.PropTypes.string,
	            dontShow: React.PropTypes.bool
	        },
	        enumerable: true
	    }, {
	        key: "defaultProps",
	        value: {
	            dataRecived: true
	        },
	        enumerable: true
	    }]);

	    return Loading;
	})(React.Component);

	exports.Loading = Loading;

/***/ },
/* 362 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _ClassesLogger = __webpack_require__(3);

	var _utils = __webpack_require__(2);

	var React = __webpack_require__(202);

	var ModalWindow = (function (_React$Component) {
	    _inherits(ModalWindow, _React$Component);

	    function ModalWindow() {
	        var _this = this;

	        _classCallCheck(this, ModalWindow);

	        _get(Object.getPrototypeOf(ModalWindow.prototype), 'constructor', this).apply(this, arguments);

	        this.state = {
	            isOpen: this.props.isOpen,
	            title: this.props.isOpen,
	            isShowCancel: this.props.isOpen
	        };

	        this.componentWillReceiveProps = function (props) {
	            _this.setState(props);
	        };

	        this.close = function (e) {
	            if (e.target.dataset.id === "modal") {
	                _this.setState({ isOpen: false });
	                var c = _this.props.onClose;
	                if (c) c();
	            }
	        };

	        this.render = function () {

	            var styles = null;

	            if (_this.props.width) {
	                styles = {
	                    window: {
	                        width: _this.props.width + "px"
	                    }
	                };
	            }

	            // var styles = {
	            //     back  : {
	            //         // position: "fixed",
	            //         // bottom: "0",
	            //         // left: "0",
	            //         // top: "0",
	            //         // right: "0",
	            //         // background: "rgba(0,0,0,0.5)",
	            //         // filter: "progid:DXImageTransform.Microsoft.gradient(startColorstr=#7F000000,endColorstr=#7F000000)",
	            //         // zoom: "1",
	            //         // zIndex: "1000",
	            //         // height: "100%",
	            //         //minHeight: window.screen.height + "px"
	            //     },
	            //     window: {
	            //         // position: "absolute",
	            //         // backgroundColor: "white",
	            //         // left : this.getPositionLeft( this.props.width ) + "px",
	            //         // top: this.getPositionTop( this.props.height ) + "px",
	            //         width: this.props.width + "px",
	            //         // borderRadius: "3px",
	            //         // WebkitBoxShadow: "0 3px 20px rgba(0,0,0,0.9)",
	            //         // boxShadow: "0 3px 20px rgba(0,0,0,0.9)",
	            //         // zIndex: "1100",
	            //         // padding: "10px",
	            //     }
	            // };

	            if (!_this.state.isOpen) {
	                return null;
	            } else {
	                return React.createElement(
	                    'div',
	                    { className: 'ModalWindow__Overlay', onClick: _this.close, 'data-id': 'modal' },
	                    React.createElement(
	                        'div',
	                        { className: 'ModalWindow__Window test2-animate', style: styles.window },
	                        React.createElement(
	                            'div',
	                            { className: 'panel-md' },
	                            React.createElement(
	                                'h3',
	                                { className: 'list-h3 divider' },
	                                _this.props.title
	                            ),
	                            _this.props.children
	                        )
	                    )
	                );
	            }
	        };
	    }

	    // ModalWindow

	    _createClass(ModalWindow, null, [{
	        key: 'defaultProps',
	        value: {
	            isOpen: false,
	            title: "Окно",
	            isShowCancel: true,
	            width: 400,
	            height: 200
	        },
	        enumerable: true
	    }, {
	        key: 'propTypes',
	        value: {
	            isOpen: React.PropTypes.bool.isRequired,
	            isShowCancel: React.PropTypes.bool,
	            title: React.PropTypes.string,
	            onClose: React.PropTypes.func,
	            width: React.PropTypes.number,
	            height: React.PropTypes.number
	        },
	        enumerable: true
	    }]);

	    return ModalWindow;
	})(React.Component);

	// render
	exports.ModalWindow = ModalWindow;

	// componentWillMount = ()=>{
	//     Utils.addWindowEvent( 'resize', this.onResizeWindow );
	// }

	// componentWillUnmount = ()=>{
	//     Utils.remWindowEvent( 'resize', this.onResizeWindow );
	// }

	// onResizeWindow =()=> {
	//     this.forceUpdate();
	// }

	// getPositionLeft = (w)=> {
	//     //let clientWidth = document.documentElement.clientWidth;
	//     return (Utils.getClientWidth() - w) / 2;
	// }

	// getPositionTop = (h)=> {
	//     // показываем чуть повыше середины
	//     return (Utils.getClientHeight() - h - 100) / 2;
	// }

/***/ },
/* 363 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(202);

	var Hint = (function (_React$Component) {
	    _inherits(Hint, _React$Component);

	    function Hint() {
	        var _this = this;

	        _classCallCheck(this, Hint);

	        _get(Object.getPrototypeOf(Hint.prototype), 'constructor', this).apply(this, arguments);

	        this.state = {
	            isNote: false,
	            text: ''
	        };

	        this.mouseLeave = function (e) {
	            _this.setState({
	                isNote: false,
	                text: ""
	            });
	            //console.log("mouseLeave");
	        };

	        this.mouseIn = function (e) {
	            //console.log("mouseIN");
	            var text = _this.props.text;
	            //console.log(name);
	            _this.setState({
	                isNote: true,
	                text: text
	            });
	        };

	        this.render = function () {
	            var text = _this.state.isNote ? React.createElement(
	                'div',
	                { className: 'note-text' },
	                _this.state.text
	            ) : null;

	            return React.createElement(
	                'div',
	                { className: 'note', onMouseEnter: _this.mouseIn, onMouseLeave: _this.mouseLeave },
	                text,
	                _this.props.children
	            );
	        };
	    }

	    return Hint;
	})(React.Component);

	exports['default'] = Hint;
	module.exports = exports['default'];

/***/ },
/* 364 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _AuthDashboard = __webpack_require__(247);

	var _ClassesLogger = __webpack_require__(3);

	// import Hint from '../../SimpleComponents/Hint.js';

	var React = __webpack_require__(202);

	var Channels__OneChannel = (function (_React$Component) {
	    _inherits(Channels__OneChannel, _React$Component);

	    function Channels__OneChannel() {
	        var _this = this;

	        _classCallCheck(this, Channels__OneChannel);

	        _get(Object.getPrototypeOf(Channels__OneChannel.prototype), 'constructor', this).apply(this, arguments);

	        this.goto = function () {
	            _AuthDashboard.AppState.myChannels.openChannel(_this.props.id);
	        };

	        this.render = function () {

	            return React.createElement(
	                'div',
	                { key: _this.props.key, className: 'contact-center__elem', 'data-channel_id': _this.props.id },
	                React.createElement(
	                    'div',
	                    { className: 'contact-center__elem-left' },
	                    React.createElement(
	                        'div',
	                        { className: 'contact-center__channel-title pointer', onClick: _this.goto },
	                        _this.props.title
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'contact-center__channel-users' },
	                        'участников: ',
	                        _this.props.users
	                    ),
	                    (_this.props.orders || 0) > 0 ? React.createElement(
	                        'div',
	                        { className: 'contact-center__channel-users' },
	                        'заказов: ',
	                        _this.props.orders
	                    ) : null
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'contact-center__elem-right' },
	                    _this.props.unreaded ? React.createElement(
	                        'div',
	                        { className: 'contact-center__channel-unreaded' },
	                        '+',
	                        _this.props.unreaded
	                    ) : null,
	                    _this.props.flags == 1 ? React.createElement('div', { className: 'contact-center__channel-status', tooltip: 'Непринятое приглашение', 'data-state': 'invite' }) : null
	                )
	            );
	        };
	    }

	    // <a href={"/#/dashboard/channel/" + this.props.id}>{this.props.title}</a>

	    // return(
	    //             <div key={this.props.key} className="channels__channel" data-channel_id={this.props.id}>
	    //                 <div className="channels__channel-left">
	    //                     <div className="channels__channel-status">
	    //                         { this.props.flags == 1
	    //                                             ? <div className="channels__channel-status-icon-invite"><Hint text="Непринятое приглашение">!</Hint></div>
	    //                                             : <div className="channels__channel-status-no-icon"/> }
	    //                     </div>
	    //                     <div className="channels__channel-info">
	    //                         <a href={"/#/dashboard/channel/" + this.props.id}>{this.props.title}</a>
	    //                         <p>участников: {this.props.users}</p>
	    //                     </div>
	    //                 </div>
	    //                 <div className="channels__channel-right">
	    //                     { this.props.unreaded ? <div className="channels__channel-unreader">{this.props.unreaded}</div> : null }
	    //                 </div>
	    //             </div>
	    //         )

	    _createClass(Channels__OneChannel, null, [{
	        key: 'propTypes',
	        value: {
	            key: React.PropTypes.number,
	            id: React.PropTypes.number,
	            title: React.PropTypes.string,
	            users: React.PropTypes.number,
	            unreaded: React.PropTypes.number,
	            flags: React.PropTypes.number
	        },
	        enumerable: true
	    }, {
	        key: 'defaultProps',
	        value: {},
	        enumerable: true
	    }]);

	    return Channels__OneChannel;
	})(React.Component);

	exports['default'] = Channels__OneChannel;
	module.exports = exports['default'];

/***/ },
/* 365 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _AuthDashboard = __webpack_require__(247);

	var _Dispatcher = __webpack_require__(4);

	var _ClassesLoggerJs = __webpack_require__(3);

	var _SimpleComponentsLoading = __webpack_require__(361);

	var _SimpleComponentsModalWindow = __webpack_require__(362);

	var _SimpleComponentsTransparentButtonJs = __webpack_require__(264);

	var _SimpleComponentsInputSimple = __webpack_require__(248);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	var _SimpleComponentsHintJs = __webpack_require__(363);

	var _SimpleComponentsHintJs2 = _interopRequireDefault(_SimpleComponentsHintJs);

	var _Channels__OneChannelJs = __webpack_require__(364);

	var _Channels__OneChannelJs2 = _interopRequireDefault(_Channels__OneChannelJs);

	/**
	 * Группа - это канал с типом group, для работы с группой используется
	 * тот же ChannelsController, что и для каналов. 
	 * Отличие - при формировании списка групп в контакт-центре используем getAllGroups
	 */

	var React = __webpack_require__(202);

	var Groups = (function (_React$Component) {
	    _inherits(Groups, _React$Component);

	    function Groups(props) {
	        var _this = this;

	        _classCallCheck(this, Groups);

	        _get(Object.getPrototypeOf(Groups.prototype), 'constructor', this).call(this, props);
	        this.state = {
	            channels: [],
	            isLoading: true
	        };

	        this.componentWillMount = function () {};

	        this.componentDidMount = function () {
	            _this._subs('on');
	            _this._getData();

	            // AppState.myChannels.on('Channels_getlist_complete', this.updateChannels);
	            // AppState.myChannels.getGroupsList();
	            // Events.on(Events.EV_MSG_CHANNEL_INVITE, this.gotInviteChannel);
	        };

	        this.componentWillUnmount = function () {
	            _this._subs('rem');

	            // AppState.myChannels.rem('Channels_getlist_complete', this.updateChannels);
	            // Events.rem(Events.EV_MSG_CHANNEL_INVITE, this.gotInviteChannel);
	        };

	        this.componentWillReceiveProps = function (nextProps) {
	            _this._subs('rem');
	            _this._subs('on');
	            _this._getData();
	        };

	        this.updateChannelsList = function (channels) {
	            _this.setState({ channels: _AuthDashboard.AppState.myChannels.getAllGroups(), isLoading: false });
	        };

	        this.render = function () {

	            if (_this.state.isLoading) {
	                return React.createElement(
	                    'div',
	                    null,
	                    React.createElement(
	                        'div',
	                        { className: 'not_found' },
	                        'Загрузка...'
	                    )
	                );
	            }

	            if (!(_this.state.channels || []).length) {
	                return React.createElement(
	                    'div',
	                    null,
	                    React.createElement(
	                        'div',
	                        { className: 'not_found' },
	                        'Список групп пуст'
	                    )
	                );
	            }

	            // поиск по группам
	            var groupsList = _this.state.channels;
	            var searchString = _this.props.searchString.trim().toLowerCase();
	            if (searchString.length) {
	                groupsList = groupsList.filter(function (group) {
	                    return group.title.toLowerCase().match(searchString);
	                });
	            }

	            var style = { height: _this.props.height + "px" };
	            var groups = [];

	            groupsList.forEach(function (channel, i) {
	                if (_this.props.filter == "my" && channel.flags != 2) return;
	                groups.push(React.createElement(_Channels__OneChannelJs2['default'], { key: i,
	                    id: channel.id,
	                    title: channel.title,
	                    users: channel.users,
	                    unreaded: channel.unreaded,
	                    flags: channel.flags }));
	            });

	            if (!groups.length) {
	                groups.push(React.createElement(
	                    'div',
	                    { className: 'not_found', key: 1 },
	                    'Не найдено.'
	                ));
	            }

	            return React.createElement(
	                'div',
	                null,
	                groups
	            );
	        };
	    }

	    // return (
	    //             <div className="channels" style={style}>
	    //                 {groups}
	    //             </div>
	    //         )

	    // export class GroupsAll extends React.Component {

	    //     constructor( props ) {
	    //         super( props );
	    //     };

	    //     static propTypes = {
	    //         channels: React.PropTypes.array.isRequired,
	    //     };

	    //     static defaultProps = {
	    //         channels: []
	    //     };

	    //     render = ()=> {

	    //         if(!this.props.channels.length){
	    //             return (
	    //                 <div className="channels">
	    //                     <div className="not_found">Список каналов пуст</div>
	    //                 </div>
	    //             )
	    //         }

	    //         var ChannelsAll =   this.props.channels.map((channel, i) => {
	    //                                 return (
	    //                                     <div key={i} className="channels__channel" data-channel_id={channel.id}>
	    //                                         <div className="channels__channel-info">
	    //                                             <a href={"/#/dashboard/channel/" + channel.id}>{channel.title}</a>
	    //                                             <p>Участников: {channel.users}</p>
	    //                                         </div>
	    //                                         <div className="channels__channel-unreader">
	    //                                             {channel.unreaded == 0 ? null : channel.unreaded} 
	    //                                         </div>      
	    //                                     </div> 
	    //                                 )
	    //                             });

	    //         return (
	    //             <div className="channels">
	    //                 {ChannelsAll}
	    //             </div>
	    //         )
	    //     };

	    // }

	    // export {GroupsAll}

	    // export class GroupsMy extends React.Component {

	    //     constructor( props ) {
	    //         super( props );
	    //     }

	    //     static propTypes = {
	    //         channels: React.PropTypes.array.isRequired,
	    //     }

	    //     static defaultProps = {
	    //         channels: []
	    //     }

	    //     state = {
	    //         isOpenModalChannelCreate: false
	    //     }

	    //     openModalChannelCreate = ()=>{
	    //         this.setState({ isOpenModalChannelCreate: true });
	    //     }
	    //     closeModalChannelCreate = ()=>{
	    //         this.setState({ isOpenModalChannelCreate: false });
	    //     }

	    //     onChangeHandler = (obj)=>{
	    //         this.setState(obj);
	    //     };

	    //     createChannel = ()=>{
	    //         AppState.myChannels.createChannel(this.state.channelName);
	    //         this.closeModalChannelCreate();
	    //     };

	    //     render = ()=> {
	    //         let ChannelsMy =    this.props.channels.map((channel, i)=>{
	    //                                 if(channel.flags != 2) return;

	    //                                 return (
	    //                                      <div key={i} className="channels__channel" data-channel_id={channel.id}>
	    //                                         <div className="channels__channel-info">
	    //                                             <a href={"/#/dashboard/channel/" + channel.id}>{channel.title}</a>
	    //                                             <p>Участников: {channel.users}</p>
	    //                                         </div>
	    //                                         <div className="channels__channel-unreader">
	    //                                             {channel.unreaded == 0 ? null : channel.unreaded} 
	    //                                         </div>      
	    //                                     </div> 
	    //                                 )
	    //                             });

	    //         return (
	    //             <div className="channels">

	    //                 {ChannelsMy}
	    //                 <TransparentButton onClick={this.openModalChannelCreate} onClose={this.closeModalChannelCreate} caption="Создать канал"/>

	    //                 <ModalWindow title="Новый канал" isOpen={this.state.isOpenModalChannelCreate} onClose={this.closeModalChannelCreate}>
	    //                     <FlexBox direction="row" alignItems="center">
	    //                         <label className="label label-width-md">Название канала</label>
	    //                         <InputSimple name="channelName" placeholder="" onChange={this.onChangeHandler} />
	    //                     </FlexBox>
	    //                     <div className="box-row-nw just-end marg-t">
	    //                         <TransparentButton onClick={this.createChannel} caption="Создать"/>
	    //                         <TransparentButton onClick={this.closeModalChannelCreate} caption="Отменить"/>
	    //                     </div>
	    //                 </ModalWindow>    
	    //             </div>
	    //         )
	    //     };

	    // }

	    // export {GroupsMy}

	    _createClass(Groups, [{
	        key: '_subs',
	        value: function _subs(action) {
	            _AuthDashboard.AppState.myChannels[action]("Channels_getlist_complete", this.updateChannelsList);
	            _AuthDashboard.AppState.myChannels[action]("Channels_update", this.updateChannelsList);
	        }
	    }, {
	        key: '_getData',
	        value: function _getData() {
	            if (_AuthDashboard.AppState.myChannels.isReady) {
	                this.setState({ channels: _AuthDashboard.AppState.myChannels.getAllGroups(), isLoading: false });
	            }
	        }
	    }]);

	    return Groups;
	})(React.Component);

	exports['default'] = Groups;
	module.exports = exports['default'];

/***/ },
/* 366 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _AuthDashboard = __webpack_require__(247);

	var _Dispatcher = __webpack_require__(4);

	var _ClassesLoggerJs = __webpack_require__(3);

	var _ControlsModalWindow = __webpack_require__(233);

	var _ControlsFormsButtonSimple = __webpack_require__(226);

	var _Contacts__UserJs = __webpack_require__(367);

	var _Contacts__UserJs2 = _interopRequireDefault(_Contacts__UserJs);

	var _Contacts__ChatJs = __webpack_require__(368);

	var _Contacts__ChatJs2 = _interopRequireDefault(_Contacts__ChatJs);

	var React = __webpack_require__(202);

	var Contacts = (function (_React$Component) {
	    _inherits(Contacts, _React$Component);

	    function Contacts(props) {
	        var _this = this;

	        _classCallCheck(this, Contacts);

	        _get(Object.getPrototypeOf(Contacts.prototype), 'constructor', this).call(this, props);

	        // что показываем - контакты или чаты
	        this.state = {
	            data: [],
	            modalRemoveContact: {
	                isOpen: false,
	                first_name: null,
	                last_name: null,
	                id: null
	            },
	            isShowActions: false,
	            actionUserId: null,
	            isLoading: true
	        };

	        this.componentWillMount = function () {
	            // logger.log(this, 'will mount cc-chats');
	            _this._setContext(_this.props);
	        };

	        this.componentDidMount = function () {
	            // logger.log(this, 'did mount cc-chats');
	            _this._subs('on');
	            _this._getData();
	        };

	        this.componentWillUnmount = function () {
	            // logger.log(this, 'unmount cc-chats');
	            _this._subs('rem');
	        };

	        this.componentWillReceiveProps = function (nextProps) {
	            // logger.log(this, 'receive props cc-chats');
	            _this._setContext(nextProps);
	            _this._subs('rem');
	            _this._subs('on');
	            _this._getData();
	        };

	        this.onWatchStatusChange = function (data) {
	            _this.forceUpdate();
	            // this.setState({ onlineUsers: data });
	            _ClassesLoggerJs.logger.log(_this, 'onWatchStatusChange', _this, data);
	        };

	        this.updateData = function (data) {
	            _ClassesLoggerJs.logger.log(_this, 'updateChatsList', _this);

	            _this.setState({ data: data, isLoading: false });
	        };

	        this.updateContactsList = function (contacts) {
	            // logger.log(this, 'updateContactsList', this);
	            _AuthDashboard.AppState.myChats.getChatsList();
	        };

	        this.removeContact = function () {
	            _AuthDashboard.AppState.myContacts.removeContact(_this.state.modalRemoveContact.id);
	            _this.closeModalRemoveContact();
	        };

	        this.closeModalRemoveContact = function () {
	            _this.setState({
	                modalRemoveContact: { isOpen: false, first_name: null, last_name: null, id: null }
	            });
	        };

	        this.openModalRemoveContact = function (first_name, last_name, id) {
	            if (!id) return;
	            _this.setState({
	                modalRemoveContact: { isOpen: true, first_name: first_name, last_name: last_name, id: id }
	            });
	        };

	        this.render = function () {

	            var style = { height: _this.props.height + "px" };
	            var data = _this.type == "all" ? _this.state.data : _this.state.data.filter(function (chat) {
	                return chat.in_contact == true;
	            });

	            if (_this.state.isLoading) return React.createElement(
	                'div',
	                { className: 'not_found' },
	                'Загрузка...'
	            );
	            if (!(data || []).length) return React.createElement(
	                'div',
	                { className: 'not_found' },
	                'Список пуст'
	            );

	            // поиск
	            var searchString = _this.props.searchString.trim().toLowerCase();
	            if (searchString.length) {
	                data = data.filter(function (contact) {
	                    return contact.first_name.toLowerCase().match(searchString) || contact.last_name.toLowerCase().match(searchString) || contact.comp_name.toLowerCase().match(searchString);
	                });
	            }

	            var dataList = [];

	            // список контактов
	            if (_this.type == "my") {
	                data.forEach(function (contact, i) {
	                    dataList.push(React.createElement(_Contacts__UserJs2['default'], { key: i, user: contact, onModalOpen: _this.openModalRemoveContact, showActions: true }));
	                });

	                // список всех чатов + контактов
	            } else {
	                    data.forEach(function (contact, i) {
	                        dataList.push(React.createElement(_Contacts__ChatJs2['default'], { key: i, user: contact }));
	                    });
	                }

	            if (!dataList.length) dataList.push(React.createElement(
	                'div',
	                { className: 'not_found', key: 1 },
	                'Не найдено.'
	            ));

	            return React.createElement(
	                'div',
	                null,
	                dataList,
	                React.createElement(
	                    _ControlsModalWindow.ModalWindow,
	                    { isOpen: _this.state.modalRemoveContact.isOpen,
	                        onClose: _this.closeModalRemoveContact,
	                        title: 'Удаление контакта' },
	                    React.createElement(
	                        'div',
	                        { className: 'modal-container__body' },
	                        React.createElement(
	                            'div',
	                            null,
	                            'Вы действительно хотите удалить ',
	                            React.createElement(
	                                'b',
	                                null,
	                                '"',
	                                _this.state.modalRemoveContact.first_name,
	                                ' ',
	                                _this.state.modalRemoveContact.last_name,
	                                '"'
	                            ),
	                            ' из ваших контактов?'
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'modal-container__footer' },
	                            React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { type: 'danger', onClick: _this.removeContact, caption: 'Удалить' })
	                        )
	                    )
	                )
	            );
	        };

	        this.type = null;
	    }

	    // <ModalWindow isOpen={this.state.modalRemoveContact.isOpen} onClose={this.closeModalRemoveContact} title="Удаление контакта" width={350}>
	    //                     <div>Вы действительно хотите удалить <b>"{this.state.modalRemoveContact.first_name} {this.state.modalRemoveContact.last_name}"</b> из ваших контактов?</div>
	    //                     <div className="box-row-nw just-end marg-t">
	    //                         <TransparentButton onClick={this.removeContact} caption="Удалить"/>
	    //                         <TransparentButton onClick={this.closeModalRemoveContact} caption="Отменить"/>
	    //                     </div>
	    //                 </ModalWindow>

	    _createClass(Contacts, [{
	        key: '_setContext',
	        value: function _setContext(props) {
	            this.type = props.filter;
	        }
	    }, {
	        key: '_subs',
	        value: function _subs(action) {
	            _AuthDashboard.AppState.myChats[action]("Chats_getlist_complete", this.updateData);
	            _AuthDashboard.AppState.myChats[action]("Chats_update", this.updateData);
	            _AuthDashboard.AppState.myContacts[action]("Contacts_getlist_complete", this.updateContactsList);
	            _AuthDashboard.AppState.myWatch[action]("Watch_status_change", this.onWatchStatusChange);
	        }
	    }, {
	        key: '_getData',
	        value: function _getData() {
	            if (_AuthDashboard.AppState.myChats.isReady) this.setState({ data: _AuthDashboard.AppState.myChats.getAllChats(), isLoading: false });
	        }
	    }]);

	    return Contacts;
	})(React.Component);

	exports['default'] = Contacts;
	module.exports = exports['default'];

	// contactOnMouseLeave =(e)=> {
	//     this.setState({isShowActions: false, actionUserId: null});
	// }

	// contactOnMouseEnter =(e)=> {
	//     this.setState({isShowActions: true, actionUserId: e.target.dataset.userId});
	// }

/***/ },
/* 367 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _AuthDashboard = __webpack_require__(247);

	var _ClassesLogger = __webpack_require__(3);

	var _SimpleComponentsIconsJs = __webpack_require__(252);

	var React = __webpack_require__(202);

	var Contacts__User = (function (_React$Component) {
	    _inherits(Contacts__User, _React$Component);

	    function Contacts__User() {
	        var _this = this;

	        _classCallCheck(this, Contacts__User);

	        _get(Object.getPrototypeOf(Contacts__User.prototype), 'constructor', this).apply(this, arguments);

	        this.state = {
	            isShowActions: false
	        };

	        this.onMouseLeave = function (e) {
	            _this.setState({ isShowActions: false });
	        };

	        this.onMouseEnter = function (e) {
	            _this.setState({ isShowActions: true });
	        };

	        this.onModalOpen = function (e) {
	            if (_this.props.onModalOpen) _this.props.onModalOpen(_this.props.user.first_name, _this.props.user.last_name, _this.props.user.user_id);
	        };

	        this.goto = function () {
	            _AuthDashboard.AppState.myChats.openChat(_this.props.user.user_id);
	        };

	        this.render = function () {

	            var userCredits = _this.props.user.user_id == _AuthDashboard.AppState.user.state.id ? "Вы" : _this.props.user.first_name + ' ' + _this.props.user.last_name;

	            // logger.log('render Contacts__User', this, this.props);

	            return React.createElement(
	                'div',
	                { key: _this.props.key, className: 'contact-center__elem',
	                    'data-channel_id': _this.props.user.user_id,
	                    onMouseEnter: _this.onMouseEnter,
	                    onMouseLeave: _this.onMouseLeave },
	                React.createElement(
	                    'div',
	                    { className: 'contact-center__elem-left' },
	                    React.createElement(
	                        'div',
	                        { className: 'contact-center__user-credits pointer', onClick: _this.goto },
	                        userCredits
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'contact-center__user-company' },
	                        _this.props.user.comp_name
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'contact-center__elem-right' },
	                    _this.props.showActions && _this.state.isShowActions ? React.createElement(
	                        'div',
	                        { className: 'contact-center__user-action pointer', onClick: _this.onModalOpen },
	                        React.createElement(_SimpleComponentsIconsJs.Icon, { iconName: 'close-circle-icon', size: 18, fill: '#f96868' })
	                    ) : React.createElement('div', { className: 'contact-center__user-status', 'data-state': _AuthDashboard.AppState.myWatch.userStatus(_this.props.user.user_id) })
	                )
	            );
	        };
	    }

	    // <div className="contact-center__user-credits">{userCredits}</div>

	    //
	    // // return(
	    //             <div className="contacts__contact-layout">
	    //                 <div className="contacts__status">
	    //                     <div data-state={AppState.myWatch.userStatus(this.props.user.user_id)} />
	    //                 </div>
	    //                 <div className="contacts__contact-user">
	    //                     <div className="contacts__user-credits">
	    //                         {userCredits}
	    //                     </div>
	    //                     <div className="contacts__contact-user-company">{this.props.user.comp_name}</div>
	    //                 </div>
	    //             </div>
	    //         )

	    _createClass(Contacts__User, null, [{
	        key: 'propTypes',
	        value: {
	            user: React.PropTypes.object
	        },
	        enumerable: true
	    }]);

	    return Contacts__User;
	})(React.Component);

	exports['default'] = Contacts__User;
	module.exports = exports['default'];

/***/ },
/* 368 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _AuthDashboard = __webpack_require__(247);

	var _ClassesLogger = __webpack_require__(3);

	var React = __webpack_require__(202);

	var Contacts__Chat = (function (_React$Component) {
	    _inherits(Contacts__Chat, _React$Component);

	    function Contacts__Chat() {
	        var _this = this;

	        _classCallCheck(this, Contacts__Chat);

	        _get(Object.getPrototypeOf(Contacts__Chat.prototype), 'constructor', this).apply(this, arguments);

	        this.addContact = function () {
	            _AuthDashboard.AppState.myContacts.addContact(_this.props.user.user_id);
	        };

	        this.goto = function () {
	            _AuthDashboard.AppState.myChats.openChat(_this.props.user.user_id);
	        };

	        this.render = function () {

	            // logger.log('render Contacts__Chat', this, this.props);

	            var userCredits = _this.props.user.user_id == _AuthDashboard.AppState.user.state.id ? "Вы" : _this.props.user.first_name + ' ' + _this.props.user.last_name;

	            return React.createElement(
	                'div',
	                { key: _this.props.key, className: 'contact-center__elem', 'data-channel_id': _this.props.user.user_id },
	                React.createElement(
	                    'div',
	                    { className: 'contact-center__elem-left' },
	                    React.createElement(
	                        'div',
	                        { className: 'contact-center__user-credits pointer', onClick: _this.goto },
	                        userCredits
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'contact-center__user-company' },
	                        _this.props.user.comp_name
	                    ),
	                     false ? React.createElement(
	                        'div',
	                        { className: 'contact-center__user-notInContact' },
	                        React.createElement(
	                            'div',
	                            { className: 'contact-center__user-notInContact-text' },
	                            'не в контактах'
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'contact-center__user-notInContact-action', onClick: _this.addContact },
	                            'добавить'
	                        )
	                    ) : null
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'contact-center__elem-right' },
	                    _this.props.user.unreaded ? React.createElement(
	                        'div',
	                        { className: 'contact-center__user-unreaded' },
	                        '+',
	                        _this.props.user.unreaded
	                    ) : null,
	                    React.createElement('div', { className: 'contact-center__user-status', 'data-state': _AuthDashboard.AppState.myWatch.userStatus(_this.props.user.user_id) })
	                )
	            );
	        };
	    }

	    // <a href={"/#/dashboard/chat/"+this.props.user.user_id}>{userCredits}</a>

	    // <div key={this.props.key} className="chats__chat" data-channel_id={this.props.user.user_id}>
	    //                 <div className="chats__chat-left">
	    //                     <div className="contacts__status">
	    //                         <div data-state={AppState.myWatch.userStatus(this.props.user.user_id)} />
	    //                     </div>
	    //                     <div>
	    //                         <div className="contacts__user-credits">
	    //                             <a href={"/#/dashboard/chat/"+this.props.user.user_id}>{userCredits}</a>
	    //                         </div>
	    //                         <div className="chats__chat-user-company">{this.props.user.comp_name}</div>
	    //                         { this.props.user.in_contact === false
	    //                             ? <div className="chats__chat-user-notInContact">
	    //                                 <div className="chats__chat-user-notInContact-text">не в контактах</div>
	    //                                 <div className="chats__chat-user-notInContact-action" onClick={this.addContact}>добавить</div>
	    //                               </div>
	    //                             : null }
	    //                     </div>
	    //                 </div>
	    //                 <div className="chats__chat-right">
	    //                     { this.props.user.unreaded ? <div className="chats__chat-unreader">{this.props.user.unreaded}</div> : null }
	    //                 </div>
	    //             </div>

	    _createClass(Contacts__Chat, null, [{
	        key: 'propTypes',
	        value: {
	            key: React.PropTypes.number,
	            user: React.PropTypes.object
	        },
	        enumerable: true
	    }]);

	    return Contacts__Chat;
	})(React.Component);

	exports['default'] = Contacts__Chat;
	module.exports = exports['default'];

/***/ },
/* 369 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _api = __webpack_require__(1);

	var _AuthDashboard = __webpack_require__(247);

	var _Dispatcher = __webpack_require__(4);

	var _ClassesController = __webpack_require__(6);

	var _ClassesController2 = _interopRequireDefault(_ClassesController);

	var _utils = __webpack_require__(2);

	var _ClassesLogger = __webpack_require__(3);

	var _ChannelChannelController = __webpack_require__(370);

	var _ChannelChannelController2 = _interopRequireDefault(_ChannelChannelController);

	var ChannelsController = (function (_Controller) {
	    _inherits(ChannelsController, _Controller);

	    function ChannelsController() {
	        var _this = this;

	        _classCallCheck(this, ChannelsController);

	        _get(Object.getPrototypeOf(ChannelsController.prototype), 'constructor', this).call(this);

	        this._getData = function () {
	            var params = {
	                type: 'channel',
	                self: 'true',
	                fields: ['id', 'title', 'unreaded', 'flags', 'users', 'comp_id', 'comp_name', 'lrm', 'orders']
	            };
	            _this.isReady = false;

	            _api.Api.msg_channels_list(params).then(function (res) {
	                if (res) {
	                    if (res.err) {
	                        _ClassesLogger.logger.log(_this, 'Ошибка при получении списка каналов', res.msg, 'error');
	                        return;
	                    }
	                    _this.channels = res.data || [];
	                    _this.channels.forEach(function (channel) {
	                        return channel.type = 'channel';
	                    });
	                    _this._getGroupsList();

	                    // logger.log('get channels list', this, res.data);
	                }
	            });
	        };

	        this._getGroupsList = function () {
	            var params = {
	                type: 'group',
	                self: 'true',
	                fields: ['id', 'title', 'unreaded', 'flags', 'users', 'lrm']
	            };

	            _api.Api.msg_channels_list(params).then(function (res) {
	                if (res) {
	                    if (res.err) {
	                        _ClassesLogger.logger.log(_this, 'Ошибка при получении списка групп', res.msg, 'error');
	                        return;
	                    }
	                    (res.data || []).forEach(function (channel) {
	                        channel.type = 'group';
	                        _this.channels.push(channel);
	                    });
	                    _this.isReady = true;
	                    _this.run('Channels_getlist_complete', _this.channels);

	                    // logger.log('groups list', this, res.data, this.channels);
	                }
	            });
	        };

	        this.getAllChannels = function () {
	            return _this.channels.filter(function (channel) {
	                return channel.type == 'channel';
	            });
	        };

	        this.getAllGroups = function () {
	            return _this.channels.filter(function (channel) {
	                return channel.type == 'group';
	            });
	        };

	        this.getChannel = function (id) {
	            if (!id) return undefined;

	            _this.activeChannelIndex = null;

	            _this.channels.forEach(function (channel, i) {
	                // для запрошенного канала создаем экземпляр канала, если еще нет,
	                // и пихаем его в переменную controller
	                if (channel.id == id) {
	                    if (!channel.controller) {
	                        channel.controller = new _ChannelChannelController2['default'](channel);
	                    }
	                    _this.activeChannelIndex = i;
	                }
	            });
	            if (_this.activeChannelIndex === null) return undefined;
	            if (_this.channels[_this.activeChannelIndex]) return _this.channels[_this.activeChannelIndex].controller;
	        };

	        this.getUnreadedCount = function (channel_id) {
	            var unreaded = null;
	            _this.channels.some(function (channel) {
	                if (channel.id == channel_id) return unreaded = channel.unreaded;
	            });
	            return unreaded;
	        };

	        this.getLastReaded = function (channel_id) {
	            var readed = null;
	            _this.channels.some(function (channel) {
	                if (channels.id == channel_id) return readed = channel.lrm;
	            });
	            return readed;
	        };

	        this.setUnreaded = function (channelIndex, unreaded) {
	            _this.channels[channelIndex].unreaded = unreaded;

	            // т.к. MessageHistory - универсальный компонент и работает и с каналами, и с чатами,
	            // не забываем изменить число непрочитанных в контроллере канала/чата
	            if (_this.channels[channelIndex].controller) _this.channels[channelIndex].controller.unreaded = unreaded;
	        };

	        this.onChannelEvent = function (event) {
	            //console.debug('onChannelEvent', event);

	            // приглашение в канал
	            if (event.type == 'msg_channel_invite') {
	                _this.addChannelInvite(event);
	                _this.run('Channels_update', _this.channels);
	                _Dispatcher.Events.runInfo('Вас пригласили в канал "' + event.title + '"');
	                _Dispatcher.Events.runNotify(event);
	                return;
	            }

	            // события по конкретному каналу
	            _this.channels.forEach(function (channel, i) {
	                if (channel.id == event.channel_id) {

	                    switch (event.type) {

	                        case 'msg_channel_new':
	                            // для чужих изменяем число непрочитанных в контакт-центре
	                            if (event.user_id != _AuthDashboard.AppState.user.state.id) _this.setUnreaded(i, channel.unreaded + 1);
	                            _this.run('Channels_update', _this.channels);
	                            _this.runChannelEvent(event, channel, 'onMsgNew');
	                            break;

	                        case 'msg_channel_unreaded':
	                            _this.setUnreaded(i, event.unreaded);
	                            _this.run('Channels_update', _this.channels);
	                            _this.runChannelEvent(event, channel, 'onMsgUnreaded');
	                            break;

	                        case 'msg_channel_correct':
	                            _this.runChannelEvent(event, channel, 'onMsgCorrect');
	                            break;

	                        case 'msg_channel_erase':
	                            _this.runChannelEvent(event, channel, 'onMsgErase');
	                            break;

	                        case 'msg_channel_user_leave':
	                            // вычеркиваем юзера из списка в инфо канала
	                            _this.runChannelEvent(event, channel, 'onMsgChannelUserLeave');
	                            // уменьшаем число участников в контакт-центре
	                            channel.users--;
	                            _this.run('Channels_update', _this.channels);
	                            break;

	                        case 'msg_channel_orders':
	                            // обновилось кол-во открытых заказов
	                            channel.orders = event.orders;
	                            _this.run('Channels_update', _this.channels);
	                            break;

	                        case 'msg_channel_user_upsert':
	                            // в инфо канала переносим юзера в участники и показываем событие в истории канала
	                            _this.runChannelEvent(event, channel, 'onMsgChannelUserUpsert');
	                            break;
	                    }
	                }
	            });
	        };

	        this.runChannelEvent = function (event, activeChannel, action) {
	            // если канал еще не загружался, ничего не делаем, т.к. вся история потом все равно подтянется с сервера при загрузке канала
	            if (!activeChannel.controller) return;

	            // запускаем событие
	            var actionToRun = activeChannel.controller[action];
	            if (typeof actionToRun == 'function') actionToRun(event);
	        };

	        this.activeChannel = function () {
	            if (_this.activeChannelIndex === null) return;
	            if (_this.channels[_this.activeChannelIndex]) {
	                return _this.channels[_this.activeChannelIndex].controller;
	            }
	        };

	        this.openChannel = function (id) {
	            _this.run('Channels_open', id);
	        };

	        this.closeChannel = function (id) {
	            _this.run('Channels_close', id);
	        };

	        this.createChannel = function (title) {
	            if (!title) {
	                _Dispatcher.Events.runError('Ошибка при создании канала: не задано название');
	                return;
	            }
	            _api.Api.msg_channel_create({ title: title, type: 'channel' }).then(function (res) {
	                if (res) {
	                    if (res.err) {
	                        _Dispatcher.Events.runError('Ошибка при создании канала');
	                        _ClassesLogger.logger.log(_this, 'Ошибка при создании канала', res.msg, 'error');
	                        return;
	                    }
	                    _Dispatcher.Events.runInfo('Канал "' + title + '" создан');
	                    var channel = {
	                        id: res.created_channel_id,
	                        title: title,
	                        type: 'channel',
	                        flags: 2,
	                        unreaded: null,
	                        lrm: null,
	                        users: 1
	                    };
	                    _this.channels.push(channel);
	                    _this.run('Channels_update', _this.channels);
	                }
	            });
	        };

	        this.createGroup = function (title) {
	            if (!title) {
	                _Dispatcher.Events.runError('Ошибка при создании группы: не задано название');
	                return;
	            }
	            _api.Api.msg_channel_create({ title: title, type: 'group' }).then(function (res) {
	                if (res) {
	                    if (res.err) {
	                        _Dispatcher.Events.runError('Ошибка при создании группы');
	                        _ClassesLogger.logger.log(_this, 'Ошибка при создании группы', res.msg, 'error');
	                        return;
	                    }
	                    _Dispatcher.Events.runInfo('Группа "' + title + '" создана');
	                    var channel = {
	                        id: res.created_channel_id,
	                        title: title,
	                        type: 'group',
	                        flags: 2,
	                        unreaded: null,
	                        lrm: null,
	                        users: 1
	                    };
	                    _this.channels.push(channel);
	                    _this.run('Channels_update', _this.channels);
	                }
	            });
	        };

	        this.destroyСhannel = function (id) {
	            _this.channels.some(function (channel, i) {
	                if (channel.id == id) {
	                    delete _this.channels[i];
	                    return true;
	                }
	            });
	            _this.run('Channels_update', _this.channels);
	        };

	        this.onMyInviteToСhannel = function (id) {
	            _ClassesLogger.logger.log('trigger onMyInviteToСhannel', _this);
	            _this.channels.some(function (channel, i) {
	                if (channel.id == id) {
	                    channel.users++;
	                    return true;
	                }
	            });
	            _this.run('Channels_update', _this.channels);
	        };

	        this.addChannelInvite = function (event) {
	            _this.channels.push({
	                id: event.channel_id,
	                type: event.ctype,
	                title: event.title,
	                unreaded: null,
	                lrm: null,
	                flags: event.flags,
	                users: event.users // TODO: почему апи считает еще не принявшего приглашение участника юзером канала?
	            });

	            // logger.log('addChannelInvite 2', this, this.channels);
	        };

	        this.channels = [];
	        this.controller = null;
	        this.activeChannelIndex = null;
	        this.isReady = false;

	        this._getData();
	    }

	    return ChannelsController;
	})(_ClassesController2['default']);

	exports['default'] = ChannelsController;
	module.exports = exports['default'];

	// передаем событие дальше в контроллер активного канала,
	// он обновит данные и сам разберется, делать апдейт истории или нет

	// объект активного в данный момент канала

	// удаление канала из контакт-центра при выходе юзера из него или отказе от приглашения

	// я пригласил кого-то в канал - обновляем число участников

	// пришло приглашение в канал - добавляем его в список

/***/ },
/* 370 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _api = __webpack_require__(1);

	var _AuthDashboard = __webpack_require__(247);

	var _Dispatcher = __webpack_require__(4);

	var _ClassesController = __webpack_require__(6);

	var _ClassesController2 = _interopRequireDefault(_ClassesController);

	var _ClassesLoggerJs = __webpack_require__(3);

	var _ControlsMessageMessageHistoryControllerJs = __webpack_require__(371);

	var _ControlsMessageMessageHistoryControllerJs2 = _interopRequireDefault(_ControlsMessageMessageHistoryControllerJs);

	var _ControlsMessageMessageNotifyControllerJs = __webpack_require__(372);

	var _ControlsMessageMessageNotifyControllerJs2 = _interopRequireDefault(_ControlsMessageMessageNotifyControllerJs);

	var _ChannelMessageControllerJs = __webpack_require__(373);

	var _ChannelMessageControllerJs2 = _interopRequireDefault(_ChannelMessageControllerJs);

	/**
	 * 
	 * Общие для каналов и чатов методы работы с историей реализованы 
	 * в Controls/Message/MessageHistoryController
	 * 
	 */

	var ChannelController = (function (_MessageHistoryController) {
	    _inherits(ChannelController, _MessageHistoryController);

	    function ChannelController(params) {
	        var _this = this;

	        _classCallCheck(this, ChannelController);

	        _get(Object.getPrototypeOf(ChannelController.prototype), 'constructor', this).call(this);

	        /*  реализовано в MessageHistoryController:
	         *      this.history
	         *      this.scrollPos
	         */

	        this.updateHistory = function () {

	            // историю не может видеть юзер с флагом 1 = приглашен.
	            if (_this.flags == 1) return;

	            var params = {
	                filters: [],
	                fields: ['id', 'ts', 'uid', 'body', 'ln', 'fn']
	            };

	            params.orderBy = 'id';
	            params.dir = 'DESC';

	            // logger.log('updateHistory -channel lrm= ' + this.history.last_readed + ' unred= ' + this.unreaded);

	            // смотрим, чего и сколько у нас есть непрочитанного, и в зависимости от этого
	            // корректируем оффсеты и лимиты
	            if (_this.unreaded > 0) {
	                // есть непрочитанные и last_readed = null --> непрочитаны все!
	                // обнуляем офсет и лимит не ставим, апи отдаст мах 500.
	                if (_this.history.last_readed === null) {
	                    _this.history.options.offset = 0;
	                    _this.history.options.limit = 500;

	                    // есть id непрочитанного и он за пределами лимита, будем выбирать прямо от него
	                    // офсет обнуляем, лимит ставим чуть больше числа непрочитанных
	                } else if (parseInt(_this.history.last_readed) > 0 && _this.unreaded >= _this.history.options.limit_default) {
	                        params.filters.push(["id", "gt", parseInt(_this.history.last_readed)]);
	                        _this.history.options.offset = 0;
	                        _this.history.options.limit = parseInt(_this.unreaded) + 10;
	                        // this.history.options.limit = (this.unreaded < this.history.options.limit_default)
	                        // ? this.history.options.limit_default
	                        // : parseInt(this.unreaded) + 10;
	                    }
	            }

	            _ClassesLoggerJs.logger.log('CHANNEL: offset= ' + _this.history.options.offset + ", limit= " + _this.history.options.limit, _this, params.filters);

	            params.channel_id = _this.id;
	            params.limit = _this.history.options.limit;
	            params.offset = _this.history.options.offset;

	            _api.Api.msg_channel_hist_list(params).then(function (res) {

	                _this.isReady = true;

	                if (res) {
	                    var _ret = (function () {
	                        if (res.err) {
	                            _ClassesLoggerJs.logger.log(_this, 'Ошибка при получении истории сообщений', res.msg, 'error');
	                            _this.run('Channel-update', undefined); // не показываем канал вообще
	                            return {
	                                v: undefined
	                            };
	                        }

	                        // logger.log('msg_channel_hist_list', this, res);

	                        _this.history.total = res.total;
	                        _this.history.last_readed = res.lrm_id;

	                        // если данных нет, все равно нужно вернуть пустой результат
	                        if (!(res.data || []).length) {
	                            _this.history.data = [];
	                            _this.run('Message_history_update', _this.history.data);
	                            return {
	                                v: undefined
	                            };
	                        }

	                        var historyAppend = [];
	                        var myUserId = _AuthDashboard.AppState.user.state.id;
	                        var myFirstName = _AuthDashboard.AppState.user.state.first_name;
	                        var myLastName = _AuthDashboard.AppState.user.state.first_name;
	                        var myCompName = _AuthDashboard.AppState.user.state.comp.name;
	                        var myCompId = _AuthDashboard.AppState.user.state.comp.id;

	                        res.data.forEach(function (message) {

	                            // добавляем общие поля
	                            message.isDeleted = false;
	                            message.readed = true; // прочитано мной
	                            message.opp_readed = false; // прочитано собеседником, хотя в каналах этого признака нет
	                            // добавляем его для совместимости с контроллером вывода сообщений

	                            // костыли, т.к. поля в hist_list и в ивентах не совпадают названиями
	                            message.user_id = message.uid;
	                            message.first_name = message.fn;
	                            message.last_name = message.ln;

	                            // свои пропускаем, чужие метим непрочитанными начиная с последнего прочитанного
	                            // если null, значит, ничего еще не прочитано
	                            var lrm = _this.history.last_readed === null ? 0 : _this.history.last_readed;

	                            // свои
	                            if (message.uid == myUserId) {
	                                message.comp_name = myCompName;
	                                message.comp_id = myCompId;

	                                //  чужие
	                            } else {
	                                    message.comp_name = '';
	                                    message.comp_id = '';
	                                    if (message.id > lrm) message.readed = false;
	                                }

	                            // сообщения с пустым body = архив, показываем "сообщение было удалено"
	                            if (message.body == null) {
	                                message.isDeleted = true;
	                                message.body = "Сообщение удалено";
	                            }

	                            historyAppend.unshift(new _ChannelMessageControllerJs2['default'](message, _this.id));
	                        });

	                        _this.history.data = historyAppend.concat(_this.history.data);
	                        _this.run('Message_history_update', _this.history.data);
	                    })();

	                    if (typeof _ret === 'object') return _ret.v;
	                }
	            });
	        };

	        this.sendMessage = function (body) {
	            _api.Api.msg_channel_send({ channel_id: _this.id, body: body }).then(function (res) {
	                if (res) {
	                    if (res.err) {
	                        _ClassesLoggerJs.logger.log(_this, 'Ошибка при отправке сообщения', res.msg, 'error');
	                        return;
	                    }
	                }
	            });
	        };

	        this.markReaded = function (id) {
	            var params = {
	                channel_id: _this.id,
	                message_id: id
	            };
	            _api.Api.msg_channel_readed(params).then(function (res) {
	                if (res.err) {
	                    _ClassesLoggerJs.logger.log("Не удалось отметить сообщение прочитанным #" + id, _this, res.msg, 'error');
	                } else {
	                    _ClassesLoggerJs.logger.log("Отмечено прочитанным #" + id, _this);
	                }
	            });
	        };

	        this.markDeleted = function (event) {
	            _this._removeMsg(event.id);
	        };

	        this.addToHistory = function (event) {
	            if (event) {
	                event.readed = event.user_id == _AuthDashboard.AppState.user.state.id ? true : false; // для чужого ставим метку, что сообщение не прочитано
	                var message = new _ChannelMessageControllerJs2['default'](event, _this.id);
	                _this.history.data.push(message);
	            }
	        };

	        this.notifyToHistory = function (event) {

	            // юзер принял приглашение и присоединился к каналу
	            if (event.type == 'msg_channel_user_upsert' && event.flags == 0 && event.user_id != _AuthDashboard.AppState.user.state.id) {
	                var body = 'Присоединился пользователь ' + event.first_name + " " + event.last_name + ' из компании "' + event.comp_name + '"';
	                var message = new _ControlsMessageMessageNotifyControllerJs2['default'](body, _this.id);
	                _this.history.data.push(message);
	                event.isNotify = true;
	            }

	            // вышел из канала
	            if (event.type == 'msg_channel_user_leave' && event.user_id != _AuthDashboard.AppState.user.state.id) {
	                // let body = 'Пользователь ' + event.first_name + " " + event.last_name + ' из компании "' + event.comp_name + '"';
	                // апи пока не отдает в этой команде фио юзера
	                var body = 'Пользователь # ' + event.user_id + ' покинул группу';
	                var message = new _ControlsMessageMessageNotifyControllerJs2['default'](body, _this.id);
	                _this.history.data.push(message);
	                event.isNotify = true;
	            }
	        };

	        this.isForActiveContext = function (event) {
	            _ClassesLoggerJs.logger.log('check isForActiveContext - channel', event.channel_id, _this.id);
	            if (event) {
	                return event.channel_id == _this.id ? true : false;
	            }
	        };

	        this.onMsgNew = function (event) {
	            if (event) {
	                _this.addToHistory(event);
	                _this.runUpdate(event); // для активного канала запускаем обновление истории
	            }
	        };

	        this.onMsgErase = function (event) {
	            if (event) {
	                _ClassesLoggerJs.logger.log('trigger onMsgChannelErase');
	                _this._removeMsg(event.id);
	                _this.runUpdate(event);
	            }
	        };

	        this.onMsgCorrect = function (event) {
	            if (event) {
	                _ClassesLoggerJs.logger.log('trigger onMsgChannelCorrect');
	                _this._correctMsg(event.id, event.body);
	                _this.runUpdate(event);
	            }
	        };

	        this.onMsgUnreaded = function (event) {
	            if (event) {
	                _this._markUnreaded(event);
	                _this.runUpdate(event);
	            }
	        };

	        this.onMsgChannelUserLeave = function (event) {
	            if (event) {
	                _this.members.some(function (member, i) {
	                    if (member.user_id == event.user_id) {
	                        delete _this.members[i];
	                        return true;
	                    }
	                });
	                _this.run('Channel_members_update', _this.members);

	                // показываем в истории канала это событие
	                _this.notifyToHistory(event);
	                _this.runUpdate(event);
	            }
	        };

	        this.onMsgChannelUserUpsert = function (event) {
	            if (event) {
	                _this.updateMembers();
	                _this.run('Channel_members_update', _this.members);

	                // показываем в истории канала это событие
	                _this.notifyToHistory(event);
	                _this.runUpdate(event);
	            }
	        };

	        this.runUpdate = function (event) {
	            if (_AuthDashboard.AppState.myChannels.activeChannel() && _AuthDashboard.AppState.myChannels.activeChannel().isForActiveContext(event)) {

	                _this.run('Message_history_update', _this.history.data);

	                // если слали уведомление в канал, дергаем ивент, чтобы по нему понять, крутить скролл вниз или нет
	                // важно: этот ивент должен быть дернут после Message_history_update
	                if (event.isNotify === true) {
	                    _this.run('Message_notify_send', event);
	                }
	            }
	        };

	        this.msgChannelInvite = function (user_id) {
	            if (!user_id) return;
	            _api.Api.msg_channel_invite({ channel_id: _this.id, user_id: user_id }).then(function (res) {
	                if (res) {
	                    if (res.err) {
	                        _ClassesLoggerJs.logger.log(_this, 'Ошибка при отправке приглашения в канал', res.msg, 'error');
	                        return;
	                    }
	                    _Dispatcher.Events.runInfo('Приглашение отправлено пользователю');
	                    _this.updateMembers();

	                    // т.к. апи считает непринявших приглашение тоже юзерами, нужно обновить
	                    // число участников в контакт-центре
	                    _AuthDashboard.AppState.myChannels.onMyInviteToСhannel(_this.id);
	                }
	            });
	        };

	        this.msgChannelLeave = function () {
	            _api.Api.msg_channel_leave({ channel_id: _this.id }).then(function (res) {
	                if (res.err) {
	                    _ClassesLoggerJs.logger.log(_this, 'Ошибка при выходе из канала', res.msg, 'error');
	                    return;
	                }
	                _this.flags = -2;
	                _this.run('Channel-update', _this);

	                // также нужно удалить канал из контакт-центра
	                _AuthDashboard.AppState.myChannels.destroyСhannel(_this.id);
	            });
	        };

	        this.msgChannelJoin = function () {
	            _api.Api.msg_channel_join({ channel_id: _this.id }).then(function (res) {
	                if (res) {
	                    if (res.err) {
	                        _ClassesLoggerJs.logger.log(_this, 'Ошибка при присоединении к каналу', res.msg, 'error');
	                        return;
	                    }
	                    _this.flags = 0;
	                    _this.updateMembers();
	                    _this.run('Channel-update', _this);

	                    // this.updateHistory();
	                }
	            });
	        };

	        this.msgChannelDelete = function () {
	            _api.Api.msg_channel_delete({ channel_id: _this.id }).then(function (res) {
	                if (res.err) {
	                    _ClassesLoggerJs.logger.log(_this, 'Ошибка при удалении канала', res.msg, 'error');
	                    return;
	                }
	            });
	            _this.flags = -1;
	            _this.run('Channel-update', _this);

	            // также нужно удалить канал из контакт-центра
	            _AuthDashboard.AppState.myChannels.destroyСhannel(_this.id);
	        };

	        this.id = params.id;
	        this.title = params.title;
	        this.flags = params.flags;

	        this.members = [];

	        // unreaded messages
	        this.unreaded = params.unreaded;
	        this.history.last_readed = params.lrm;
	        this.isReady = false;

	        // this.updateHistory();
	        this.updateMembers();
	    }

	    /*  реализовано в MessageHistoryController:
	     *       isGotAllMessages
	     *       getFirstHistoryMsgId
	     *       getLastHistoryMsgId
	     *       saveScrollPosition
	     *       getTotal
	     *       getHistory
	     *       appendHistory
	     *       getMsg
	     *       getUnreadedIDs
	     *       _removeMsg
	     *       _correctMsg 
	     */

	    //
	    // Channel members
	    //

	    _createClass(ChannelController, [{
	        key: 'getMembers',
	        value: function getMembers() {
	            return this.members;
	        }
	    }, {
	        key: 'getMember',
	        value: function getMember(id) {
	            return this.members.filter(function (member) {
	                return member.id == id;
	            })[0];
	        }
	    }, {
	        key: 'updateMembers',
	        value: function updateMembers() {
	            var _this2 = this;

	            // членов канала не может видеть юзер с флагом 1 = приглашен.
	            if (this.flags == 1) return;

	            _api.Api.msg_channel_users({ channel_id: this.id }).then(function (res) {
	                if (res) {
	                    if (res.err) {
	                        if (res.msg.match("relation not found") === null) _ClassesLoggerJs.logger.log(_this2, 'Ошибка при получении участников канала', res.msg, 'error');
	                        return;
	                    }
	                    // this.members = res.users.filter( user => user.user_id != AppState.user.state.id );
	                    _this2.members = res.users || [];
	                    _AuthDashboard.AppState.myWatch.regUsers(_this2.members.map(function (user) {
	                        return user.user_id;
	                    }));

	                    _this2.run('Channel_members_update', _this2.members);
	                }
	            });
	        }

	        //
	        // Channel History
	        //

	    }]);

	    return ChannelController;
	})(_ControlsMessageMessageHistoryControllerJs2['default']);

	exports['default'] = ChannelController;
	module.exports = exports['default'];

	// добавление события в историю канала

	// проверка, что работаем с активным каналом
	// обновляем историю для своего сообщения или текущего собеседника

	// обработчики событий

	// запускаем обновление истории при активном канале

	// действия

/***/ },
/* 371 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	var _api = __webpack_require__(1);

	var _AuthDashboard = __webpack_require__(247);

	var _Dispatcher = __webpack_require__(4);

	var _ClassesController = __webpack_require__(6);

	var _ClassesController2 = _interopRequireDefault(_ClassesController);

	var _ClassesLoggerJs = __webpack_require__(3);

	/**
	 * Общие для каналов и чатов методы работы с историей 
	 * 
	 */

	var MessageHistoryController = function MessageHistoryController() {
	    var _this = this;

	    _classCallCheck(this, MessageHistoryController);

	    this.getTotal = function () {
	        return _this.history.total;
	    };

	    this.getHistory = function () {
	        // проверяем загружена ли уже история, тогда просто отдаем ее
	        if (_this.isReady) {
	            _this.run('Message_history_update', _this.history.data);
	            return;
	        }
	        // иначе тянем с сервера
	        _this.updateHistory();
	    };

	    this.appendHistory = function () {
	        if (_this.isGotAllMessages()) {
	            _this.run('Message_history_update', _this.history.data);
	            return;
	        }
	        _this.history.options.offset += _this.history.options.limit;
	        _this.updateHistory();
	    };

	    this.isGotAllMessages = function () {
	        return _this.history.data.length >= _this.history.total ? true : false;
	    };

	    this.getFirstHistoryMsgId = function () {
	        return _this.history.data.length ? _this.history.data[0].id : 0;
	    };

	    this.getLastHistoryMsgId = function () {
	        return _this.history.data.length ? _this.history.data[_this.history.data.length - 1].id : 0;
	    };

	    this.saveScrollPosition = function (pos) {
	        _this.scrollPos = pos;
	        // если в самом верху, сохраняем 1, чтобы не попасть на грабли с if(pos)
	        // this.scrollPos = (pos === 0) ? 1 : pos;
	    };

	    this.getUnreadedIDs = function () {
	        var unreadedList = [];
	        _this.history.data.forEach(function (msg) {
	            if (msg.author.id != _AuthDashboard.AppState.user.state.id && !msg.readed) unreadedList.push(msg.id);
	        });
	        return unreadedList;
	    };

	    this.getMsg = function (id) {
	        var msg = _this.history.data.filter(function (data) {
	            return data.id == id;
	        });
	        return msg ? msg[0] : null;
	    };

	    this._removeMsg = function (id) {
	        // удаленное сообщение не исчезает из списка,
	        // показываем заглушку "Сообщение удалено."
	        _this.history.data.forEach(function (data) {
	            if (data.id == id) {
	                data.body = "Сообщение удалено";
	                data.isDeleted = true;
	            }
	        });
	    };

	    this._correctMsg = function (id, body) {
	        _this.history.data.forEach(function (data) {
	            if (data.id == id) {
	                data.body = body;
	            }
	        });
	    };

	    this._markUnreaded = function (event) {
	        _this.history.last_readed = event.lrm_id;
	        _this.unreaded = event.unreaded;

	        // если null, значит, ничего еще не прочитано
	        var lrm = event.unreaded === null ? 0 : event.lrm_id;

	        _this.history.data.forEach(function (message) {
	            if (message.author.id != _AuthDashboard.AppState.user.state.id) {
	                message.readed = message.id > lrm ? false : true;
	            }
	        });

	        // logger.log('_markUnreaded lrm='+lrm, this, this.history.data);
	    };

	    this.on = function (id, hr) {
	        var l = _this.evs[id];
	        l ? l.push(hr) : _this.evs[id] = [hr];
	    };

	    this.run = function (id, p) {
	        var l = _this.evs[id];
	        if (l) {
	            l.forEach(function (o) {
	                return o(p);
	            });
	        }
	    };

	    this.rem = function (id, hr) {
	        var l = _this.evs[id];
	        if (l) {
	            _this.evs[id] = l.filter(function (h) {
	                return h != hr;
	            });
	        }
	    };

	    // super();
	    this.evs = {};
	    this.history = {
	        options: { limit_default: 20, offset: 0 },
	        total: null,
	        last_readed: null,
	        data: []
	    };
	    this.scrollPos = null;
	    this.history.options.limit = this.history.options.limit_default;
	};

	exports['default'] = MessageHistoryController;
	module.exports = exports['default'];

	// проверяем, получили ли уже все сообщения

	// сохраняем позицию скролла, чтобы потом открыть канал на этом месте

	// получаем массив ID непрочитанных чужих сообщений

	// для редактирования или удаления сообщения нам нужен
	// доступ к контроллеру сообщений
	// будет отдан объект MessageController, пример использования:
	//
	// let msg = AppState.myChannels.activeChannel().getMsg(this.props.data.id);
	// msg.eraseMessage();

	// помечаем чужие сообщения как непрочитанные, начиная с указанного id

	// подписки-отписки, пока вынесены сюда, т.к. стандартно нет
	// множественного наследования, а getOwnPropertyNames не работает с fat arrow
	// TODO: переделать, мерджить с Controller

/***/ },
/* 372 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _AuthDashboard = __webpack_require__(247);

	var _Dispatcher = __webpack_require__(4);

	var _ClassesController = __webpack_require__(6);

	var _ClassesController2 = _interopRequireDefault(_ClassesController);

	var _ClassesLogger = __webpack_require__(3);

	var MessageNotifyController = (function (_Controller) {
	    _inherits(MessageNotifyController, _Controller);

	    function MessageNotifyController(body, channel_id) {
	        _classCallCheck(this, MessageNotifyController);

	        _get(Object.getPrototypeOf(MessageNotifyController.prototype), 'constructor', this).call(this);

	        this.id = -1;
	        this.ts = Math.round(new Date().getTime() / 1000);

	        // нотифай-сообщение заводим как бы от себя
	        this.author = {
	            id: _AuthDashboard.AppState.user.state.id,
	            first_name: _AuthDashboard.AppState.user.state.first_name,
	            last_name: _AuthDashboard.AppState.user.state.last_name,
	            comp_name: _AuthDashboard.AppState.user.state.comp.name,
	            comp_id: _AuthDashboard.AppState.user.state.comp.id
	        };

	        this.body = body;
	        this.channel_id = channel_id;

	        this.isDeleted = false;
	        this.readed = true;
	        this.opp_readed = true;
	    }

	    return MessageNotifyController;
	})(_ClassesController2['default']);

	exports['default'] = MessageNotifyController;
	module.exports = exports['default'];

/***/ },
/* 373 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _api = __webpack_require__(1);

	var _AuthDashboard = __webpack_require__(247);

	var _Dispatcher = __webpack_require__(4);

	var _ClassesController = __webpack_require__(6);

	var _ClassesController2 = _interopRequireDefault(_ClassesController);

	var _ClassesLogger = __webpack_require__(3);

	var ChannelMessageController = (function (_Controller) {
	    _inherits(ChannelMessageController, _Controller);

	    function ChannelMessageController(message, channel_id) {
	        var _this = this;

	        _classCallCheck(this, ChannelMessageController);

	        _get(Object.getPrototypeOf(ChannelMessageController.prototype), 'constructor', this).call(this);

	        this.eraseMessage = function () {

	            var params = { message_id: _this.id,
	                channel_id: _this.channel_id
	            };
	            var infoMessage = {};

	            _ClassesLogger.logger.log('erasing message', params);

	            if (params) {
	                _api.Api.msg_channel_erase(params).then(function (res) {
	                    if (res.err) {
	                        _ClassesLogger.logger.log('error', "Error while deleting the message", res.msg);
	                        infoMessage = { message: res.msg, type: "error" };
	                    } else {
	                        infoMessage = { message: "Сообщение удалено", type: "info" };
	                    }
	                    _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, infoMessage);
	                    // событие EV_MSG_CHANNEL_ERASE придет по сокету автоматически
	                });
	            } else {
	                    infoMessage = { message: "Ошибка при удалении сообщения: invalid data", type: "error" };
	                    _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, infoMessage);
	                }
	        };

	        this.correctMessage = function (body) {

	            var params = { message_id: _this.id,
	                channel_id: _this.channel_id,
	                body: body
	            };
	            var infoMessage = {};

	            _ClassesLogger.logger.log('correcting message', params);

	            if (params) {
	                _api.Api.msg_channel_correct(params).then(function (res) {
	                    if (res.err) {
	                        _ClassesLogger.logger.log('error', "Error while correcting the message", res.msg);
	                        infoMessage = { message: res.msg, type: "error" };
	                    } else {
	                        infoMessage = { message: "Сообщение отредактировано", type: "info" };
	                    }
	                    _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, infoMessage);
	                    // событие EV_MSG_CHANNEL_CORRECT придет по сокету автоматически
	                });
	            } else {
	                    infoMessage = { message: "Ошибка при редактировании сообщения: invalid data", type: "error" };
	                    _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, infoMessage);
	                }
	        };

	        this.id = message.id;
	        this.ts = message.ts;
	        this.author = {
	            id: message.user_id,
	            first_name: message.first_name,
	            last_name: message.last_name,
	            comp_name: message.comp_name,
	            comp_id: message.comp_id
	        };
	        this.body = message.body;
	        this.channel_id = channel_id;
	        this.isDeleted = message.isDeleted;
	        this.readed = message.readed;
	        this.opp_readed = message.opp_readed;
	    }

	    return ChannelMessageController;
	})(_ClassesController2['default']);

	exports['default'] = ChannelMessageController;
	module.exports = exports['default'];

	// реализовано через AppState.myChannels.activeChannel().sendMessage
	// sendMessage =()=> {}

	// реализовано через AppState.myChannels.activeChannel().markReaded
	// readedMessage =()=> {}

/***/ },
/* 374 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _api = __webpack_require__(1);

	var _AuthDashboard = __webpack_require__(247);

	var _Dispatcher = __webpack_require__(4);

	var _ClassesController = __webpack_require__(6);

	var _ClassesController2 = _interopRequireDefault(_ClassesController);

	var _utils = __webpack_require__(2);

	var _ClassesLogger = __webpack_require__(3);

	var _ChatChatController = __webpack_require__(375);

	var _ChatChatController2 = _interopRequireDefault(_ChatChatController);

	var ChatsController = (function (_Controller) {
	    _inherits(ChatsController, _Controller);

	    function ChatsController() {
	        var _this = this;

	        _classCallCheck(this, ChatsController);

	        _get(Object.getPrototypeOf(ChatsController.prototype), 'constructor', this).call(this);

	        this.getChatsList = function () {

	            var params = {
	                fields: ['id', 'ts', 'opp_id', 'fn', 'ln', 'cid', 'cname', 'unreaded', 'lrm']
	            };

	            _this.isReady = false;

	            _api.Api.msg_privates_list(params).then(function (res) {
	                if (res) {
	                    var _ret = (function () {
	                        if (res.err) {
	                            _ClassesLogger.logger.log(_this, 'Ошибка при получении списка приватов', res.msg, 'error');
	                            return {
	                                v: undefined
	                            };
	                        }

	                        var contacts = _AuthDashboard.AppState.myContacts.getData(); // контакты
	                        var privates = (res.data || []).length ? res.data : []; // приваты

	                        // logger.log('contacts', this, contacts);
	                        // logger.log('privates', this, privates);

	                        var chatsData = [];
	                        var unreaded = [];
	                        _this.chats = [];

	                        // добавляем юзеров, от которых есть сообщения, но которых нет в контактах
	                        // заодно формируем массив с числом непрочитанных, чтобы не бегать потом внутри chatsData
	                        (privates || []).forEach(function (p, i) {
	                            unreaded[p.opp_id] = p.unreaded;
	                            if (!contacts.some(function (c) {
	                                return c.user_id == p.opp_id;
	                            })) {

	                                // переводим названия полей в читаемые как в контактах
	                                // добавляем нужные поля
	                                chatsData.push({
	                                    user_id: p.opp_id,
	                                    chat_id: p.id,
	                                    first_name: p.fn,
	                                    last_name: p.ln,
	                                    comp_name: p.cname,
	                                    comp_id: p.cid,
	                                    notInContact: true,
	                                    unreaded: p.unreaded,
	                                    last_readed: p.lrm
	                                });
	                            }
	                        });

	                        // logger.log('chatsData', this, chatsData);

	                        // юзеры не в контактах будут сверху
	                        chatsData = chatsData.concat(contacts);
	                        // chatsData = contacts.concat( chatsData ); // а так - снизу

	                        // сливаем поля в единый массив чатов
	                        chatsData.forEach(function (contact) {
	                            _this.chats.push({ id: contact.user_id,
	                                user_id: contact.user_id,
	                                chat_id: contact.chat_id !== undefined ? contact.chat_id : null,
	                                first_name: contact.first_name,
	                                last_name: contact.last_name,
	                                comp_name: contact.comp_name,
	                                comp_id: contact.comp_id,
	                                unreaded: unreaded[contact.user_id] ? unreaded[contact.user_id] : 0,
	                                last_readed: contact.last_readed !== undefined ? contact.last_readed : null,
	                                in_contact: contact.notInContact ? false : true
	                            });
	                        });

	                        // logger.log('Chats_getlist_complete', this, this.chats);

	                        // ставим метку, что чаты у нас получены
	                        _this.isReady = true;
	                        _AuthDashboard.AppState.myWatch.regUsers(_this.chats.map(function (user) {
	                            return user.id;
	                        }));

	                        _this.run('Chats_getlist_complete', _this.chats);
	                    })();

	                    if (typeof _ret === 'object') return _ret.v;
	                }
	            });
	        };

	        this.getAllChats = function () {
	            return _this.chats;
	        };

	        this.getChat = function (id) {

	            // в компоненте уже прошла проверка на валидность id, и если это не int,
	            // то здесь уже будет null
	            if (!id) return undefined;

	            _this.activeChatIndex = null;

	            _this.chats.forEach(function (chat, i) {

	                // для запрошенного чата создаем экземпляр чата, если еще нет,
	                // и пихаем его в переменную controller
	                if (chat.id == id) {
	                    if (!chat.controller) {
	                        chat.controller = new _ChatChatController2['default'](chat);
	                    }
	                    _this.activeChatIndex = i;
	                }
	            });

	            // не нашли запрошенного канала в списке
	            if (_this.activeChatIndex === null) return undefined;

	            if (_this.chats[_this.activeChatIndex]) {
	                return _this.chats[_this.activeChatIndex].controller;
	            }
	        };

	        this.getUnreadedCount = function (user_id) {
	            var unreaded = null;

	            // используем some, чтобы остановить цикл, когда нашли нужный чат
	            _this.chats.some(function (chat) {
	                if (chat.id == user_id) return unreaded = chat.unreaded;
	            });

	            return unreaded;
	        };

	        this.getLastReaded = function (user_id) {
	            var readed = null;

	            _this.chats.some(function (chat) {
	                if (chat.id == user_id) return readed = chat.last_readed;
	            });

	            return readed;
	        };

	        this.setUnreaded = function (chatIndex, unreaded) {
	            _this.chats[chatIndex].unreaded = unreaded;

	            // т.к. MessageHistory - универсальный компонент и работает и с каналами, и с чатами,
	            // не забываем изменить число непрочитанных в контроллере канала/чата
	            if (_this.chats[chatIndex].controller) {
	                _this.chats[chatIndex].controller.unreaded = unreaded;
	            }
	        };

	        this.onChatEvent = function (event) {

	            // свое сообщение обрабатываем отдельно и возвращаемся
	            // для своего нам не нужно уведомление в нотифай-центр и увеличивать число непрочитанных
	            if (event.type == 'msg_private_new' && event.user_id == _AuthDashboard.AppState.user.state.id) {
	                var activeChat = null;
	                _this.chats.some(function (chat) {
	                    if (chat.id == event.to_user_id) return activeChat = chat;
	                });
	                // logger.log('updateChat - on msg SELF', this);
	                if (activeChat) _this.runChatEvent(event, activeChat, 'onMsgNew');
	                return;
	            }

	            _this.chats.forEach(function (chat, i) {
	                if (chat.id == event.user_id) {

	                    switch (event.type) {

	                        //  новое сообщение
	                        case 'msg_private_new':
	                            // изменяем число непрочитанных в контакт-центре
	                            _this.setUnreaded(i, chat.unreaded + 1);

	                            // обновляем контакт-центр
	                            _this.run('Chats_update', _this.chats);

	                            // уведомления в нотифай-центр
	                            if (_this.activeChat()) {
	                                if (!_this.activeChat().isForActiveContext(event)) {
	                                    // показываем уведомление только если чат, в который оно пришло, не активен
	                                    _Dispatcher.Events.runNotify(event);
	                                }
	                                // находимся где-то на другой странице, показываем уведомление
	                            } else {
	                                    _Dispatcher.Events.runNotify(event);
	                                }

	                            // передаем событие дальше в контроллер активного чата,
	                            // он обновит данные и сам разберется, делать апдейт истории или нет
	                            _this.runChatEvent(event, chat, 'onMsgNew');

	                            break;

	                        // обновилось число непрочитанных
	                        case 'msg_private_unreaded':
	                            _this.setUnreaded(i, event.unreaded);
	                            _this.run('Chats_update', _this.chats);
	                            _this.runChatEvent(event, chat, 'onMsgUnreaded');

	                            break;

	                        // собеседник прочитал какое-то наше сообщение
	                        case 'msg_private_interlocutor_lrm':
	                            _this.runChatEvent(event, chat, 'onMsgOppReaded');
	                            break;

	                        // удаление сообщения (апи еще не готово)
	                        case 'msg_private_erase':
	                            if (chat.controller) chat.controller.markDeleted(event);
	                            break;
	                    }
	                } // if
	            }); // forEach
	        };

	        this.runChatEvent = function (event, activeChat, action) {
	            // если чат еще не загружался, ничего не делаем, т.к. вся история потом все равно подтянется с сервера при загрузке чата
	            if (!activeChat.controller) return;

	            // запускаем событие
	            var actionToRun = activeChat.controller[action];
	            if (typeof actionToRun == 'function') actionToRun(event);
	        };

	        this.activeChat = function () {
	            if (_this.chats[_this.activeChatIndex]) {
	                return _this.chats[_this.activeChatIndex].controller;
	            }
	        };

	        this.openChat = function (id) {
	            _this.run('Chats_open', id);
	        };

	        this.closeChat = function (id) {
	            _this.run('Chats_close', id);
	        };

	        this.chats = [];
	        this.controller = null;
	        this.activeChatIndex = null;
	        this.isReady = false;

	        this.getChatsList();
	    }

	    // получение списка приватов юзера

	    _createClass(ChatsController, [{
	        key: 'createChat',
	        value: function createChat(id) {}
	    }, {
	        key: 'msgChatInvite',
	        value: function msgChatInvite(event) {

	            // this.chats.push({
	            //     id: event.iser_id,
	            //     unreaded: 0,
	            // });

	            // Events.run(Events.EV_SHOW_NOTIFY, {
	            //     message: 'Вас пригласили в приватную беседу ',
	            //     type: 'info'
	            // });

	            // this.run('ContactCenter_channel-update', this.chats);
	        }
	    }]);

	    return ChatsController;
	})(_ClassesController2['default']);

	exports['default'] = ChatsController;
	module.exports = exports['default'];

	// DEPREACTED. Команды для старого апи.
	//
	// тут будет получение списка приватов юзера
	// а пока эмулируем, запрашивая список контактов юзера
	// getChatsList =()=> {

	//     let contacts = AppState.myContacts.getData();   // контакты
	//     let privates = AppState.user.state.msg_private; // от кого есть непрочитанные приваты

	//     let chatsData = [];
	//     let unreaded = [];
	//     this.chats = [];

	//     // добавляем юзеров, от которых есть сообщения, но которых нет в контактах
	//     // заодно формируем массив с числом непрочитанных, чтобы не бегать потом внутри chatsData
	//     privates.forEach( (p, i) => {
	//         unreaded[p.user_id] = p.unreaded;
	//         if( !contacts.some( c => c.user_id == p.user_id ) ) {
	//             // ставим метку, что юзера еще нет в контактах
	//             privates[i].notInContact = true;
	//             chatsData.push( privates[i] );
	//         }
	//     });

	//     // юзеры не в контактах будут сверху
	//     chatsData = chatsData.concat( contacts );
	//     // chatsData = contacts.concat( chatsData ); // а так - снизу

	//     chatsData.forEach( contact => {
	//         this.chats.push( {id: contact.user_id,
	//                           first_name: contact.first_name,
	//                           last_name: contact.last_name,
	//                           comp_name: contact.comp_name,
	//                           comp_id: contact.comp_id,
	//                           unreaded: unreaded[contact.user_id] ? unreaded[contact.user_id] : 0,
	//                           in_contact: contact.notInContact ? false : true,
	//                     });
	//     });
	// }

	// возвращаем число непрочитанных по запрошенному чату

	// возвращаем id последнего прочитанного сообщения по запрошенному чату

	// обновляем число непрочитанных

	// DEPRECATED: заменено на onChatEvent
	//
	// обновляем чат по пришедшему событию
	// updateChat =(event)=> {
	//     logger.log('updateChat 1');

	//     // свое сообщение обрабатываем отдельно
	//     if ( event.type == 'msg_private_new' && event.user_id == AppState.user.state.id ) {
	//         let activeChat = null;
	//         this.chats.some( chat => {
	//             if( chat.id == event.to_user_id) return activeChat = chat;
	//         });
	//         logger.log('updateChat 2', this, activeChat);
	//         if( activeChat && activeChat.controller ) activeChat.controller.addToHistory( event );
	//         return;
	//     }

	//     this.chats.forEach( (chat, i) => {
	//         if( chat.id == event.user_id ) {
	//             switch( event.type ) {
	//                 case 'msg_private_new':
	//                     chat.unreaded++;
	//                     // если есть контроллер, значит, уже грузили историю, надо ее обновить
	//                     if( chat.controller ) chat.controller.addToHistory( event );
	//                 break;

	//                 case 'msg_private_unreaded':
	//                     // logger.log('updateChat set unreaded', this, event.unreaded);
	//                     chat.unreaded = event.unreaded;
	//                 break;

	//                 case 'msg_private_interlocutor_lrm':
	//                     if( chat.controller ) chat.controller.onMsgOppReaded( event );
	//                 break;

	//                 case 'msg_private_erase':
	//                     if( chat.controller ) chat.controller.markDeleted( event );
	//                 break;
	//             }
	//         }
	//     });
	//     // this.run('Chats_getlist_complete', this.chats);
	// }

	// обработка ивентов по чату

	// возвращаем ссылку на активный в данный момент чат

/***/ },
/* 375 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _api = __webpack_require__(1);

	var _AuthDashboard = __webpack_require__(247);

	var _Dispatcher = __webpack_require__(4);

	var _ClassesController = __webpack_require__(6);

	var _ClassesController2 = _interopRequireDefault(_ClassesController);

	var _ClassesLoggerJs = __webpack_require__(3);

	var _ControlsMessageMessageHistoryControllerJs = __webpack_require__(371);

	var _ControlsMessageMessageHistoryControllerJs2 = _interopRequireDefault(_ControlsMessageMessageHistoryControllerJs);

	var _ChatMessageControllerJs = __webpack_require__(376);

	var _ChatMessageControllerJs2 = _interopRequireDefault(_ChatMessageControllerJs);

	/**
	 * 
	 * Общие для каналов и чатов методы работы с историей реализованы 
	 * в Controls/Message/MessageHistoryController
	 * 
	 */

	var ChatController = (function (_MessageHistoryController) {
	    _inherits(ChatController, _MessageHistoryController);

	    function ChatController(params) {
	        var _this = this;

	        _classCallCheck(this, ChatController);

	        _get(Object.getPrototypeOf(ChatController.prototype), 'constructor', this).call(this);

	        /*  реализовано в MessageHistoryController:
	         *      this.history
	         *      this.scrollPos
	         */

	        this.updateHistory = function () {

	            var params = {
	                filters: [],
	                fields: ['id', 'ts', 'uid', 'body']
	            };

	            params.orderBy = 'id';
	            params.dir = 'DESC';

	            // смотрим, чего и сколько у нас есть непрочитанного, и в зависимости от этого
	            // корректируем оффсеты и лимиты
	            if (_this.unreaded > 0) {
	                // есть непрочитанные и last_readed = null --> непрочитаны все!
	                // обнуляем офсет и лимит не ставим, апи отдаст мах 500.
	                if (_this.history.last_readed === null) {
	                    _this.history.options.offset = 0;
	                    _this.history.options.limit = 500;

	                    // есть id непрочитанного и он за пределами лимита, будем выбирать прямо от него
	                    // офсет обнуляем, лимит ставим чуть больше числа непрочитанных
	                } else if (parseInt(_this.history.last_readed) > 0 && _this.unreaded >= _this.history.options.limit_default) {
	                        params.filters.push(["id", "gt", parseInt(_this.history.last_readed)]);
	                        _this.history.options.offset = 0;
	                        _this.history.options.limit = parseInt(_this.unreaded) + 10;
	                    }
	            }

	            // logger.log('CHAT: offset= ' + this.history.options.offset + ", limit= "+this.history.options.limit, this, params.filters);

	            params.opp_user_id = _this.interlocutor.id;
	            params.limit = _this.history.options.limit;
	            params.offset = _this.history.options.offset;

	            _api.Api.msg_private_hist_list(params).then(function (res) {

	                _this.isReady = true;

	                if (res) {
	                    var _ret = (function () {
	                        if (res.err) {
	                            _ClassesLoggerJs.logger.log(_this, 'Ошибка при получении истории сообщений', res.msg, 'error');
	                            _this.run('Chat-update', undefined); // не показываем чат вообще
	                            return {
	                                v: undefined
	                            };
	                        }

	                        _this.chat_id = res.private_id;
	                        _this.history.total = res.total;
	                        _this.history.last_readed = res.self_lrm_id; // id последнего прочитанного сообщения пользователем (null - нет прочитанных)
	                        _this.interlocutor.last_readed = res.opp_lrm_id; // id последнего прочитанного сообщения собеседником
	                        _this.interlocutor.last_readed_ts = res.opp_lrm_ts; // utc_ts прочтения собеседником сообщения opp_lrm_id

	                        // logger.log('msg_private_hist_list', this, this.interlocutor);

	                        // если данных нет, все равно нужно вернуть пустой результат
	                        if (!(res.data || []).length) {
	                            _this.history.data = [];
	                            _this.run('Message_history_update', _this.history.data);
	                            return {
	                                v: undefined
	                            };
	                        }

	                        var historyAppend = [];
	                        var myUserId = _AuthDashboard.AppState.user.state.id;
	                        var myFirstName = _AuthDashboard.AppState.user.state.first_name;
	                        var myLastName = _AuthDashboard.AppState.user.state.last_name;
	                        var myCompName = _AuthDashboard.AppState.user.state.comp.name;
	                        var myCompId = _AuthDashboard.AppState.user.state.comp.id;

	                        res.data.forEach(function (message) {

	                            // добавляем общие поля
	                            message.isDeleted = false;
	                            message.readed = true; // прочитано мной
	                            message.opp_readed = false; // прочитано собеседником
	                            message.user_id = message.uid; // костыль, т.к. поля в hist_list и в ивентах не совпадают названиями

	                            // свои пропускаем, чужие метим непрочитанными начиная с последнего прочитанного
	                            // если null, значит, ничего еще не прочитано
	                            var lrm = _this.history.last_readed === null ? 0 : _this.history.last_readed;

	                            // прочитано собеседником, если null, значит, ничего еще не прочитал
	                            var opp_lrm = _this.interlocutor.last_readed === null ? 0 : _this.interlocutor.last_readed;

	                            // свои
	                            if (message.uid == myUserId) {
	                                message.first_name = myFirstName;
	                                message.last_name = myLastName;
	                                message.comp_name = myCompName;
	                                message.comp_id = myCompId;

	                                // прочитано собеседником
	                                if (message.id <= opp_lrm) message.opp_readed = true;

	                                //  чужие
	                            } else {
	                                    message.first_name = _this.interlocutor.first_name;
	                                    message.last_name = _this.interlocutor.last_name;
	                                    message.comp_name = _this.interlocutor.comp_name;
	                                    message.comp_id = _this.interlocutor.comp_id;

	                                    // непрочитанные
	                                    if (message.id > lrm) message.readed = false;
	                                }

	                            // сообщения с пустым body = архив, показываем "сообщение было удалено"
	                            if (message.body == null) {
	                                message.isDeleted = true;
	                                message.body = "Сообщение удалено";
	                            }

	                            historyAppend.unshift(new _ChatMessageControllerJs2['default'](message, _this.chat_id));
	                        });

	                        _this.history.data = historyAppend.concat(_this.history.data);
	                        _this.run('Message_history_update', _this.history.data);
	                    })();

	                    if (typeof _ret === 'object') return _ret.v;
	                }
	            });
	        };

	        this.sendMessage = function (body) {
	            var params = {
	                user_id: _this.interlocutor.id,
	                body: body
	            };
	            _api.Api.msg_private_send(params).then(function (res) {
	                if (res) {
	                    if (res.err) {
	                        // проверяем, может, юзер просто не принимает личные сообщения
	                        if (res.msg.match("does not accept")) {
	                            _Dispatcher.Events.runError("Пользователь запретил прием личных сообщений.");
	                        } else {
	                            _Dispatcher.Events.runError(res.msg);
	                            _ClassesLoggerJs.logger.log(_this, 'Ошибка при отправке сообщения', res, 'error');
	                        }
	                        return;
	                    }
	                    _ClassesLoggerJs.logger.log(_this, 'Сообщение отправлено', res, res.msg);

	                    // дергаем событие, что отправили сами сообщение
	                    // TODO: надо ли теперь? проверить
	                    _this.run('Chat_message_send', res);
	                } else {
	                    _ClassesLoggerJs.logger.log(_this, 'Неизвестная ошибка при отправке сообщения', 'error');
	                    return;
	                }
	            });
	        };

	        this.markReaded = function (id) {
	            var params = {
	                user_id: _this.interlocutor.id,
	                message_id: id
	            };
	            _api.Api.msg_private_readed(params).then(function (res) {
	                if (res.err) {
	                    _ClassesLoggerJs.logger.log("Не удалось отметить сообщение прочитанным #" + id, _this, res.msg, 'error');
	                } else {
	                    _ClassesLoggerJs.logger.log("Отмечено прочитанным #" + id, _this);
	                }
	            });
	        };

	        this.addToHistory = function (event) {
	            _ClassesLoggerJs.logger.log('addToHistory', _this);
	            if (event) {
	                event.readed = event.user_id == _AuthDashboard.AppState.user.state.id ? true : false; // для чужого ставим метку, что сообщение не прочитано
	                var message = new _ChatMessageControllerJs2['default'](event, _this.id);
	                _this.history.data.push(message);
	            }
	        };

	        this.markDeleted = function (event) {
	            _this._removeMsg(event.id);
	        };

	        this.runUpdate = function (event) {
	            if (_AuthDashboard.AppState.myChats.activeChat() && _AuthDashboard.AppState.myChats.activeChat().isForActiveContext(event)) _this.run('Message_history_update', _this.history.data);
	        };

	        this.onMsgNew = function (event) {
	            if (event) {
	                _this.addToHistory(event);
	                _this.runUpdate(event); // для активного чата запускаем обновление истории
	            }
	        };

	        this.onMsgUnreaded = function (event) {
	            if (event) {
	                _this._markUnreaded(event);
	                _this.runUpdate(event);
	            }
	        };

	        this.onMsgOppReaded = function (event) {
	            if (event) {
	                (function () {
	                    // помечаем, что собеседник прочитал сообщения, начиная с указанного id
	                    _this.interlocutor.last_readed = event.interlocutor_lrm_id;

	                    // если null, значит, ничего еще не прочитано
	                    var opp_lrm = _this.interlocutor.last_readed === null ? 0 : _this.interlocutor.last_readed;

	                    _this.history.data.forEach(function (message) {
	                        if (message.author.id == _AuthDashboard.AppState.user.state.id) {
	                            message.opp_readed = message.id <= opp_lrm ? true : false;
	                        }
	                    });
	                    _this.runUpdate(event);
	                })();
	            }
	        };

	        this.onMsgErase = function (event) {
	            // Не реализовано в api
	        };

	        this.onMsgCorrect = function (event) {}
	        // Не реализовано в api

	        // определяем, пришел ивент в активный чат или это вообще наше же сообщение
	        ;

	        this.isForActiveContext = function (event) {
	            if (event) {
	                return event.user_id == _this.interlocutor.id || event.to_user_id == _this.interlocutor.id ? true : false;
	            }
	        };

	        this.chat_id = params.chat_id; // если null, значит, приватов с юзером еще не было и нет истории

	        // параметры собеседника
	        this.interlocutor = {
	            id: params.id,
	            first_name: params.first_name,
	            last_name: params.last_name,
	            comp_name: params.comp_name,
	            comp_id: params.comp_id,
	            last_readed: -1,
	            last_readed_ts: -1
	        };

	        this.unreaded = params.unreaded;
	        this.history.last_readed = params.last_readed;
	        this.isReady = false;
	    }

	    /*  реализовано в MessageHistoryController:
	     *       isGotAllMessages
	     *       getFirstHistoryMsgId
	     *       getLastHistoryMsgId
	     *       saveScrollPosition
	     *       getTotal
	     *       getHistory
	     *       appendHistory
	     *       getMsg
	     *       getUnreadedIDs
	     *       _removeMsg
	     *       _correctMsg 
	     */

	    //
	    // History
	    //

	    return ChatController;
	})(_ControlsMessageMessageHistoryControllerJs2['default']);

	exports['default'] = ChatController;
	module.exports = exports['default'];

	// 
	//  Действия
	// 

	// запускаем обновление истории при активном чате

	//
	// События
	//

/***/ },
/* 376 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _api = __webpack_require__(1);

	var _AuthDashboard = __webpack_require__(247);

	var _Dispatcher = __webpack_require__(4);

	var _ClassesController = __webpack_require__(6);

	var _ClassesController2 = _interopRequireDefault(_ClassesController);

	var _ClassesLogger = __webpack_require__(3);

	var ChatMessageController = (function (_Controller) {
	    _inherits(ChatMessageController, _Controller);

	    function ChatMessageController(message, chat_id) {
	        var _this = this;

	        _classCallCheck(this, ChatMessageController);

	        _get(Object.getPrototypeOf(ChatMessageController.prototype), 'constructor', this).call(this);

	        this.eraseMessage = function () {
	            // not in Api yet
	            _ClassesLogger.logger.log('Не реализовано в api', _this);
	        };

	        this.correctMessage = function (body) {
	            // not in Api yet
	            _ClassesLogger.logger.log('Не реализовано в api', _this);
	        };

	        this.id = message.id;
	        this.ts = message.ts;
	        this.author = {
	            id: message.user_id,
	            first_name: message.first_name,
	            last_name: message.last_name,
	            comp_name: message.comp_name,
	            comp_id: message.comp_id
	        };
	        this.body = message.body;
	        this.chat_id = chat_id;
	        this.isDeleted = message.isDeleted;
	        this.readed = message.readed;
	        this.opp_readed = message.opp_readed;
	    }

	    return ChatMessageController;
	})(_ClassesController2['default']);

	exports['default'] = ChatMessageController;
	module.exports = exports['default'];

	// реализовано через AppState.myChats.activeChat().sendMessage
	// sendMessage =()=> {}

	// реализовано через AppState.myChats.activeChat().markReaded
	// readedMessage =()=> {}

/***/ },
/* 377 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _api = __webpack_require__(1);

	var _AuthDashboard = __webpack_require__(247);

	var _Dispatcher = __webpack_require__(4);

	var _ClassesController = __webpack_require__(6);

	var _ClassesController2 = _interopRequireDefault(_ClassesController);

	var _ClassesLogger = __webpack_require__(3);

	var ContactsController = (function (_Controller) {
	    _inherits(ContactsController, _Controller);

	    function ContactsController(props) {
	        var _this = this;

	        _classCallCheck(this, ContactsController);

	        _get(Object.getPrototypeOf(ContactsController.prototype), 'constructor', this).call(this, props);

	        this.getData = function () {
	            return _this.data;
	        };

	        this.getContactsList = function () {

	            var params = {
	                fields: ['uid', 'ts', 'ln', 'fn', 'position', 'cid', 'cname']
	            };

	            _api.Api.user_contacts_list(params).then(function (res) {

	                if (res) {
	                    if (res.err) {
	                        _ClassesLogger.logger.log(_this, 'Ошибка при получении списка контактов', res.msg, 'error');
	                        return;
	                    }
	                    _this.data = [];

	                    // logger.log(this, 'getContactsList', this, res);

	                    // для обеспечения совместимости и читаемости меняем названия полей
	                    if ((res.data || []).length) {
	                        res.data.forEach(function (contact) {
	                            _this.data.push({ user_id: contact.uid,
	                                ts: contact.ts,
	                                position: contact.position,
	                                first_name: contact.fn,
	                                last_name: contact.ln,
	                                comp_name: contact.cname,
	                                comp_id: contact.cid
	                            });
	                        });
	                    }

	                    // this.setWatchUsers();
	                    // this.startWatchUsers();

	                    _this.isReady = true;
	                    _AuthDashboard.AppState.myWatch.regUsers(_this.data.map(function (user) {
	                        return user.user_id;
	                    }));

	                    _this.run('Contacts_getlist_complete', _this.data);
	                }
	            });
	        };

	        this.isContactExists = function (user_id) {
	            return _this.data.some(function (contact) {
	                return contact.user_id == user_id;
	            });
	        };

	        this.removeContact = function (user_id) {
	            _api.Api.user_contact_rem({ user_id: user_id }).then(function (res) {
	                if (res.err) {
	                    _ClassesLogger.logger.log(_this, 'Error while removing contact', res.msg, 'error');
	                    return;
	                }
	                _Dispatcher.Events.runInfo('Контакт успешно удален');

	                // this.run('update_myContacts', this);
	                // this.run('Contacts_update', this.data);

	                // запускаем обновление контактов
	                _this.getContactsList();
	            });
	        };

	        this.addContact = function (user_id) {

	            // проверяем, есть ли уже в контактах
	            if (_this.isContactExists(user_id)) {
	                _Dispatcher.Events.runInfo('Пользователь уже есть в списке контактов');
	                return;
	            }

	            _api.Api.user_contact_add({ user_id: user_id }).then(function (res) {
	                if (res.err) {
	                    // обрабатываем ошибки
	                    if (res.msg.match("already exists")) {
	                        _Dispatcher.Events.runError("Пользователь уже есть в контактах.");
	                    } else {
	                        _Dispatcher.Events.runError(res.msg);
	                        _ClassesLogger.logger.log(_this, 'Ошибка при добавлении в контакты', res, 'error');
	                    }
	                    return;
	                }
	                _Dispatcher.Events.runInfo('Контакт успешно добавлен');

	                // запускаем обновление контактов
	                _this.getContactsList();
	            });
	        };

	        this.data = [];
	        this.watchUsers = [];
	        this.onlineUsers = [];
	        this.isReady = false;

	        // контакты нам нужны сразу
	        this.getContactsList();
	    }

	    return ContactsController;
	})(_ClassesController2['default']);

	exports['default'] = ContactsController;
	module.exports = exports['default'];

	// получение списка контактов юзера

	// TODO: осталось от старого апи и поведения
	// проверить и переделать
	//   updateData =()=> {
	// // this.data = AppState.user.state.contacts;
	//       // if( !this.data ) this.data = [];   // data cannot be null
	//       this.setWatchUsers();
	//   }

	/**
	 * Подписки на статусы онлайн-офлайн - уехало в WatchController
	 */

	// подписываемся на обновление статусов юзеров в контактах
	// startWatchUsers =()=> {
	//     logger.log(this, 'startWatchUsers - contacts list', this.watchUsers);
	//     logger.log(this, 'startWatchUsers - is socket ready?', Events.isReady());
	//     if (!Events.isReady() || this.watchUsers.length < 1) return;
	//     Events.wsSend('watch', {users: this.watchUsers});
	// }

	// watchUsersInit =(data)=> {
	//     if( data.online ) {
	//         this.onlineUsers = data.online.map( userId => {
	//             return userId;
	//         })
	//     }
	//     this.run('Contacts_users_status_change', this.onlineUsers);

	//     logger.log(this, 'watchUsersInit, online Users', this.onlineUsers);
	// }

	// isUserOnline =(userId)=> {
	//     logger.log(this, 'isUserOnline u= ' + userId, this.onlineUsers);
	//     return this.onlineUsers.some( user => user == userId );
	// }

	// setUserOnline =(data)=> {
	//     logger.log(this, 'setUserOnline', data);
	//     if( this.isUserOnline( data.user_id ) ) return;
	//     this.onlineUsers.push( data.user_id );
	//     this.run('Contacts_users_status_change', this.onlineUsers);
	// }

	// setUserOffline =(data)=> {
	//     logger.log(this, 'setUserOffline', data);
	//     if( !this.isUserOnline( data.user_id ) ) return;
	//     this.onlineUsers = this.onlineUsers.filter( user => {
	//         return user != data.user_id;
	//     });
	//     this.run('Contacts_users_status_change', this.onlineUsers);
	// }

	// // получение списка ID юзеров в контактах
	// // нужно для подписки на обновление статуса
	// setWatchUsers =()=> {
	//     logger.log(this, 'setWatchUsers - contacts list');
	//     this.watchUsers = this.data.map( user => {
	//         return user.user_id;
	//     });
	// }
	//

/***/ },
/* 378 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _AuthDashboard = __webpack_require__(247);

	var _Dispatcher = __webpack_require__(4);

	var _ClassesLoggerJs = __webpack_require__(3);

	var _utils = __webpack_require__(2);

	var _SimpleComponentsIcons = __webpack_require__(252);

	var React = __webpack_require__(202);

	var ContactCenter__Block = (function (_React$Component) {
	    _inherits(ContactCenter__Block, _React$Component);

	    function ContactCenter__Block() {
	        var _this = this;

	        _classCallCheck(this, ContactCenter__Block);

	        _get(Object.getPrototypeOf(ContactCenter__Block.prototype), 'constructor', this).apply(this, arguments);

	        this.state = {
	            isShowSearch: false,
	            isShowBlock: true
	        };

	        this.onKeyUp = function (e) {
	            if (e.keyCode === 27) {
	                e.preventDefault();
	                _this.setState({ isShowSearch: false });
	                var c = _this.props.onToggleSearch;
	                if (c) c(_this.props.name);
	            }
	        };

	        this.onToggleSearch = function (e) {
	            _this.setState({ isShowSearch: !_this.state.isShowSearch });
	            var c = _this.props.onToggleSearch;
	            if (c) c(_this.props.name);
	        };

	        this.toggleBlock = function (e) {
	            _this.setState({ isShowBlock: !_this.state.isShowBlock });
	        };

	        this.onCreate = function (e) {
	            e.stopPropagation();
	            if (_this.props.onCreate) _this.props.onCreate();
	        };

	        this.render = function () {
	            return React.createElement(
	                'div',
	                { className: 'contact-center__block', 'data-state': _this.state.isShowBlock ? '' : 'collapse' },
	                React.createElement(
	                    'div',
	                    { className: 'contact-center__block-header pointer', onClick: _this.toggleBlock },
	                    React.createElement(
	                        'span',
	                        null,
	                        _this.props.title
	                    ),
	                    _this.props.onCreate ? React.createElement(
	                        'div',
	                        null,
	                        React.createElement(
	                            'div',
	                            { className: 'contact-center__btn pointer', onClick: _this.onCreate },
	                            '+'
	                        )
	                    ) : null
	                ),
	                _this.state.isShowBlock ? React.createElement(
	                    'div',
	                    { className: 'contact-center__block-subheader' },
	                    React.createElement(
	                        'div',
	                        { className: 'contact-center__tab' },
	                        React.createElement(
	                            'div',
	                            { className: 'contact-center__tab-left pointer',
	                                'data-state': _this.props.activeFilter == "all" ? "active" : '',
	                                onClick: _this.props.onToggleFilter,
	                                'data-name': _this.props.name,
	                                'data-value': 'all' },
	                            'все'
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'contact-center__tab-right pointer',
	                                'data-state': _this.props.activeFilter == "my" ? "active" : '',
	                                onClick: _this.props.onToggleFilter,
	                                'data-name': _this.props.name,
	                                'data-value': 'my' },
	                            _this.props.name == 'contacts' ? "контакты" : "мои"
	                        )
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'contact-center__search' },
	                        React.createElement(
	                            'div',
	                            { className: 'contact-center__search-icon pointer', onClick: _this.onToggleSearch },
	                            React.createElement(_SimpleComponentsIcons.Icon, { iconName: 'search-icon', className: 'icon-dark', fill: '#74848d', size: 18 })
	                        ),
	                        _this.state.isShowSearch ? React.createElement('input', { type: 'text',
	                            placeholder: 'поиск...',
	                            'data-name': _this.props.name,
	                            onChange: _this.props.onSearchChange,
	                            onKeyUp: _this.onKeyUp,
	                            autoFocus: true }) : null
	                    )
	                ) : null,
	                _this.state.isShowBlock ? React.createElement(
	                    'div',
	                    { className: 'contact-center__block-content' },
	                    _this.props.children
	                ) : null
	            );
	        };
	    }

	    _createClass(ContactCenter__Block, null, [{
	        key: 'propTypes',
	        value: {
	            name: React.PropTypes.string,
	            title: React.PropTypes.string,
	            isShow: React.PropTypes.bool,
	            isShowSearch: React.PropTypes.bool,
	            onToggleBlock: React.PropTypes.func,
	            onToggleSearch: React.PropTypes.func,
	            onSearchChange: React.PropTypes.func
	        },
	        enumerable: true
	    }]);

	    return ContactCenter__Block;
	})(React.Component);

	exports['default'] = ContactCenter__Block;
	module.exports = exports['default'];

/***/ },
/* 379 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _Dispatcher = __webpack_require__(4);

	var _api = __webpack_require__(1);

	var _AuthDashboard = __webpack_require__(247);

	var _Validation = __webpack_require__(223);

	var _ControlsFormsButtonSimple = __webpack_require__(226);

	var _ControlsFormsInputSimple = __webpack_require__(225);

	var _ControlsFormsFormGroup = __webpack_require__(224);

	var _ClassesLogger = __webpack_require__(3);

	var React = __webpack_require__(202);

	var Channels__CreateChannel = (function (_React$Component) {
	    _inherits(Channels__CreateChannel, _React$Component);

	    function Channels__CreateChannel(props) {
	        var _this = this;

	        _classCallCheck(this, Channels__CreateChannel);

	        _get(Object.getPrototypeOf(Channels__CreateChannel.prototype), 'constructor', this).call(this, props);
	        this.state = {
	            "isValidated": false
	        };

	        this.componentDidMount = function () {
	            _this.initForm();
	        };

	        this.formFields = {
	            fields: [{ name: "title", isRequired: true }]
	        };

	        this.initFields = function () {
	            _this.formFields.fields.forEach(function (field) {
	                field.isValidated = false;
	                field.isChanged = false;
	                // set custom validator
	                if (field.validatorName) field.validator = _this[field.validatorName];
	            });
	        };

	        this.initForm = function () {

	            // добавляем флаги
	            _this.initFields();

	            // если передан внешний объект, вытаскиваем из него данные для формы
	            // if( this.props.obj ) {
	            //     Object.keys(this.props.obj).forEach( key => {
	            //         if( this.isFieldInForm(key) ) {
	            //             this.formData[key] = this.props.obj[key2];
	            //         }
	            //     });
	            // }
	        };

	        this.isFieldInForm = function (name) {
	            return _this.formFields.fields.some(function (field) {
	                return field.name == name;
	            });
	        };

	        this.setFormData = function (obj) {
	            Object.keys(obj).forEach(function (key) {
	                _this.formData[key] = obj[key];
	                // set field is changed
	                _this.formFields.fields.forEach(function (field) {
	                    if (field.name == key) field.isChanged = true;
	                });
	            });
	        };

	        this.validateForm = function () {
	            _this.formFields.fields.forEach(function (field) {

	                // not required field
	                if (!field.isRequired) {
	                    field.isValidated = true;
	                    return;
	                }

	                // required field
	                if (_this.formData[field.name]) {

	                    // custom validation
	                    if (field.validator) {
	                        field.isValidated = field.validator(_this.formData[field.name]);
	                        // only 'isRequired' validation
	                    } else {
	                            field.isValidated = true;
	                        }
	                } else {
	                    field.isValidated = false;
	                    field.isChanged = false;
	                }
	            });
	            _this.setState({ isValidated: _this.isValidated() });
	        };

	        this.isValidated = function () {
	            return _this.formFields.fields.every(function (field) {
	                return field.isValidated === true;
	            });
	        };

	        this.validateNum = function (value) {
	            var mask = _this.formData.type == 'trailer' || _this.formData.type == 'semitrailer' ? /[А-Яа-я]{2}\d{6,7}/ : /[А-Яа-я]\d{3}[А-Яа-я]{2}\d{2,3}/;
	            return mask.test(value);
	        };

	        this.onChangeHandler = function (obj) {
	            _this.setFormData(obj);
	            _this.validateForm();
	        };

	        this.saveForm = function () {
	            if (_this.props.onSave) _this.props.onSave(_this.formData.title);
	            _this.closeForm();
	        };

	        this.closeForm = function () {
	            _this.formData = {};
	            if (_this.props.onClose) _this.props.onClose();
	        };

	        this.render = function () {
	            return React.createElement(
	                'div',
	                { className: 'modal-container__body' },
	                React.createElement(
	                    _ControlsFormsFormGroup.FormGroup,
	                    { name: 'Название', from: 'title' },
	                    React.createElement(_ControlsFormsInputSimple.InputSimple, { value: _this.formData.title, name: 'title', onChange: _this.onChangeHandler })
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'modal-container__footer' },
	                    React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.saveForm, disabled: !_this.state.isValidated, type: 'success', caption: 'Создать' }),
	                    React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.closeForm, type: 'warning', caption: 'Отменить' })
	                )
	            );
	        };

	        this.formData = {};
	    }

	    _createClass(Channels__CreateChannel, null, [{
	        key: 'propTypes',
	        value: {},
	        enumerable: true
	    }]);

	    return Channels__CreateChannel;
	})(React.Component);

	exports['default'] = Channels__CreateChannel;
	module.exports = exports['default'];

	/**
	 * FORMS BLOCK - вынести в отдельный класс
	 *
	 * initFields()
	 * initForm() - инициализация и наполнение, если передан this.props.obj
	 * 
	 */

	// {name: "num", isRequired: true, validatorName: "validateNum" },

	/**
	 * End of FORMS BLOCK
	 */

/***/ },
/* 380 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _AuthDashboard = __webpack_require__(247);

	var _Dispatcher = __webpack_require__(4);

	var _Controller2 = __webpack_require__(6);

	var _Controller3 = _interopRequireDefault(_Controller2);

	var _Logger = __webpack_require__(3);

	/**
	 * Подписки на статусы юзера онлайн-офлайн
	 */

	var WatchController = (function (_Controller) {
	    _inherits(WatchController, _Controller);

	    function WatchController(props) {
	        var _this = this;

	        _classCallCheck(this, WatchController);

	        _get(Object.getPrototypeOf(WatchController.prototype), 'constructor', this).call(this, props);

	        this.regUsers = function (users) {
	            var oldLen = _this.usersList.length;
	            var newData = _this.usersList.concat(users);

	            // logger.log('usersList l old= ' + len, this, users, newData);

	            // храним только уникальные user id
	            _this.usersList = newData.reduce(function (list, curUser) {
	                if (list.indexOf(curUser) < 0) list.push(curUser);
	                return list;
	            }, []);

	            if (oldLen != _this.usersList.length) _this.watchUsers();

	            // logger.log('usersList l new= ' + this.usersList.length, this, this.usersList);
	        };

	        this.watchUsers = function () {
	            // logger.log(this, 'startusersList - is socket ready? = ' + Events.isReady(), this, this.usersList);
	            if (!_Dispatcher.Events.isReady() || _this.usersList.length < 1) return;
	            _Dispatcher.Events.wsSend('watch', { users: _this.usersList });
	        };

	        this.setUsersOnline = function (data) {
	            if (!(data.online || []).length) return;

	            // logger.log('setUsersOnline', this, data);

	            _this.onlineUsers = data.online.map(function (userId) {
	                return userId;
	            });
	            _this.run('Watch_status_change', _this.onlineUsers);

	            // logger.log(this, 'setUsersOnline, online Users', this.onlineUsers);
	        };

	        this.isUserOnline = function (userId) {
	            // logger.log(this, 'isUserOnline u= ' + userId, this.onlineUsers);

	            return _this.onlineUsers.indexOf(userId) < 0 ? false : true;
	        };

	        this.userStatus = function (userId) {
	            return _this.isUserOnline(userId) ? 'online' : 'offline';
	        };

	        this.setOneUserOnline = function (data) {
	            if (_this.isUserOnline(data.user_id)) return;
	            _this.onlineUsers.push(data.user_id);
	            _this.run('Watch_status_change', _this.onlineUsers);

	            // logger.log(this, 'setUser On line', this.onlineUsers);
	        };

	        this.setOneUserOffline = function (data) {
	            if (!_this.isUserOnline(data.user_id)) return;
	            _this.onlineUsers = _this.onlineUsers.filter(function (userId) {
	                return userId != data.user_id;
	            });
	            _this.run('Watch_status_change', _this.onlineUsers);

	            // logger.log(this, 'setUser Off line', this.onlineUsers);
	        };

	        this.usersList = [];
	        this.onlineUsers = [];
	    }

	    return WatchController;
	})(_Controller3['default']);

	exports['default'] = WatchController;
	module.exports = exports['default'];

	// после подписки на статусы сервер присылает список юзеров онлайн, сохраняем его

/***/ },
/* 381 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _AuthDashboard = __webpack_require__(247);

	var _Dispatcher = __webpack_require__(4);

	var _ClassesLogger = __webpack_require__(3);

	var _ControlsFormsButtonSimple = __webpack_require__(226);

	var _ControlsIcon = __webpack_require__(232);

	var _utils = __webpack_require__(2);

	var _ChannelHeader__Actions_Delete = __webpack_require__(382);

	var _ChannelHeader__Actions_Delete2 = _interopRequireDefault(_ChannelHeader__Actions_Delete);

	var _ChannelHeader__Actions_Invite = __webpack_require__(383);

	var _ChannelHeader__Actions_Invite2 = _interopRequireDefault(_ChannelHeader__Actions_Invite);

	var _ChannelHeader__Actions_Leave = __webpack_require__(384);

	var _ChannelHeader__Actions_Leave2 = _interopRequireDefault(_ChannelHeader__Actions_Leave);

	var _ChannelInfoJs = __webpack_require__(385);

	var _ChannelInfoJs2 = _interopRequireDefault(_ChannelInfoJs);

	var _ControlsMessageMessageHistory = __webpack_require__(386);

	var _ControlsMessageMessageHistory2 = _interopRequireDefault(_ControlsMessageMessageHistory);

	var _ControlsMessageMessageForm = __webpack_require__(390);

	var _ControlsMessageMessageForm2 = _interopRequireDefault(_ControlsMessageMessageForm);

	var React = __webpack_require__(202);

	var Channel = (function (_React$Component) {
	    _inherits(Channel, _React$Component);

	    function Channel(props) {
	        var _this = this;

	        _classCallCheck(this, Channel);

	        _get(Object.getPrototypeOf(Channel.prototype), 'constructor', this).call(this, props);

	        this.state = {
	            channel: null,
	            members: [] };

	        this._setChannelID = function (id) {
	            _this.id = id && parseInt(id) ? parseInt(id) : null;
	        };

	        this._getChannel = function () {
	            // если канал не найден или передан кривой ID, myChannels вернет undefined, сохраняем в стейт
	            var channel = _AuthDashboard.AppState.myChannels.getChannel(_this.id);
	            _this.setState({ channel: channel });
	            if (!channel) return;
	            if (_AuthDashboard.AppState.myChannels.activeChannel()) _AuthDashboard.AppState.myChannels.activeChannel().on('Channel-update', _this.updateChannel);
	        };

	        this.componentWillMount = function () {

	            // this._setChannelID( this.props.params.id );
	            _this._setChannelID(_this.props.id);

	            // если Channels_getlist_complete уже отработал и есть подгруженные чаты,
	            // сразу идем на получение чата
	            if (_AuthDashboard.AppState.myChannels.isReady) {
	                _this._getChannel();
	            } else {
	                _AuthDashboard.AppState.myChannels.on("Channels_getlist_complete", _this._getChannel);
	            }

	            _utils.Utils.addWindowEvent('resize', _this.onResizeWindow);

	            // убираем скролл у body
	            document.body.style.overflowY = "hidden";
	        };

	        this.componentDidMount = function () {
	            _Dispatcher.Events.on(_Dispatcher.Events.EV_MSG_CHANNEL_DELETED, _this.onChannelDeleted);
	        };

	        this.componentWillReceiveProps = function (nextProps) {
	            // this._setChannelID( nextProps.params.id );
	            _this._setChannelID(nextProps.id);
	            _this._getChannel();
	        };

	        this.onResizeWindow = function () {
	            // TODO: переделать на setState
	            _this.forceUpdate();
	        };

	        this.componentWillUnmount = function () {
	            if (_AuthDashboard.AppState.myChannels.activeChannel()) {
	                _AuthDashboard.AppState.myChannels.activeChannel().rem('Channel-update', _this.updateChannel);
	            }

	            // ставим метку, что чат уже не активен
	            _AuthDashboard.AppState.myChannels.activeChannelIndex = null;

	            _utils.Utils.remWindowEvent('resize', _this.onResizeWindow);

	            // восстанавливаем скролл у body
	            document.body.style.overflowY = "auto";
	        };

	        this.updateChannel = function (channel) {
	            _this.setState({ channel: channel });
	        };

	        this.msgChannelJoin = function () {
	            _AuthDashboard.AppState.myChannels.activeChannel().msgChannelJoin();
	        };

	        this.msgChannelLeave = function () {
	            _AuthDashboard.AppState.myChannels.activeChannel().msgChannelLeave();
	        };

	        this.onSendMessage = function (msg) {
	            // logger.log('onSendMessage act ch= '+AppState.myChannels.activeChannel(), this, AppState.myChannels.activeChannel());

	            _AuthDashboard.AppState.myChannels.activeChannel().sendMessage(msg);
	        };

	        this.onClose = function () {
	            _AuthDashboard.AppState.myChannels.closeChannel(_this.id);
	        };

	        this.onChannelDeleted = function (data) {
	            // эмулируем флаг
	            _this.state.channel.flags = -3;
	            _this.forceUpdate();
	        };

	        this.render = function () {

	            // подгоняем высоту под экран
	            _this.channelHeight = _utils.Utils.getClientHeight() - 80 + "px";
	            _this.channelContentHeight = _utils.Utils.getClientHeight() - 140 + "px";
	            var channelStyle = {
	                height: _this.channelHeight,
	                overflowY: "hidden"
	            };
	            var channelContentStyle = {
	                height: _this.channelContentHeight
	            };

	            if (_this.state.channel === null) {
	                return React.createElement(
	                    'div',
	                    { className: 'channel__preview' },
	                    React.createElement(
	                        'div',
	                        { className: 'channel__preview-actions' },
	                        React.createElement(
	                            'div',
	                            { className: 'pointer', onClick: _this.onClose },
	                            React.createElement(_ControlsIcon.Icon, { name: 'close', className: 'marg-left', size: 24 })
	                        )
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'channel-preview__not-found' },
	                        'Загрузка...'
	                    )
	                );
	            }

	            // нет доступа в канал или канал не найден
	            if (!_this.state.channel) {
	                return React.createElement(
	                    'div',
	                    { className: 'channel__preview' },
	                    React.createElement(
	                        'div',
	                        { className: 'channel__preview-actions' },
	                        React.createElement(
	                            'div',
	                            { className: 'pointer', onClick: _this.onClose },
	                            React.createElement(_ControlsIcon.Icon, { name: 'close', className: 'marg-left', size: 24 })
	                        )
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'channel-preview__not-found' },
	                        ' У вас нет доступа в канал #',
	                        _this.props.id,
	                        ' или он был удален.'
	                    )
	                );
	            }

	            // инфо-сообщения, если нет доступа в канал
	            var Message = undefined;
	            switch (_this.state.channel.flags) {
	                case 1:
	                    Message = React.createElement(
	                        'div',
	                        { className: 'channel__preview-flags' },
	                        React.createElement(
	                            'h2',
	                            null,
	                            'Вы получили приглашение в канал "',
	                            _this.state.channel.title,
	                            '"'
	                        ),
	                        React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.msgChannelJoin, type: 'success', caption: 'Присоединиться' }),
	                        React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.msgChannelLeave, type: 'warning', caption: 'Отказать' })
	                    );
	                    break;
	                case -1:
	                    Message = React.createElement(
	                        'div',
	                        { className: 'channel__preview-not-found' },
	                        'Вы успешно удалили канал "',
	                        _this.state.channel.title,
	                        '".'
	                    );
	                    break;
	                case -2:
	                    Message = React.createElement(
	                        'div',
	                        { className: 'channel__preview-not-found' },
	                        'Вы успешно покинули канал "',
	                        _this.state.channel.title,
	                        '".'
	                    );
	                    break;
	                case -3:
	                    Message = React.createElement(
	                        'div',
	                        { className: 'channel__preview-not-found' },
	                        'Канал "',
	                        _this.state.channel.title,
	                        '" был удален администратором.'
	                    );
	                    break;
	                // default:
	                //     Message =   <div className="channel-preview__not-found">
	                //                     У вас нет доступа в этот канала или он был удален.
	                //                 </div>;
	                // break;
	            }

	            // действия для админа канала
	            var channelActionsAdmin = _this.state.channel.flags == 2 ? React.createElement(
	                'div',
	                { className: 'channel__header-actions--admin' },
	                React.createElement(_ChannelHeader__Actions_Invite2['default'], { members: _this.state.members }),
	                React.createElement(_ChannelHeader__Actions_Delete2['default'], null)
	            ) : null;

	            if (!_this.state.channel || _this.state.channel.flags == 1 || _this.state.channel.flags < 0) {
	                return React.createElement(
	                    'div',
	                    { className: 'channel__preview' },
	                    React.createElement(
	                        'div',
	                        { className: 'channel__preview-actions' },
	                        React.createElement(
	                            'div',
	                            { className: 'pointer', onClick: _this.onClose },
	                            React.createElement(_ControlsIcon.Icon, { name: 'close', className: 'marg-left', size: 24 })
	                        )
	                    ),
	                    Message
	                );
	            } else {
	                return React.createElement(
	                    'div',
	                    { className: 'channel' },
	                    React.createElement(
	                        'div',
	                        { className: 'channel__header' },
	                        React.createElement(
	                            'div',
	                            { className: 'channel__header-title' },
	                            _this.state.channel.title
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'channel__header-actions' },
	                            channelActionsAdmin,
	                            React.createElement(_ChannelHeader__Actions_Leave2['default'], null),
	                            React.createElement(
	                                'div',
	                                { className: 'pointer', onClick: _this.onClose },
	                                React.createElement(_ControlsIcon.Icon, { name: 'close', className: 'marg-left', size: 24 })
	                            )
	                        )
	                    ),
	                    React.createElement(_ControlsMessageMessageHistory2['default'], { context: _this.state.channel, type: 'channel', context_id: _this.id }),
	                    React.createElement(_ControlsMessageMessageForm2['default'], { onSend: _this.onSendMessage })
	                );
	            }
	        };

	        this.id = null;
	        this.type = 'channel';
	    }

	    return Channel;
	})(React.Component);

	exports['default'] = Channel;
	;

	// TODO:
	// пока убран, но надо будет восстановить и показывать при полном окне канала

	// <div className="channel__sidebar" style={channelContentStyle}>
	//                         <ChannelInfo context={this.state.channel}/>
	//                     </div>
	//                    
	//                    
	//                    
	//                    

	// <div className="channel" style={channelStyle}>
	//     <div className="channel__header">
	//         <div className="channel__header_title">{this.state.channel.title}</div>
	//         <div className="channel__header_actions">
	//             {channelActionsAdmin}
	//             <ChannelHeader__Actions_Leave/>
	//         </div>
	//     </div>
	//     <div className="channel__content" style={channelContentStyle}>
	//         <MessageHistory context={this.state.channel} type="channel" context_id={this.id}/>
	//         <MessageForm onSend={this.onSendMessage}/>
	//     </div>

	// </div>
	module.exports = exports['default'];
	// ??? мемберы нам тут пока не нужны

	// members: AppState.myChannels.activeChannel().getMembers() // мемберы нам тут пока не нужны

	// сохраняем сообщение в канале

	// когда мы сидим в канале, а его берет и удаляет админ

/***/ },
/* 382 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _AuthDashboard = __webpack_require__(247);

	var _ClassesLogger = __webpack_require__(3);

	var _ControlsModalWindow = __webpack_require__(233);

	var _ControlsFormsButtonSimple = __webpack_require__(226);

	var _ControlsIcon = __webpack_require__(232);

	var React = __webpack_require__(202);

	var ChannelInfo__Actions_Delete = (function (_React$Component) {
	    _inherits(ChannelInfo__Actions_Delete, _React$Component);

	    function ChannelInfo__Actions_Delete() {
	        var _this = this;

	        _classCallCheck(this, ChannelInfo__Actions_Delete);

	        _get(Object.getPrototypeOf(ChannelInfo__Actions_Delete.prototype), 'constructor', this).apply(this, arguments);

	        this.state = {
	            isModalOpen: false
	        };

	        this.deleteChannel = function () {
	            _AuthDashboard.AppState.myChannels.activeChannel().msgChannelDelete();
	            _this.closeModal();
	        };

	        this.closeModal = function () {
	            _this.setState({ isModalOpen: false });
	        };

	        this.openModal = function () {
	            _this.setState({ isModalOpen: true });
	        };

	        this.render = function () {
	            return React.createElement(
	                'div',
	                { className: 'channel__actions' },
	                React.createElement(
	                    'span',
	                    { onClick: _this.openModal },
	                    React.createElement(_ControlsIcon.Icon, { name: 'delete', className: 'marg-left-s', size: 24 })
	                ),
	                React.createElement(
	                    _ControlsModalWindow.ModalWindow,
	                    { isOpen: _this.state.isModalOpen, onClose: _this.closeModal, title: 'Удаление' },
	                    React.createElement(
	                        'div',
	                        { className: 'modal-container__body' },
	                        'Вы действительно хотите удалить этот канал?',
	                        React.createElement(
	                            'div',
	                            { className: 'modal-container__footer' },
	                            React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.deleteChannel, type: 'warning', caption: 'Удалить' }),
	                            React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.closeModal, type: 'success', caption: 'Отменить' })
	                        )
	                    )
	                )
	            );
	        };
	    }

	    return ChannelInfo__Actions_Delete;
	})(React.Component);

	exports['default'] = ChannelInfo__Actions_Delete;
	module.exports = exports['default'];

/***/ },
/* 383 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _AuthDashboard = __webpack_require__(247);

	var _ClassesLogger = __webpack_require__(3);

	var _ControlsModalWindow = __webpack_require__(233);

	var _ControlsFormsButtonSimple = __webpack_require__(226);

	var _ControlsIcon = __webpack_require__(232);

	var React = __webpack_require__(202);

	var ChannelInfo__Actions_Invite = (function (_React$Component) {
	    _inherits(ChannelInfo__Actions_Invite, _React$Component);

	    function ChannelInfo__Actions_Invite() {
	        var _this = this;

	        _classCallCheck(this, ChannelInfo__Actions_Invite);

	        _get(Object.getPrototypeOf(ChannelInfo__Actions_Invite.prototype), 'constructor', this).apply(this, arguments);

	        this.state = {
	            isModalOpen: false
	        };

	        this.inviteChannel = function (user_id) {
	            _AuthDashboard.AppState.myChannels.activeChannel().msgChannelInvite(user_id);
	            _this.closeModal();
	        };

	        this.closeModal = function () {
	            _this.setState({ isModalOpen: false });
	        };

	        this.openModal = function () {
	            _this.setState({ isModalOpen: true });
	        };

	        this.render = function () {
	            var Contacts = _AuthDashboard.AppState.myContacts.getData().filter(function (contact, i) {
	                return _this.props.members.reduce(function (prev, member) {
	                    return prev && contact.user_id !== member.user_id;
	                }, true);
	            });

	            return React.createElement(
	                'div',
	                { className: 'channel__actions' },
	                React.createElement(
	                    'span',
	                    { onClick: _this.openModal },
	                    React.createElement(_ControlsIcon.Icon, { name: 'user-add', size: 24 })
	                ),
	                React.createElement(
	                    _ControlsModalWindow.ModalWindow,
	                    { isOpen: _this.state.isModalOpen, onClose: _this.closeModal, title: 'Приглашение' },
	                    React.createElement(
	                        'div',
	                        { className: 'modal-container__body' },
	                        Contacts.map(function (contact, i) {
	                            return React.createElement(
	                                'div',
	                                { className: 'contact-center__elem', key: i },
	                                React.createElement(
	                                    'div',
	                                    null,
	                                    React.createElement(
	                                        'div',
	                                        { className: 'contact-center__user-credits' },
	                                        contact.first_name + ' ' + contact.last_name
	                                    ),
	                                    React.createElement(
	                                        'div',
	                                        { className: 'contact-center__user-company' },
	                                        contact.comp_name
	                                    )
	                                ),
	                                React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.inviteChannel.bind(_this, contact.user_id), type: 'success', caption: 'Пригласить' })
	                            );
	                        }),
	                        React.createElement(
	                            'div',
	                            { className: 'modal-container__footer' },
	                            React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.closeModal, type: 'warning', caption: 'Отменить' })
	                        )
	                    )
	                )
	            );
	        };
	    }

	    // <button onClick={this.inviteChannel.bind(this, contact.user_id)}>
	    //                                             Пригласить {contact.first_name}
	    //                                         </button>

	    _createClass(ChannelInfo__Actions_Invite, null, [{
	        key: 'defaultProps',
	        value: {
	            members: []
	        },
	        enumerable: true
	    }]);

	    return ChannelInfo__Actions_Invite;
	})(React.Component);

	exports['default'] = ChannelInfo__Actions_Invite;
	module.exports = exports['default'];

/***/ },
/* 384 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _AuthDashboard = __webpack_require__(247);

	var _ClassesLogger = __webpack_require__(3);

	var _ControlsModalWindow = __webpack_require__(233);

	var _ControlsFormsButtonSimple = __webpack_require__(226);

	var _ControlsIcon = __webpack_require__(232);

	var React = __webpack_require__(202);

	var ChannelInfo__Actions_Leave = (function (_React$Component) {
	    _inherits(ChannelInfo__Actions_Leave, _React$Component);

	    function ChannelInfo__Actions_Leave() {
	        var _this = this;

	        _classCallCheck(this, ChannelInfo__Actions_Leave);

	        _get(Object.getPrototypeOf(ChannelInfo__Actions_Leave.prototype), 'constructor', this).apply(this, arguments);

	        this.state = {
	            isModalOpen: false
	        };

	        this.leaveChannel = function (user_id) {
	            _AuthDashboard.AppState.myChannels.activeChannel().msgChannelLeave();
	            _this.closeModal();
	        };

	        this.closeModal = function () {
	            _this.setState({ isModalOpen: false });
	        };

	        this.openModal = function () {
	            _this.setState({ isModalOpen: true });
	        };

	        this.render = function () {
	            return React.createElement(
	                'div',
	                { className: 'channel__actions' },
	                React.createElement(
	                    'span',
	                    { onClick: _this.openModal },
	                    React.createElement(_ControlsIcon.Icon, { name: 'exit', className: 'marg-left-s', size: 24 })
	                ),
	                React.createElement(
	                    _ControlsModalWindow.ModalWindow,
	                    { isOpen: _this.state.isModalOpen, onClose: _this.closeModal, title: 'Выйти' },
	                    React.createElement(
	                        'div',
	                        { className: 'modal-container__body' },
	                        'Вы действительно хотите выйти из канала?',
	                        React.createElement(
	                            'div',
	                            { className: 'modal-container__footer' },
	                            React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.leaveChannel, type: 'warning', caption: 'Выйти' }),
	                            React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.closeModal, type: 'success', caption: 'Отменить' })
	                        )
	                    )
	                )
	            );
	        };
	    }

	    return ChannelInfo__Actions_Leave;
	})(React.Component);

	exports['default'] = ChannelInfo__Actions_Leave;
	module.exports = exports['default'];

/***/ },
/* 385 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _AuthDashboard = __webpack_require__(247);

	var _Dispatcher = __webpack_require__(4);

	var _ClassesLogger = __webpack_require__(3);

	var _SimpleComponentsIcons = __webpack_require__(252);

	var _SimpleComponentsModalWindow = __webpack_require__(362);

	var _SimpleComponentsTransparentButton = __webpack_require__(264);

	var _ContactCenterContacts__UserJs = __webpack_require__(367);

	var _ContactCenterContacts__UserJs2 = _interopRequireDefault(_ContactCenterContacts__UserJs);

	var React = __webpack_require__(202);

	var ChannelInfo = (function (_React$Component) {
	    _inherits(ChannelInfo, _React$Component);

	    function ChannelInfo() {
	        var _this = this;

	        _classCallCheck(this, ChannelInfo);

	        _get(Object.getPrototypeOf(ChannelInfo.prototype), 'constructor', this).call(this);

	        // активный элемент - канал или чат
	        this.state = {
	            members: []
	        };

	        this.componentWillReceiveProps = function (nextProps) {
	            // this.activeContext.rem('Channel_members_update', this.updateMembers);

	            _this._setContext(nextProps.context);

	            _this.setState({ members: _this.activeContext.getMembers() });
	            _this.activeContext.on('Channel_members_update', _this.updateMembers);
	        };

	        this.componentWillMount = function () {

	            _this._setContext(_this.props.context);

	            _this.activeContext.on('Channel_members_update', _this.updateMembers);
	            _AuthDashboard.AppState.myWatch.on("Watch_status_change", _this.onWatchStatusChange);
	            // Events.on(Events.EV_MSG_CHANNEL_USER_LEAVE, this.msgChannelUserLeave);
	        };

	        this.componentWillUnmount = function () {
	            if (_this.activeContext) {
	                _this.activeContext.rem('Channel_members_update', _this.updateMembers);
	            }
	            _AuthDashboard.AppState.myWatch.rem("Watch_status_change", _this.onWatchStatusChange);
	            // Events.rem(Events.EV_MSG_CHANNEL_USER_LEAVE, this.msgChannelUserLeave);
	        };

	        this.onWatchStatusChange = function (data) {
	            _this.forceUpdate();
	        };

	        this.updateMembers = function (members) {
	            _this.setState({ members: members });
	        };

	        this.render = function () {
	            var Flags = _this.activeContext.flags;
	            var Actions = null;
	            var Members = [];
	            var MembersAdmin = [];
	            var MembersAwait = [];

	            if (_this.state.members) {

	                _this.state.members.forEach(function (member, i) {

	                    var userView = React.createElement(
	                        'div',
	                        { key: i, className: 'contacts__contact' },
	                        React.createElement(_ContactCenterContacts__UserJs2['default'], { user: member })
	                    );

	                    // приглашенных видит только админ канала
	                    if (Flags == 2 && member.flags == 1) MembersAwait.push(userView);else if (member.flags == 2) MembersAdmin.push(userView);else if (member.flags != 1 && member.flags != 2) Members.push(userView);
	                });
	            }

	            return React.createElement(
	                'div',
	                { className: 'channel-info' },
	                React.createElement(
	                    'div',
	                    { className: 'channel-info__content' },
	                    React.createElement(
	                        ChannelInfoSection,
	                        { title: 'Участники', iconName: 'person-outline', iconFill: '#e91e63' },
	                        React.createElement(
	                            'div',
	                            { className: 'channel-members' },
	                            React.createElement(
	                                'div',
	                                { className: 'channel-members__title' },
	                                'Администратор'
	                            ),
	                            MembersAdmin,
	                            Members.length ? React.createElement(
	                                'div',
	                                { className: 'channel-members__title' },
	                                'Участники'
	                            ) : null,
	                            Members,
	                            MembersAwait.length ? React.createElement(
	                                'div',
	                                { className: 'channel-members__title' },
	                                'Выслано приглашение'
	                            ) : null,
	                            MembersAwait
	                        )
	                    )
	                )
	            );
	        };

	        this.activeContext = null;
	    }

	    _createClass(ChannelInfo, [{
	        key: '_setContext',
	        value: function _setContext(context) {
	            this.activeContext = context;
	            this.setState({ members: this.activeContext.getMembers() });
	        }
	    }]);

	    return ChannelInfo;
	})(React.Component);

	exports['default'] = ChannelInfo;

	var ChannelInfoSection = (function (_React$Component2) {
	    _inherits(ChannelInfoSection, _React$Component2);

	    function ChannelInfoSection() {
	        var _this2 = this;

	        _classCallCheck(this, ChannelInfoSection);

	        _get(Object.getPrototypeOf(ChannelInfoSection.prototype), 'constructor', this).apply(this, arguments);

	        this.state = {};

	        this.render = function () {
	            var content = null;
	            return React.createElement(
	                'div',
	                { className: 'channel-info-section' },
	                React.createElement(
	                    'div',
	                    { className: 'channel-info-section__header' },
	                    React.createElement(_SimpleComponentsIcons.Icon, { className: 'icon', iconName: _this2.props.iconName, size: 20, fill: _this2.props.iconFill }),
	                    React.createElement(
	                        'h3',
	                        null,
	                        _this2.props.title
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'channel-info-section__content' },
	                    _this2.props.children
	                )
	            );
	        };
	    }

	    // switch(Flags){

	    //     case 0:
	    //         Actions = (
	    //             <ul className="channel-actions">
	    //                 <ChannelInfo__Actions_Leave/>   
	    //             </ul>
	    //         );
	    //     break;

	    //     case 2:
	    //         Actions = (
	    //             <ul className="channel-actions">
	    //                 <ChannelInfo__Actions_Invite members={this.state.members}/> 
	    //                 <ChannelInfo__Actions_Delete/>
	    //             </ul>
	    //         );
	    //     break;
	    // }

	    _createClass(ChannelInfoSection, null, [{
	        key: 'propTypes',
	        value: {
	            title: React.PropTypes.string,
	            iconName: React.PropTypes.string,
	            iconFill: React.PropTypes.string
	        },
	        enumerable: true
	    }, {
	        key: 'defaultProps',
	        value: {
	            iconName: 'star-icon'
	        },
	        enumerable: true
	    }]);

	    return ChannelInfoSection;
	})(React.Component);

	module.exports = exports['default'];

	// msgChannelUserLeave = (event)=>{
	//     this.activeContext.msgChannelUserLeave(event);
	// }

/***/ },
/* 386 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x2, _x3, _x4) { var _again = true; _function: while (_again) { var object = _x2, property = _x3, receiver = _x4; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x2 = parent; _x3 = property; _x4 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _moment = __webpack_require__(268);

	var _moment2 = _interopRequireDefault(_moment);

	var _AuthDashboard = __webpack_require__(247);

	var _Dispatcher = __webpack_require__(4);

	var _utils = __webpack_require__(2);

	var _ClassesLogger = __webpack_require__(3);

	var _Message = __webpack_require__(387);

	var _Message2 = _interopRequireDefault(_Message);

	var _MessageNotify = __webpack_require__(388);

	var _MessageNotify2 = _interopRequireDefault(_MessageNotify);

	var _MessageDate = __webpack_require__(389);

	var _MessageDate2 = _interopRequireDefault(_MessageDate);

	/**
	 * Общий компонент для каналов и чатов
	 *
	 * принимает в this.props.context хэндлер для работы с отдельным каналом или чатом
	 * context=AppState.myChannels.activeChannel()
	 * context=AppState.myChats.activeChat()
	 *
	 */

	var React = __webpack_require__(202);

	var MessageHistory = (function (_React$Component) {
	    _inherits(MessageHistory, _React$Component);

	    function MessageHistory(props) {
	        var _this = this;

	        _classCallCheck(this, MessageHistory);

	        _get(Object.getPrototypeOf(MessageHistory.prototype), 'constructor', this).call(this, props);

	        this.state = {
	            history: null,
	            showNewMessageAlert: false
	        };

	        this.componentWillReceiveProps = function (nextProps) {
	            // logger.log('MH receive props');

	            _this._setContext(nextProps);
	            // новый id, поэтому activeChannel уже другой, нужна подписка
	            _this._subs('rem');
	            _this._subs('on');
	            _this._getHistory();
	        };

	        this.componentWillMount = function () {
	            // logger.log('MH will mount');

	            _this._setContext(_this.props);
	            _this._subs('on');
	            _this._getHistory();
	        };

	        this.componentDidMount = function () {
	            // logger.log('MH did mount');

	            _this.initScroll();
	        };

	        this.componentWillUnmount = function () {
	            // logger.log('MH will unmount');

	            _this._subs('rem');
	        };

	        this.componentDidUpdate = function () {
	            // logger.log('MH did update');

	            // обнуляем позицию скролла
	            // this.scrollToStart();

	            _this.initScroll();
	        };

	        this.updateHistory = function (history) {
	            // this.isAppending = false;
	            _this.setState({ history: history });
	        };

	        this.onMessageNotifySend = function (event) {
	            // если скролл не больше 150, считаем, что он был внизу, и автоматом крутим
	            // в конец беседы. Если скролл больше, юзер там что-то отмотал и читает, не мешаем ему
	            var elem = document.getElementById('channel-history--' + _this.id);
	            if (elem.scrollHeight - elem.clientHeight - elem.scrollTop <= 150) _this.scrollToEnd();
	        };

	        this.onMsgNew = function (event) {

	            // для не активного в даный момент чата ничего не делаем
	            // по этому событию отработает только контакт-центр
	            if (!_this.activeContext.isForActiveContext(event)) return;

	            // если сообщение свое, сразу крутим вниз
	            if (event.user_id == _AuthDashboard.AppState.user.id) {
	                _this.scrollToEnd();

	                // если сообщение чужое, проверяем где скролл,
	            } else {
	                    var elem = document.getElementById('channel-history--' + _this.id);

	                    // если скролл не больше 150, считаем, что он был внизу, и автоматом крутим
	                    // в конец беседы. Если скролл больше, юзер там что-то отмотал и читает,
	                    // показываем уведомление о новых сообщениях
	                    if (elem.scrollHeight - elem.clientHeight - elem.scrollTop > 150) {
	                        _this.setState({ showNewMessageAlert: true });
	                    } else {
	                        _this.scrollToEnd();
	                    }
	                }
	        };

	        this.initScroll = function () {

	            // logger.log('initScroll');

	            // если пришло новое сообщение и оно не наше, оставляем скролл на месте, показываем алерт
	            if (_this.state.showNewMessageAlert) return;

	            // если скролла нет, но есть непрочитанные, отмечаем их как только подгрузится история
	            var elem = document.getElementById('channel-history--' + _this.id);

	            // logger.log('initScroll 2 = ' + this.activeContext.getTotal() + ' ' + this.activeContext.unreaded + ' elem= ' + (elem.scrollHeight-elem.clientHeight) );

	            // if( this.activeContext.getTotal() && this.activeContext.unreaded > 0 && elem && (elem.scrollHeight-elem.clientHeight) <= 10 ) {
	            if (_this.activeContext.unreaded > 0 && elem && elem.scrollHeight - elem.clientHeight <= 10) {
	                if (!_this.markReadedTimeout) _this.markReadedTimeout = setTimeout(_this.markReaded, 1500);
	                return;
	            }

	            // if( this.activeContext.unreaded > 0 && this.activeContext.scrollPos === null ) {
	            // logger.log('initScroll 3, scroll pos= ' + this.activeContext.scrollPos + " unreaded= " + this.activeContext.unreaded + " is first= " + this.isFirstLoad + " isAppending= " + this.isAppending);

	            // last_readed = null --> все непрочитанные, крутим на старт
	            if (_this.activeContext.history.last_readed === null) {

	                // logger.log('initScroll lrm=null, scrollToStart', this);

	                _this.scrollToStart();

	                // если есть непрочитанное, то крутим к нему, но только если открыли чат
	            } else if (_this.activeContext.unreaded > 0 && _this.isFirstLoad) {
	                    var unreadedList = _this.activeContext.getUnreadedIDs();
	                    if ((unreadedList || []).length) {
	                        _ClassesLogger.logger.log('init SCROLL has Unreaded - scrollToMessage = ' + unreadedList[0]);

	                        _this.scrollToMessage(parseInt(unreadedList[0]), false);
	                        _this.isFirstLoad = false;
	                    }

	                    // если добавляли сообщения, крутим к предыдущему
	                } else if (_this.isAppending) {
	                        _ClassesLogger.logger.log('init SCROLL isAppending - scrollToMessage');

	                        _this.isAppending = false;
	                        _this.scrollToMessage(_this.appendFromMessageId, false);

	                        // если есть сохраненное значение, крутим к нему
	                    } else if (_this.activeContext.scrollPos > 1) {
	                            _ClassesLogger.logger.log('init SCROLL SAVED - scrollToPos', _this.activeContext.scrollPos);

	                            _this.scrollToPos(_this.activeContext.scrollPos);

	                            // иначе крутим к последнему
	                        } else {
	                                _ClassesLogger.logger.log('init SCROLL else - scrollToEnd');

	                                _this.scrollToEnd();
	                            }
	        };

	        this.onScrollHandler = function (e) {

	            var elem = e.target;
	            var elemPos = Math.ceil(elem.scrollTop);

	            // logger.log('onScrollHandler, elemPos= ' + elemPos);

	            // на случай, если юзер беспорядочно елозит скроллом туда-сюда,
	            // по таймауту запускаем проверку на отметку прочитанных месседжей
	            if (!_this.markReadedTimeout && _this.activeContext) {

	                // logger.log('unreaded= ' + this.activeContext.unreaded + " elePos= " + elemPos + " prevPos= " + this.activeContext.scrollPos);

	                // запускаем проверку, для одного непрочитанного - сразу
	                // если несколько непрочитанных - только если изменилось положение скролла
	                // это нужно для того, чтобы при открытии истории на непрочитанном сообщении
	                // не срабатывало их автоматическое прочтение (если сообщений несколько)
	                if (_this.activeContext.unreaded == 1 || _this.activeContext.unreaded > 1 && elemPos != _this.activeContext.scrollPos) {
	                    _this.markReadedTimeout = setTimeout(_this.markReaded, 1500);
	                }
	                // this.markReadedTimeout = setTimeout(this.markReaded, 1500);
	            }

	            // logger.log('onScrollHandler scroll= ' + elem.scrollHeight + ", client= " + elem.clientHeight + ", top= " + elem.scrollTop);
	            // logger.log('onScrollHandler res=', elem.scrollHeight - elem.clientHeight - elem.scrollTop);

	            // запоминаем позицию скролла, чтобы вернуться к ней при открытии канала
	            _this.activeContext.saveScrollPosition(elemPos);
	            // this.saveScrollPos();

	            // пытаемся подгрузить историю, только если еще не все загрузили
	            if (elem.scrollTop < 10 && !_this.isAppending && !_this.activeContext.isGotAllMessages()) {
	                _this.isAppending = true;
	                // запоминаем текущее первое сообщение, чтобы после добавления отмотать к нему
	                _this.appendFromMessageId = _this.activeContext.getFirstHistoryMsgId();
	                _this.activeContext.appendHistory();
	            }
	        };

	        this.scrollToMessage = function (id) {
	            var alignToTop = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];

	            // logger.log('trigger scrollToMessage');

	            if (!id) return;
	            var elem = document.getElementById('message--' + id);
	            if (elem) {
	                elem.scrollIntoView(alignToTop);
	                _this.saveScrollPos();
	            }
	        };

	        this.scrollToEnd = function () {
	            // переход к последнему сообщению работает криво - скролл немного не докручивается до конца
	            // this.scrollToMessage( this.activeContext.getLastHistoryMsgId(), false );

	            // брутфорсный скролл на самый конец
	            var elem = document.getElementById('channel-history--' + _this.id);
	            if (elem) elem.scrollTop = elem.scrollHeight - elem.clientHeight;
	            _this.saveScrollPos();
	        };

	        this.scrollToStart = function () {
	            // logger.log('trigger scrollToStart');

	            var elem = document.getElementById('channel-history--' + _this.id);
	            if (elem) elem.scrollTop = 0;
	            _this.saveScrollPos();
	        };

	        this.scrollToPos = function (pos) {
	            // logger.log('trigger scrollToPos');

	            if (!pos) return;
	            var elem = document.getElementById('channel-history--' + _this.id);
	            if (elem) {
	                elem.scrollTop = pos;
	                _this.saveScrollPos();
	            }
	        };

	        this.saveScrollPos = function () {
	            var elem = document.getElementById('channel-history--' + _this.id);
	            var elemPos = null;
	            if (elem) elemPos = Math.ceil(elem.scrollTop);
	            if (_this.activeContext && !_this.isFirstLoad) {
	                _this.activeContext.saveScrollPosition(elemPos);
	                _ClassesLogger.logger.log('trigger saveScrollPos pos= ' + elemPos, _this, _this.activeContext);
	            }
	        };

	        this.markReaded = function () {

	            var unreadedList = _this.activeContext.getUnreadedIDs();

	            // logger.log('trigger markReaded', this, unreadedList);

	            // все прочитаны - ничего не делаем
	            if (!(unreadedList || []).length) {
	                _this._clearMarkReadedTimeout();
	                return;
	            }

	            var container = document.getElementById('channel-history--' + _this.id);
	            if (!container) return;
	            var contHeight = container.clientHeight;
	            var contScrollTop = container.scrollTop;
	            var contClientTop = container.clientTop;

	            // logger.log('trigger markReaded', this, container, unreadedList);
	            // сортируем по убыванию, функция нужна, чтобы не наступить на грабли со сравнением строк
	            // unreadedList.sort( (a, b) => {return b-a} );

	            // т.к. апи понимает только команду <id последнего прочитанного сообщения (null - прочитанных нет)>
	            // начинаем искать с хвоста, определеляем последнее сообщение и его id
	            for (var i = unreadedList.length - 1; i >= 0; i--) {

	                var elem = document.getElementById('message--' + unreadedList[i]);

	                // logger.log('markReaded find elem=', this, elem);

	                if (elem) {
	                    var elemOffsetTop = elem.offsetTop;
	                    var elemHeight = elem.clientHeight;
	                    // let top = parseInt(elem.getBoundingClientRect().top);

	                    var isBelowViewport = contHeight + contScrollTop <= elemOffsetTop ? true : false;
	                    var isAboveViewport = elemHeight + elemOffsetTop <= contScrollTop + 10 ? true : false;

	                    // logger.log('markReaded find below='+ isBelowViewport + " above="+ isAboveViewport);

	                    if (!isBelowViewport && !isAboveViewport && unreadedList[i] > _this.markReadedId) {

	                        _ClassesLogger.logger.log('in viewport! mark readed elem=' + unreadedList[i]);

	                        // апи выдаст ошибку, если будем ставить метку на сообщение с таким же id,
	                        // поэтому запоминаем, чтобы следующий запрос отсылать на сообщение c бОльшим id
	                        _this.markReadedId = unreadedList[i];

	                        _this.activeContext.markReaded(unreadedList[i]);

	                        // перестаем бегать по непрочитанным
	                        break;
	                    }
	                }
	            }

	            _ClassesLogger.logger.log('----');

	            _this._clearMarkReadedTimeout();
	        };

	        this._clearMarkReadedTimeout = function () {
	            if (_this.markReadedTimeout) clearTimeout(_this.markReadedTimeout);
	            _this.markReadedTimeout = null;
	        };

	        this.showNewMessages = function () {
	            _this.scrollToEnd();
	            // сохраняем новую позицию скролла
	            var elem = document.getElementById('channel-history--' + _this.id);
	            var elemPos = Math.ceil(elem.scrollTop);
	            _this.activeContext.saveScrollPosition(elemPos);
	            _this.setState({ showNewMessageAlert: false });
	        };

	        this.render = function () {

	            var alert = null;

	            // logger.log('render MH= ' + this.activeContext.isReady);

	            if (!_this.activeContext.isReady) {
	                alert = React.createElement(
	                    'div',
	                    { className: 'channel__history-alert' },
	                    'Загрузка сообщений...'
	                );
	            } else if (_this.state.showNewMessageAlert) {
	                alert = React.createElement(
	                    'div',
	                    { className: 'channel__history-alert' },
	                    'Есть новые сообщения.   ',
	                    React.createElement(
	                        'span',
	                        { className: 'channel__history-alert-action', onClick: _this.showNewMessages },
	                        'Посмотреть'
	                    )
	                );
	            }

	            var History = null;

	            if ((_this.state.history || []).length == 0) {
	                History = React.createElement(
	                    'div',
	                    null,
	                    'Нет сообщений'
	                );
	            } else {
	                (function () {
	                    var msgDate = null;
	                    _moment2['default'].locale('ru');
	                    // let options = { month: 'long', day: 'numeric'};

	                    History = _this.state.history.map(function (msg, i) {

	                        // вставляем дату
	                        // let d = new Date( msg.ts * 1000 );
	                        var historyDate = null;
	                        var printDate = Math.ceil(msg.ts / 24 / 3600);

	                        if (msgDate != printDate) {
	                            msgDate = printDate;
	                            historyDate = React.createElement(_MessageDate2['default'], { date: (0, _moment2['default'])(msg.ts * 1000).format("D MMMM") });
	                        }

	                        // if( msgDate != d.toLocaleString('ru-RU', options) ) {
	                        //     msgDate = d.toLocaleString('ru-RU', options);
	                        //     historyDate = <MessageDate date={msgDate} />
	                        // }

	                        // событие
	                        if (msg.id === -1) {
	                            return React.createElement(
	                                'div',
	                                { key: i },
	                                historyDate,
	                                React.createElement(_MessageNotify2['default'], { context: _this.activeContext, data: msg })
	                            );
	                            // настоящий месседж
	                        } else {
	                                return React.createElement(
	                                    'div',
	                                    { key: i },
	                                    historyDate,
	                                    React.createElement(_Message2['default'], { context: _this.activeContext, data: msg })
	                                );
	                            }
	                    });
	                })();
	            }

	            // подгоняем высоту под экран
	            var historyStyle = {
	                height: _utils.Utils.getClientHeight() - 250 + "px"
	            };

	            return React.createElement(
	                'div',
	                { className: 'channel__history', style: historyStyle, id: "channel-history--" + _this.id, onScroll: _this.onScrollHandler },
	                alert,
	                History
	            );
	        };

	        this.appendFromMessageId = null;
	        this.isAppending = false;

	        // активный элемент - канал или чат
	        this.activeContext = null;
	        this.contextType = null;
	        this.id = null;

	        // таймаут для запуска отметки о прочитанном сообщении
	        this.markReadedTimeout = null;
	        this.markReadedId = 0;
	        this.isFirstLoad = false;
	    }

	    _createClass(MessageHistory, [{
	        key: '_getHistory',
	        value: function _getHistory() {
	            this.activeContext.getHistory();
	        }
	    }, {
	        key: '_setContext',
	        value: function _setContext(props) {
	            this.activeContext = props.context;
	            this.contextType = props.type;
	            this.id = props.context_id;

	            this.isFirstLoad = true;

	            // чистим таймаут для запуска отметки о прочитанном сообщении
	            this._clearMarkReadedTimeout();
	        }

	        // подписки в зависимости от типа канал/чат
	    }, {
	        key: '_subs',
	        value: function _subs(action) {

	            // подписываемся на любое изменение истории, которые нам будет генерить контроллер канала или чата
	            this.activeContext[action]('Message_history_update', this.updateHistory);

	            // приход нового уведомления в канал
	            this.activeContext[action]('Message_notify_send', this.onMessageNotifySend);

	            // эта подписка нам нужна, чтобы дергать скролл или показывать уведомление
	            // о новом сообщении в активном канале или чате
	            switch (this.contextType) {
	                case 'channel':
	                    _Dispatcher.Events[action](_Dispatcher.Events.EV_MSG_CHANNEL_NEW, this.onMsgNew);
	                    break;

	                case 'chat':
	                    _Dispatcher.Events[action](_Dispatcher.Events.EV_MSG_PRIVATE_NEW, this.onMsgNew);
	                    break;
	            }
	        }
	    }]);

	    return MessageHistory;
	})(React.Component);

	exports['default'] = MessageHistory;
	;

	// <div className="channel__content">
	//                <div className="channel__history" style={historyStyle} id={"channel-history--"+this.id} onScroll={this.onScrollHandler}>
	//                    {History}
	//                </div>
	//                {alert}
	//            </div>

	// <div>
	//                 <div className="channel__history" style={historyStyle} id={"channel-history--"+this.id} onScroll={this.onScrollHandler}>
	//                     {History}
	//                 </div>
	//                 {alert}
	//             </div>
	module.exports = exports['default'];

	// это сработает только один раз, когда юзер с другой страницы
	// ткнет на какой-либо канал. Нужно тоже восстановить скролл

	// приход нового уведомления в канал

	// событие новое сообщение - дергаем скролл или показываем уведомление, что есть новые сообщения
	// все добавления сообщений в историю делаются контроллерами, события отслеживает контакт-центр

	/*
	 * Scroll handlers
	 */

	// юзер крутит скролл

	// прокрутка скролла к определенному сообщению

	// прокрутка в конец

	// прокрутка в начало

	// прокрутка на определенную позицию

	// запоминаем позицию скролла в текущем контексте

	/*
	 * End od Scroll
	 */

	// отмечаем сообщение как прочитанное, как только оно появилось в области видимости

	// алерт-уведомление о том, что внизу появились новые сообщения

/***/ },
/* 387 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _AuthDashboard = __webpack_require__(247);

	var _ClassesLogger = __webpack_require__(3);

	var _utils = __webpack_require__(2);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	var _Emoji = __webpack_require__(258);

	var _SimpleComponentsIcons = __webpack_require__(252);

	var React = __webpack_require__(202);

	var Message = (function (_React$Component) {
	    _inherits(Message, _React$Component);

	    function Message() {
	        var _this = this;

	        _classCallCheck(this, Message);

	        _get(Object.getPrototypeOf(Message.prototype), 'constructor', this).call(this);

	        // активный элемент - канал или чат

	        this.componentWillMount = function () {

	            _this._setContext(_this.props.context);
	            _this.msg = _this.activeContext.getMsg(_this.props.data.id);

	            // получаем контроллер сообщения
	            // this.msg = AppState.myChannels.activeChannel().getMsg(this.props.data.id);

	            // здесь храним оригинальный body для редактирования
	            _this.bodyOrig = _this.props.data.body;

	            // парсим сообщение на предмет эмотиконов и ссылок
	            _this.bodyParsed = _this.parseBody(_this.props.data.body);

	            _this.readed = _this.props.data.readed;
	            _this.opp_readed = _this.props.data.opp_readed;
	        };

	        this.componentWillReceiveProps = function (nextProps) {
	            _this.bodyParsed = _this.parseBody(nextProps.data.body);
	            _this.readed = nextProps.data.readed;
	            _this.opp_readed = nextProps.data.opp_readed;
	        };

	        this.state = {
	            isShowActions: false,
	            isEdit: false,
	            isDelete: false
	        };

	        this.isMsgControllable = function () {
	            var currentTs = parseInt(Date.now() / 1000);
	            return currentTs - _this.props.data.ts > 600 ? false : true;
	        };

	        this.msgOnMouseLeave = function (e) {
	            if (_this.isMsgControllable() && _AuthDashboard.AppState.user.state.id == _this.props.data.author.id) {
	                _this.setState({ isShowActions: false });
	            }
	        };

	        this.msgOnMouseEnter = function (e) {
	            if (_this.isMsgControllable() && _AuthDashboard.AppState.user.state.id == _this.props.data.author.id) {
	                _this.setState({ isShowActions: true });
	            }
	        };

	        this.msgOnEditMessage = function (e) {

	            // отслеживаем нажатие enter и escape
	            switch (e.key) {
	                case "Enter":
	                    if (e.preventDefault) e.preventDefault();
	                    _this.correctMessage(e.target.value);
	                    _this.setState({ isEdit: false });
	                    break;
	                    break;
	                case "Escape":
	                    _this.setState({ isEdit: false });
	                    break;
	            }
	            return;
	        };

	        this.msgOnCancelEditMessage = function () {
	            _this.setState({ isEdit: false });
	        };

	        this.msgOnCancelDeleteMessage = function () {
	            _this.setState({ isDelete: false });
	        };

	        this.editMessage = function () {
	            _this.setState({ isEdit: !_this.state.isEdit, isDelete: false });
	        };

	        this.deleteMessage = function () {
	            _this.setState({ isDelete: !_this.state.isDelete, isEdit: false });
	        };

	        this.correctMessage = function (body) {
	            // parse html data - drop any tags
	            var msg = _utils.Utils.clearHtmlTags(body);

	            _this.msg.correctMessage(msg);
	            _this.bodyOrig = body;
	        };

	        this.eraseMessage = function () {
	            _this.msg.eraseMessage();
	        };

	        this.parseBody = function (body) {

	            // с удаленным сообщением ничего не делаем
	            if (_this.props.data.isDeleted) return body;

	            var bodyParsedArr = [];

	            /**
	             * Сначала делим текст на массив по смайлам
	             * Массив нужен для хранение реакт компонента эмотикона
	             * Потом проверяем на наличие ссылок и подставляем теги
	             */
	            var reEmo = /(::)(\w+)(::)/g;
	            var reEmoSplit = /(::\w+::)/g;
	            var reHref = /https?:\/\/[._\w\d\-\/&%\?;А-Яа-я]+/gi;
	            // let reHrefSplit = /(.+)(https?:\/\/[._\w\d\-\/&%\?;А-Яа-я]+)(.+)/gi;

	            // восстанавливаем читабельные ссылки и заменяем переводы строк на br
	            body = decodeURIComponent(body);
	            body = body.replace(/\n/g, '<br/>');

	            var txtArrSplit = [];
	            txtArrSplit = body.split(reEmoSplit);

	            txtArrSplit.forEach(function (txt) {

	                // подключаем эмотикон
	                if (reEmoSplit.test(txt)) {
	                    // убираем ::
	                    var emo = txt.replace(reEmo, '$2');
	                    var emoObj = React.createElement(_Emoji.Emoji, { name: emo, size: 20 });

	                    // парсим реакт компонент в строку не отходя от кассы
	                    if (emoObj) {
	                        bodyParsedArr.push(React.renderToStaticMarkup(emoObj));

	                        // если не нашли эмотикона, возвращаем текст как есть
	                    } else {
	                            bodyParsedArr.push(txt);
	                        }

	                    // проверяем на наличие ссылок
	                } else if (reHref.test(txt)) {
	                        var txtHref = txt.replace(/(^|[\n ])([\w]*?)((ht|f)tp(s)?:\/\/[\w]+[^ \,\"\n\r\t<]*)/ig, '$1$2<a target="_blank" href=\"$3\" >$3</a>');
	                        txtHref = txtHref.replace(/(^|[\n ])([\w]*?)((www|ftp)\.[^ \,\"\t\n\r<]*)/ig, '$1$2<a target="_blank" href=\"http://$3\" >$3</a>');

	                        //let txtHref = txt.replace(reHrefSplit, this._setHref);
	                        bodyParsedArr.push(txtHref);

	                        //  простой текст
	                    } else {
	                            bodyParsedArr.push(txt);
	                        }
	            });

	            return bodyParsedArr.join("");

	            //  txtArrSplit.forEach( txt => {

	            //     // подключаем эмотикон
	            //     if( reEmoSplit.test(txt) ) {
	            //         // убираем ::
	            //         let emo = txt.replace(reEmo, '$2');
	            //         // let emoObj = <Emoji name={emo} size={20} />;
	            //         // let emoObjStr = React.renderToStaticMarkup( emoObj);
	            //         logger.log('render to stat', emo);
	            //         this.bodyParsed2.push( React.renderToStaticMarkup(<Emoji name={emo} size={20}/>) );
	            //     }

	            // })

	            // logger.log('parsed body', this.bodyParsed2);
	        };

	        this._setHref = function (match, p1, href, p2) {
	            var str = '';
	            str += p1;
	            str += '<a target="_blank" href="' + href + '">' + href + '</a>';
	            str += p2;
	            return str;
	        };

	        this.render = function () {

	            var userCredits = _this.props.data.author.first_name + ' ' + _this.props.data.author.last_name;
	            var messageType = '';

	            if (_AuthDashboard.AppState.user.id == _this.props.data.author.id) {
	                userCredits = "Вы";
	                messageType = "my";
	            }

	            // прочитано собеседником
	            var oppReaded = _this.opp_readed ? React.createElement(_SimpleComponentsIcons.Icon, { iconName: 'check-icon', className: 'icon-simple', size: 16 }) : null;

	            var actions = null;
	            if (_this.state.isShowActions || _this.state.isEdit || _this.state.isDelete) {
	                actions = React.createElement(
	                    _SimpleComponentsFlexBox.FlexBox,
	                    { direction: 'row' },
	                    React.createElement(
	                        'div',
	                        { className: 'pagin-prs', onClick: _this.deleteMessage },
	                        React.createElement(_SimpleComponentsIcons.Icon, { iconName: 'delete-icon', size: 16 })
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'pagin-prs', onClick: _this.editMessage },
	                        React.createElement(_SimpleComponentsIcons.Icon, { iconName: 'edit-icon', size: 16 })
	                    )
	                );
	            }

	            // удаленное сообщение
	            if (_this.props.data.isDeleted) {
	                return React.createElement(
	                    'div',
	                    { className: 'message',
	                        id: "message--" + _this.props.data.id,
	                        'data-state': messageType },
	                    React.createElement(
	                        'div',
	                        { className: 'message__info' },
	                        React.createElement(
	                            'div',
	                            { className: 'message__user' },
	                            userCredits
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'message__actions' },
	                            _this.props.data.body
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'message__time' },
	                            _utils.Utils.timeZf(_this.props.data.ts)
	                        )
	                    )
	                );

	                // нормальный месседж
	            } else {
	                    return React.createElement(
	                        'div',
	                        { className: 'message',
	                            id: "message--" + _this.props.data.id,
	                            'data-state': messageType,
	                            'data-readed': _this.readed,
	                            onMouseEnter: _this.msgOnMouseEnter,
	                            onMouseLeave: _this.msgOnMouseLeave },
	                        React.createElement(
	                            'div',
	                            { className: 'message__info' },
	                            React.createElement(
	                                'div',
	                                { className: 'message__user' },
	                                userCredits
	                            ),
	                            React.createElement(
	                                'div',
	                                { className: 'message__actions' },
	                                actions
	                            ),
	                            React.createElement(
	                                'div',
	                                { className: 'message__time' },
	                                _utils.Utils.timeZf(_this.props.data.ts)
	                            )
	                        ),
	                        _this.state.isDelete ? React.createElement(
	                            _SimpleComponentsFlexBox.FlexBox,
	                            { direction: 'row', className: 'channel-message__actions_delete' },
	                            React.createElement(
	                                'div',
	                                { className: 'channel-message__actions_delete-yes', onClick: _this.eraseMessage },
	                                '[Да]'
	                            ),
	                            React.createElement(
	                                'div',
	                                { className: 'channel-message__actions_delete-no', onClick: _this.msgOnCancelDeleteMessage },
	                                '[Нет]'
	                            ),
	                            React.createElement(
	                                'div',
	                                { className: 'channel-message__actions_delete-confirm' },
	                                'Удалить сообщение?'
	                            )
	                        ) : null,
	                        React.createElement(
	                            'div',
	                            { className: 'message__body' },
	                            React.createElement(
	                                'div',
	                                { className: 'message__body-action' },
	                                oppReaded
	                            ),
	                            _this.state.isEdit ? React.createElement(ContentEditable, { html: _this.bodyOrig, onEnter: _this.msgOnEditMessage, onEscape: _this.msgOnCancelEditMessage }) : React.createElement('div', { className: 'message__body-text', dangerouslySetInnerHTML: { __html: _this.bodyParsed } })
	                        )
	                    );
	                }
	        };

	        this.activeContext = null;

	        this.msg = null;
	        this.bodyOrig = '';
	        this.bodyParsed = '';
	        this.readed = null;
	        this.opp_readed = null;
	    }

	    _createClass(Message, [{
	        key: '_setContext',
	        value: function _setContext(context) {
	            this.activeContext = context;
	        }
	    }], [{
	        key: 'propTypes',
	        value: {
	            data: React.PropTypes.object.isRequired
	        },
	        enumerable: true
	    }, {
	        key: 'defaultProps',
	        value: {
	            data: {}
	        },
	        enumerable: true
	    }]);

	    return Message;
	})(React.Component);

	exports['default'] = Message;
	;

	// <div className="channel-history__message"
	//                     id={"message--"+this.props.data.id}
	//                     onMouseEnter={this.msgOnMouseEnter}
	//                     onMouseLeave={this.msgOnMouseLeave}>
	//                    <div className={messageClass}>
	//                        <div className="channel-message__info">
	//                            <a>{userCredits} #{this.props.data.id}</a>
	//                            <span>{Utils.timeZf(this.props.data.ts)}</span>
	//                            {actions}
	//                        </div>
	//                        {this.state.isDelete ? <FlexBox direction="row" className="channel-message__actions_delete">
	//                                                    <div className="channel-message__actions_delete-yes" onClick={this.eraseMessage}>[Да]</div>
	//                                                    <div className="channel-message__actions_delete-no" onClick={this.msgOnCancelDeleteMessage}>[Нет]</div>
	//                                                    <div className="channel-message__actions_delete-confirm">Удалить сообщение?</div>
	//                                               </FlexBox>
	//                                            : null}
	//                        <FlexBox direction="row" justify={justifyMessage}>
	//                            <div>{oppReaded}</div>
	//                            {this.state.isEdit ? <ContentEditable html={this.bodyOrig} onEnter={this.msgOnEditMessage} onEscape={this.msgOnCancelEditMessage} />
	//                                               : <div className="channel-message__body" dangerouslySetInnerHTML={{__html: this.bodyParsed }}></div> }
	//                        </FlexBox>
	//                    </div>
	//                </div>

	// {this.state.isEdit ? <ContentEditable html={this.bodyOrig} onEnter={this.msgOnEditMessage} onEscape={this.msgOnCancelEditMessage} />
	//                                       : <div className="channel-message__body" dangerouslySetInnerHTML={{__html: this.bodyParsed }} />

	var ContentEditable = (function (_React$Component2) {
	    _inherits(ContentEditable, _React$Component2);

	    function ContentEditable() {
	        var _this2 = this;

	        _classCallCheck(this, ContentEditable);

	        _get(Object.getPrototypeOf(ContentEditable.prototype), 'constructor', this).apply(this, arguments);

	        this.componentDidMount = function () {
	            _this2.refs.msgEditRef.getDOMNode().focus();
	        };

	        this.onKeyDown = function (e) {
	            var html = _this2.refs.msgEditRef.getDOMNode().innerHTML;

	            switch (e.key) {

	                // перехватываем нажатие на Enter для сохранения результата
	                case "Enter":
	                    if (e.preventDefault) e.preventDefault();
	                    // имитируем event для передачи взад
	                    if (_this2.props.onEnter) {
	                        _this2.props.onEnter({
	                            target: {
	                                value: html
	                            },
	                            key: e.key
	                        });
	                    }
	                    break;

	                case "Escape":
	                    if (_this2.props.onEscape) _this2.props.onEscape();
	                    break;
	            }
	        };

	        this.render = function () {
	            return React.createElement(
	                'div',
	                { className: 'channel-message__actions_edit' },
	                React.createElement(
	                    'div',
	                    { className: 'channel-message__actions_edit-caption' },
	                    'Enter - сохранить, Escape - отменить'
	                ),
	                React.createElement('div', { className: 'channel-message__actions_edit-area', onKeyDown: _this2.onKeyDown, contentEditable: true, ref: 'msgEditRef', dangerouslySetInnerHTML: { __html: _this2.props.html } })
	            );
	        };
	    }

	    //<textarea onKeyDown={this.onKeyDown} ref='msgEditRef' value={this.props.html} />

	    return ContentEditable;
	})(React.Component);

	exports.ContentEditable = ContentEditable;
	exports.ContentEditable = ContentEditable;

	// handleChange =(event)=> {
	//     this.setState({html: event.target.value});
	// }
	// return (<ContentEditable html={this.state.html} onChange={handleChange} />);

	// render =()=> {
	//        return <div
	//            onInput={this.onChange}
	//            onBlur={this.onChange}
	//            onKeyDown={this.onKeyDown}
	//            contentEditable
	//            ref='msgEditRef'
	//            dangerouslySetInnerHTML={{__html: this.props.html}}></div>;
	//    }
	//   
	//   
	//    move cursor to the end?
	//  if (typeof el.selectionStart == "number") {
	//     el.selectionStart = el.selectionEnd = el.innerHTML.length;
	// } else if (typeof el.createTextRange != "undefined") {
	//     el.focus();
	//     var range = el.createTextRange();
	//     range.collapse(false);
	//     range.select();
	// }

	// позволяем удалять и редактировать только если сообщение не старше 10 минут

	// shouldComponentUpdate =(nextProps)=> {
	//     return nextProps.html !== this.refs.msgEditRef.getDOMNode().innerHTML;
	// }

	// onChange =()=> {
	//     var html = this.refs.msgEditRef.getDOMNode().innerHTML;
	//     if (this.props.onChange && html !== this.lastHtml) {
	//         this.props.onChange({
	//             target: {
	//                 value: html
	//             },
	//             key: this.key
	//         });
	//     }
	//     this.lastHtml = html;
	// }

/***/ },
/* 388 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _AuthDashboard = __webpack_require__(247);

	var _ClassesLogger = __webpack_require__(3);

	var _utils = __webpack_require__(2);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	var _Emoji = __webpack_require__(258);

	var _SimpleComponentsIcons = __webpack_require__(252);

	var React = __webpack_require__(202);

	var MessageNotify = (function (_React$Component) {
	    _inherits(MessageNotify, _React$Component);

	    function MessageNotify() {
	        var _this = this;

	        _classCallCheck(this, MessageNotify);

	        _get(Object.getPrototypeOf(MessageNotify.prototype), 'constructor', this).call(this);

	        // активный элемент - канал или чат

	        this.componentWillMount = function () {
	            _this._setContext(_this.props.context);
	        };

	        this.componentWillReceiveProps = function (nextProps) {};

	        this.state = {};

	        this.render = function () {

	            return React.createElement(
	                'div',
	                { className: 'channel-history__message' },
	                React.createElement(
	                    'div',
	                    { className: '' },
	                    React.createElement(
	                        'div',
	                        { className: 'channel-message__info' },
	                        _this.props.data.body
	                    )
	                )
	            );
	        };

	        this.activeContext = null;
	    }

	    _createClass(MessageNotify, [{
	        key: '_setContext',
	        value: function _setContext(context) {
	            this.activeContext = context;
	        }
	    }], [{
	        key: 'propTypes',
	        value: {
	            data: React.PropTypes.object.isRequired
	        },
	        enumerable: true
	    }, {
	        key: 'defaultProps',
	        value: {
	            data: {}
	        },
	        enumerable: true
	    }]);

	    return MessageNotify;
	})(React.Component);

	exports['default'] = MessageNotify;
	;
	module.exports = exports['default'];

/***/ },
/* 389 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _AuthDashboard = __webpack_require__(247);

	var _ClassesLogger = __webpack_require__(3);

	var _utils = __webpack_require__(2);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	var React = __webpack_require__(202);

	var MessageDate = (function (_React$Component) {
	    _inherits(MessageDate, _React$Component);

	    function MessageDate() {
	        var _this = this;

	        _classCallCheck(this, MessageDate);

	        _get(Object.getPrototypeOf(MessageDate.prototype), 'constructor', this).call(this);

	        this.componentWillMount = function () {};

	        this.componentWillReceiveProps = function (nextProps) {};

	        this.state = {};

	        this.render = function () {

	            return React.createElement(
	                'div',
	                { className: 'message__date' },
	                _this.props.date
	            );
	        };
	    }

	    return MessageDate;
	})(React.Component);

	exports['default'] = MessageDate;
	;

	// <div className="channel-history__message">
	//                 <div className="">
	//                     <div className="channel-message__date">
	//                         {this.props.date}
	//                     </div>
	//                 </div>
	//             </div>
	module.exports = exports['default'];

/***/ },
/* 390 */
/***/ function(module, exports, __webpack_require__) {

	//
	// общий компонент для каналов и чатов
	//

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _AuthDashboard = __webpack_require__(247);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	var _Icon = __webpack_require__(232);

	var _Emoji = __webpack_require__(258);

	var _ClassesLogger = __webpack_require__(3);

	var _utils = __webpack_require__(2);

	var React = __webpack_require__(202);

	var MessageForm = (function (_React$Component) {
	    _inherits(MessageForm, _React$Component);

	    function MessageForm(props) {
	        var _this = this;

	        _classCallCheck(this, MessageForm);

	        _get(Object.getPrototypeOf(MessageForm.prototype), 'constructor', this).call(this, props);
	        this.state = {
	            value: '',
	            isShowEmoji: false
	        };

	        this.handleChange = function (e) {
	            _this.setState({ value: e.target.value });
	        };

	        this.replacer = function (match, p1, p2, p3, offset, string) {
	            return [p1, p2, encodeURIComponent(p3)].join('');
	        };

	        this.sendMessage = function (e) {

	            // parse html data - drop any tags
	            var msg = _utils.Utils.clearHtmlTags(_this.state.value);

	            // escape uri
	            if (/https?:\/\/[._\w\d\-\/&%\?;А-Яа-я]+/gi.test(msg)) {
	                msg = msg.replace(/(^|[\n ])([\w]*?)((ht|f)tp(s)?:\/\/[\w]+[^ \,\"\n\r\t<]*)/ig, _this.replacer);
	                msg = msg.replace(/(^|[\n ])([\w]*?)((www|ftp)\.[^ \,\"\t\n\r<]*)/ig, _this.replacer);
	            }

	            // logger.log('sendMessage', this, msg);

	            _this.props.onSend(msg);
	            _this.setState({ value: '' });

	            // восстанавливаем область ввода
	            var ta = _this.refs.taMessage.getDOMNode();
	            ta.value = '';
	            _utils.Utils.elemAutoSize(ta, 120);
	        };

	        this.onKeyUp = function (e) {

	            // авторесайз области ввода
	            _utils.Utils.elemAutoSize(e.target, 120);

	            switch (e.keyCode) {

	                // Enter
	                case 13:
	                    if (!_this.ctrlPressed) {

	                        // не даем отсылать пустое сообщение
	                        var val = _utils.Utils.trim(e.target.value);
	                        if (val == '') {
	                            if (e.preventDefault) e.preventDefault();
	                            if (e.stopPropagation) e.stopPropagation();
	                            return;
	                        }

	                        _this.sendMessage();
	                        _this.setState({ isShowEmoji: false });

	                        if (e.preventDefault) e.preventDefault();
	                        if (e.stopPropagation) e.stopPropagation();
	                    } else {
	                        var ta = _this.refs.taMessage.getDOMNode();
	                        _utils.Utils.setTaText(ta, "\n");
	                        _this.setState({ value: ta.value });
	                    }
	                    break;

	                // Shift|Ctrl|Alt
	                case 16:
	                case 17:
	                case 18:
	                    _this.ctrlPressed = false;
	                    break;
	            }
	            return;
	        };

	        this.onKeyDown = function (e) {

	            switch (e.keyCode) {

	                // Enter
	                case 13:
	                    if (e.preventDefault) e.preventDefault();
	                    break;

	                // Shift|Ctrl|Alt
	                case 16:
	                case 17:
	                case 18:
	                    _this.ctrlPressed = true;
	                    break;
	            }
	        };

	        this.triggerEmoji = function () {
	            _this.setState({ isShowEmoji: !_this.state.isShowEmoji });
	        };

	        this.setEmoji = function (name) {
	            var ta = _this.refs.taMessage.getDOMNode();
	            _utils.Utils.setTaText(ta, " ::" + name + ":: ");
	            _this.setState({ value: ta.value });
	            // закрываем эмоджи
	            _this.setState({ isShowEmoji: false });
	        };

	        this.buildEmoji = function () {
	            var emoji = [];
	            emoji = _Emoji.Emoji.emojiNames.map(function (name, i) {
	                return React.createElement(_Emoji.Emoji, { key: i, name: name, onClick: _this.setEmoji, className: 'emoji-set' });
	            });
	            return emoji;
	        };

	        this.render = function () {

	            return React.createElement(
	                'div',
	                { className: 'channel__sendarea' },
	                React.createElement(
	                    'div',
	                    { className: 'channel__sendarea-textarea' },
	                    React.createElement('textarea', {
	                        className: 'ta-message',
	                        ref: 'taMessage',
	                        value: _this.state.value,
	                        onChange: _this.handleChange,
	                        onKeyUp: _this.onKeyUp,
	                        onKeyDown: _this.onKeyDown,
	                        placeholder: 'Ваше сообщение ...' })
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'channel__sendarea-emoji' },
	                    _this.state.isShowEmoji ? React.createElement(
	                        'div',
	                        { className: 'channel__sendarea-emoji-open' },
	                        _this.buildEmoji()
	                    ) : null,
	                    React.createElement(
	                        'div',
	                        null,
	                        React.createElement(_Icon.Icon, { name: 'emoji', size: 24, onClick: _this.triggerEmoji })
	                    )
	                )
	            );
	        };

	        this.ctrlPressed = false;
	    }

	    _createClass(MessageForm, null, [{
	        key: 'propTypes',
	        value: {
	            onSend: React.PropTypes.func.isRequired
	        },
	        enumerable: true
	    }]);

	    return MessageForm;
	})(React.Component);

	exports['default'] = MessageForm;
	;

	// TODO: пока убраны. Восстановить потом !
	// <div className="channel__sendarea">
	//                 <div className="channel__sendarea-actions">
	//                     <Icon iconName="add" size={24} fill="#E0E0E0" />
	//                 </div>
	//                 <div className="channel__sendarea-textarea">
	//                     <textarea
	//                         className="ta-message"
	//                         ref="taMessage"
	//                         value={this.state.value}
	//                         onChange={this.handleChange}
	//                         onKeyUp={this.onKeyUp}
	//                         onKeyDown={this.onKeyDown}
	//                         placeholder="Ваше сообщение ..." />
	//                 </div>
	//                 <div className="channel__sendarea-emoji">
	//                     <Icon iconName="tag-faces" size={24} fill="#E0E0E0" onClick={this.triggerEmoji} />
	//                     {this.state.isShowEmoji ?
	//                         <div className="channel-textarea__smiles-open">
	//                             <FlexBox>
	//                                 {this.buildEmoji()}
	//                             </FlexBox>
	//                         </div>
	//                         : null}
	//                 </div>
	//             </div>

	// var selected_text = (
	//     (window.getSelection && window.getSelection()) ||
	//     (document.getSelection && document.getSelection()) ||
	//     (document.selection && document.selection.createRange && document.selection.createRange().text)
	//     );
	//    
	//    
	// //             // get images
	//         var re = /https?:\/\/[._\w\d\-\/&%\?;А-Яа-я]+/gi;
	//         var tmpRes = this.props.data.body.match( re ) || [];

	//         //logger.log(tmpRes);

	//         // get only links ending with picture ext (gif, jpeg, png, bmp)
	//         // or links started with '/pic' word - for some picture hostings
	//         // for( var i = 0; i < tmpRes.length; i++ ) {
	//         //    if( tmpRes[i] != '' && ( tmpRes[i].search(/\.?[jpe?g|png|gif|bmp]$/i) != -1
	//         //                          || tmpRes[i].search(/\/pic\/[\w\d]{8}$/i) != -1 ) ) {

	//         // //this.body = '';
	//         //     }
	//         // }
	//         //
	//         //
	//         //
	module.exports = exports['default'];

	// отлавливаем нажатие enter и отсылаем сообщение

	// перехватываем enter и запоминаем, нажат ли ctrl

	// формируем доступные эмотиконы

/***/ },
/* 391 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _AuthDashboard = __webpack_require__(247);

	var _ClassesLogger = __webpack_require__(3);

	var _utils = __webpack_require__(2);

	var _ControlsIcon = __webpack_require__(232);

	var _ChatControllerJs = __webpack_require__(375);

	var _ChatControllerJs2 = _interopRequireDefault(_ChatControllerJs);

	// используем общую форму для каналов и чатов, берем компоненты из каналов

	var _ControlsMessageMessageHistory = __webpack_require__(386);

	var _ControlsMessageMessageHistory2 = _interopRequireDefault(_ControlsMessageMessageHistory);

	var _ControlsMessageMessageForm = __webpack_require__(390);

	var _ControlsMessageMessageForm2 = _interopRequireDefault(_ControlsMessageMessageForm);

	var React = __webpack_require__(202);

	var Chat = (function (_React$Component) {
	    _inherits(Chat, _React$Component);

	    function Chat(props) {
	        var _this = this;

	        _classCallCheck(this, Chat);

	        _get(Object.getPrototypeOf(Chat.prototype), 'constructor', this).call(this, props);
	        this.state = {
	            chat: null
	        };

	        this._setChatID = function (id) {
	            _this.id = id && parseInt(id) ? parseInt(id) : null;
	        };

	        this._getChat = function () {
	            // если чат не найден или передан кривой ID, myChat вернет undefined, сохраняем в стейт
	            var chat = _AuthDashboard.AppState.myChats.getChat(_this.id);
	            _this.setState({ chat: chat });
	            if (!chat) return;
	            if (_AuthDashboard.AppState.myChats.activeChat()) _AuthDashboard.AppState.myChats.activeChat().on('Chat-update', _this.updateChat);
	        };

	        this.componentWillMount = function () {

	            _ClassesLogger.logger.log('will mount chat', _this, _this.props);

	            _this._setChatID(_this.props.id);
	            // this._setChatID( this.props.params.id );

	            // если Chats_getlist_complete уже отработал и есть подгруженные чаты,
	            // сразу идем на получение чата
	            if (_AuthDashboard.AppState.myChats.isReady) {
	                _this._getChat();
	            } else {
	                _AuthDashboard.AppState.myChats.on("Chats_getlist_complete", _this._getChat);
	            }

	            // убираем скролл у body
	            document.body.style.overflowY = "hidden";
	        };

	        this.componentWillReceiveProps = function (nextProps) {

	            _ClassesLogger.logger.log('receive props chat', _this, nextProps);

	            // this._setChatID( nextProps.params.id );
	            _this._setChatID(nextProps.id);
	            _this._getChat();
	        };

	        this.componentWillUnmount = function () {

	            // logger.log('unmount chat');

	            // ставим метку, что чат уже не активен
	            _AuthDashboard.AppState.myChats.activeChatIndex = null;

	            // восстанавливаем скролл у body
	            document.body.style.overflowY = "auto";
	        };

	        this.updateChat = function (chat) {
	            this.setState({ chat: chat });
	        };

	        this.onClose = function () {
	            _AuthDashboard.AppState.myChats.closeChat(_this.id);
	        };

	        this.onSendMessage = function (msg) {
	            _AuthDashboard.AppState.myChats.activeChat().sendMessage(msg);
	        };

	        this.render = function () {

	            // logger.log('render chat = ' + this.state.chat, this);

	            // подгоняем высоту под экран
	            _this.channelHeight = _utils.Utils.getClientHeight() - 80 + "px";
	            _this.channelContentHeight = _utils.Utils.getClientHeight() - 140 + "px";
	            var channelStyle = {
	                height: _this.channelHeight,
	                overflowY: "hidden"
	            };
	            var channelContentStyle = {
	                height: _this.channelContentHeight
	            };

	            if (_this.state.chat === null) {
	                return React.createElement(
	                    'div',
	                    { className: 'channel__preview' },
	                    React.createElement(
	                        'div',
	                        { className: 'channel__preview-actions' },
	                        React.createElement(
	                            'div',
	                            { className: 'pointer', onClick: _this.onClose },
	                            React.createElement(_ControlsIcon.Icon, { name: 'close', className: 'marg-left', size: 24 })
	                        )
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'channel-preview__not-found' },
	                        'Загрузка...'
	                    )
	                );
	            }

	            if (!_this.state.chat) {
	                return React.createElement(
	                    'div',
	                    { className: 'channel__preview' },
	                    React.createElement(
	                        'div',
	                        { className: 'channel__preview-actions' },
	                        React.createElement(
	                            'div',
	                            { className: 'pointer', onClick: _this.onClose },
	                            '[x]'
	                        )
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'channel-preview__not-found' },
	                        'У вас нет доступа в чат #',
	                        _this.props.id,
	                        '.'
	                    )
	                );
	            }

	            return React.createElement(
	                'div',
	                { className: 'channel' },
	                React.createElement(
	                    'div',
	                    { className: 'channel__header' },
	                    React.createElement(
	                        'div',
	                        { className: 'channel__header-title' },
	                        'Чат: ',
	                        _this.state.chat.interlocutor.first_name,
	                        ' ',
	                        _this.state.chat.interlocutor.last_name,
	                        ' ',
	                        React.createElement(
	                            'small',
	                            null,
	                            '(',
	                            _this.state.chat.interlocutor.comp_name,
	                            ')'
	                        )
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'channel__header-actions' },
	                        React.createElement(
	                            'div',
	                            { className: 'pointer', onClick: _this.onClose },
	                            React.createElement(_ControlsIcon.Icon, { name: 'close', className: 'marg-left', size: 24 })
	                        )
	                    )
	                ),
	                React.createElement(_ControlsMessageMessageHistory2['default'], { context: _this.state.chat, type: 'chat', context_id: _this.id }),
	                React.createElement(_ControlsMessageMessageForm2['default'], { onSend: _this.onSendMessage })
	            );
	        };

	        this.id = null;
	    }

	    // <div className="channel" style={channelStyle}>
	    //                 <div className="channel__header">
	    //                     <div className="channel__header_title">Чат: {this.state.chat.interlocutor.first_name} {this.state.chat.interlocutor.last_name} <small>({this.state.chat.interlocutor.comp_name})</small></div>
	    //                 </div>
	    //                 <div className="channel__content" style={channelContentStyle}>
	    //                     <MessageHistory context={this.state.chat} type="chat" context_id={this.id}/>
	    //                     <MessageForm onSend={this.onSendMessage}/>
	    //                 </div>
	    //             </div>
	    return Chat;
	})(React.Component);

	exports['default'] = Chat;
	module.exports = exports['default'];

	// проверяем id на валидность
	// chat id = id юзера-собеседника

	// сохраняем сообщение в чате

/***/ },
/* 392 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _Controller2 = __webpack_require__(6);

	var _Controller3 = _interopRequireDefault(_Controller2);

	var _Dispatcher = __webpack_require__(4);

	var _api = __webpack_require__(1);

	var _AuthDashboard = __webpack_require__(247);

	var UserController = (function (_Controller) {
	    _inherits(UserController, _Controller);

	    function UserController(user_id) {
	        var _this = this;

	        _classCallCheck(this, UserController);

	        _get(Object.getPrototypeOf(UserController.prototype), 'constructor', this).call(this);

	        this.getFN = function () {
	            if (_this.state) {
	                return _this.state.first_name;
	            }
	            return "";
	        };

	        this.getLN = function () {
	            if (_this.state) {
	                return _this.state.last_name;
	            }
	            return "";
	        };

	        this.getEditData = function () {
	            var s = _this.state;
	            if (s) {
	                return {
	                    first_name: s.first_name,
	                    last_name: s.last_name,
	                    pat_name: s.pat_name,
	                    mobile: s.mobile,
	                    icq: s.icq,
	                    skype: s.skype,
	                    birthday: s.birthday,
	                    position: s.position
	                };
	            }
	            return {
	                first_name: null,
	                last_name: null,
	                pat_name: null,
	                mobile: null,
	                icq: null,
	                skype: null,
	                birthday: null,
	                position: null
	            };
	        };

	        this.editUserDetails = function (newData) {
	            _api.Api.userEditRequest(newData).then(function (res) {
	                if (res.err) {
	                    console.log(res.msg);
	                } else {
	                    _this.update();
	                }
	            });
	        };

	        this.onLogout = function () {
	            _this.id = null;
	            // закрываем сокет
	            _Dispatcher.Events.closeWebSocket();
	        };

	        this.isAuth = function () {
	            return _this.id ? true : false;
	        };

	        this.update = function () {
	            _api.Api.userStateRequest(_this.id).then(function (res) {
	                if (res.err) {
	                    var error = {
	                        type: "error",
	                        error: res.msg
	                    };
	                    _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, error);
	                } else {
	                    _this.state = res;

	                    // контакты пока лежат в userstate, обновляем их при обновлении данных юзера
	                    // AppState.myContacts.updateData();
	                    // AppState.myContacts.on("update_myContacts",this.update); // перенесено в Contacts.js

	                    _this.run("update_userState", res);
	                }
	            });
	        };

	        if (user_id) {
	            this.id = user_id;
	            this.update();
	        } else this.id = null;
	    }

	    return UserController;
	})(_Controller3['default']);

	exports['default'] = UserController;
	module.exports = exports['default'];

/***/ },
/* 393 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x4, _x5, _x6) { var _again = true; _function: while (_again) { var object = _x4, property = _x5, receiver = _x6; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x4 = parent; _x5 = property; _x6 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _Controller2 = __webpack_require__(6);

	var _Controller3 = _interopRequireDefault(_Controller2);

	var _Dispatcher = __webpack_require__(4);

	var _api = __webpack_require__(1);

	var _AuthDashboard = __webpack_require__(247);

	var _AuthPriceRequestsPriceRequestsController = __webpack_require__(394);

	var _AuthPriceRequestsPriceRequestsController2 = _interopRequireDefault(_AuthPriceRequestsPriceRequestsController);

	var _ClassesLogger = __webpack_require__(3);

	var CompanyController = (function (_Controller) {
	    _inherits(CompanyController, _Controller);

	    function CompanyController(comp_id) {
	        var _this = this;

	        _classCallCheck(this, CompanyController);

	        _get(Object.getPrototypeOf(CompanyController.prototype), 'constructor', this).call(this);

	        // кол-во связанных компаний по группам
	        this.perms_list = [{ id: 1, tags: 'all', value: 'Все права', exclude: 1 }, { id: 2, tags: 'staff', value: 'Управления правами сотрудников в компании' }, { id: 4, tags: 'tender', value: 'Управления тендерами' }, { id: 16, tags: 'comm', value: 'Управления связями' }, { id: 32, tags: 'data', value: 'Изменения данных компании' }, { id: 64, tags: 'invite', value: 'Управлять приглашениями сотрудников в компанию' }];

	        this.getUsers = function () {
	            var params = {
	                fields: ['uid', 'rts', 'flg', 'fn', 'ln', 'pn', 'phone', 'email', 'gender', 'cid', 'cflg', 'position'],
	                filters: [['cid', 'eq', _this.id]]
	            };
	            _api.Api.users_list(params).then(function (res) {
	                if (res) {
	                    if (res.err) {
	                        _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, { type: "error", error: res.msg });
	                        return;
	                    }
	                    _this.users = res.data;
	                    _this.run("MyCompany_Users-update", res.data);
	                }
	            });
	        };

	        this.updateCompanyRequest = function (params) {
	            if (!params) return;

	            _api.Api.updateCompanyRequest(params).then(function (res) {
	                if (res) {
	                    if (res.err) {
	                        _ClassesLogger.logger.log(_this, 'userInviteCreate', res.msg, 'error');
	                        _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, { message: res.msg, type: "error" });
	                        return;
	                    }

	                    _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, { message: "Данные компании изменены", type: "info" });
	                    _this.update();
	                }
	            });
	        };

	        this.getUsersInvited = function () {
	            var params = {
	                fields: ['id', 'ctime', 'email', 'last_name', 'first_name', 'pat_name', 'position', 'phone']
	            };

	            _api.Api.comp_invites_list(params).then(function (res) {
	                if (res.err) {
	                    var error = {
	                        type: "error",
	                        error: res.msg
	                    };
	                    _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, error);
	                } else {
	                    _this.users_invited = res.data;
	                    _this.run("MyCompany_UsersInvited-update", res.data);
	                }
	            });
	        };

	        this.userInviteSend = function (params) {
	            var message = {};
	            _api.Api.user_invite_create(params).then(function (res) {
	                if (res.err) {
	                    _ClassesLogger.logger.log(_this, 'userInviteCreate', res.msg, 'error');
	                    message = { message: res.msg, type: "error" };
	                } else {
	                    message = { message: "Приглашение отправлено", type: "info" };
	                    _this.getUsersInvited();
	                }
	            });
	            _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, message);
	        };

	        this.userInviteCanсel = function (params) {
	            var message = {};
	            _api.Api.user_invite_delete(params).then(function (res) {
	                if (res) {
	                    if (res.err) {
	                        _ClassesLogger.logger.log(_this, 'userInviteCancel', res.msg, 'error');
	                        message = { message: res.msg, type: "error" };
	                        return;
	                    }

	                    _this.users_invited.some(function (invite, i) {
	                        if (invite.id == res.deleted_invite_id) {
	                            _this.users_invited.splice(i, 1);
	                            return true;
	                        }
	                    });

	                    message = { message: "Приглашение удалено", type: "info" };
	                    _this.run("MyCompany_UsersInvited-update", _this.users_invited);
	                }

	                _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, message);
	            });
	        };

	        this.userPositionChange = function (params) {
	            var message = {};
	            if (params) {
	                _api.Api.user_position_change(params).then(function (res) {
	                    if (res) {
	                        if (res.err) {
	                            console.log(res);
	                            _ClassesLogger.logger.log(_this, 'user_position_change', res.msg, 'error');
	                            message = { message: res.msg, type: "error" };
	                            return;
	                        }

	                        _this.users.some(function (user, i) {
	                            if (user.uid == params.user_id) {
	                                user.position = params.position;
	                                return true;
	                            }
	                        });

	                        message = { message: "Должность измененена", type: "info" };
	                        _this.run("MyCompany_Users-update", _this.users);
	                    }
	                    _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, message);
	                });
	            } else {
	                message = { message: "Ошибка при изменение Должности: invalid data", type: "error" };
	                _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, message);
	            }
	        };

	        this.update = function () {
	            _api.Api.companyStateRequestById(_this.id).then(function (res) {
	                if (res.err) {
	                    var error = {
	                        type: "error",
	                        error: res.msg
	                    };
	                    _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, error);
	                } else {
	                    _this.state = res;
	                    _this.run("update_companyState", res);
	                }
	            });
	        };

	        this.getCompanyTaxation = function (taxation) {
	            var tax = _Dispatcher.Dictionary.taxationList.filter(function (tax) {
	                return tax.tag == taxation;
	            });
	            return (tax || []).length ? tax[0].value : null;
	        };

	        this.getTagNames = function (arr) {
	            //console.log(arr);
	            //arr = this.replaceTagToExpeditor( arr );
	            //console.log(arr);
	            var newArr = [];
	            if ((arr || []).length > 0) {
	                newArr = arr.map(function (item) {
	                    var newItem = _Dispatcher.Dictionary.tagsList.filter(function (tag) {
	                        return tag.tag === item;
	                    });
	                    return (newItem || []).length ? newItem[0].value : null;
	                });
	            }
	            //console.log(newArr);
	            return newArr;
	        };

	        this.isExpeditor = function () {
	            var arr = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];

	            if (!arr) var arr = _this.state.tags;
	            return arr.some(function (item) {
	                return item == "expeditor";
	            });
	            //return arr.some( item => item == "transport_to" ) && arr.some( item => item == "transport_from" );
	        };

	        this.isCarrier = function () {
	            var arr = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];

	            if (!arr) var arr = _this.state.tags;
	            return arr.some(function (item) {
	                return item == "carrier";
	            });
	        };

	        this.isShipper = function () {
	            var arr = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];

	            if (!arr) var arr = _this.state.tags;
	            return arr.some(function (item) {
	                return item == "shipper";
	            });
	        };

	        this.getLinksQuantity = function () {
	            _api.Api.req('comp_rel_summary', { comp_id: _this.id, types: ["carriers", "shippers", "expeditors", "blacklist", "social"] }).then(function (res) {
	                if (res.err) {
	                    console.log(res.msg);
	                } else {
	                    console.log("linksss");
	                    console.log(res);
	                    _this.relationsQuantity = { blacklist: res.blacklist, carriers: res.carriers, expeditors: res.expeditors, shippers: res.shippers, social: res.social };
	                    _this.run("updateLinksQuantity", _this.relationsQuantity);
	                }
	            });
	        };

	        this.getBookmarks = function () {
	            //console.log("GET Bookmarks!");
	            _api.Api.req('comp_rel_list', { comp_id: _this.id, relation: "social", fields: ["name", "inn", "comp_id", "phone", "ati_code", "relation_id"] }).then(function (res) {
	                if (res.err) {
	                    console.log(res.msg);
	                } else {
	                    console.log("socialList");
	                    console.log(res);
	                    _this.relations.social = res;
	                    _this.getLinksQuantity();
	                    _this.run("updateSocialLinks", res);
	                }
	            });
	        };

	        this.getBlacklist = function () {
	            console.log("GET blacklist!");
	            _api.Api.req('comp_rel_list', { comp_id: _AuthDashboard.AppState.myCompany.id, relation: "blacklist", fields: ["name", "inn", "comp_id", "phone", "ati_code", "relation_id"] }).then(function (res) {
	                if (res.err) {
	                    console.log(res.msg);
	                } else {
	                    console.log("BlackList:");
	                    console.log(res);
	                    _this.relations.blacklist = res;
	                    _this.getLinksQuantity();
	                    _this.run("updateBlacklist", res);
	                }
	            });
	        };

	        this.deleteLink = function (params, linkType) {
	            console.log(params);
	            _api.Api.linkDeleteRequest(params).then(function (res) {
	                if (res.err) {
	                    console.log("ОШИБКА удаления связи");
	                    console.log(res.msg);
	                } else {
	                    _this.updateLinks(linkType);
	                }
	            });
	        };

	        this.updateLinks = function (linkType) {
	            _api.Api.req('comp_rel_list', { comp_id: _AuthDashboard.AppState.myCompany.id, relation: linkType, fields: ["name", "inn", "comp_id", "phone", "ati_code", "relation_id"] }).then(function (res) {
	                if (res.err) {
	                    console.log(res.msg);
	                } else {
	                    _ClassesLogger.logger.log(_this, 'loaded relations type: ' + linkType);
	                    console.debug(res);
	                    _this.relations[linkType] = res;
	                    _this.getLinksQuantity();
	                    _this.run(linkType, res);
	                }
	            });
	        };

	        this.relationsQuantity = { blacklist: null, carriers: null, expeditors: null, shippers: null, social: null };

	        // таблица данных связанных компаний
	        this.relations = {};

	        // таблица данных сотрудников
	        this.users = [];

	        // таблица данных приглашенных юзеров
	        this.users_invited = [];

	        this.id = null;
	        if (comp_id) {
	            this.id = comp_id;
	            this.getLinksQuantity();
	            this.update();
	        }
	    }

	    // import Controller from './Controller';
	    // import {Events, Error, Dictionary} from './../Dispatcher';
	    // import {Api} from './../api';
	    // import {AppState} from '../Auth/Dashboard';
	    // import PriceRequestsController from '../Auth/PriceRequests/PriceRequestsController';
	    // import {logger} from '../Classes/Logger';

	    // export default class CompanyController extends Controller {

	    //     constructor(comp_id) {
	    //         super();
	    // <<<<<<< HEAD
	    //         this.linksQuantity={
	    //             blacklist:null, carriers:null, expeditors:null, shippers: null, social:null
	    //         };
	    //         this.links={};
	    //         this.users_invited = [];
	    //         this.users = [];       
	    // =======

	    //         // кол-во связанных компаний по группам
	    //         this.relationsQuantity={blacklist:null, carriers:null, expeditors:null, shippers: null, social:null};

	    //         // таблица данных связанных компаний
	    //         this.relations = {};

	    //         // таблица данных приглашенных юзеров
	    //         this.usersInvites = [];

	    //         this.id = null;
	    // >>>>>>> master
	    //         if (comp_id) {
	    //             this.id = comp_id;
	    //             this.getLinksQuantity();
	    //             this.update()
	    // <<<<<<< HEAD
	    //         } else this.id = null;
	    //     }

	    //     perms_list = [
	    //         {id: 1, tags: 'all' ,value: 'Все права', exclude: 1},
	    //         {id: 2, tags: 'staff' ,value: 'Управления правами сотрудников в компании'},
	    //         {id: 4, tags: 'tender' ,value: 'Управления тендерами'},
	    //         {id: 16,  tags: 'data' ,value: 'Изменения данных компании'},
	    //         {id: 32,  tags: 'invite' ,value: 'Управлять приглашениями сотрудников в компанию'}
	    //     ]

	    //     userPermChange(perm, id){
	    //         if(!perm || !id) return;

	    //         Api.comp_user_perm_change({perm_flags: perm, user_id: id}).then(res=>{
	    //             if(res){
	    //                 if (res.err) {
	    //                     Events.run(Events.EV_SHOW_NOTIFY, { type:"error", error:res.msg })
	    //                     return;
	    //                 }

	    //                 this.users.some(user=>{
	    //                     if(user.uid == id){
	    //                         user.cflg = perm;
	    //                         return true;
	    //                     }
	    //                 });

	    //                 this.run("MyCompany_Users-update", this.users);
	    //             }
	    //         });
	    //     }

	    //     getPerm(perms){
	    //         let Perms = [];

	    //         this.perms_list.forEach(item=>{
	    //             if((perms & item.id) === item.id){
	    //                 Perms.push(item.tags)
	    //             }
	    //         });

	    //         return Perms;
	    // =======
	    //         }

	    // >>>>>>> master
	    //     }

	    //     update =()=> {
	    //         Api.companyStateRequestById(this.id).then(res=>{
	    //             if (res.err) {
	    //                 var error = {
	    //                     type:"error",
	    //                     error:res.msg
	    //                 };
	    //                 Events.run(Events.EV_SHOW_NOTIFY, error)
	    //             } else {
	    //                 this.state = res;
	    //                 this.run("update_companyState", res);
	    //             }
	    //         });
	    //     }
	    // <<<<<<< HEAD

	    //     getUsers = ()=>{
	    //         let params = {
	    //             fields: ['uid', 'rts', 'flg', 'fl', 'ln', 'pn', 'tel', 'email', 'gender', 'cid', 'cflg', 'position'],
	    //             filters: [ ['cid', 'eq', this.id] ]
	    //         };

	    //         Api.users_list(params).then(res=>{
	    //             if(res){
	    //                 if (res.err) {
	    //                     Events.run(Events.EV_SHOW_NOTIFY, { type:"error", error:res.msg })
	    //                     return;
	    //                 }
	    //                 this.users = res.data;
	    //                 this.run("MyCompany_Users-update", res.data);
	    //             }
	    //         });
	    //     }

	    //     getUsersInvited = ()=>{
	    //         let params = {
	    //             fields: ['id', 'ctime', 'email', 'last_name', 'first_name', 'pat_name', 'position', 'phone']
	    //         };

	    //         Api.comp_invites_list(params).then(res=>{
	    // =======

	    //     getUsersInvites = ()=>{
	    //         if(this.usersInvites.length){
	    //             return this.usersInvites
	    //         }
	    //         this.updateUsersInvites();
	    //     }

	    //     updateUsersInvites = ()=>{
	    //         Api.comp_invites_list({fields: ['id', 'ctime', 'email', 'last_name', 'first_name', 'pat_name', 'position', 'phone']}).then(res=>{
	    // >>>>>>> master
	    //             if (res.err) {
	    //                 var error = {
	    //                     type:"error",
	    //                     error:res.msg
	    //                 };
	    //                 Events.run(Events.EV_SHOW_NOTIFY, error)
	    //             } else {
	    //                 this.users_invited = res.data;
	    //                 this.run("MyCompany_UsersInvited-update", res.data);
	    //             }
	    //         });
	    //     }

	    //     userInviteCreate = (params)=>{
	    //         let message = {};
	    //         Api.user_invite_create(params).then(res=> {
	    //             if (res.err) {
	    //                 logger.log(this, 'userInviteCreate', res.msg, 'error');
	    //                 message = { message: res.msg,  type: "error" };
	    //             } else {
	    //                 message = { message: "Приглашение отправлено", type: "info" };
	    //                 this.getUsersInvited();
	    //             }
	    //         });
	    //         Events.run(Events.EV_SHOW_NOTIFY, message);
	    //     }
	    // <<<<<<< HEAD

	    //     deleteUserInvited = (params)=>{
	    // =======

	    //     userInviteDelete = (params)=>{
	    // >>>>>>> master
	    //         let message = {};
	    //         Api.user_invite_delete(params).then(res=> {
	    // <<<<<<< HEAD
	    //             if(res){
	    //                 if (res.err) {
	    //                     logger.log(this, 'userInviteDreate', res.msg, 'error');
	    //                     message = { message: res.msg,  type: "error" };
	    //                     return;
	    //                 }

	    //                 this.users_invited.some((invite, i)=>{
	    // =======
	    //             if (res.err) {
	    //                 logger.log(this, 'userInviteDreate', res.msg, 'error');
	    //                 message = { message: res.msg,  type: "error" };
	    //             } else {
	    //                 message = { message: "Приглашение удалено", type: "info" };
	    //                 console.log('1', this.usersInvites);

	    //                 this.usersInvites.some((invite, i)=>{
	    // >>>>>>> master
	    //                     if(invite.id == res.deleted_invite_id){
	    //                         this.users_invited.splice(i, 1);
	    //                         return true;
	    //                     }
	    //                 });
	    // <<<<<<< HEAD

	    //                  message = { message: "Приглашение удалено", type: "info" };
	    //                  this.run("MyCompany_UsersInvited-update", this.users_invited);
	    //             }

	    //             Events.run(Events.EV_SHOW_NOTIFY, message);
	    //         });
	    // =======
	    //                 console.log('2', this.usersInvites);
	    //                 // this.run("MyCompany_UsersInvites-update", this.usersInvites);
	    //             }
	    //         });
	    //         Events.run(Events.EV_SHOW_NOTIFY, message);
	    // >>>>>>> master
	    //     }

	    //     getCompanyTaxation =(taxation)=> {
	    //         var tax = Dictionary.taxationList.filter( tax => {
	    //             return tax.tag == taxation;
	    //         });
	    //         return ((tax || []).length) ? tax[0].value : null;
	    //     }

	    //     getTagNames =(arr)=> {
	    //         console.log(arr);
	    //         //arr = this.replaceTagToExpeditor( arr );
	    //         console.log(arr);
	    //         var newArr = [];
	    //         if ((arr || []).length > 0) {
	    //             newArr = arr.map( item=> {
	    //                 var newItem = Dictionary.tagsList.filter(tag=> {
	    //                     return tag.tag === item
	    //                 });
	    //                 return ((newItem || []).length) ? newItem[0].value : null;
	    //             })
	    //         }
	    //         //console.log(newArr);
	    //         return newArr;
	    //     }

	    //     // [DEPRECATED in new API]
	    //     //
	    //     // replaceTagToExpeditor =(arr)=> {
	    //     //     var tmpArr = [];
	    //     //     if( this.isExpeditor(arr) ) {
	    //     //         tmpArr = arr.splice( arr.indexOf("transport_to"), 1, "expeditor" );
	    //     //         tmpArr = arr.splice( arr.indexOf("transport_from"), 1);
	    //     //     }
	    //     //     return arr;
	    //     // }

	    //     isExpeditor =(arr=null)=> {
	    //         if(!arr) var arr = this.state.tags;
	    //         return arr.some( item => item == "expeditor" )
	    //         //return arr.some( item => item == "transport_to" ) && arr.some( item => item == "transport_from" );
	    //     }

	    //     isCarrier =(arr=null)=> {
	    //         if(!arr) var arr = this.state.tags;
	    //         return arr.some( item => item == "carrier" )
	    //     }

	    //     isShipper =(arr=null)=> {
	    //         if(!arr) var arr = this.state.tags;
	    //         return arr.some( item => item == "shipper" )
	    //     }

	    //     getLinksQuantity =()=>{
	    //         Api.req('comp_rel_summary', {comp_id:this.id, types:["carriers", "shippers", "expeditors", "blacklist", "social"]}).then(res=>{
	    //             if (res.err){
	    //                 console.log(res.msg)
	    //             } else {
	    //                 console.log("linksss");
	    //                 console.log(res);
	    //                 this.relationsQuantity= {blacklist:res.blacklist, carriers:res.carriers, expeditors:res.expeditors, shippers: res.shippers, social:res.social};
	    //                 this.run("updateLinksQuantity", this.relationsQuantity)
	    //             }
	    //         })
	    //     };

	    //     getBookmarks=()=> {
	    //         //console.log("GET Bookmarks!");
	    //         Api.req('comp_rel_list', {comp_id: this.id, relation: "social", fields:["name", "inn","comp_id", "phone", "ati_code", "relation_id"]}).then(res=> {
	    //             if (res.err){
	    //                 console.log(res.msg)
	    //             } else{
	    //                 console.log("socialList");
	    //                 console.log(res);
	    //                 this.relations.social= res;
	    //                 this.getLinksQuantity();
	    //                 this.run("updateSocialLinks", res)
	    //             }
	    //         })
	    //     };

	    //     getBlacklist=()=> {
	    //         console.log("GET blacklist!");
	    //         Api.req('comp_rel_list', {comp_id: AppState.myCompany.id, relation: "blacklist", fields:["name", "inn","comp_id", "phone", "ati_code", "relation_id"]}).then(res=> {
	    //             if (res.err){
	    //                 console.log(res.msg)
	    //             } else{
	    //                 console.log("BlackList:");
	    //                 console.log(res);
	    //                 this.relations.blacklist= res;
	    //                 this.getLinksQuantity();
	    //                 this.run("updateBlacklist", res)
	    //             }
	    //         })
	    //     };

	    //     deleteLink = (params, linkType)=> {
	    //         console.log(params);
	    //         Api.linkDeleteRequest(params).then(res=> {
	    //             if (res.err) {
	    //                 console.log("ОШИБКА удаления связи");
	    //                 console.log(res.msg);
	    //             } else {
	    //                 this.updateLinks(linkType);
	    //             }
	    //         })
	    //     };

	    //     updateLinks=(linkType)=>{
	    //         Api.req('comp_rel_list', {comp_id: AppState.myCompany.id, relation: linkType, fields:["name", "inn","comp_id", "phone", "ati_code", "relation_id"]}).then(res=> {
	    //             if (res.err){
	    //                 console.log(res.msg)
	    //             } else{
	    //                 logger.log(this, 'loaded relations type: ' + linkType);
	    //                 console.debug(res);
	    //                 this.relations[linkType]= res;
	    //                 this.getLinksQuantity();
	    //                 this.run(linkType, res)
	    //             }
	    //         })
	    //     }

	    // }

	    _createClass(CompanyController, [{
	        key: 'getPerms',
	        value: function getPerms(perms) {
	            var Perms = [];

	            this.perms_list.forEach(function (item) {
	                if ((perms & item.id) === item.id) {
	                    Perms.push(item.tags);
	                }
	            });

	            return Perms;
	        }
	    }, {
	        key: 'userPermsChange',
	        value: function userPermsChange(perm, id) {
	            var _this2 = this;

	            if (!perm || !id) return;

	            _api.Api.comp_user_perm_change({ perm_flags: perm, user_id: id }).then(function (res) {
	                if (res) {
	                    if (res.err) {
	                        _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, { type: "error", error: res.msg });
	                        return;
	                    }

	                    _this2.users.some(function (user) {
	                        if (user.uid == id) {
	                            user.cflg = perm;
	                            return true;
	                        }
	                    });

	                    _AuthDashboard.AppState.user.state.comp_flags = perm;
	                    _this2.run("MyCompany_Users-update", _this2.users);
	                }
	            });
	        }
	    }]);

	    return CompanyController;
	})(_Controller3['default']);

	exports['default'] = CompanyController;
	module.exports = exports['default'];

	// [DEPRECATED in new API]
	//
	// replaceTagToExpeditor =(arr)=> {
	//     var tmpArr = [];
	//     if( this.isExpeditor(arr) ) {
	//         tmpArr = arr.splice( arr.indexOf("transport_to"), 1, "expeditor" );
	//         tmpArr = arr.splice( arr.indexOf("transport_from"), 1);
	//     }
	//     return arr;
	// }

/***/ },
/* 394 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x5, _x6, _x7) { var _again = true; _function: while (_again) { var object = _x5, property = _x6, receiver = _x7; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x5 = parent; _x6 = property; _x7 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _api = __webpack_require__(1);

	var _AuthDashboard = __webpack_require__(247);

	var _Dispatcher = __webpack_require__(4);

	var _ClassesController = __webpack_require__(6);

	var _ClassesController2 = _interopRequireDefault(_ClassesController);

	var _ClassesLogger = __webpack_require__(3);

	var PriceRequestsController = (function (_Controller) {
	    _inherits(PriceRequestsController, _Controller);

	    function PriceRequestsController(props) {
	        _classCallCheck(this, PriceRequestsController);

	        _get(Object.getPrototypeOf(PriceRequestsController.prototype), 'constructor', this).call(this, props);
	        this.priceRequestsCreated = [];
	        this.priceRequestsReceived = [];
	        this.priceRequestBookmarks = [];
	        this.priceRequestSearchResults = [];
	        this.isUpdating = false;
	        this.savedSearchParams = null;
	    }

	    _createClass(PriceRequestsController, [{
	        key: 'updateData',
	        value: function updateData() {

	            this.getPriceRequestsList('regular', true);
	            this.getPriceRequestsList('received', true);
	            this.getPriceRequestsList('bookmarks', true);
	            // this.priceRequestsCreated = AppState.myCompany.state.price_requests_created;
	            // this.priceRequestsReceived = AppState.myCompany.state.price_requests_received;
	            // this.priceRequestBookmarks = AppState.myCompany.state.price_request_bookmarks;
	        }
	    }, {
	        key: 'createPriceRequest',
	        value: function createPriceRequest(state) {
	            var _this = this;

	            var message = {};
	            if (state) {
	                // logger.log( this, 'Creating new price request...', state );
	                _api.Api.price_request_create(state).then(function (res) {
	                    if (res.err) {
	                        _ClassesLogger.logger.log(_this, 'Error while creating the price request', res.msg, 'error');
	                        message = { message: res.msg, type: "error" };
	                    } else {
	                        message = { message: "Новый запрос создан", type: "info" };
	                    }
	                    // update list
	                    _this.getPriceRequestsList('regular');
	                    _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, message);
	                    //this.run("PriceRequests_updated", this);
	                    window.location.hash = 'dashboard/price-requests';
	                });
	            } else {
	                message = { message: "Ошибка при создании запроса ставок: invalid data", type: "error" };
	                _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, message);
	            }
	        }
	    }, {
	        key: 'deletePriceRequest',
	        value: function deletePriceRequest(id) {
	            var _this2 = this;

	            var message = {};
	            if (id) {
	                // logger.log( this, 'Deleting the price request from DB...', id );
	                _api.Api.price_request_delete(id).then(function (res) {
	                    if (res.err) {
	                        _ClassesLogger.logger.log(_this2, 'Error while deleting the price request', res.msg, 'error');
	                        message = { message: res.msg, type: "error" };
	                    } else {
	                        message = { message: "Запрос успешно удален.", type: "info" };
	                    }
	                    // update list
	                    _this2.getPriceRequestsList('regular');
	                    _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, message);
	                    //this.run("PriceRequests_updated", this);
	                });
	            } else {
	                    message = { message: "Ошибка при удалении запроса: не найден ID запроса.", type: "error" };
	                    _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, message);
	                }
	        }
	    }, {
	        key: 'deletePriceRequestReceived',
	        value: function deletePriceRequestReceived(id) {
	            var _this3 = this;

	            var message = {};
	            if (id) {
	                // logger.log( this, 'Deleting the received price request from DB...', id );
	                _api.Api.price_request_received_delete(id).then(function (res) {
	                    if (res.err) {
	                        _ClassesLogger.logger.log(_this3, 'Error while deleting the received price request', res.msg, 'error');
	                        message = { message: res.msg, type: "error" };
	                    } else {
	                        message = { message: "Входящий запрос успешно удален.", type: "info" };
	                    }
	                    // update list
	                    _this3.getPriceRequestsList('received');
	                    _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, message);
	                    //this.run("PriceRequests_updated", this);
	                });
	            } else {
	                    message = { message: "Ошибка при удалении входящего запроса: не найден ID запроса.", type: "error" };
	                    _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, message);
	                }
	        }
	    }, {
	        key: 'createPriceRequestBet',
	        value: function createPriceRequestBet(state) {
	            var _this4 = this;

	            var type = arguments.length <= 1 || arguments[1] === undefined ? null : arguments[1];

	            var message = {};
	            if (state) {
	                // logger.log( this, 'Creating new price request BET...', state );
	                _api.Api.price_request_bet_create(state).then(function (res) {
	                    if (res.err) {
	                        _ClassesLogger.logger.log(_this4, 'Error while creating the price request bet', res.msg, 'error');
	                        message = { message: res.msg, type: "error" };
	                    } else {
	                        message = { message: "Ваша ставка сохранена", type: "info" };
	                        _ClassesLogger.logger.log(_this4, 'Price request bet created, ID=', res);
	                    }
	                    // update list
	                    if (type && (type == 'received' || type == 'bookmarks')) {
	                        _this4.getPriceRequestsList(type);
	                    } else {
	                        // перезапускаем поиск
	                        _this4.searchPriceRequests(null, true);
	                    }
	                    //this.run("PriceRequests_updated", this);
	                    _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, message);
	                });
	            } else {
	                message = { message: "Ошибка при создании ставки: invalid data", type: "error" };
	                _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, message);
	            }
	        }
	    }, {
	        key: 'createBookmark',
	        value: function createBookmark(id) {
	            var _this5 = this;

	            var message = {};
	            if (id) {
	                // logger.log( this, 'Creating the bookmark...', id );
	                _api.Api.price_request_bookmark_create(id).then(function (res) {
	                    if (res.err) {
	                        _ClassesLogger.logger.log(_this5, 'Error while creating the bookmark for price request', res.msg, 'error');
	                        message = { message: res.msg, type: "error" };
	                    } else {
	                        message = {
	                            message: "Закладка успешно создана.",
	                            type: "info"
	                        };
	                    }
	                    // update list
	                    _this5.getPriceRequestsList('bookmarks');
	                    _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, message);
	                    //this.run("PriceRequests_updated", this);
	                });
	            } else {
	                    message = { message: "Ошибка при создании закладки: не найден ID запроса.", type: "error" };
	                    _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, message);
	                }
	        }
	    }, {
	        key: 'deleteBookmark',
	        value: function deleteBookmark(id) {
	            var _this6 = this;

	            var message = {};
	            if (id) {
	                // logger.log( this, 'Deleting the bookmark...', id );
	                _api.Api.price_request_bookmark_delete(id).then(function (res) {
	                    if (res.err) {
	                        _ClassesLogger.logger.log(_this6, 'Error while creating the bookmark for price request', res.msg, 'error');
	                        message = { message: res.msg, type: "error" };
	                    } else {
	                        message = {
	                            message: "Закладка успешно удалена.",
	                            type: "info"
	                        };
	                    }
	                    // update list
	                    _this6.getPriceRequestsList('bookmarks');
	                    _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, message);
	                    //this.run("PriceRequests_updated", this);
	                });
	            } else {
	                    message = {
	                        message: "Ошибка при удалении закладки: не найден ID запроса.",
	                        type: "error"
	                    };
	                    _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, message);
	                }
	        }
	    }, {
	        key: 'searchPriceRequests',
	        value: function searchPriceRequests(params) {
	            var _this7 = this;

	            var saved = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];

	            // если параметы не переданы, вытаскиваем сохраненные
	            if (params == null && saved && this.savedSearchParams) {
	                params = this.savedSearchParams;
	            }

	            var message = {};
	            if (params) {

	                // сохраняем параметры
	                this.savedSearchParams = params;

	                // logger.log( this, 'Searching price requests...', params );
	                _api.Api.price_requests_list(params).then(function (res) {
	                    if (res.err) {
	                        _ClassesLogger.logger.log(_this7, 'Error while getting price requests', res.msg, 'error');
	                        message = { message: res.msg, type: "error" };
	                        _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, message);
	                        return null;
	                    } else {
	                        _this7.priceRequestSearchResults = res.data;
	                        _this7.run("PriceRequests_search_complete", res.data);
	                        //return res.data;
	                    }
	                });
	            } else {
	                    message = { message: "Ошибка при поиске: недостаточно параметров.", type: "error" };
	                    _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, message);
	                    return null;
	                }
	        }

	        /**
	         * Список "ставок" в "запросах ставок" 
	         * Список не глобальный, отображаются только ставки сделаные в запросах которые создала эта компания
	         */
	    }, {
	        key: 'getPriceRequestBetsList',
	        value: function getPriceRequestBetsList(params) {
	            var _this8 = this;

	            var message = {};
	            if (params) {
	                // logger.log( this, 'Geting the price request bets list...', params );
	                _api.Api.price_request_bets_list(params).then(function (res) {
	                    if (res.err) {
	                        _ClassesLogger.logger.log(_this8, 'Error while getting price request bets list', res.msg, 'error');
	                        message = { message: res.msg, type: "error" };
	                        _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, message);
	                        return null;
	                    } else {
	                        _this8.priceRequestSearchResults = res.data;
	                        _this8.run("PriceRequests_betslist_complete", res.data);
	                    }
	                });
	            } else {
	                message = { message: "Ошибка при запросе: недостаточно параметров.", type: "error" };
	                _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, message);
	                return null;
	            }
	        }

	        /**
	         * Для показа деталей по одному запросу. Доступны только созданные
	         * данной компанией запросы, которые вытаскиваются из state (price_requests_created)
	         * @param  {int} id ID запроса
	         * @return {Object} Объект 'запрос ставки'
	         */
	    }, {
	        key: 'getPriceRequestDetails',
	        value: function getPriceRequestDetails(id) {
	            var priceRequest = [];
	            if (this.priceRequestsCreated.length) {
	                priceRequest = this.priceRequestsCreated.filter(function (request) {
	                    return request.price_request_id == id;
	                });
	            }
	            return priceRequest;
	        }

	        /**
	         * Выборка моих, входящих запросов, закладок
	         * type = regular|received|bookmarks
	         */
	    }, {
	        key: 'getPriceRequestsList',
	        value: function getPriceRequestsList(type) {
	            var _this9 = this;

	            var showUpdating = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];
	            var filters = arguments.length <= 2 || arguments[2] === undefined ? [] : arguments[2];

	            this.isUpdating = showUpdating;

	            var message = {};
	            var params = {
	                "filters": [],
	                "fields": ["price_request_id", "cargo_name", "from_addr", "from_x", "from_y", "to_addr", "to_x", "to_y", "volume", "mass", "unit", "ctime", "shipment_time", "bets", "bet", "bet_flags", "comp_id", "name", "inn", "addr", "note", "flags"]
	            };

	            params.type = type;

	            // применяем фильтры, если заданы
	            if (filters.length) {
	                filters.forEach(function (filter) {
	                    params.filters.push(filter);
	                });
	            }

	            // params.offset = 10;

	            // мои запросы
	            if (type == 'regular') {
	                params.filters.push(["comp_id", "eq", _AuthDashboard.AppState.myCompany.id]);
	            }

	            // формируем параметры в зависимости от типа

	            if (params) {
	                _api.Api.price_requests_list(params).then(function (res) {

	                    if (res.err) {
	                        _ClassesLogger.logger.log(_this9, 'Error while getting price requests', res.msg, 'error');
	                        message = { message: res.msg, type: "error" };
	                        _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, message);
	                        return null;
	                    } else {
	                        switch (type) {
	                            case 'regular':
	                                if (res.data) _this9.priceRequestsCreated = res.data;
	                                break;

	                            case 'received':
	                                if (res.data) _this9.priceRequestsReceived = res.data;
	                                break;

	                            case 'bookmarks':
	                                if (res.data) _this9.priceRequestBookmarks = res.data;
	                                break;
	                        }

	                        _this9.run("PriceRequests_updated", res.data);
	                        _this9.isUpdating = false;
	                        //return res.data;
	                    }
	                });
	            } else {
	                    message = { message: "Ошибка при получении запросов ставок: недостаточно параметров.", type: "error" };
	                    _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, message);
	                    this.isUpdating = false;
	                    return null;
	                }
	        }
	    }, {
	        key: 'getPriceRequestsCreated',
	        value: function getPriceRequestsCreated() {
	            return this.priceRequestsCreated;
	        }
	    }, {
	        key: 'getPriceRequestsReceived',
	        value: function getPriceRequestsReceived() {
	            return this.priceRequestsReceived;
	        }
	    }, {
	        key: 'getPriceRequestBookmarks',
	        value: function getPriceRequestBookmarks() {
	            return this.priceRequestBookmarks;
	        }
	    }, {
	        key: 'countPriceRequestsCreated',
	        value: function countPriceRequestsCreated() {
	            return this.priceRequestsCreated.length || 0;
	        }
	    }, {
	        key: 'countPriceRequestsReceived',
	        value: function countPriceRequestsReceived() {
	            return this.priceRequestsReceived.length || 0;
	        }
	    }, {
	        key: 'countPriceRequestBookmarks',
	        value: function countPriceRequestBookmarks() {
	            return this.priceRequestBookmarks.length || 0;
	        }
	    }, {
	        key: 'isBookmarkExists',
	        value: function isBookmarkExists(id) {
	            return this.priceRequestBookmarks.some(function (bookmark) {
	                return bookmark.price_request_id === id;
	            });
	        }
	    }]);

	    return PriceRequestsController;
	})(_ClassesController2['default']);

	exports['default'] = PriceRequestsController;
	module.exports = exports['default'];

/***/ },
/* 395 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _ClassesLogger = __webpack_require__(3);

	var React = __webpack_require__(202);

	var NotificationsError = (function (_React$Component) {
	    _inherits(NotificationsError, _React$Component);

	    function NotificationsError() {
	        var _this = this;

	        _classCallCheck(this, NotificationsError);

	        _get(Object.getPrototypeOf(NotificationsError.prototype), 'constructor', this).apply(this, arguments);

	        this.closeWindow = function () {
	            if (_this.props.close) _this.props.close();
	        };

	        this.render = function () {
	            return React.createElement(
	                'div',
	                { className: 'notify-error', onClick: _this.closeWindow },
	                React.createElement(
	                    'div',
	                    { className: 'notify__title' },
	                    'Ошибка'
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'notify__text' },
	                    _this.props.error.message
	                )
	            );
	        };
	    }

	    return NotificationsError;
	})(React.Component);

	exports['default'] = NotificationsError;
	module.exports = exports['default'];

/***/ },
/* 396 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _ClassesLogger = __webpack_require__(3);

	var React = __webpack_require__(202);

	var NotificationsInfo = (function (_React$Component) {
	    _inherits(NotificationsInfo, _React$Component);

	    function NotificationsInfo() {
	        var _this = this;

	        _classCallCheck(this, NotificationsInfo);

	        _get(Object.getPrototypeOf(NotificationsInfo.prototype), 'constructor', this).apply(this, arguments);

	        this.closeWindow = function () {
	            if (_this.props.close) _this.props.close();
	        };

	        this.render = function () {
	            return React.createElement(
	                'div',
	                { className: 'notify-info', onClick: _this.closeWindow },
	                React.createElement(
	                    'div',
	                    { className: 'notify__title' },
	                    'Успешно'
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'notify__text' },
	                    _this.props.info.message
	                )
	            );
	        };
	    }

	    return NotificationsInfo;
	})(React.Component);

	exports['default'] = NotificationsInfo;
	module.exports = exports['default'];

/***/ },
/* 397 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _api = __webpack_require__(1);

	var _utils = __webpack_require__(2);

	var React = __webpack_require__(202);

	var SocialOauth = React.createClass({
	  displayName: 'SocialOauth',

	  getInitialState: function getInitialState() {
	    return { s: 'Вход ...' };
	  },

	  lg: function lg(t) {
	    this.setState({ s: this.state.s + '\n' + t });
	  },

	  // сюда юзера кинет после авторизации через oauth
	  componentDidMount: function componentDidMount() {
	    var _this = this;

	    console.log('[SocialOauth] componentDidMount');

	    // проверяем наличие ошибки
	    var mError = _utils.Utils.extract_uri_param(window.location.href, 'error');
	    console.log('error=' + mError);
	    if (mError) {
	      // есть error, это плохо
	      console.log(mError);
	      this.lg(mError);
	      return;
	    }

	    // проверяем наличие кода
	    var mCode = _utils.Utils.extract_uri_param(window.location.href, 'code');
	    console.log('code=' + mCode);
	    if (!mCode) {
	      // нет code, это плохо
	      this.lg('no code');
	      return;
	    }

	    var cmd = undefined;

	    var bind_provider = _utils.Utils.extract_uri_param(window.location.href, 'bind_provider');

	    if (bind_provider) {
	      console.log('bind_provider=' + bind_provider);

	      switch (bind_provider) {
	        case 'facebook':
	          {
	            cmd = 'social_facebook_bind';break;
	          }
	        case 'linkedin':
	          {
	            cmd = 'social_linkedin_bind';break;
	          }
	        default:
	          {
	            this.lg('Неверный провайдер привязки');return;
	          }
	      }

	      this.lg('привязка аккунта ' + bind_provider);

	      // передаем code в api чтобы привязать аккаунт
	      fetch(_api.Api.API_URI + '?cm=' + _utils.Utils.o2j({ cm: cmd, sid: _utils.Utils.cookieGet('sid'), code: mCode })).then(function (r) {
	        return r.json();
	      })
	      // конвертим ответ в json
	      .then(function (j) {
	        // обрабатываем ответ
	        console.log('cmd "' + cmd + '" answ:');
	        console.debug(j);
	        if (!j) return; // вернулось что то не то
	        if (j.err) {
	          // api вернул ошибку
	          console.log('err=' + j.err);
	          _this.lg('ошибка ' + j.err + '; ' + j.msg);
	          return;
	        }
	        //window.opener.location.hash = 'dashboard/profile/accounts?'+Math.random();  // обновляем родительское окно
	        window.opener.location.reload(); // перезагружаем родительское окно (туду: может быть можно как то изящее сделать)
	        window.close(); // закрываем это окно
	      })['catch'](function (e) {
	        console.log('request failed: ' + e);
	        _this.lg('request failed: ' + e);
	      });

	      return;
	    }

	    var provider = _utils.Utils.extract_uri_param(window.location.href, 'provider');
	    console.log('provider=' + provider);

	    switch (provider) {
	      case 'facebook':
	        cmd = 'social_facebook_login';break;
	      case 'linkedin':
	        cmd = 'social_linkedin_login';break;
	      default:
	        this.lg('Неверный провайдер');return;
	    }

	    this.lg('провайдер ' + provider);

	    // передаем code в api чтобы получить sid
	    fetch(_api.Api.API_URI + '?cm=' + _utils.Utils.o2j({ cm: cmd, code: mCode })).then(function (r) {
	      return r.json();
	    })
	    // конвертим ответ в json
	    .then(function (j) {
	      // обрабатываем ответ
	      console.log('cmd "' + cmd + '" answ:');
	      console.debug(j);
	      if (!j) return; // вернулось что то не то
	      if (j.err) {
	        // api вернул ошибку
	        console.log('err=' + j.err);
	        _this.lg('ошибка ' + j.err + '; ' + j.msg);
	        return;
	      }
	      if (!j.sid || !j.user_id) return; // api не вернул нужных данных
	      _api.Api.sid = j.sid; // это наш sid
	      _api.Api.user_id = j.user_id; // это наш sid
	      //console.debug(Utils.cookieGet('remember'))
	      var ttl = _utils.Utils.cookieGet('remember') == 'true' ? 60 * 60 * 24 * 365 : 0; // 0 - кука хранится пока браузер открыт
	      _utils.Utils.cookieDel('remember');
	      //console.log('remember=' + Utils.cookieGet('remember') + ' ' + typeof(Utils.cookieGet('remember')) + ' ttl=' + ttl)
	      _utils.Utils.cookieSet('sid', j.sid, { expires: ttl }); // кладем sid в куки
	      _utils.Utils.cookieSet('user_id', j.user_id, { expires: ttl }); // кладем user_id в куки
	      window.opener.location.hash = 'dashboard';
	      //window.opener.location.reload();  // релоадим основное окно, оно подцепит sid из кук
	      window.close(); // закрываем это окно
	    })['catch'](function (e) {
	      console.log('request failed: ' + e);
	      _this.lg('request failed: ' + e);
	    });
	  },

	  render: function render() {
	    return React.createElement(
	      'pre',
	      null,
	      this.state.s
	    );
	  }

	});

	exports.SocialOauth = SocialOauth;

/***/ },
/* 398 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _Dispatcher = __webpack_require__(4);

	var _api = __webpack_require__(1);

	var _utils = __webpack_require__(2);

	var _SimpleComponentsLoading = __webpack_require__(361);

	//import {SimpleTable} from '../SimpleComponents/SimpleTable';

	var _SimpleComponentsSimpleTable2 = __webpack_require__(399);

	var _SimpleComponentsTableCells = __webpack_require__(402);

	var React = __webpack_require__(202);

	var Router = __webpack_require__(7);

	var Sessions2 = React.createClass({
	    displayName: 'Sessions2',

	    componentDidMount: function componentDidMount() {
	        _Dispatcher.Actions.getSessions();
	        _Dispatcher.Events.on(_Dispatcher.Events.EV_SESSIONS_UPDATE, this.updateStateWrapper);
	    },
	    componentWillUnmount: function componentWillUnmount() {
	        _Dispatcher.Events.rem(_Dispatcher.Events.EV_SESSIONS_UPDATE, this.updateStateWrapper);
	    },
	    updateStateWrapper: function updateStateWrapper(o) {
	        //console.log('[Sessions2] updateStateWrapper')
	        //console.debug(o)
	        this.setState(o);
	    },

	    getInitialState: function getInitialState() {
	        return {};
	    },

	    onCloseSelected: function onCloseSelected() {
	        //console.log('[Sessions2] onCloseSelected')
	        var k = this.opt.selectionKey;
	        var s = this.opt.bodyData;
	        for (var i = 0; i < s.length; i++) {
	            var o = s[i];
	            if (!o[k]) continue;
	            var sid = o.sid;
	            _api.Api.closeSessionRequest(sid).then(function (res) {});
	            s.splice(i, 1);
	            i--;
	        }
	        this.opt.bodyIns.setState({});
	        this.opt.pagesIns.update(); // пагинатор обновляется при удаленни данных
	        this.onSelectChanged();
	    },

	    onSelectChanged: function onSelectChanged(obj) {
	        this.opt.footerIns.setState({ something_selected: this.isSomethingSelected() });
	    },

	    isSomethingSelected: function isSomethingSelected() {
	        var k = this.opt.selectionKey;
	        var s = this.opt.bodyData;
	        for (var i = 0; i < s.length; i++) {
	            if (s[i][k]) return true;
	        }
	        return false;
	    },

	    render: function render() {
	        //console.log('Sessions2.render')
	        //console.debug(this.state.sessions)

	        if (!this.state.sessions) return React.createElement(
	            'div',
	            null,
	            'Loading....'
	        );

	        this.opt = {
	            // хедер
	            headerClass: _SimpleComponentsSimpleTable2.TblHead,
	            //headerClassName: "panel-heading-grey panel-md border-btm",
	            className: "panel panel-default max-size",
	            headData: [{ id: 'sid', title: 'Сеанс', cellClass: _SimpleComponentsSimpleTable2.TblCellSid }, // TblCellSid - умеет частично скрывать значение
	            { id: 'ip', title: 'IP адрес' }, { id: 'ctime', title: 'Открыт', cellClass: _SimpleComponentsTableCells.TblDateUTCCls }, { id: 'checkbox', title: 'Действия', cellClass: _SimpleComponentsSimpleTable2.TblCellCheckbox } // TblCellCheckbox - чекбокс который делает выбор ряда
	            ],
	            // контент
	            bodyClass: _SimpleComponentsSimpleTable2.TblBody,
	            //bodyData: Store.sessions,
	            bodyData: this.state.sessions,
	            // пагенатор
	            pagesClass: _SimpleComponentsSimpleTable2.TblPages,
	            pagesConf: {
	                availableCapacity: [2, 5, 10],
	                currentCapacity: 5,
	                currentPage: 1
	            },
	            // футер
	            footerClass: _SimpleComponentsSimpleTable2.TblFooterControls,
	            controls: [{ label: 'Закрыть сессию', handler: this.onCloseSelected }],
	            // события
	            onSelectChanged: this.onSelectChanged, // вызывается при изменении выделения, параметр - измененный объект
	            //onCloseSelected: this.onCloseSelected,  // вызывается из футера по клику на "Close"
	            // вспомогательные
	            //title          : 'Сессии',  // заголовок контейнера
	            isSelectable: function isSelectable(obj) {
	                return obj.sid != _api.Api.sid;
	            }, // ф-я проверки возможности выделения объекта
	            selectionKey: 'sKey', // ключ в объекте который будет использован для флага выделения
	            selectable: false, // включает стандартный механизм выбора (кликом по ряду), можно выключить и сделать свой через bodyClass или cellClass
	            multiselect: true };

	        // можно выбирать несколько рядов
	        return React.createElement(
	            'div',
	            { className: 'row' },
	            React.createElement(
	                'div',
	                { className: 'col-xs-12' },
	                React.createElement(_SimpleComponentsSimpleTable2.SimpleTable2, { opt: this.opt })
	            )
	        );
	    }

	});

	exports.Sessions2 = Sessions2;

/***/ },
/* 399 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _SimpleComponentsInputCheckBox2 = __webpack_require__(400);

	var _SimpleComponentsLargePanel = __webpack_require__(401);

	var _SimpleComponentsLoading = __webpack_require__(361);

	var _Dispatcher = __webpack_require__(4);

	var _ClassesLogger = __webpack_require__(3);

	var _api = __webpack_require__(1);

	var _SimpleComponentsInputSelect = __webpack_require__(266);

	var _ControlsIcon = __webpack_require__(232);

	var _ControlsFormsButtonSimple = __webpack_require__(226);

	var React = __webpack_require__(202);

	var TblHead = React.createClass({
	    displayName: 'TblHead',

	    componentWillMount: function componentWillMount() {
	        this.props.opt.headerIns = this;
	    },
	    getInitialState: function getInitialState() {
	        return {};
	    },

	    render: function render() {

	        var result = [],
	            src = this.props.opt.headData,
	            it = -1,
	            end = src.length - 1;

	        function cls() {
	            if (it == 0) return 'table-head table-pl text-left table-prb';
	            if (it == end) return 'table-head table-pr text-left';
	            return 'table-head text-left table-prb';
	        }

	        while (it++ < end) {
	            result.push(React.createElement(
	                'th',
	                { key: it, className: cls() },
	                src[it].title
	            ));
	        }

	        return React.createElement(
	            'thead',
	            null,
	            React.createElement(
	                'tr',
	                null,
	                result
	            )
	        );
	    }

	});

	var TblBody = React.createClass({
	    displayName: 'TblBody',

	    componentWillMount: function componentWillMount() {
	        this.props.opt.bodyIns = this;
	    },
	    getInitialState: function getInitialState() {
	        return {};
	    },

	    isSelectable: function isSelectable(obj) {
	        var f = this.props.opt.isSelectable;
	        return f ? f(obj) : true;
	    },

	    onClick: function onClick(obj) {
	        if (this.isSelectable(obj)) this.props.opt.tableIns.itemChanged(obj);
	    },

	    update: function update() {
	        //console.log('[TblBody] update');
	        this.setState({});
	    },

	    render: function render() {
	        //console.log('[TblBody] render');

	        var rows = [],
	            opt = this.props.opt,
	            head = opt.headData,
	            hIt = -1,
	            hEnd = head.length - 1,
	            src = opt.bodyData,
	            sIt = -1,
	            sEnd = src.length - 1;

	        var p = this.props.opt.pagesConf;
	        if (p) {
	            sIt = p.rowFirst - 2;
	            sEnd = Math.min(sIt + p.currentCapacity, sEnd);
	        }

	        function cls() {
	            if (hIt == 0 && hIt == hEnd) {
	                // один столбец
	                return 'table-pl table-pr';
	            } else if (hIt == 0) {
	                return 'table-pl table-prb';
	            } else if (hIt == hEnd) {
	                return 'table-pr';
	            } else return 'table-prb';
	        }

	        function val(h) {
	            return h ? src[sIt][h.id] : null;
	        }

	        function st() {
	            return opt.selectable && src[sIt][opt.selectionKey] ? { background: '#ff8' } : {};
	        }

	        while (sIt++ < sEnd) {
	            var cells = [];
	            hIt = -1;
	            while (hIt++ < hEnd) {
	                var h = head[hIt];
	                if (h.cellClass) {
	                    // кастомный вариант ячейки
	                    cells.push(React.createElement(
	                        'td',
	                        { className: cls(), key: hIt },
	                        React.createElement(h.cellClass, {
	                            opt: opt,
	                            obj: src[sIt],
	                            head: h,
	                            value: val(h),
	                            cellOpt: h.cellOpt
	                        })
	                    ));
	                } else {
	                    // стандартная ячека
	                    cells.push(React.createElement(
	                        'td',
	                        { className: cls(), key: hIt },
	                        val(h)
	                    ));
	                }
	            }
	            rows.push(React.createElement(
	                'tr',
	                { key: sIt, className: 'text-mid', style: st(),
	                    onClick: opt.selectable ? this.onClick.bind(null, src[sIt]) : null },
	                cells
	            ));
	        }

	        return React.createElement(
	            'tbody',
	            null,
	            rows
	        );
	    }

	});

	var TblCellUsers = (function (_React$Component) {
	    _inherits(TblCellUsers, _React$Component);

	    function TblCellUsers() {
	        _classCallCheck(this, TblCellUsers);

	        _get(Object.getPrototypeOf(TblCellUsers.prototype), 'constructor', this).apply(this, arguments);
	    }

	    _createClass(TblCellUsers, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(
	                'div',
	                { className: '' },
	                this.props.value.data.length
	            );
	        }
	    }]);

	    return TblCellUsers;
	})(React.Component);

	var TblCellTenders = (function (_React$Component2) {
	    _inherits(TblCellTenders, _React$Component2);

	    function TblCellTenders() {
	        _classCallCheck(this, TblCellTenders);

	        _get(Object.getPrototypeOf(TblCellTenders.prototype), 'constructor', this).apply(this, arguments);
	    }

	    _createClass(TblCellTenders, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(
	                'div',
	                null,
	                this.props.value.data.length
	            );
	        }
	    }]);

	    return TblCellTenders;
	})(React.Component);

	var TblCellOwner = (function (_React$Component3) {
	    _inherits(TblCellOwner, _React$Component3);

	    function TblCellOwner() {
	        _classCallCheck(this, TblCellOwner);

	        _get(Object.getPrototypeOf(TblCellOwner.prototype), 'constructor', this).apply(this, arguments);
	    }

	    _createClass(TblCellOwner, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(
	                'div',
	                null,
	                this.props.value.data[0].name
	            );
	        }
	    }]);

	    return TblCellOwner;
	})(React.Component);

	var TblCellSid = React.createClass({
	    displayName: 'TblCellSid',

	    getInitialState: function getInitialState() {
	        return { showFullSid: false };
	    },

	    toggle: function toggle() {
	        this.setState({ showFullSid: !this.state.showFullSid });
	    },

	    render: function render() {
	        var v = this.props.value;
	        var b = this.state.showFullSid;
	        return React.createElement(
	            'p',
	            null,
	            b ? v : 'xxxx' + (v || '').substr(-4),
	            ' ',
	            React.createElement(
	                'p',
	                { className: 'text-card', onClick: this.toggle },
	                b ? 'скрыть' : 'показать'
	            )
	        );
	    }

	});

	var TblCellCheckbox = React.createClass({
	    displayName: 'TblCellCheckbox',

	    getInitialState: function getInitialState() {
	        return {};
	    },

	    isSelectable: function isSelectable(obj) {
	        var f = this.props.opt.isSelectable;
	        return f ? f(obj) : true;
	    },

	    render: function render() {
	        //console.log('[TblCellCheckbox] render ' + JSON.stringify(this.props.obj))
	        var opt = this.props.opt;
	        return React.createElement(_SimpleComponentsInputCheckBox2.InputCheckBox2, {
	            onChanged: opt.tableIns.itemChanged.bind(null, this.props.obj),
	            hidden: !this.isSelectable(this.props.obj),
	            checked: this.props.obj[opt.selectionKey]
	        });
	    }

	});

	var TblFooter1 = React.createClass({
	    displayName: 'TblFooter1',

	    componentWillMount: function componentWillMount() {
	        this.props.opt.footerIns = this;
	    },
	    getInitialState: function getInitialState() {
	        return { something_selected: false };
	    },

	    click: function click() {
	        var f = this.props.opt.onCloseSelected;
	        if (f) f();
	    },

	    render: function render() {
	        return React.createElement(
	            'div',
	            { className: 'box-row-wr table-footer align-center just-end table-pr' },
	            React.createElement(
	                _SimpleComponentsLoading.Loading,
	                { dontShow: true, dataRecived: this.state.something_selected },
	                React.createElement(
	                    'button',
	                    { className: 'button button-unborder button-mini', onClick: this.click },
	                    'close'
	                )
	            )
	        );
	    }

	});

	var TblPages = React.createClass({
	    displayName: 'TblPages',

	    //getInitialState () { return {} },

	    componentWillMount: function componentWillMount() {
	        //console.log('[TblPages] componentWillMount');
	        this.props.opt.pagesIns = this;
	    },

	    componentDidMount: function componentDidMount() {
	        //console.log('[TblPages] componentDidMount');
	        //this.refs['pageCpascitySelector'].getDOMNode().value = this.getPagesCfg().currentCapacity;
	    },

	    //  в случае обновления страницы в пагинатор будут переданы новые свойства,
	    //  применяем их
	    componentWillReceiveProps: function componentWillReceiveProps(props) {
	        //console.log('[TblPages] componentWillReceiveProps');
	        this.update();
	        //this.props.opt.pagesIns = this;
	    },

	    getPagesCfg: function getPagesCfg() {
	        return this.props.opt.pagesConf || {};
	    },

	    pageCapacitySelected: function pageCapacitySelected(e) {
	        //console.log('[TblPages] pageCapacitySelected ' + e.target.value)
	        var c = this.getPagesCfg();
	        c.currentCapacity = parseInt(e.list);
	        this.props.opt.tableIns.recalcMaxPage(c);
	        this.update();
	    },

	    gotoPrev: function gotoPrev(e) {
	        //console.log('[TblPages] gotoPrev')
	        var c = this.getPagesCfg();
	        if (c.currentPage <= 1) return;
	        c.currentPage--;
	        this.update();
	    },

	    gotoNext: function gotoNext(e) {
	        //console.log('[TblPages] gotoNext')
	        var c = this.getPagesCfg();
	        if (c.currentPage >= c.maxPage) return;
	        c.currentPage++;
	        this.update();
	    },

	    update: function update() {
	        //console.log('[TblPages] update')
	        this.props.opt.tableIns.recalcMaxPage(this.getPagesCfg());
	        this.props.opt.tableIns.recalcRowBound(this.getPagesCfg());
	        this.setState({});
	        this.pagesChanged();

	        // bodyIns может не успеть прописаться в opt
	        var b = this.props.opt.bodyIns;
	        if (b) b.update();
	    },

	    pagesChanged: function pagesChanged() {
	        //console.log('[TblPages] pagesChanged')
	        var f = this.props.opt.pagesConf.onChanged;
	        if (f) f(this);
	    },

	    render: function render() {

	        var c = this.getPagesCfg();

	        // console.log('[TblPages] render')
	        // console.debug(c);

	        if (c && c.maxPage <= 1) return null;

	        var capsVaiants = c.availableCapacity || [];
	        var capsElements = capsVaiants.map(function (o, i) {
	            return React.createElement(
	                'option',
	                { key: i },
	                o
	            );
	        });
	        return React.createElement(
	            'div',
	            { className: 'table-box__footer table-box-footer row row-no-padding' },
	            React.createElement(
	                'div',
	                { className: 'col-xs-6 table-box-footer__display' },
	                React.createElement(
	                    'div',
	                    { className: 'pagin-pls footer-style' },
	                    'Отображать по:  '
	                ),
	                React.createElement(_SimpleComponentsInputSelect.InputSelect, {
	                    name: 'list',
	                    selectedItem: this.getPagesCfg().currentCapacity,
	                    listItems: c.availableCapacity,
	                    getValue: this.pageCapacitySelected
	                })
	            ),
	            React.createElement(
	                'div',
	                { className: 'col-xs-6 text-right table-box-footer_number' },
	                React.createElement(
	                    'div',
	                    { className: 'pagin-plb' },
	                    React.createElement(
	                        'p',
	                        { className: 'footer-style' },
	                        c.rowFirst,
	                        '-',
	                        c.rowLast,
	                        ' из ',
	                        c.rowsTotal
	                    )
	                ),
	                c.rowFirst <= 1 ? null : React.createElement(_ControlsIcon.Icon, { onClick: this.gotoPrev, name: 'arrow-left' }),
	                c.rowLast >= c.rowsTotal ? null : React.createElement(_ControlsIcon.Icon, { onClick: this.gotoNext, name: 'arrow-right' })
	            )
	        );
	    }

	});

	var TblFooterControls = React.createClass({
	    displayName: 'TblFooterControls',

	    componentWillMount: function componentWillMount() {
	        this.props.opt.footerIns = this;
	    },
	    getInitialState: function getInitialState() {
	        return { something_selected: false };
	    },

	    click: function click() {
	        var f = this.props.opt.onCloseSelected;
	        if (f) f();
	    },

	    render: function render() {
	        var btns = [];
	        this.props.opt.controls.map(function (o, key) {
	            btns.push(React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { key: key, onClick: o.handler, caption: o.label }));
	        });
	        return React.createElement(
	            'div',
	            { className: 'box-row-wr table-footer align-center just-end table-pr' },
	            React.createElement(
	                _SimpleComponentsLoading.Loading,
	                { dontShow: true, dataRecived: this.state.something_selected },
	                btns
	            )
	        );
	    }

	});

	var SimpleTable2 = React.createClass({
	    displayName: 'SimpleTable2',

	    // xxxClass - класс
	    // xxxData - данные
	    // xxxIns - экземпляр

	    componentWillMount: function componentWillMount() {
	        //console.log('SimpleTable2.componentWillMount')
	        this.prepareOpt(this.props.opt);
	    },
	    componentWillUpdate: function componentWillUpdate(nextProps, nextState) {
	        //console.log('SimpleTable2.componentWillUpdate')
	        this.prepareOpt(nextProps.opt);
	    },
	    getInitialState: function getInitialState() {
	        return {};
	    },

	    prepareOpt: function prepareOpt(opt) {
	        opt.tableIns = this;

	        // пагинация
	        var c = opt.pagesConf || {};
	        if (!opt.pagesConf) opt.pagesConf = c;
	        c.availableCapacity = c.availableCapacity && c.availableCapacity.length > 0 ? c.availableCapacity : [1000, 100, 10];
	        c.currentCapacity = Math.max(1, c.currentCapacity && c.currentCapacity > 0 ? c.currentCapacity : c.availableCapacity[0] || 1000);
	        this.recalcMaxPage(c);
	        this.recalcRowBound(c);
	        //console.log('prepared pagesConf:')
	        //console.debug(c)

	        // элементы
	        opt.headerEl = opt.headerClass ? React.createElement(opt.headerClass, { opt: opt }) : null;
	        opt.bodyEl = opt.bodyClass ? React.createElement(opt.bodyClass, { opt: opt }) : null;
	        opt.pagesEl = opt.pagesClass ? React.createElement(opt.pagesClass, { opt: opt }) : null;
	        opt.footerEl = opt.footerClass ? React.createElement(opt.footerClass, { opt: opt }) : null;
	        if (!opt.selectionKey) opt.selectionKey = '__default_selection_key__';
	    },

	    recalcMaxPage: function recalcMaxPage(c) {
	        c.maxPage = c.currentCapacity > 0 ? Math.max(1, Math.ceil((this.props.opt.bodyData || []).length / c.currentCapacity)) : 1;
	        c.currentPage = Math.max(0, Math.min(c.maxPage, c.currentPage || 1));
	    },

	    recalcRowBound: function recalcRowBound(c) {
	        //console.log('[SimpleTable2] recalcRowBound')
	        c.rowsTotal = (this.props.opt.bodyData || []).length;
	        c.rowFirst = (c.currentPage - 1) * c.currentCapacity + 1;
	        c.rowLast = Math.min(c.rowFirst + c.currentCapacity - 1, c.rowsTotal);
	        //console.debug(c)
	    },

	    itemChanged: function itemChanged(obj) {
	        var opt = this.props.opt;
	        if (!opt.multiselect && opt.bodyData) {
	            // мультиселект запрeщен, отключаем предыдущее выделение
	            opt.bodyData.forEach(function (o) {
	                if (o[opt.selectionKey]) o[opt.selectionKey] = null;
	            });
	        }
	        var k = opt.selectionKey;
	        obj[k] = obj[k] ? null : 'V';
	        var f = opt.onSelectChanged;
	        if (f) f(obj);
	        opt.bodyIns.setState({});
	    },

	    // вернет список объектов, которые показаны (ограничены пагенацией)
	    getVisibleObjectsList: function getVisibleObjectsList() {
	        var opt = this.props.opt;
	        var c = opt.pagesConf;
	        if (!c) return [];
	        var l = [];
	        for (var i = c.rowFirst; i <= c.rowLast; i++) {
	            l.push(opt.bodyData[i - 1]);
	        }return l;
	    },

	    // <LargePanel headerClassName={opt.headerClassName|| null} disabled={this.props.disabled} className={opt.className || null} headerName={opt.title || null}>
	    //     <table className="table">
	    //         {opt.headerEl}
	    //         {opt.bodyEl}
	    //     </table>
	    //     {opt.pagesEl}
	    //     {opt.footerEl}
	    // </LargePanel>

	    render: function render() {
	        var opt = this.props.opt;
	        return React.createElement(
	            'div',
	            { className: 'table-box' },
	            opt.title ? React.createElement(
	                'h3',
	                { className: 'table-box__title' },
	                opt.title
	            ) : null,
	            React.createElement(
	                'table',
	                { className: 'table' },
	                opt.headerEl,
	                opt.bodyEl
	            ),
	            opt.pagesEl,
	            opt.footerEl
	        );
	    }

	});

	exports.SimpleTable2 = SimpleTable2;
	exports.TblHead = TblHead;
	exports.TblBody = TblBody;
	exports.TblCellSid = TblCellSid;
	exports.TblCellUsers = TblCellUsers;
	exports.TblCellTenders = TblCellTenders;
	exports.TblCellOwner = TblCellOwner;
	exports.TblCellCheckbox = TblCellCheckbox;
	exports.TblFooter1 = TblFooter1;
	exports.TblPages = TblPages;
	exports.TblFooterControls = TblFooterControls;

/***/ },
/* 400 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var React = __webpack_require__(202);

	var InputCheckBox2 = React.createClass({
	    displayName: "InputCheckBox2",

	    getInitialState: function getInitialState() {
	        return {
	            checked: this.props.checked
	        };
	    },

	    changeHr: function changeHr() {
	        this.setState({ checked: !this.state.checked });
	        var f = this.props.onChanged;
	        var iName = this.props.inputName;
	        var v = {};
	        if (iName) v[iName] = !this.state.checked;
	        f ? f(v) : null;
	    },

	    render: function render() {
	        //console.log('[InputCheckBox2] render ' + JSON.stringify(this.props))
	        return React.createElement("input", {
	            type: "checkbox",
	            hidden: this.props.hidden,
	            checked: this.state.checked,
	            className: "check-box",
	            onChange: this.changeHr
	        });
	    }

	});
	exports.InputCheckBox2 = InputCheckBox2;

/***/ },
/* 401 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var React = __webpack_require__(202);
	var LargePanel = React.createClass({
	    displayName: "LargePanel",

	    render: function render() {

	        var Header = React.createElement(
	            "div",
	            { className: this.props.headerClassName || "panel-heading panel-md" },
	            React.createElement(
	                "h3",
	                { className: "font-title" },
	                this.props.headerName
	            )
	        );

	        if (this.props.disabled) {
	            return null;
	        }
	        return React.createElement(
	            "div",
	            { className: this.props.className || "panel panel-default col-lg" },
	            this.props.headerName ? Header : null,
	            this.props.children
	        );
	    }
	});
	exports.LargePanel = LargePanel;

/***/ },
/* 402 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _SimpleComponentsDateSimple = __webpack_require__(403);

	var _utils = __webpack_require__(2);

	var _Dispatcher = __webpack_require__(4);

	var _TransparentButton = __webpack_require__(264);

	var _SimpleComponentsIcons = __webpack_require__(252);

	var _Hint = __webpack_require__(363);

	var _Hint2 = _interopRequireDefault(_Hint);

	var _AuthDashboard = __webpack_require__(247);

	var _ClassesLogger = __webpack_require__(3);

	var React = __webpack_require__(202);

	var TblCellActions = (function (_React$Component) {
	    _inherits(TblCellActions, _React$Component);

	    function TblCellActions() {
	        var _this = this;

	        _classCallCheck(this, TblCellActions);

	        _get(Object.getPrototypeOf(TblCellActions.prototype), 'constructor', this).apply(this, arguments);

	        this.onClick = function () {
	            console.log("delete");
	            // !!!! тут передается не тот параметр для удаления, и оно не удаляется
	            _AuthDashboard.AppState.myCompany.deleteLink({ relation_id: _this.props.value }, _this.props.opt.linkType);
	        };

	        this.sendMsg = function () {
	            console.log(_this.props);
	        };

	        this.render = function () {
	            return React.createElement(
	                'div',
	                { className: 'box-row-nw' },
	                React.createElement(
	                    'div',
	                    { 'data-tooltip': 'Удалить из связей' },
	                    React.createElement(
	                        'div',
	                        { className: 'pagin-pls', onClick: _this.onClick, 'data-name': 'close' },
	                        React.createElement(_SimpleComponentsIcons.Icon, { iconName: 'close-circle-icon', dataName: 'close', size: 20 })
	                    )
	                )
	            );
	        };
	    }

	    return TblCellActions;
	})(React.Component);

	exports.TblCellActions = TblCellActions;

	var TblLinkCls = (function (_React$Component2) {
	    _inherits(TblLinkCls, _React$Component2);

	    function TblLinkCls() {
	        _classCallCheck(this, TblLinkCls);

	        _get(Object.getPrototypeOf(TblLinkCls.prototype), 'constructor', this).apply(this, arguments);
	    }

	    _createClass(TblLinkCls, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(
	                'a',
	                { target: '_blank', href: this.props.value },
	                React.createElement(
	                    'p',
	                    null,
	                    'Ссылка'
	                )
	            );
	        }
	    }], [{
	        key: 'propTypes',
	        value: {
	            value: React.PropTypes.string
	        },
	        enumerable: true
	    }]);

	    return TblLinkCls;
	})(React.Component);

	exports.TblLinkCls = TblLinkCls;

	var TblActionsCls = (function (_React$Component3) {
	    _inherits(TblActionsCls, _React$Component3);

	    function TblActionsCls() {
	        _classCallCheck(this, TblActionsCls);

	        _get(Object.getPrototypeOf(TblActionsCls.prototype), 'constructor', this).apply(this, arguments);
	    }

	    _createClass(TblActionsCls, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(
	                'div',
	                null,
	                React.createElement(
	                    'button',
	                    null,
	                    'В избранное'
	                ),
	                React.createElement(
	                    'button',
	                    null,
	                    'Запрос на участие'
	                )
	            );
	        }
	    }], [{
	        key: 'propTypes',
	        value: {
	            value: React.PropTypes.any
	        },
	        enumerable: true
	    }]);

	    return TblActionsCls;
	})(React.Component);

	exports.TblActionsCls = TblActionsCls;

	var TblOwnerCls = (function (_React$Component4) {
	    _inherits(TblOwnerCls, _React$Component4);

	    function TblOwnerCls() {
	        _classCallCheck(this, TblOwnerCls);

	        _get(Object.getPrototypeOf(TblOwnerCls.prototype), 'constructor', this).apply(this, arguments);
	    }

	    _createClass(TblOwnerCls, [{
	        key: 'render',
	        value: function render() {
	            var value = this.props.value.data[0].name;
	            return React.createElement(
	                'div',
	                null,
	                React.createElement(
	                    'p',
	                    null,
	                    value
	                )
	            );
	        }
	    }], [{
	        key: 'propTypes',
	        value: {
	            value: React.PropTypes.object
	        },
	        enumerable: true
	    }]);

	    return TblOwnerCls;
	})(React.Component);

	exports.TblOwnerCls = TblOwnerCls;

	var TblDateTimeCls = (function (_React$Component5) {
	    _inherits(TblDateTimeCls, _React$Component5);

	    function TblDateTimeCls() {
	        _classCallCheck(this, TblDateTimeCls);

	        _get(Object.getPrototypeOf(TblDateTimeCls.prototype), 'constructor', this).apply(this, arguments);
	    }

	    _createClass(TblDateTimeCls, [{
	        key: 'render',
	        value: function render() {
	            var value = this.props.value;
	            if (value) {
	                var newDate = new _utils.DateTime(value);
	                var date = newDate.getFullMonthDate();
	                var time = newDate.getTime();
	            }
	            return React.createElement(
	                'div',
	                null,
	                React.createElement(
	                    'p',
	                    null,
	                    date
	                ),
	                React.createElement(
	                    'p',
	                    null,
	                    time
	                )
	            );
	        }
	    }], [{
	        key: 'propTypes',
	        value: {
	            value: React.PropTypes.any
	        },
	        enumerable: true
	    }]);

	    return TblDateTimeCls;
	})(React.Component);

	exports.TblDateTimeCls = TblDateTimeCls;

	var TblDateCls = (function (_React$Component6) {
	    _inherits(TblDateCls, _React$Component6);

	    function TblDateCls() {
	        _classCallCheck(this, TblDateCls);

	        _get(Object.getPrototypeOf(TblDateCls.prototype), 'constructor', this).apply(this, arguments);
	    }

	    _createClass(TblDateCls, [{
	        key: 'render',
	        value: function render() {
	            var value = this.props.value;
	            if (value) {
	                var newDate = new _utils.DateTime(value);
	                value = newDate.getDate();
	            }
	            return React.createElement(
	                'p',
	                null,
	                value
	            );
	        }
	    }], [{
	        key: 'propTypes',
	        value: {
	            value: React.PropTypes.any
	        },
	        enumerable: true
	    }]);

	    return TblDateCls;
	})(React.Component);

	exports.TblDateCls = TblDateCls;

	var TblDateUTCCls = (function (_React$Component7) {
	    _inherits(TblDateUTCCls, _React$Component7);

	    function TblDateUTCCls() {
	        _classCallCheck(this, TblDateUTCCls);

	        _get(Object.getPrototypeOf(TblDateUTCCls.prototype), 'constructor', this).apply(this, arguments);
	    }

	    _createClass(TblDateUTCCls, [{
	        key: 'render',
	        value: function render() {
	            var value = parseInt(this.props.value);
	            if (value) {
	                var d = new Date(value * 1000);
	                var options = { year: 'numeric', month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit' };
	                value = d.toLocaleString('ru-RU', options);
	            }
	            return React.createElement(
	                'p',
	                null,
	                value
	            );
	        }
	    }], [{
	        key: 'propTypes',
	        value: {
	            value: React.PropTypes.any
	        },
	        enumerable: true
	    }]);

	    return TblDateUTCCls;
	})(React.Component);

	exports.TblDateUTCCls = TblDateUTCCls;

	var TblCellPartnerName = (function (_React$Component8) {
	    _inherits(TblCellPartnerName, _React$Component8);

	    function TblCellPartnerName() {
	        var _this2 = this;

	        _classCallCheck(this, TblCellPartnerName);

	        _get(Object.getPrototypeOf(TblCellPartnerName.prototype), 'constructor', this).apply(this, arguments);

	        this.render = function () {
	            console.log("partner");
	            console.log(_this2.props);
	            /*
	            var name = this.props.value.data[0].name;
	            var inn = this.props.value.data[0].inn;
	            var kpp = this.props.value.data[0].kpp;
	            var addr = this.props.value.data[0].addr;
	            */
	            var link = '#/dashboard/comp/info?id=' + _this2.props.value.data[0].id;
	            return React.createElement(
	                'div',
	                null,
	                React.createElement(
	                    'a',
	                    { className: 'text-under', target: '_blank', href: link },
	                    _this2.props.value.data[0].name
	                )
	            );
	        };
	    }

	    return TblCellPartnerName;
	})(React.Component);

	exports.TblCellPartnerName = TblCellPartnerName;

	var TblCellPartnerInn = (function (_React$Component9) {
	    _inherits(TblCellPartnerInn, _React$Component9);

	    function TblCellPartnerInn() {
	        var _this3 = this;

	        _classCallCheck(this, TblCellPartnerInn);

	        _get(Object.getPrototypeOf(TblCellPartnerInn.prototype), 'constructor', this).apply(this, arguments);

	        this.render = function () {
	            return React.createElement(
	                'div',
	                null,
	                _this3.props.value.data[0].inn
	            );
	        };
	    }

	    return TblCellPartnerInn;
	})(React.Component);

	exports.TblCellPartnerInn = TblCellPartnerInn;

	var TblCellPartnerAti = (function (_React$Component10) {
	    _inherits(TblCellPartnerAti, _React$Component10);

	    function TblCellPartnerAti() {
	        var _this4 = this;

	        _classCallCheck(this, TblCellPartnerAti);

	        _get(Object.getPrototypeOf(TblCellPartnerAti.prototype), 'constructor', this).apply(this, arguments);

	        this.render = function () {
	            return React.createElement(
	                'div',
	                null,
	                _this4.props.value.data[0].ati_code
	            );
	        };
	    }

	    return TblCellPartnerAti;
	})(React.Component);

	exports.TblCellPartnerAti = TblCellPartnerAti;

	var TblCellPartnerPhone = (function (_React$Component11) {
	    _inherits(TblCellPartnerPhone, _React$Component11);

	    function TblCellPartnerPhone() {
	        var _this5 = this;

	        _classCallCheck(this, TblCellPartnerPhone);

	        _get(Object.getPrototypeOf(TblCellPartnerPhone.prototype), 'constructor', this).apply(this, arguments);

	        this.render = function () {
	            //console.log(this.props.value.data[0]);
	            return React.createElement(
	                'div',
	                null,
	                _this5.props.value.data[0].phone || "не указан"
	            );
	        };
	    }

	    return TblCellPartnerPhone;
	})(React.Component);

	exports.TblCellPartnerPhone = TblCellPartnerPhone;

	// <div data-tooltip="Отправить сообщение в канал компании">
	//     <div className="pagin-pls" data-name="mail" onClick={this.sendMsg} >
	//         <Icon iconName="mail-icon" dataName="mail" size={20} />
	//     </div>
	// </div>

/***/ },
/* 403 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _SimpleComponentsIcons = __webpack_require__(252);

	var _Dispatcher = __webpack_require__(4);

	var _SimpleComponentsInputSelect = __webpack_require__(266);

	var _SimpleComponentsInputSelect2 = __webpack_require__(267);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	var _utils = __webpack_require__(2);

	var React = __webpack_require__(202);

	var DateSimple = React.createClass({
	    displayName: 'DateSimple',

	    propTypes: {
	        value: React.PropTypes.string,
	        caption: React.PropTypes.string,
	        onChange: React.PropTypes.func.isRequired,
	        name: React.PropTypes.string,
	        active: React.PropTypes.bool,
	        labelClass: React.PropTypes.string,
	        labelWidth: React.PropTypes.number
	    },

	    getDefaultProps: function getDefaultProps() {
	        return {
	            name: "Date",
	            active: true,
	            labelWidth: 114
	        };
	    },

	    getInitialState: function getInitialState() {
	        if (this.props.value) {
	            return _utils.Utils.extract_ymd_from_date(this.props.value);
	        } else return {
	            day: null,
	            month: null,
	            year: null
	        };
	    },

	    /*
	     updateState(newState){
	     this.setState(newState);
	     var name=this.props.name;
	     var newObj={};
	     var day=newState.day||this.state.day;
	     var month=newState.month||this.state.month;
	     var year=newState.year||this.state.year;
	     newObj[name]=year+'-'+month+'-'+day;
	     this.props.onChange(newObj);
	     },
	     */

	    dayChanged: function dayChanged(caller) {
	        this.dateChanged(this.dateObj.year, this.dateObj.month, caller.getSelectedList()[0].value);
	    },

	    monthChanged: function monthChanged(caller) {
	        this.dateChanged(this.dateObj.year, caller.getSelectedList()[0].value, this.dateObj.day);
	    },

	    yearChanged: function yearChanged(caller) {
	        this.dateChanged(caller.getSelectedList()[0].value, this.dateObj.month, this.dateObj.day);
	    },

	    dateChanged: function dateChanged(y, m, d) {
	        //console.log('[DateSimple] dateChanged ymd=' + y + ',' + m + ',' + d)
	        var o = {};
	        o[this.props.name] = [y, m, d].join('-');
	        this.props.onChange(o);
	    },

	    render: function render() {
	        //console.log('[DateSimple] render')
	        //console.log(this.state)
	        //console.log(' this.props.value=' + this.props.value)

	        // датапровайдеры для селекторов
	        var days = [{ id: -1, value: 'число' }],
	            months = [{ id: -1, value: 'месяц' }],
	            years = [{ id: -1, value: 'год' }];

	        // парсим входящую дату
	        if (this.props.value) {
	            this.dateObj = _utils.Utils.extract_ymd_from_date(this.props.value);
	        } else {
	            // дата не указана - показываем тектовые поля
	            this.dateObj = { year: years[0].value, month: months[0].value, day: days[0].value };
	        }

	        //console.debug(this.dateObj)

	        // заполняем данные для селеторов
	        function zerofill(src, len) {
	            while (src.length < len) src = '0' + src;
	            return src;
	        }

	        // ограничиваем выбор года 3 годами назад и 2 вперед
	        var d = new Date();
	        var startYear = d.getFullYear() - 3;
	        var endYear = d.getFullYear() + 2;

	        var i = undefined;
	        for (i = 1; i <= 31; i++) days.push({ id: i, value: zerofill(String(i), 2) });
	        for (i = 1; i <= 12; i++) months.push({ id: i, value: zerofill(String(i), 2) });
	        for (i = startYear; i <= endYear; i++) years.push({ id: i, value: zerofill(String(i), 4) });

	        // добавляем в данные селекторов недостающие данные (которые могут быть получены извне (в нашем случае this.props.value))
	        if (!find_key_value(days, 'value', this.dateObj.day)) days.splice(1, 0, { id: -2, value: this.dateObj.day });
	        if (!find_key_value(months, 'value', this.dateObj.month)) months.splice(1, 0, {
	            id: -2,
	            value: this.dateObj.month
	        });
	        if (!find_key_value(years, 'value', this.dateObj.year)) years.splice(1, 0, { id: -2, value: this.dateObj.year });

	        // выделяем выбранные данные
	        function set_selected_by_value(src, val) {
	            var o = find_key_value(src, 'value', val);
	            if (o) o.__selected__ = true;
	        }

	        set_selected_by_value(days, this.dateObj.day);
	        set_selected_by_value(months, this.dateObj.month);
	        set_selected_by_value(years, this.dateObj.year);

	        // выделяем выбранные данные по умлочанияю (если они не выбрались в предыдущем шаге)
	        function find_key_value(src, key, val) {
	            for (var _i = 0; _i < src.length; _i++) {
	                if (src[_i][key] === val) return src[_i];
	            }
	            return null;
	        }

	        if (!find_key_value(days, '__selected__', true)) days[0].__selected__ = true;
	        if (!find_key_value(months, '__selected__', true)) months[0].__selected__ = true;
	        if (!find_key_value(years, '__selected__', true)) years[0].__selected__ = true;

	        return React.createElement(
	            'div',
	            null,
	            React.createElement(
	                _SimpleComponentsFlexBox.FlexBox,
	                { alignItems: 'center' },
	                React.createElement(
	                    'label',
	                    { style: { flex: "0 0 " + this.props.labelWidth + "px" },
	                        className: "label table-prb " + this.props.labelClass },
	                    this.props.caption
	                ),
	                React.createElement(_SimpleComponentsInputSelect2.InputSelect2, { active: this.props.active, noIcon: true, list: days, onChanged: this.dayChanged }),
	                React.createElement('span', null),
	                React.createElement(_SimpleComponentsInputSelect2.InputSelect2, { active: this.props.active, noIcon: true, list: months, onChanged: this.monthChanged }),
	                React.createElement('span', null),
	                React.createElement(_SimpleComponentsInputSelect2.InputSelect2, { active: this.props.active, noIcon: true, list: years, onChanged: this.yearChanged }),
	                React.createElement(_SimpleComponentsIcons.Icon, { iconName: 'event' })
	            )
	        );
	    }
	});

	exports.DateSimple = DateSimple;

/***/ },
/* 404 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	var _SimpleComponentsTransparentButton = __webpack_require__(264);

	var _ControlsNavTabs = __webpack_require__(405);

	var React = __webpack_require__(202);
	var Router = __webpack_require__(7);
	var RouteHandler = Router.RouteHandler;

	var Profile = React.createClass({
	    displayName: 'Profile',

	    componentWillReceiveProps: function componentWillReceiveProps() {
	        this.forceUpdate();
	    },

	    render: function render() {
	        var tabs = [{ name: "Настройки приватности" }, { name: "Аккаунты", href: "/accounts", hash: "accounts" }, { name: "Открытые сессии", href: "/sessions", hash: "sessions" }];

	        return React.createElement(
	            'div',
	            { className: 'panel' },
	            React.createElement(
	                'div',
	                { className: 'panel__header' },
	                React.createElement(
	                    'h1',
	                    { className: 'panel__title' },
	                    'Профиль'
	                )
	            ),
	            React.createElement(
	                'div',
	                { className: 'panel__nav-tabs' },
	                React.createElement(_ControlsNavTabs.NavTabs, { baseHref: '#/dashboard/profile', data: tabs })
	            ),
	            React.createElement(
	                'div',
	                { className: 'panel__body' },
	                React.createElement(RouteHandler, { user: this.props.user, company: this.props.company })
	            )
	        );
	    }
	});

	exports.Profile = Profile;

/***/ },
/* 405 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(202);

	var NavTabs = (function (_React$Component) {
		_inherits(NavTabs, _React$Component);

		function NavTabs(props) {
			var _this = this;

			_classCallCheck(this, NavTabs);

			_get(Object.getPrototypeOf(NavTabs.prototype), 'constructor', this).call(this, props);

			this.render = function () {
				var hash = location.hash.split('/')[_this.props.nHash],
				    tabs = _this.props.data.map(function (tab, i) {
					var state = !tab.onClick ? tab.state == 'active' && !hash || hash == tab.hash ? 'active' : null : null,
					    count = tab.count ? React.createElement(
						'span',
						{ className: tab.countType ? 'badge badge-' + tab.countType : 'badge badge-primary' },
						tab.count
					) : null,
					    href = tab.href ? _this.props.baseHref + tab.href : _this.props.baseHref;

					return React.createElement(
						'li',
						{ className: 'nav-tabs__item', 'data-state': state, key: i },
						React.createElement(
							'a',
							{ href: href, onClick: tab.onClick },
							tab.name,
							' ',
							count
						)
					);
				});
				return React.createElement(
					'ul',
					{ className: _this.props.className },
					tabs
				);
			};
		}

		_createClass(NavTabs, null, [{
			key: 'propTypes',
			value: {
				baseHref: React.PropTypes.string.isRequired,
				data: React.PropTypes.array.isRequired,
				nHash: React.PropTypes.number,
				className: React.PropTypes.string
			},
			enumerable: true
		}, {
			key: 'defaultProps',
			value: {
				className: "nav-tabs",
				nHash: 3
			},
			enumerable: true
		}]);

		return NavTabs;
	})(React.Component);

	exports.NavTabs = NavTabs;

/***/ },
/* 406 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	//import {Dispatcher} from './Dispatcher';

	var _api = __webpack_require__(1);

	var _utils = __webpack_require__(2);

	var _Validation = __webpack_require__(223);

	var _SimpleComponentsLoading = __webpack_require__(361);

	var _Dispatcher = __webpack_require__(4);

	var _SimpleComponentsSmallPanel = __webpack_require__(407);

	var _SimpleComponentsInputText = __webpack_require__(408);

	var _SimpleComponentsTransparentButton = __webpack_require__(264);

	var React = __webpack_require__(202);

	var JoinCompany = React.createClass({
	    displayName: 'JoinCompany',

	    сomponentWillUnmount: function omponentWillUnmount() {
	        _Dispatcher.Events.rem(_Dispatcher.Events.EV_COMP_DETAILS, this.updateStateWrapper);
	        _Dispatcher.Events.rem(_Dispatcher.Events.EV_PROFILE_UPDATE, this.updateStateWrapper);
	    },
	    updateStateWrapper: function updateStateWrapper(newState) {
	        this.setState(newState);
	    },

	    getInitialState: function getInitialState() {
	        return {
	            inn: '',
	            company: null,
	            profile: _Dispatcher.Store.userState,
	            message: '',
	            sent: false
	        };
	    },
	    returnValue: function returnValue(value) {
	        this.setState(value);
	    },

	    findCompany: function findCompany() {
	        var _this = this;

	        var isThisYourCompany = _Dispatcher.Store.companies.some(function (company) {
	            return company.inn === _this.state.inn;
	        });
	        if (isThisYourCompany) {
	            console.log("Это уже ваша компания");
	        } else {
	            _Dispatcher.Actions.getCompanyByInn(this.state.inn);
	        }
	    },
	    back: function back() {
	        window.location.hash = '/dashboard/select';
	    },
	    goDashboard: function goDashboard() {
	        window.location.hash = '/dashboard';
	    },
	    sendJoinRequest: function sendJoinRequest() {
	        console.log("отправить запрос " + this.props.query.name);
	        _Dispatcher.Actions.joinRequestCreate(this.props.query.id);
	        //this.setState({sent:true})
	        window.location.hash = '/dashboard/select';
	    },
	    render: function render() {
	        console.log(this.props.query);
	        return React.createElement(
	            'div',
	            { className: 'box-row-wr max-size align-start' },
	            React.createElement(
	                _SimpleComponentsSmallPanel.SmallPanel,
	                { disabled: this.state.sent, headerName: 'Найдена компания' },
	                React.createElement(
	                    'div',
	                    { className: 'box-cln-nw align-stretch panel-md' },
	                    React.createElement(_SimpleComponentsInputText.InputText, { type: 'search', active: false, validation: { typing: _Validation.Validation.typingInt },
	                        inputName: 'inn', caption: 'ИНН', value: this.props.query.inn,
	                        returnValue: this.returnValue }),
	                    React.createElement(_SimpleComponentsInputText.InputText, { type: 'search', active: false, inputName: 'name', caption: 'Название',
	                        value: this.props.query.name, returnValue: this.returnValue }),
	                    React.createElement(_SimpleComponentsInputText.InputText, { type: 'search', active: false, inputName: 'address', caption: 'Адрес',
	                        value: this.props.query.address, returnValue: this.returnValue })
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'box-row-nw just-end table-footer table-pr' },
	                    React.createElement(_SimpleComponentsTransparentButton.TransparentButton, { caption: 'Отправить запрос', onClick: this.sendJoinRequest }),
	                    React.createElement(_SimpleComponentsTransparentButton.TransparentButton, { caption: 'Назад', onClick: this.back })
	                )
	            ),
	            React.createElement(
	                _SimpleComponentsSmallPanel.SmallPanel,
	                { disabled: !this.state.sent, headerName: 'Запрос отправлен' },
	                React.createElement(_SimpleComponentsTransparentButton.TransparentButton, { caption: 'Вернуться на рабочий стол', onClick: this.goDashboard })
	            )
	        );
	    }

	});

	exports.JoinCompany = JoinCompany;

/***/ },
/* 407 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _stylesThemeController = __webpack_require__(249);

	var _utils = __webpack_require__(2);

	var React = __webpack_require__(202);

	var SmallPanel = (function (_React$Component) {
	    _inherits(SmallPanel, _React$Component);

	    function SmallPanel() {
	        var _this = this;

	        _classCallCheck(this, SmallPanel);

	        _get(Object.getPrototypeOf(SmallPanel.prototype), 'constructor', this).apply(this, arguments);

	        this.render = function () {
	            //console.log('[SmallPanel] render');
	            var styles = {
	                smallPanel: {
	                    WebkitBorderRadius: _this.props.styleVariables.borderRadius,
	                    borderRadius: _this.props.styleVariables.borderRadius,
	                    WebkitBoxShadow: _this.props.styleVariables.boxShadow,
	                    boxShadow: _this.props.styleVariables.boxShadow,
	                    marginBottom: "10px",
	                    backgroundColor: _this.props.styleVariables.backgroundColor,
	                    color: _this.props.styleVariables.color
	                },
	                smallPanelHeader: {
	                    backgroundColor: _this.props.styleVariables.header.backgroundColor,
	                    color: _this.props.styleVariables.header.color,
	                    padding: "16px 24px 16px 24px",
	                    borderBottom: _this.props.styleVariables.header.borderBottom
	                },
	                smallPanelHeaderText: {
	                    fontSize: "20px",
	                    fontWeight: "400"
	                }
	            };

	            if (_this.props.styles) styles = _utils.Utils.merge(styles, _this.props.styles);

	            var Header = function Header() {
	                if (_this.props.headerClass) {
	                    return React.createElement(_this.props.headerClass, null);
	                } else if (_this.props.headerName) {
	                    return React.createElement(
	                        'div',
	                        { style: styles.smallPanelHeader },
	                        React.createElement(
	                            'h3',
	                            { style: styles.smallPanelHeaderText },
	                            _this.props.headerName
	                        )
	                    );
	                } else return null;
	            };
	            if (_this.props.disabled) {
	                return null;
	            } else {
	                return React.createElement(
	                    'div',
	                    { style: styles.smallPanel },
	                    Header(),
	                    _this.props.children
	                );
	            }
	        };
	    }

	    _createClass(SmallPanel, null, [{
	        key: 'propTypes',
	        value: {
	            headerName: React.PropTypes.string,
	            disabled: React.PropTypes.bool,
	            styles: React.PropTypes.object
	        },
	        enumerable: true
	    }, {
	        key: 'defaultProps',
	        value: {
	            styleVariables: _stylesThemeController.ThemeController.SmallPanel.SmallPanel,
	            disabled: false

	        },
	        enumerable: true
	    }]);

	    return SmallPanel;
	})(React.Component);

	exports.SmallPanel = SmallPanel;

/***/ },
/* 408 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _api = __webpack_require__(1);

	var _utils = __webpack_require__(2);

	var React = __webpack_require__(202);

	var InputText = React.createClass({
	    displayName: 'InputText',

	    propTypes: {
	        labelWidth: React.PropTypes.number,
	        value: React.PropTypes.string
	    },

	    getDefaultProps: function getDefaultProps() {
	        return {
	            labelWidth: 114
	        };
	    },

	    componentWillUnmount: function componentWillUnmount() {},
	    getInitialState: function getInitialState() {
	        return {
	            value: this.props.value,
	            labelClass: ""
	        };
	    },
	    focus: function focus() {
	        this.setState({ labelClass: "label-active" });
	    },
	    blur: function blur() {
	        this.setState({ labelClass: "" });
	    },

	    keypress: function keypress(e) {
	        // перехват иобработка события ввода символа
	        //console.log('[InputText] keypress')

	        // проверка ограничения максимальной длины
	        if (this.props.maxLength && e.target.value.length + 1 > this.props.maxLength) {
	            e.returnValue = false;
	            if (e.preventDefault) e.preventDefault();
	        }

	        if (!this.props.validation || !this.props.validation.typing) return;
	        this.props.validation.typing(e);
	    },

	    change: function change(e) {
	        // событие изменения введенного значения
	        //console.log('[InputText] change')

	        var v = e.target.value;
	        var obj = {};
	        obj[this.props.inputName] = v;
	        var r = this.props.returnValue;
	        if (r) r(obj);

	        if (!this.props.validation || !this.props.validation.changing) return;
	        this.props.validation.changing(e, this, this.changeCallback);
	    },

	    changeCallback: function changeCallback(o) {
	        //console.log('[InputText] changeCallback')
	        console.debug(o);
	        this.uniqueState = o;
	        this.setState({});
	    },

	    getError: function getError() {
	        var s = this.uniqueState;
	        if (!s) return null;
	        switch (s.state) {
	            case 'idle':
	                return null;
	            case 'pending':
	                return React.createElement(
	                    'div',
	                    { className: 'box-row-nw align-center', style: {
	                            'background': '#ff8'
	                        } },
	                    React.createElement(
	                        'p',
	                        {
	                            className: 'error error-text' },
	                        'Проверка'
	                    )
	                );
	            case 'error':
	                return React.createElement(
	                    'div',
	                    { className: 'box-row-nw align-center', style: {
	                            'background': '#f88'
	                        } },
	                    React.createElement(
	                        'p',
	                        {
	                            className: 'error error-text' },
	                        s.msg || _utils.Utils.o2j(s)
	                    )
	                );
	            case 'unique':
	                return React.createElement(
	                    'div',
	                    { className: 'box-row-nw align-center', style: {
	                            'background': '#8f8'
	                        } },
	                    React.createElement(
	                        'p',
	                        {
	                            className: 'error error-text' },
	                        'Свободно'
	                    )
	                );
	            case 'used':
	                return React.createElement(
	                    'div',
	                    { className: 'box-row-nw align-center', style: {
	                            'background': '#f88'
	                        } },
	                    React.createElement(
	                        'p',
	                        {
	                            className: 'error error-text' },
	                        'Занят'
	                    )
	                );
	        }
	        return null;
	    },

	    render: function render() {
	        var labelClass = "label table-prb " + this.state.labelClass;
	        var labelStyle = {
	            flex: "0 0 " + this.props.labelWidth + "px"
	        };
	        return React.createElement(
	            'div',
	            { className: '' },
	            React.createElement(
	                'div',
	                { className: 'box-row-nw align-center' },
	                React.createElement(
	                    'label',
	                    { style: labelStyle, className: labelClass },
	                    this.props.caption
	                ),
	                React.createElement('input', {
	                    defaultValue: this.props.value,
	                    type: this.props.type,
	                    disabled: !this.props.active,
	                    className: 'input-underline text-form marg-md font14',
	                    onChange: this.change, value: this.props.value,
	                    onFocus: this.focus,
	                    onBlur: this.blur,
	                    onKeyPress: this.keypress,
	                    placeholder: this.props.placeholder
	                })
	            ),
	            this.getError()
	        );
	    }
	});

	exports.InputText = InputText;

/***/ },
/* 409 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var React = __webpack_require__(202);

	var SentLetter = React.createClass({
	    displayName: "SentLetter",

	    render: function render() {
	        return React.createElement(
	            "div",
	            { className: "container" },
	            React.createElement(
	                "div",
	                { className: "row" },
	                React.createElement(
	                    "div",
	                    { className: "col-md-4 col-sm-6 col-sm-offset-3 col-xs-12 col-md-offset-4 panel panel-default" },
	                    React.createElement(
	                        "h3",
	                        null,
	                        "Вам выслано письмо с кодом активации"
	                    ),
	                    React.createElement(
	                        "a",
	                        { href: "#" },
	                        "перейти на страницу логина"
	                    )
	                )
	            )
	        );
	    }
	});

	exports.SentLetter = SentLetter;

/***/ },
/* 410 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _api = __webpack_require__(1);

	var React = __webpack_require__(202);
	var Router = __webpack_require__(7);

	var Activation = React.createClass({
	    displayName: 'Activation',

	    componentWillMount: function componentWillMount() {
	        var key = this.props.query.key;
	        console.log(key);
	        _api.Api.userActivationRequest(key).then(function (res) {
	            if (res.err === -1) {
	                return;
	            } else {
	                window.location.hash = '#';
	            }
	        });
	    },

	    render: function render() {
	        return React.createElement(
	            'div',
	            { className: 'container' },
	            React.createElement(
	                'div',
	                { className: 'row' },
	                React.createElement(
	                    'div',
	                    { className: 'col-md-4 col-sm-6 col-sm-offset-3 col-xs-12 col-md-offset-4 panel panel-default' },
	                    React.createElement(
	                        'h3',
	                        null,
	                        'Ключ недействителен'
	                    )
	                )
	            )
	        );
	    }
	});

	exports.Activation = Activation;

/***/ },
/* 411 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _api = __webpack_require__(1);

	var _utils = __webpack_require__(2);

	var _SimpleComponentsAnimateButton = __webpack_require__(412);

	var _SimpleComponentsInputSimple = __webpack_require__(248);

	var _ClassesLogger = __webpack_require__(3);

	var _Dispatcher = __webpack_require__(4);

	// http://localhost:8081/#/inviteactivation?token=482cefe84bf33dfeeb2aac070ebbe28f

	var React = __webpack_require__(202);
	var Router = __webpack_require__(7);

	var InviteActivation = (function (_React$Component) {
	    _inherits(InviteActivation, _React$Component);

	    function InviteActivation() {
	        var _this = this;

	        _classCallCheck(this, InviteActivation);

	        _get(Object.getPrototypeOf(InviteActivation.prototype), 'constructor', this).apply(this, arguments);

	        this.token = null;
	        this.xr1 = null;
	        this.invite_data = null;
	        this.input = {};
	        this.state = {};

	        this.xrStop = function () {
	            // выключаем api
	            if (_this.xr1) {
	                _this.xr1.cancel();_this.xr1 = null;
	            }
	        };

	        this.componentWillMount = function () {
	            //logger.log(this, 'mount');
	            _this.token = _this.props.query.token;
	            _this.xr1 = new _api.xreq('comp_invite_get', { token: _this.token }, _this.xrInviteGetHandler); // загружаем данные инвайта
	        };

	        this.componentWillUnmount = function () {
	            //logger.log(this, 'unmount');
	            _this.xrStop();
	        };

	        this.render = function () {

	            if (!_this.invite_data) {
	                // данные инвайта еще не загружены
	                return React.createElement(
	                    'div',
	                    null,
	                    'загрузка ...'
	                );
	            }

	            if (_this.invite_data.err) {
	                // данные инвайта еще не загружены
	                return React.createElement(
	                    'div',
	                    null,
	                    'Ошибка: ',
	                    _this.invite_data.err
	                );
	            }

	            return React.createElement(
	                'div',
	                null,
	                React.createElement(
	                    'h1',
	                    { className: 'box-row-nw  just-center main-text heading' },
	                    'CargoChat'
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'box-row-nw just-center' },
	                    React.createElement(
	                        'div',
	                        { className: 'panel panel-default panel-lg' },
	                        React.createElement(
	                            'h3',
	                            { className: 'align-s-center heading main-text head-fs' },
	                            'Активация приглашения'
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'wrap-tb' },
	                            'Ваша компания ',
	                            React.createElement(
	                                'u',
	                                null,
	                                _this.invite_data.comp_name
	                            )
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'wrap-tb' },
	                            React.createElement(_SimpleComponentsInputSimple.InputSimple, { active: true, name: 'last_name', placeholder: 'Фамилия', defaultValue: _this.input.last_name, onChange: _this.inputHandler })
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'wrap-tb' },
	                            React.createElement(_SimpleComponentsInputSimple.InputSimple, { active: true, name: 'first_name', placeholder: 'Имя', defaultValue: _this.input.first_name, onChange: _this.inputHandler })
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'wrap-tb' },
	                            React.createElement(_SimpleComponentsInputSimple.InputSimple, { active: true, name: 'pat_name', placeholder: 'Отчество', defaultValue: _this.input.pat_name, onChange: _this.inputHandler })
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'wrap-tb' },
	                            React.createElement(_SimpleComponentsInputSimple.InputSimple, { active: true, name: 'phone', placeholder: 'Телефон', defaultValue: _this.input.phone, onChange: _this.inputHandler })
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'wrap-tb' },
	                            React.createElement(_SimpleComponentsInputSimple.InputSimple, { active: true, name: 'sms', placeholder: 'Код подтверждения из СМС', defaultValue: _this.input.sms, onChange: _this.inputHandler }),
	                            React.createElement(_SimpleComponentsAnimateButton.AnimateButton, { onClick: _this.getSMS, caption: 'Выслать' })
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'wrap-tb' },
	                            React.createElement(_SimpleComponentsInputSimple.InputSimple, { type: 'password', active: true, name: 'pass', placeholder: 'Введите ваш пароль', onChange: _this.inputHandler })
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'wrap-tb' },
	                            React.createElement(_SimpleComponentsInputSimple.InputSimple, { type: 'password', active: true, name: 'pass2', placeholder: 'Повторите пароль', onChange: _this.inputHandler })
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'box-cln-nw align-center' },
	                            React.createElement(_SimpleComponentsAnimateButton.AnimateButton, { onClick: _this.accept, caption: 'Активировать' })
	                        )
	                    )
	                )
	            );
	        };

	        this.inputHandler = function (o) {
	            for (var k in o) _this.input[k] = o[k]; // мержим ввод в this.input, отучаемся гадить в state
	        };

	        this.xrInviteGetHandler = function (xr) {
	            // загрузка данных инвайта завершена
	            _ClassesLogger.logger.log(_this, 'xrInviteGetHandler');
	            _this.xrStop();
	            if (xr.res.err) {
	                // ошибка при загрузке
	                _this.invite_data = { err: xr.res.msg };
	                _this.forceUpdate();
	                return;
	            }
	            _this.invite_data = xr.res;
	            var z = ['last_name', 'first_name', 'pat_name', 'phone'];
	            for (var i in z) {
	                _this.input[z[i]] = _this.invite_data[z[i]];
	            } // копируем нужные данные из invite_data в input (юзер будет их редактировать)
	            _this.forceUpdate(); // передергиваем компоенент
	        };

	        this.getSMS = function () {
	            _ClassesLogger.logger.log(_this, 'getSMS');
	            if (_this.xr1) return; // загрузчик занят
	            var phone = _utils.Utils.extract_phone_number(_this.input['phone']);
	            if (!phone) return _Dispatcher.Events.runError('введите телефон');
	            _this.xr1 = new _api.xreq('comp_invite_sms', { token: _this.token, phone: phone }, _this.xrSmsHandler); // загружаем данные инвайта
	        };

	        this.xrSmsHandler = function (xr) {
	            _ClassesLogger.logger.log(_this, 'xrSmsHandler');
	            _this.xrStop();
	            if (xr.res.err) return; // ошибка при загрузке
	            if (xr.res['phone']) return _Dispatcher.Events.runInfo('Код выстан на номер ' + xr.res['phone'] + ' перезапросить можно через ' + xr.res['cooldown'] + ' сек'); // todo: сделать интферфейс обратного отсчета
	            _Dispatcher.Events.runInfo('Перезапросить код можно через ' + xr.res['cooldown'] + ' сек'); // todo: сделать интферфейс обратного отсчета
	        };

	        this.accept = function () {
	            //logger.log(this, 'accept');
	            if ((_this.input['pass'] || '') == '') return _Dispatcher.Events.runError('введите пароль');
	            if ((_this.input['pass2'] || '') == '') return _Dispatcher.Events.runError('подтвердите пароль');
	            if (_this.input['pass'] !== _this.input['pass2']) return _Dispatcher.Events.runError('пароли не совпадают');
	            if (_this.xr1) return; // запрос выполняется (юзер слишком быстро кликает, или сервер/инет тормозит)
	            var p = {
	                token: _this.token,
	                last_name: _this.input['last_name'],
	                first_name: _this.input['first_name'],
	                pat_name: _this.input['pat_name'],
	                sms_code: _this.input['sms'],
	                passw: _this.input['pass']
	            };
	            _this.xr1 = new _api.xreq('comp_invite_accept', p, _this.xrAcceptHandler);
	        };

	        this.xrAcceptHandler = function (xr) {
	            //logger.log(this, 'xrAcceptHandler');
	            //console.debug(xr.res);
	            _this.xrStop();
	            if (xr.res.err) return;

	            if (!xr.res.user_id || !xr.res.sid) return _Dispatcher.Events.runError('вход не выполнен');

	            _api.Api.sid = xr.res.sid;
	            _api.Api.user_id = xr.res.user_id;
	            _utils.Utils.cookieSet('sid', _api.Api.sid, { expires: 0 });
	            _utils.Utils.cookieSet('user_id', _api.Api.user_id, { expires: 0 });
	            window.location.hash = "dashboard";
	        };
	    }

	    return InviteActivation;
	})(React.Component);

	exports.InviteActivation = InviteActivation;
	// токен
	// api.xreq
	// данные инфвайта из cm:user_invite_get

/***/ },
/* 412 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _stylesThemeController = __webpack_require__(249);

	//class AnimateButton extends React.Component {
	//    state = {};
	//
	//    static propTypes = {
	//        onClick : React.PropTypes.func.isRequired,
	//        buttonId: React.PropTypes.any,
	//        caption : React.PropTypes.string,
	//        hidden  : React.PropTypes.bool
	//    };
	//    static defaultProps = {
	//        styleVariables: ThemeController.AnimateButton.AnimateButton,
	//        caption       : "Button",
	//        hidden        : false
	//    };
	//    onClick = (e)=> {
	//        this.refs.span.getDOMNode().classList.remove("animate-button-animate");
	//        var nat = e.nativeEvent;
	//        var elWidth = this.refs.button.getDOMNode().offsetWidth;
	//        var elHeight = this.refs.button.getDOMNode().offsetHeight;
	//        var size = Math.max(elHeight, elWidth);
	//        //console.log(elWidth + " " + elHeight);
	//        var X = nat.offsetX - elWidth / 2;
	//        var Y = nat.offsetY - size / 2;
	//        this.refs.span.getDOMNode().classList.add("animate-button-animate");
	//        this.setState({
	//            style: {
	//                height  : size,
	//                width   : size,
	//                position: "absolute",
	//                left    : X + 'px',
	//                top     : Y + 'px'
	//            }
	//        });
	//        (this.props.onClick) ? this.props.onClick() : null;
	//    };
	//
	//    render() {
	//        var styles = {
	//            animateButton     : {
	//                boxShadow       : this.props.styleVariables.boxShadow,
	//                borderRadius    : "1px",
	//                fontSize        : "14px",
	//                height          : "36px",
	//                lineHeight      : "36px",
	//                width           : "256px",
	//                backgroundColor : this.props.styleVariables.backgroundColor,
	//                color           : this.props.styleVariables.color,
	//                cursor          : "pointer",
	//                border          : "none",
	//                marginTop       : "8px",
	//                marginBottom    : "8px",
	//                textTransform   : "uppercase",
	//                paddingLeft     : "16px",
	//                paddingRight    : "16px",
	//                fontWeight      : "bold",
	//                float           : "left",
	//                position        : "relative",
	//                overflow        : "hidden",
	//                WebkitTransition: "all 0.2s ease",
	//                MozTransition   : "all 0.2s ease",
	//                OTransition     : "all 0.2s ease",
	//                transition      : "all 0.2s ease"
	//            },
	//            animateButtonHover: {
	//                backgroundColor: this.props.styleVariables.hover.backgroundColor,
	//                boxShadow      : "rgba(0, 0, 0, 0.3) 0 4px 4px 0"
	//            },
	//            animateButtonFocus: {
	//                mozAppearance: "none",
	//                border       : "none"
	//            },
	//
	//            animateButtonInk    : {
	//                display        : "block",
	//                position       : "absolute",
	//                background     : "rgba(255, 255, 255, 0.2)",
	//                borderRadius   : "100%",
	//                WebkitTransform: "scale(0)",
	//                MozTransform   : "scale(0)",
	//                OTransform     : "scale(0)",
	//                transform      : "scale(0)"
	//            },
	//            animateButtonAnimate: {
	//                webkitAnimation: "ripple 0.65s linear",
	//                mozAnimation   : "ripple 0.65s linear",
	//                oAnimation     : "ripple 0.65s linear",
	//                animation      : "ripple 0.65s linear"
	//            }
	//        };
	//
	//        if (!this.props.hidden) {
	//
	//            return (
	//                <div>
	//                    <button ref="button" style={styles.animateButton} onClick={this.onClick}>
	//                        <span>{this.props.caption}</span>
	//                        <span ref="span" className="animate-button-ink" style={styles.animateButtonInk}></span>
	//                    </button>
	//                </div>
	//            )
	//        }
	//        return null
	//    }
	//}

	//<span ref="span" className="animate-button-ink" style={(this.state.style)?this.state.style:null}></span>

	var React = __webpack_require__(202);
	var AnimateButton = React.createClass({
	    displayName: 'AnimateButton',

	    getInitialState: function getInitialState() {
	        return {
	            style: {}
	        };
	    },
	    onClick: function onClick(e) {
	        this.refs.span.getDOMNode().classList.remove("animate");
	        var nat = e.nativeEvent;
	        var elWidth = this.refs.button.getDOMNode().offsetWidth;
	        var elHeight = this.refs.button.getDOMNode().offsetHeight;
	        var size = Math.max(elHeight, elWidth);
	        //console.log(elWidth + " " + elHeight);
	        var X = nat.offsetX - elWidth / 2;
	        var Y = nat.offsetY - size / 2;
	        this.refs.span.getDOMNode().classList.add("animate");
	        this.setState({
	            style: {
	                height: size,
	                width: size,
	                position: "absolute",
	                left: X + 'px',
	                top: Y + 'px'
	            }
	        });
	        this.props.onClick ? this.props.onClick() : null;
	    },
	    render: function render() {
	        if (!this.props.hidden) {
	            return React.createElement(
	                'button',
	                { ref: 'button', className: 'button-span button button-submit', onClick: this.onClick },
	                React.createElement(
	                    'span',
	                    null,
	                    this.props.caption
	                ),
	                React.createElement('span', { ref: 'span', className: 'ink', style: this.state.style ? this.state.style : null })
	            );
	        } else return null;
	    }
	});
	exports.AnimateButton = AnimateButton;

/***/ },
/* 413 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _api = __webpack_require__(1);

	var _utils = __webpack_require__(2);

	var _Dispatcher = __webpack_require__(4);

	var _SimpleComponentsAnimateButton = __webpack_require__(412);

	var _SimpleComponentsInputSimple = __webpack_require__(248);

	var _ClassesLogger = __webpack_require__(3);

	// http://localhost:8081/#/user-invite-accept?token=a2dc836e92766485399493f464ddec82

	var React = __webpack_require__(202);
	var Router = __webpack_require__(7);

	var UserInviteAccept = (function (_React$Component) {
	    _inherits(UserInviteAccept, _React$Component);

	    function UserInviteAccept() {
	        var _this = this;

	        _classCallCheck(this, UserInviteAccept);

	        _get(Object.getPrototypeOf(UserInviteAccept.prototype), 'constructor', this).apply(this, arguments);

	        this.token = null;
	        this.xr1 = null;
	        this.input = {};
	        this.invite_data = null;
	        this.state = {};

	        this.xrStop = function () {
	            // выключаем api
	            if (_this.xr1) {
	                _this.xr1.cancel();_this.xr1 = null;
	            }
	        };

	        this.componentWillMount = function () {
	            // компонент родился
	            //logger.log(this, 'mount');
	            _this.token = _this.props.query.token; // читаем токен из параметров
	            _this.xr1 = new _api.xreq('user_invite_get', { token: _this.token }, _this.xrInviteGetHandler); // загружаем данные инвайта
	        };

	        this.componentWillUnmount = function () {
	            //logger.log(this, 'unmount');
	            _this.xrStop();
	        };

	        this.render = function () {

	            if (!_this.invite_data) {
	                // данные инвайта еще не загружены
	                return React.createElement(
	                    'div',
	                    null,
	                    'загрузка ...'
	                );
	            }

	            if (_this.invite_data.err) {
	                // данные инвайта еще не загружены
	                return React.createElement(
	                    'div',
	                    null,
	                    'Ошибка: ',
	                    _this.invite_data.err
	                );
	            }

	            return React.createElement(
	                'div',
	                null,
	                React.createElement(
	                    'h1',
	                    { className: 'box-row-nw  just-center main-text heading' },
	                    'CargoChat'
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'box-row-nw just-center' },
	                    React.createElement(
	                        'div',
	                        { className: 'panel panel-default panel-lg' },
	                        React.createElement(
	                            'h3',
	                            { className: 'align-s-center heading main-text head-fs' },
	                            'Активация приглашения'
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'wrap-tb' },
	                            'в компанию ',
	                            React.createElement(
	                                'u',
	                                null,
	                                _this.invite_data.comp_name
	                            )
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'wrap-tb' },
	                            React.createElement(_SimpleComponentsInputSimple.InputSimple, { active: true, name: 'last_name', placeholder: 'Фамилия', defaultValue: _this.input.last_name, onChange: _this.inputHandler })
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'wrap-tb' },
	                            React.createElement(_SimpleComponentsInputSimple.InputSimple, { active: true, name: 'first_name', placeholder: 'Имя', defaultValue: _this.input.first_name, onChange: _this.inputHandler })
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'wrap-tb' },
	                            React.createElement(_SimpleComponentsInputSimple.InputSimple, { active: true, name: 'pat_name', placeholder: 'Отчество', defaultValue: _this.input.pat_name, onChange: _this.inputHandler })
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'wrap-tb' },
	                            React.createElement(_SimpleComponentsInputSimple.InputSimple, { active: true, name: 'phone', placeholder: 'Телефон', defaultValue: _this.input.phone, onChange: _this.inputHandler })
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'wrap-tb' },
	                            React.createElement(_SimpleComponentsInputSimple.InputSimple, { active: true, name: 'sms', placeholder: 'Код подтверждения из СМС', defaultValue: _this.input.sms, onChange: _this.inputHandler }),
	                            React.createElement(_SimpleComponentsAnimateButton.AnimateButton, { onClick: _this.getSMS, caption: 'Выслать' })
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'wrap-tb' },
	                            React.createElement(_SimpleComponentsInputSimple.InputSimple, { type: 'password', active: true, name: 'pass', placeholder: 'Введите ваш пароль', onChange: _this.inputHandler })
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'wrap-tb' },
	                            React.createElement(_SimpleComponentsInputSimple.InputSimple, { type: 'password', active: true, name: 'pass2', placeholder: 'Повторите пароль', onChange: _this.inputHandler })
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'box-cln-nw align-center' },
	                            React.createElement(_SimpleComponentsAnimateButton.AnimateButton, { onClick: _this.accept, caption: 'Активировать' })
	                        )
	                    )
	                )
	            );
	        };

	        this.inputHandler = function (o) {
	            for (var k in o) _this.input[k] = o[k]; // мержим ввод в this.input, отучаемся гадить в state
	        };

	        this.xrInviteGetHandler = function (xr) {
	            // загрузка данных инвайта завершена
	            //logger.log(this, 'xrInviteGetHandler');
	            _this.xrStop();
	            if (xr.res.err) {
	                // ошибка при загрузке
	                _this.invite_data = { err: xr.res.msg };
	                _this.forceUpdate();
	                return;
	            }
	            _this.invite_data = xr.res;
	            var z = ['last_name', 'first_name', 'pat_name', 'phone'];
	            for (var i in z) {
	                _this.input[z[i]] = _this.invite_data[z[i]];
	            } // копируем нужные данные из invite_data в input (юзер будет их редактировать)
	            _this.forceUpdate(); // передергиваем компоенент
	        };

	        this.getSMS = function () {
	            //logger.log(this, 'getSMS');
	            if (_this.xr1) return; // загрузчик занят
	            var phone = _utils.Utils.extract_phone_number(_this.input['phone']);
	            if (!phone) return _Dispatcher.Events.runError('введите телефон');
	            _this.xr1 = new _api.xreq('user_invite_sms', { token: _this.token, phone: phone }, _this.xrSmsHandler); // загружаем данные инвайта
	        };

	        this.xrSmsHandler = function (xr) {
	            //logger.log(this, 'xrSmsHandler');
	            _this.xrStop();
	            if (xr.res.err) return; // ошибка при загрузке
	            if (xr.res['phone']) return _Dispatcher.Events.runInfo('Код выстан на номер ' + xr.res['phone'] + ' перезапросить можно через ' + xr.res['cooldown'] + ' сек'); // todo: сделать интферфейс обратного отсчета
	            _Dispatcher.Events.runInfo('Перезапросить код можно через ' + xr.res['cooldown'] + ' сек'); // todo: сделать интферфейс обратного отсчета
	        };

	        this.accept = function () {
	            //logger.log(this, 'accept');
	            if ((_this.input['pass'] || '') == '') return _Dispatcher.Events.runError('введите пароль');
	            if ((_this.input['pass2'] || '') == '') return _Dispatcher.Events.runError('подтвердите пароль');
	            if (_this.input['pass'] !== _this.input['pass2']) return _Dispatcher.Events.runError('пароли не совпадают');
	            if (_this.xr1) return; // запрос выполняется (юзер слишком быстро кликает, или сервер/инет тормозит)
	            var p = {
	                token: _this.token,
	                last_name: _this.input['last_name'],
	                first_name: _this.input['first_name'],
	                pat_name: _this.input['pat_name'],
	                sms_code: _this.input['sms'],
	                passw: _this.input['pass']
	            };
	            _this.xr1 = new _api.xreq('user_invite_accept', p, _this.xrAcceptHandler);
	        };

	        this.xrAcceptHandler = function (xr) {
	            //logger.log(this, 'xreqHandler');
	            //console.debug(xr.res);
	            _this.xrStop();
	            if (xr.res.err) return; // ошибка при загрузке

	            if (!xr.res.user_id || !xr.res.sid) return _Dispatcher.Events.runError('вход не выполнен');

	            _api.Api.sid = xr.res.sid;
	            _api.Api.user_id = xr.res.user_id;
	            _utils.Utils.cookieSet('sid', _api.Api.sid, { expires: 0 });
	            _utils.Utils.cookieSet('user_id', _api.Api.user_id, { expires: 0 });
	            window.location.hash = "dashboard";
	        };
	    }

	    return UserInviteAccept;
	})(React.Component);

	exports.UserInviteAccept = UserInviteAccept;
	// токен
	// api.xreq
	// данные инфвайта из cm:user_invite_get

/***/ },
/* 414 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _api = __webpack_require__(1);

	var React = __webpack_require__(202);
	var Router = __webpack_require__(7);

	var Key_a = React.createClass({
	    displayName: 'Key_a',

	    getInitialState: function getInitialState() {
	        return {
	            message: ''
	        };
	    },

	    send: function send() {
	        var _this = this;

	        var key = this.props.query.key;
	        console.log(key);
	        var email = this.refs.email.getDOMNode().value;
	        var emailRepeat = this.refs.emailRepeat.getDOMNode().value;
	        if (email === emailRepeat) {
	            _api.Api.newEmailRequest(key, email).then(function (res) {
	                console.log(res);
	                if (res.err) {
	                    _this.setState({ message: res.msg });
	                } else {
	                    window.location.hash = 'sentletter';
	                }
	            });
	        } else {
	            this.setState({ message: "пароли не совпадают" });
	        }
	    },

	    render: function render() {
	        return React.createElement(
	            'div',
	            { className: 'box-row-nw  just-center main-text heading' },
	            React.createElement(
	                'div',
	                null,
	                React.createElement(
	                    'div',
	                    { className: 'panel panel-default' },
	                    React.createElement(
	                        'h3',
	                        { className: 'main-text' },
	                        'введите новый емейл'
	                    ),
	                    React.createElement('input', { ref: 'email' }),
	                    React.createElement('input', { ref: 'emailRepeat' }),
	                    React.createElement(
	                        'button',
	                        { onClick: this.send },
	                        'Сменить'
	                    )
	                )
	            )
	        );
	    }
	});

	exports.Key_a = Key_a;

/***/ },
/* 415 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _Dispatcher = __webpack_require__(4);

	var _utils = __webpack_require__(2);

	var _Map2 = __webpack_require__(416);

	var _SimpleComponentsSmallPanel = __webpack_require__(407);

	var _SimpleComponentsInputText = __webpack_require__(408);

	var _SimpleComponentsRadioInput = __webpack_require__(417);

	var _SimpleComponentsTransparentButton = __webpack_require__(264);

	var _SimpleComponentsLoading = __webpack_require__(361);

	var _SimpleComponentsInputSimple = __webpack_require__(248);

	var _SimpleComponentsSimpleTable2 = __webpack_require__(399);

	var _SimpleComponentsCard = __webpack_require__(418);

	var _SimpleComponentsCard2 = _interopRequireDefault(_SimpleComponentsCard);

	var _SimpleComponentsIcons = __webpack_require__(252);

	var _api = __webpack_require__(1);

	var React = __webpack_require__(202);
	var Router = __webpack_require__(7);
	var Route = Router.Route;
	var RouteHandler = Router.RouteHandler;

	var TblName = React.createClass({
	    displayName: 'TblName',

	    getInitialState: function getInitialState() {
	        return {};
	    },

	    onClick: function onClick() {
	        console.log(this.props.obj);
	        this.props.opt.context.onClick(this.props.obj);
	    },
	    test: function test() {
	        this.props.opt.context.test(this.props.obj);
	        console.log("Выбранная компания");
	        console.log(this.props.obj);
	        var inn = this.props.obj.data.inn;
	        var kpp = this.props.obj.data.kpp;
	        var address = this.props.obj.data.address.value;

	        // эту дичь нужно будет выличть
	        window.location.hash = 'dashboard/findpartner/details2?inn=' + inn + '&kpp=' + kpp + '&addr=' + address;
	    },

	    render: function render() {
	        var opt = this.props.opt;
	        console.log("TBLCELL");
	        console.log(this.props);

	        var name = this.props.obj.value;
	        var inn = this.props.obj.data.inn;
	        var address = this.props.obj.data.address.value;
	        return React.createElement(
	            'div',
	            { className: 'list-box' },
	            React.createElement(
	                'div',
	                { className: 'box-cln-nw panel-md' },
	                React.createElement(
	                    'div',
	                    { className: 'box-row-nw just-btw' },
	                    React.createElement(
	                        'h3',
	                        { className: 'list-h3' },
	                        name
	                    ),
	                    React.createElement(
	                        'p',
	                        { className: 'icon-header' },
	                        React.createElement(_SimpleComponentsIcons.Icon, { iconName: 'star-icon' })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'card-sub' },
	                    React.createElement(
	                        'p',
	                        { className: 'divider card-disab' },
	                        'ИНН: ',
	                        inn
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'box-row-nw' },
	                        React.createElement(
	                            'a',
	                            { className: 'icon-list', href: '' },
	                            React.createElement(_SimpleComponentsIcons.Icon, { iconName: 'pin-icon' })
	                        ),
	                        React.createElement(
	                            'p',
	                            { className: 'p-list' },
	                            address
	                        )
	                    )
	                )
	            ),
	            React.createElement(
	                'div',
	                { className: 'box-row-nw just-end table-pr' },
	                React.createElement(_SimpleComponentsTransparentButton.TransparentButton, { className: 'button button-unborder', caption: 'Информация', onClick: this.onClick }),
	                React.createElement(_SimpleComponentsTransparentButton.TransparentButton, { className: 'button button-unborder', caption: 'Тест', onClick: this.test })
	            )
	        );
	    }
	});

	var FindPartner = React.createClass({
	    displayName: 'FindPartner',

	    getInitialState: function getInitialState() {
	        return {
	            company_name: '',
	            searchResult: null,
	            viewDetail: false,
	            selectedCompany: null,
	            viewDetail2: false
	        };
	    },

	    componentWillMount: function componentWillMount() {
	        var hash = window.location.hash;
	        console.log("hash");
	        console.log(hash);
	        var isSearch = hash.indexOf('details2');
	        console.log(isSearch);
	        if (isSearch === -1) {
	            this.setState({ viewDetail2: false });
	        } else this.setState({ viewDetail2: true });
	    },
	    searchResultsHandler: function searchResultsHandler(o) {
	        if (this.isYampReady) {
	            this.setState(o);
	            this.updateObjectsOnMap();
	        } else {
	            this.resultsBuffer = o;
	        }
	    },

	    ymapsReadyHandler: function ymapsReadyHandler() {
	        //console.log("READY YMAPS");
	        if (this.resultsBuffer) {
	            this.setState(this.resultsBuffer);
	            this.resultsBuffer = null;
	            this.updateObjectsOnMap();
	        } else {
	            this.isYampReady = true;
	        }
	    },

	    returnValue: function returnValue(value) {
	        this.setState(value);
	    },

	    searchClickHandler: function searchClickHandler() {
	        var _this = this;

	        //console.log('[FindPartner] searchClickHandler')
	        // запоминаем предыдущее значение capacity у таблицы результатов
	        var t = this.refs.results_table;
	        if (t) this.state.storedTableCapacity = t.props.opt.pagesConf.currentCapacity;
	        if (this.state.company_name) {
	            var params = {
	                type: "suggest/party",
	                data: {
	                    query: this.state.company_name,
	                    count: 50
	                }
	            };
	            _api.Api.getDadata(params).then(function (res) {
	                var resp;
	                try {
	                    resp = res.dadata.suggestions;
	                    console.log("SUGGEST");
	                    console.log(resp);
	                    _this.searchResultsHandler({ searchResult: resp });
	                } catch (e) {
	                    console.log(e);
	                }
	            });
	        } else console.log("ничего не введено");

	        this.clearSearch();
	    },

	    pagesChangeHandler: function pagesChangeHandler() {
	        //console.log('[FindPartner] pagesChangeHandler')
	        this.updateObjectsOnMap();
	    },

	    updateObjectsOnMap: function updateObjectsOnMap() {
	        //console.log('[FindPartner] updateObjectsOnMap')

	        var t = this.refs.results_table; // указатель на таблицу
	        var l = t.getVisibleObjectsList(); // список видымых элеметов в таблице
	        var m = this.refs.yandexMap; // указатель на карту
	        m.clearGeoObjects(); // убираем с карты все предыдущие обхекты

	        var b = [[Number.MAX_VALUE, Number.MAX_VALUE], [Number.MIN_VALUE, Number.MIN_VALUE]],
	            f = false;

	        // перебор видимых объектов
	        l.forEach(function (o) {
	            if (!o.x || !o.y) return; // координат нет - объект не интересен
	            f = true; // флаг наличия объектов
	            m.addBaloon(o.x, o.y, o.name); // добавляем объект на карту
	            // считаем bounds
	            b[0][0] = Math.min(b[0][0], o.y);
	            b[0][1] = Math.min(b[0][1], o.x);
	            b[1][0] = Math.max(b[1][0], o.y);
	            b[1][1] = Math.max(b[1][1], o.x);
	        });

	        // изменяем видимую область карты (чтобы видеть новые объекты)
	        if (f) m.setBounds(b);
	    },

	    onClick: function onClick(obj) {
	        console.log('[FindPartner] onClick');
	        console.log(obj);
	        this.setState({ selectedCompany: obj, viewDetail: true });
	    },
	    test: function test(obj) {
	        this.setState({ viewDetail2: true });
	    },

	    clearSearch: function clearSearch() {
	        this.setState({
	            viewDetail: false,
	            searchResult: null,
	            selectedCompany: null
	        });
	    },

	    backToResult: function backToResult() {
	        this.setState({
	            viewDetail: false
	        });
	    },
	    render: function render() {
	        //console.log('[FindPartner] render')
	        //console.log(this.state);
	        this.opt = {
	            context: this,
	            className: "simple-table",
	            // хедер
	            headData: [{ id: 'name', title: 'Имя', cellClass: TblName }],
	            // контент
	            bodyClass: _SimpleComponentsSimpleTable2.TblBody,
	            //bodyData: Store.sessions,
	            bodyData: this.state.searchResult,
	            // вспомогательные
	            pagesClass: _SimpleComponentsSimpleTable2.TblPages,
	            pagesConf: {
	                availableCapacity: [2, 5],
	                currentCapacity: this.state.storedTableCapacity || 2, // capacity может быть сохрарено в state (если нет, то делаем 5)
	                currentPage: 1,
	                onChanged: this.pagesChangeHandler
	            },
	            //title: 'Результаты поиска',  // заголовок контейнера
	            //isSelectable: (obj) => obj.sid != Api.sid,  // ф-я проверки возможности выделения объекта
	            selectionKey: 'sKey', // ключ в объекте который будет использован в качестве флага выделения
	            selectable: false, // включает стандартный механизм выбора (кликом по ряду), можно выключить и сделать свой через bodyClass или cellClass
	            multiselect: false // можно выбирать несколько рядов
	        };

	        //console.log("Search");
	        //console.log(Store.selectedCompany);
	        //console.log(this.state);
	        if (this.state.viewDetail) {
	            return React.createElement(
	                'div',
	                null,
	                React.createElement(_SimpleComponentsTransparentButton.TransparentButton, { onClick: this.backToResult, caption: 'Вернуться к результатам' }),
	                React.createElement(OtherCompanyDetails, { company: this.props.company, viewCompany: this.state.selectedCompany,
	                    source: 'search' })
	            );
	        }
	        if (this.state.viewDetail2) {
	            return React.createElement(RouteHandler, null);
	        }

	        return React.createElement(
	            'div',
	            { className: 'box-row-nw max-size' },
	            React.createElement(
	                'div',
	                { className: 'box-col-nw inmap' },
	                React.createElement(
	                    _SimpleComponentsSmallPanel.SmallPanel,
	                    { headerName: 'Поиск партнеров' },
	                    React.createElement(
	                        _SimpleComponentsLoading.Loading,
	                        { dataRecived: !this.state.viewDetail, dontShow: true },
	                        React.createElement(
	                            'div',
	                            { className: 'box-row-nw align-stretch panel-md default-width' },
	                            React.createElement(_SimpleComponentsInputSimple.InputSimple, {
	                                type: 'search',
	                                name: 'company_name',
	                                active: true,
	                                autoFocus: true,
	                                placeholder: 'Укажите название, ИНН или Ф.И.О. руководителя',
	                                value: this.state.company_name,
	                                onChange: this.returnValue
	                            })
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'box-row-nw just-end table-footer table-pr' },
	                            React.createElement(_SimpleComponentsTransparentButton.TransparentButton, { onClick: this.searchClickHandler, caption: 'Найти' }),
	                            React.createElement(_SimpleComponentsTransparentButton.TransparentButton, { hidden: !this.state.searchResult, onClick: this.clearSearch,
	                                caption: 'Очистить' })
	                        )
	                    ),
	                    React.createElement(
	                        _SimpleComponentsLoading.Loading,
	                        { dataRecived: this.state.viewDetail, dontShow: true },
	                        React.createElement(
	                            'div',
	                            { className: 'box-row-nw just-end table-footer table-pr' },
	                            React.createElement(
	                                'div',
	                                { className: 'box-row-nw just-center align-center ' },
	                                React.createElement(_SimpleComponentsIcons.Icon, { iconName: 'arrow-left-icon' })
	                            ),
	                            React.createElement(_SimpleComponentsTransparentButton.TransparentButton, { onClick: this.backToResult, caption: 'Вернуться к результатам' })
	                        )
	                    ),
	                    React.createElement(
	                        _SimpleComponentsLoading.Loading,
	                        { dataRecived: this.state.searchResult && !this.state.viewDetail, dontShow: true },
	                        React.createElement(_SimpleComponentsSimpleTable2.SimpleTable2, { ref: 'results_table', opt: this.opt })
	                    )
	                )
	            ),
	            React.createElement(_Map2.Map2, {
	                style: {
	                    'WebkitBoxFlex': '1',
	                    'WebkitFlex': '1 0 300px',
	                    'msFlex': '1 0 300px',
	                    'flex': '1 0 300px'
	                },
	                ref: 'yandexMap',
	                onReady: this.ymapsReadyHandler
	            })
	        );
	    }
	});

	exports.FindPartner = FindPartner;

/***/ },
/* 416 */
/***/ function(module, exports, __webpack_require__) {

	//require('../../styles/map.scss');

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(202);
	//import {init, myMap} from '../MapController';

	var Map2 = (function (_React$Component) {
	    _inherits(Map2, _React$Component);

	    function Map2() {
	        var _this = this;

	        _classCallCheck(this, Map2);

	        _get(Object.getPrototypeOf(Map2.prototype), 'constructor', this).apply(this, arguments);

	        this.state = {
	            style: this.props.style
	        };

	        this.componentWillReceiveProps = function (props) {
	            if (props.style) {
	                _this.setState({ style: props.style });
	            }
	        };

	        this.componentDidMount = function () {

	            console.log('[Map] componentDidMount', _this.props.center);

	            if (!_this.props.disabled) {
	                _this.ymapsLoader = document.createElement('script');
	                _this.ymapsLoader.onload = _this.ymapsLoaded;
	                _this.ymapsLoader.src = "http://api-maps.yandex.ru/2.1/?lang=ru_RU&amp;amp;load=package.full";
	                document.getElementsByTagName('head')[0].appendChild(_this.ymapsLoader);
	            }
	        };

	        this.componentWillUnmount = function () {
	            _this.ymapsLdrRemove();
	            if (_this.mapIns) _this.mapIns.destroy();
	        };

	        this.ymapsLoaded = function () {
	            _this.ymapsLdrRemove();
	            //console.log("[Map] ymapsLoaded")
	            ymaps.ready(_this.ymapsReady);
	        };

	        this.getCoordinate = function (address, callback) {
	            var myGeocoder = ymaps.geocode(address, { json: true, results: 1 });
	            myGeocoder.then(function (res) {
	                var sugg = res.GeoObjectCollection.featureMember;
	                //console.debug(sugg);
	                var coord = sugg[0].GeoObject.Point.pos.split(" ");
	                //console.log("COORD");
	                //console.log(coord);
	                var x = coord[0];
	                var y = coord[1];
	                callback(x, y);
	            }, function (err) {
	                console.error('ymaps.geocode failed: ' + err);
	                return false;
	            });
	        };

	        this.ymapsReady = function () {
	            //console.log("[Map] ymapsReady")
	            _this.mapIns = new ymaps.Map("map", { center: _this.props.center, zoom: _this.props.zoom, controls: [] });
	            _this.mapIns.controls.add(new ymaps.control.ZoomControl({
	                options: {
	                    size: "small",
	                    position: { top: 10, right: 30 }
	                }
	            }));
	            _this.mapIns.events.add('boundschange', _this.changeBounds);
	            if (_this.props.baloon) {
	                var coord;

	                (function () {
	                    var b = _this.props.baloon;
	                    if (b.address) {
	                        coord = _this.getCoordinate(b.address, function (x, y) {
	                            //console.log("callback");
	                            _this.addBaloon(x, y, b.name);
	                            _this.setPos(x, y);
	                        });
	                    } else {
	                        _this.addBaloon(b.x, b.y, b.name);
	                    }
	                })();
	            }
	            var f = _this.props.onReady;
	            if (f) f();
	        };

	        this.ymapsLdrRemove = function () {
	            if (_this.ymapsLoader) {
	                document.getElementsByTagName('head')[0].removeChild(_this.ymapsLoader);
	                _this.ymapsLoader.onload = null;
	                _this.ymapsLoader = null;
	            }
	        };

	        this.changeBounds = function () {
	            //console.log("[Map] changeBounds");
	            if (_this.props.changeBounds) {
	                _this.props.changeBounds(_this.mapIns);
	            }
	        };

	        this.getMap = function () {
	            return _this.mapIns;
	        };

	        this.setPos = function (x, y) {
	            _this.mapIns.setCenter([y, x]);
	        };

	        this.addBaloon = function (x, y, name) {
	            //console.log("add baloon");
	            //console.log(x + ' '+ y + ' ' + name);
	            _this.mapIns.geoObjects.add(new ymaps.Placemark([y, x], { iconContent: name, balloonContent: name }, { preset: "islands#circleDotIcon" }));
	        };

	        this.setBounds = function (b) {
	            //console.log('[Map] setBounds ' + b)
	            _this.mapIns.setBounds(b, { checkZoomRange: true });
	        };

	        this.clearGeoObjects = function () {
	            try {
	                if (_this.mapIns.geoObjects) _this.mapIns.geoObjects.each(function (o) {
	                    _this.mapIns.geoObjects.remove(o);
	                });
	            } catch (e) {
	                console.log(e);
	            }
	        };

	        this.render = function () {
	            //console.log("[Map] render");
	            //console.log(this.props);
	            if (_this.props.disabled) return null;
	            return React.createElement(
	                'div',
	                { style: _this.state.style, className: _this.props.className, id: 'map' },
	                _this.props.children
	            );
	        };
	    }

	    _createClass(Map2, null, [{
	        key: 'propTypes',
	        value: {
	            onReady: React.PropTypes.func,
	            changeBounds: React.PropTypes.func,
	            disabled: React.PropTypes.bool,
	            baloon: React.PropTypes.object,
	            center: React.PropTypes.array,
	            style: React.PropTypes.object,
	            zoom: React.PropTypes.number
	        },
	        enumerable: true
	    }, {
	        key: 'defaultProps',
	        value: {
	            center: [55.76, 37.64],
	            zoom: 12
	        },
	        enumerable: true
	    }]);

	    return Map2;
	})(React.Component);

	exports.Map2 = Map2;

/***/ },
/* 417 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var React = __webpack_require__(202);

	var RadioInput = React.createClass({
	    displayName: "RadioInput",

	    propTypes: {
	        labelWidth: React.PropTypes.number,
	        choice: React.PropTypes.array,
	        selected: React.PropTypes.any,
	        inputName: React.PropTypes.string
	    },

	    getDefaultProps: function getDefaultProps() {
	        return {
	            labelWidth: 114
	        };
	    },

	    change: function change(e) {
	        var value = {};
	        var r = this.props.returnValue;
	        value[this.props.inputName] = e.target.dataset.name;
	        if (r) r(value);
	    },
	    render: function render() {
	        var _this = this;

	        var Choice = this.props.choice;
	        var els = Choice.map(function (el, id) {
	            return React.createElement(
	                "div",
	                { key: id, className: "radio" },
	                React.createElement(
	                    "p",
	                    { className: "radioP" },
	                    React.createElement("input", {
	                        id: _this.props.inputName + id,
	                        type: "radio",
	                        name: _this.props.inputName,
	                        "data-name": el.value, onChange: _this.change,
	                        defaultChecked: _this.props.selected === el.value ? "checked" : null
	                    }),
	                    React.createElement(
	                        "label",
	                        { className: "marg-left marg-right text-form", htmlFor: _this.props.inputName + id },
	                        React.createElement("span", { className: "radioButtonGraph" }),
	                        el.text
	                    )
	                )
	            );
	        });
	        var option = this.props.disabled ? React.createElement(
	            "p",
	            { className: "font13 table-text" },
	            this.props.selected
	        ) : { els: els };
	        var labelStyle = {
	            flex: "0 0 " + this.props.labelWidth + "px"
	        };
	        return React.createElement(
	            "div",
	            { className: "box-row-nw align-center div-const" },
	            React.createElement(
	                "label",
	                { style: labelStyle, className: "label" },
	                React.createElement(
	                    "p",
	                    { className: "table-prb font600" },
	                    this.props.caption
	                )
	            ),
	            option
	        );
	    }
	});

	exports.RadioInput = RadioInput;

/***/ },
/* 418 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _stylesThemeController = __webpack_require__(249);

	var React = __webpack_require__(202);

	var Card = (function (_React$Component) {
	    _inherits(Card, _React$Component);

	    function Card() {
	        var _this = this;

	        _classCallCheck(this, Card);

	        _get(Object.getPrototypeOf(Card.prototype), 'constructor', this).apply(this, arguments);

	        this.state = {
	            size: "400px",
	            id: 0
	        };

	        this.render = function () {
	            var styles = {
	                card: {
	                    backgroundColor: _this.props.styleVariables.backgroundColor,
	                    WebkitBoxShadow: _this.props.styleVariables.boxShadow,
	                    boxShadow: _this.props.styleVariables.boxShadow,
	                    'webkitBoxFlex': '1',
	                    'webkitFlex': '1 0 auto',
	                    'mozBoxFlex': '1',
	                    'WebkitBoxFlex': '1',
	                    'WebkitFlex': '1 0 auto',
	                    'msFlex': '1 0 auto',
	                    'flex': '1 0 auto',
	                    'height': 'auto',
	                    'webkitBorderRadius': '2px',
	                    'borderRadius': '2px',
	                    'marginBottom': '10px'
	                },
	                cardContent: {
	                    'display': '-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex',
	                    'webkitFlexFlow': 'column nowrap',
	                    'msFlexFlow': 'column nowrap;msFlexFlow:column nowrap',
	                    'WebkitFlexFlow': 'column nowrap',
	                    'flexFlow': 'column nowrap'
	                },
	                cardTitle: {
	                    color: _this.props.styleVariables.cardTitle.color,
	                    'fontSize': '24px',
	                    'padding': '24px 16px 0 16px',
	                    'fontWeight': '400'
	                },
	                cardSubTitle: {
	                    color: _this.props.styleVariables.subTitle.color,
	                    'fontSize': '14px',
	                    'wordWrap': 'break-word',
	                    'height': 'auto',
	                    'maxWidth': '400px',
	                    'padding': '0 16px 16px 16px',
	                    'fontWeight': '400'
	                }
	            };

	            var CardFooter = _this.props.footer ? React.createElement(_this.props.footer, { footerProps: _this.props.footerProps }) : null;

	            return React.createElement(
	                'div',
	                { style: styles.card },
	                React.createElement(
	                    'div',
	                    { style: styles.cardContent },
	                    React.createElement(
	                        'h3',
	                        { style: styles.cardTitle },
	                        _this.props.title
	                    ),
	                    React.createElement(
	                        'div',
	                        { style: styles.cardSubTitle },
	                        React.createElement(
	                            'p',
	                            null,
	                            _this.props.subTitle
	                        )
	                    ),
	                    React.createElement(
	                        'div',
	                        null,
	                        _this.props.children
	                    )
	                ),
	                CardFooter
	            );
	        };
	    }

	    _createClass(Card, null, [{
	        key: 'propTypes',
	        value: {
	            title: React.PropTypes.string,
	            subTitle: React.PropTypes.string,
	            footer: React.PropTypes.func,
	            footerProps: React.PropTypes.any
	        },
	        enumerable: true
	    }, {
	        key: 'defaultProps',
	        value: {
	            styleVariables: _stylesThemeController.ThemeController.Card.Card,
	            title: "",
	            subTitle: ""
	        },
	        enumerable: true
	    }]);

	    return Card;
	})(React.Component);

	exports['default'] = Card;
	module.exports = exports['default'];

	//display: "-webkit-box",
	//display: "-webkit-flex",
	//display: "-moz-box",
	//display: "-ms-flexbox",

/***/ },
/* 419 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _Dispatcher = __webpack_require__(4);

	var _SimpleComponentsLoading = __webpack_require__(361);

	var _SimpleComponentsSimpleTable2 = __webpack_require__(399);

	var _api = __webpack_require__(1);

	var _SimpleComponentsTransparentButton = __webpack_require__(264);

	var React = __webpack_require__(202);

	var TblCellActions = (function (_React$Component) {
	    _inherits(TblCellActions, _React$Component);

	    function TblCellActions() {
	        var _this = this;

	        _classCallCheck(this, TblCellActions);

	        _get(Object.getPrototypeOf(TblCellActions.prototype), 'constructor', this).apply(this, arguments);

	        this.render = function () {
	            return React.createElement(
	                'div',
	                null,
	                React.createElement(_SimpleComponentsTransparentButton.TransparentButton, { caption: 'Отменить', onClick: _this.props.opt.cancelRequest })
	            );
	        };
	    }

	    return TblCellActions;
	})(React.Component);

	var Requests = (function (_React$Component2) {
	    _inherits(Requests, _React$Component2);

	    function Requests() {
	        var _this2 = this;

	        _classCallCheck(this, Requests);

	        _get(Object.getPrototypeOf(Requests.prototype), 'constructor', this).apply(this, arguments);

	        this.state = {
	            requests: null
	        };

	        this.cancelRequest = function () {
	            console.log("CANCEL");
	            console.log(_Dispatcher.Store.userState.join_requests[0].comp_id);
	            _Dispatcher.Actions.joinRequestDelete(_Dispatcher.Store.userState.join_requests[0].comp_id);
	        };

	        this.render = function () {
	            console.log("REQUESTS");
	            console.log(_Dispatcher.Store.userState.join_requests);
	            _this2.opt = {
	                // хедер
	                headerClass: _SimpleComponentsSimpleTable2.TblHead,
	                headData: [{ id: 'comp_id', title: 'ID' }, // TblCellSid - умеет частично скрывать значение
	                { id: 'state', title: 'Состояние' }, { id: 'ctime', title: 'Время отправки запроса' }, { id: 'comp_id', title: 'Действия', cellClass: TblCellActions }],
	                // контент
	                bodyClass: _SimpleComponentsSimpleTable2.TblBody,
	                //bodyData: Store.sessions,
	                bodyData: _Dispatcher.Store.userState.join_requests,
	                cancelRequest: _this2.cancelRequest,
	                // футер
	                // события
	                //onCloseSelected: this.onCloseSelected,  // вызывается из футера по клику на "Close"
	                // вспомогательные
	                title: 'Запросы', // заголовок контейнера
	                selectionKey: 'sKey', // ключ в объекте который будет использован для флага выделения
	                selectable: false, // включает стандартный механизм выбора (кликом по ряду), можно выключить и сделать свой через bodyClass или cellClass
	                multiselect: false // можно выбирать несколько рядов
	            };

	            if (_this2.props.disabled) {
	                return null;
	            } else {
	                return React.createElement(
	                    _SimpleComponentsLoading.Loading,
	                    { dataRecived: _this2.state.profile },
	                    React.createElement(
	                        'div',
	                        { className: 'box-row-wr max-size' },
	                        React.createElement(_SimpleComponentsSimpleTable2.SimpleTable2, { opt: _this2.opt

	                        })
	                    )
	                );
	            }
	        };
	    }

	    _createClass(Requests, [{
	        key: 'componentWillMount',
	        value: function componentWillMount() {
	            var _this3 = this;

	            _api.Api.req('graph', {
	                query: {
	                    comps: {
	                        fields: ["id", "name", "addr"],
	                        sub: {
	                            users: {
	                                fields: ["id"]
	                            },
	                            tenders: {
	                                fields: ["id"]
	                            }
	                        }

	                    }
	                }
	            }, false).then(function (res) {
	                console.log(res.comps.data);
	                _this3.setState({ requests: res.comps.data });
	            });
	        }
	    }]);

	    return Requests;
	})(React.Component);

	exports.Requests = Requests;

/***/ },
/* 420 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _Dashboard = __webpack_require__(247);

	var _utils = __webpack_require__(2);

	var _Contacts__Actions_Invite = __webpack_require__(421);

	var _Contacts__Actions_Invite2 = _interopRequireDefault(_Contacts__Actions_Invite);

	var _ContactsInvitedDataTable = __webpack_require__(422);

	var _ContactsInvitedDataTable2 = _interopRequireDefault(_ContactsInvitedDataTable);

	var _ContactsDataTableJs = __webpack_require__(425);

	var _ContactsDataTableJs2 = _interopRequireDefault(_ContactsDataTableJs);

	var React = __webpack_require__(202);

	var Contacts = (function (_React$Component) {
	    _inherits(Contacts, _React$Component);

	    function Contacts(props) {
	        _classCallCheck(this, Contacts);

	        _get(Object.getPrototypeOf(Contacts.prototype), 'constructor', this).call(this, props);
	        this.state = {
	            users: []
	        };

	        this.render = function () {
	            return React.createElement(
	                'div',
	                { className: 'container-fluid' },
	                React.createElement(
	                    'div',
	                    { className: 'row' },
	                    React.createElement(
	                        'div',
	                        { className: 'col-xs-12' },
	                        React.createElement(_ContactsDataTableJs2['default'], null)
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'row' },
	                    React.createElement(
	                        'div',
	                        { className: 'col-xs-12' },
	                        React.createElement(_ContactsInvitedDataTable2['default'], null),
	                        _utils.Utils.checkFlags(_Dashboard.AppState.user.state.comp_flags, 64) ? React.createElement(_Contacts__Actions_Invite2['default'], null) : null
	                    )
	                )
	            );
	        };
	    }

	    return Contacts;
	})(React.Component);

	exports.Contacts = Contacts;

/***/ },
/* 421 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _AuthDashboard = __webpack_require__(247);

	var _Validation = __webpack_require__(223);

	var _Dispatcher = __webpack_require__(4);

	var _ControlsModalWindow = __webpack_require__(233);

	var _ControlsFormsInputSimple = __webpack_require__(225);

	var _ControlsFormsFormGroup = __webpack_require__(224);

	var _ControlsFormsButtonSimple = __webpack_require__(226);

	var _ClassesLogger = __webpack_require__(3);

	var React = __webpack_require__(202);

	var Contacts__Actions_Invite = (function (_React$Component) {
	    _inherits(Contacts__Actions_Invite, _React$Component);

	    function Contacts__Actions_Invite(props) {
	        var _this = this;

	        _classCallCheck(this, Contacts__Actions_Invite);

	        _get(Object.getPrototypeOf(Contacts__Actions_Invite.prototype), 'constructor', this).call(this, props);
	        this.state = {
	            isModalOpen: false
	        };

	        this.closeModal = function () {
	            _this.setState({ isModalOpen: false });
	        };

	        this.openModal = function () {
	            _this.setState({ isModalOpen: true });
	        };

	        this.onChangeHandler = function (obj) {
	            _this.setState(obj);
	            _this.validateForm();
	        };

	        this.saveForm = function () {
	            var message = {};

	            if (_this.state) {
	                _AuthDashboard.AppState.myCompany.userInviteSend(_this.state);
	            } else {
	                message = {
	                    message: "Ошибка при приглашение сотрудника в компанию: поля e-mail и должность обязательны для заполнения",
	                    type: "error"
	                };
	            }

	            _this.closeModal();
	            _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, message);
	        };

	        this.validateFields = {
	            fields: [{ name: "email", value: false }, { name: "position", value: false }]
	        };

	        this.validateForm = function () {
	            _this.validateFields.fields.forEach(function (field) {
	                if (_this.state[field.name] && _this.state[field.name].length) {
	                    field.value = true;
	                } else {
	                    field.value = false;
	                }
	            });
	            _this.setState({ isValidated: _this.isValidated() });
	        };

	        this.isValidated = function () {
	            return _this.validateFields.fields.every(function (field) {
	                return field.value === true;
	            });
	        };

	        this.render = function () {
	            return React.createElement(
	                'div',
	                { className: 'box-row-nw' },
	                React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.openModal, caption: 'Пригласить пользователя', type: 'primary' }),
	                React.createElement(
	                    _ControlsModalWindow.ModalWindow,
	                    { isOpen: _this.state.isModalOpen, onClose: _this.closeModal, title: 'Пригласить нового пользователя' },
	                    React.createElement(
	                        'div',
	                        { className: 'modal-container__body' },
	                        React.createElement(
	                            _ControlsFormsFormGroup.FormGroup,
	                            { name: 'E-mail', from: 'email' },
	                            React.createElement(_ControlsFormsInputSimple.InputSimple, { name: 'email', onChange: _this.onChangeHandler, validation: { typing: _Validation.Validation.typingEmail } })
	                        ),
	                        React.createElement(
	                            _ControlsFormsFormGroup.FormGroup,
	                            { name: 'Фамилия', from: 'last_name' },
	                            React.createElement(_ControlsFormsInputSimple.InputSimple, { name: 'last_name', onChange: _this.onChangeHandler })
	                        ),
	                        React.createElement(
	                            _ControlsFormsFormGroup.FormGroup,
	                            { name: 'Имя', from: 'first_name' },
	                            React.createElement(_ControlsFormsInputSimple.InputSimple, { name: 'first_name', onChange: _this.onChangeHandler })
	                        ),
	                        React.createElement(
	                            _ControlsFormsFormGroup.FormGroup,
	                            { name: 'Отчество', from: 'pat_name' },
	                            React.createElement(_ControlsFormsInputSimple.InputSimple, { name: 'pat_name', onChange: _this.onChangeHandler })
	                        ),
	                        React.createElement(
	                            _ControlsFormsFormGroup.FormGroup,
	                            { name: 'Должность', from: 'position' },
	                            React.createElement(_ControlsFormsInputSimple.InputSimple, { name: 'position', onChange: _this.onChangeHandler })
	                        ),
	                        React.createElement(
	                            _ControlsFormsFormGroup.FormGroup,
	                            { name: 'Телефон', from: 'phone' },
	                            React.createElement(_ControlsFormsInputSimple.InputSimple, { name: 'phone', onChange: _this.onChangeHandler })
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'modal-container__footer' },
	                            React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.saveForm, disabled: !_this.state.isValidated, type: 'success', caption: 'Пригласить' })
	                        )
	                    )
	                )
	            );
	        };
	    }

	    return Contacts__Actions_Invite;
	})(React.Component);

	exports['default'] = Contacts__Actions_Invite;
	module.exports = exports['default'];

/***/ },
/* 422 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _AuthDashboard = __webpack_require__(247);

	var _Dispatcher = __webpack_require__(4);

	var _ControlsLoading = __webpack_require__(230);

	var _SimpleComponentsSimpleTable2 = __webpack_require__(399);

	var _ContactsInvitedDataTable__Cell_Time = __webpack_require__(423);

	var _ContactsInvitedDataTable__Cell_Time2 = _interopRequireDefault(_ContactsInvitedDataTable__Cell_Time);

	var _ContactsInvitedDataTable__Cell_Actions = __webpack_require__(424);

	var _ContactsInvitedDataTable__Cell_Actions2 = _interopRequireDefault(_ContactsInvitedDataTable__Cell_Actions);

	var React = __webpack_require__(202);

	var ContactsInvitedDataTable = (function (_React$Component) {
	    _inherits(ContactsInvitedDataTable, _React$Component);

	    function ContactsInvitedDataTable(props) {
	        var _this = this;

	        _classCallCheck(this, ContactsInvitedDataTable);

	        _get(Object.getPrototypeOf(ContactsInvitedDataTable.prototype), 'constructor', this).call(this, props);
	        this.state = {
	            users_invited: false
	        };

	        this.componentWillMount = function () {
	            _AuthDashboard.AppState.myCompany.on('MyCompany_UsersInvited-update', _this.updateUsersInvited);
	        };

	        this.componentDidMount = function () {
	            _AuthDashboard.AppState.myCompany.getUsersInvited();
	        };

	        this.componentWillUnmount = function () {
	            _AuthDashboard.AppState.myCompany.rem('MyCompany_UsersInvited-update', _this.updateUsersInvited);
	        };

	        this.updateUsersInvited = function (users) {
	            _this.setState({ users_invited: users });
	        };

	        this.render = function () {
	            var opt = {
	                headerClass: _SimpleComponentsSimpleTable2.TblHead,
	                headerClassName: "panel-heading-grey panel-md border-btm",
	                className: "panel panel-default max-size",
	                title: "Приглашенные пользователи",
	                headData: [{ id: 'last_name', title: 'Фамилия' }, { id: 'first_name', title: 'Имя' }, { id: 'pat_name', title: 'Отчество' }, { id: 'email', title: 'Email' }, { id: 'position', title: 'Должность' }, { id: 'ctime', title: 'Создано', cellClass: _ContactsInvitedDataTable__Cell_Time2['default'] }, { id: 'id', title: 'Действия', cellClass: _ContactsInvitedDataTable__Cell_Actions2['default'] }],
	                bodyClass: _SimpleComponentsSimpleTable2.TblBody,
	                bodyData: _this.state.users_invited,
	                pagesClass: _SimpleComponentsSimpleTable2.TblPages,
	                pagesConf: {
	                    availableCapacity: [2, 5, 10],
	                    currentCapacity: 10,
	                    currentPage: 1
	                }
	            };

	            return React.createElement(
	                _ControlsLoading.Loading,
	                { dataReceived: _this.state.users_invited },
	                _this.state.users_invited.length ? React.createElement(_SimpleComponentsSimpleTable2.SimpleTable2, { opt: opt }) : null
	            );
	        };
	    }

	    return ContactsInvitedDataTable;
	})(React.Component);

	exports['default'] = ContactsInvitedDataTable;
	module.exports = exports['default'];

/***/ },
/* 423 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _SimpleComponentsTableCells = __webpack_require__(402);

	var React = __webpack_require__(202);

	var ContactsInvitedDataTable__Cell_Time = (function (_React$Component) {
	    _inherits(ContactsInvitedDataTable__Cell_Time, _React$Component);

	    function ContactsInvitedDataTable__Cell_Time(props) {
	        var _this = this;

	        _classCallCheck(this, ContactsInvitedDataTable__Cell_Time);

	        _get(Object.getPrototypeOf(ContactsInvitedDataTable__Cell_Time.prototype), 'constructor', this).call(this, props);

	        this.render = function () {
	            return React.createElement(
	                'div',
	                null,
	                React.createElement(_SimpleComponentsTableCells.TblDateUTCCls, { value: _this.props.obj.ctime })
	            );
	        };
	    }

	    return ContactsInvitedDataTable__Cell_Time;
	})(React.Component);

	exports['default'] = ContactsInvitedDataTable__Cell_Time;
	module.exports = exports['default'];

/***/ },
/* 424 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _Dispatcher = __webpack_require__(4);

	var _AuthDashboard = __webpack_require__(247);

	var _utils = __webpack_require__(2);

	var _SimpleComponentsIcons = __webpack_require__(252);

	var _ControlsModalWindow = __webpack_require__(233);

	var _ControlsFormsInputSimple = __webpack_require__(225);

	var _ControlsFormsButtonSimple = __webpack_require__(226);

	var React = __webpack_require__(202);

	var ContactsInvitedDataTable__Cell_Actions = (function (_React$Component) {
	    _inherits(ContactsInvitedDataTable__Cell_Actions, _React$Component);

	    function ContactsInvitedDataTable__Cell_Actions(props) {
	        var _this = this;

	        _classCallCheck(this, ContactsInvitedDataTable__Cell_Actions);

	        _get(Object.getPrototypeOf(ContactsInvitedDataTable__Cell_Actions.prototype), 'constructor', this).call(this, props);
	        this.state = {
	            isModalDeleteOpen: false
	        };

	        this.closeModal = function () {
	            _this.setState({ isModalDeleteOpen: false });
	        };

	        this.openModal = function () {
	            _this.setState({ isModalDeleteOpen: true });
	        };

	        this.deleteUserInvited = function () {
	            _AuthDashboard.AppState.myCompany.userInviteCanсel({ invite_id: _this.props.value });
	            _this.closeModal();
	        };

	        this.render = function () {
	            var modalDeleteProps = {
	                title: "Удаление приглашения",
	                width: 300,
	                height: 100
	            },
	                Edit = null;

	            if (_utils.Utils.checkFlags(_AuthDashboard.AppState.user.state.comp_flags, 64)) {
	                Edit = React.createElement(
	                    'div',
	                    null,
	                    React.createElement(
	                        'div',
	                        { 'data-tooltip': 'Удалить приглашение' },
	                        React.createElement(_SimpleComponentsIcons.Icon, { iconName: 'close-circle-icon', onClick: _this.openModal })
	                    ),
	                    React.createElement(
	                        _ControlsModalWindow.ModalWindow,
	                        { isOpen: _this.state.isModalDeleteOpen,
	                            onClose: _this.closeModal,
	                            width: modalDeleteProps.width,
	                            height: modalDeleteProps.height,
	                            title: modalDeleteProps.title },
	                        React.createElement(
	                            'div',
	                            { className: 'modal-container__body' },
	                            'Вы действительно хотите удалить приглашение?',
	                            React.createElement(
	                                'div',
	                                { className: 'modal-container__footer' },
	                                React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.deleteUserInvited, type: 'success', caption: 'Удалить' })
	                            )
	                        )
	                    )
	                );
	            }

	            return Edit;
	        };
	    }

	    return ContactsInvitedDataTable__Cell_Actions;
	})(React.Component);

	exports['default'] = ContactsInvitedDataTable__Cell_Actions;
	module.exports = exports['default'];

/***/ },
/* 425 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _AuthDashboard = __webpack_require__(247);

	var _ControlsLoading = __webpack_require__(230);

	var _SimpleComponentsSimpleTable2 = __webpack_require__(399);

	var _ContactsDataTable__Cell_Perms = __webpack_require__(426);

	var _ContactsDataTable__Cell_Perms2 = _interopRequireDefault(_ContactsDataTable__Cell_Perms);

	var _ContactsDataTable__Cell_Position = __webpack_require__(427);

	var _ContactsDataTable__Cell_Position2 = _interopRequireDefault(_ContactsDataTable__Cell_Position);

	var React = __webpack_require__(202);

	var ContactsDataTable = (function (_React$Component) {
	    _inherits(ContactsDataTable, _React$Component);

	    function ContactsDataTable(props) {
	        var _this = this;

	        _classCallCheck(this, ContactsDataTable);

	        _get(Object.getPrototypeOf(ContactsDataTable.prototype), 'constructor', this).call(this, props);
	        this.state = {
	            users: false
	        };

	        this.componentWillMount = function () {
	            _AuthDashboard.AppState.myCompany.on('MyCompany_Users-update', _this.updateUsers);
	        };

	        this.componentDidMount = function () {
	            _AuthDashboard.AppState.myCompany.getUsers();
	        };

	        this.componentWillUnmount = function () {
	            _AuthDashboard.AppState.myCompany.rem('MyCompany_Users-update', _this.updateUsers);
	        };

	        this.updateUsers = function (users) {
	            _this.setState({ users: users });
	        };

	        this.render = function () {
	            var opt = {
	                headerClass: _SimpleComponentsSimpleTable2.TblHead,
	                headerClassName: "panel-heading-grey panel-md border-btm",
	                className: "panel panel-default max-size",
	                title: "Сотрудники организации",
	                headData: [{ id: 'ln', title: 'Фамилия' }, { id: 'fn', title: 'Имя' }, { id: 'pn', title: 'Отчество' }, { id: 'position', title: 'Должность', cellClass: _ContactsDataTable__Cell_Position2['default'] }, { id: 'phone', title: 'Моб.телефон' }, { id: 'email', title: 'Email' }, { id: 'cflg', title: 'Права', cellClass: _ContactsDataTable__Cell_Perms2['default'] }],
	                bodyClass: _SimpleComponentsSimpleTable2.TblBody,
	                bodyData: _this.state.users,
	                pagesClass: _SimpleComponentsSimpleTable2.TblPages,
	                pagesConf: {
	                    availableCapacity: [2, 5, 10],
	                    currentCapacity: 10,
	                    currentPage: 1
	                }
	            };

	            var opt1 = {
	                // bodyClass: TblBody,
	                title: 'Сотрудники компании',
	                bodyData: _this.state.users
	            };

	            return React.createElement(
	                _ControlsLoading.Loading,
	                { dataReceived: _this.state.users },
	                React.createElement(_SimpleComponentsSimpleTable2.SimpleTable2, { opt: opt })
	            );
	        };
	    }

	    return ContactsDataTable;
	})(React.Component);

	exports['default'] = ContactsDataTable;
	module.exports = exports['default'];

/***/ },
/* 426 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _Dispatcher = __webpack_require__(4);

	var _AuthDashboard = __webpack_require__(247);

	var _utils = __webpack_require__(2);

	var _ClassesLogger = __webpack_require__(3);

	var _ControlsIcon = __webpack_require__(232);

	var _ControlsModalWindow = __webpack_require__(233);

	var _ControlsFormsButtonSimple = __webpack_require__(226);

	var _ControlsSettingsBlock = __webpack_require__(238);

	var React = __webpack_require__(202);

	var ContactsDataTable__Cell_Perms = (function (_React$Component) {
	    _inherits(ContactsDataTable__Cell_Perms, _React$Component);

	    function ContactsDataTable__Cell_Perms(props) {
	        var _this = this;

	        _classCallCheck(this, ContactsDataTable__Cell_Perms);

	        _get(Object.getPrototypeOf(ContactsDataTable__Cell_Perms.prototype), 'constructor', this).call(this, props);
	        this.state = {
	            isModalEditPermsOpen: false,
	            perms: this.props.value
	        };

	        this.componentWillReceiveProps = function (nextProps) {
	            _this.start = nextProps.value;
	            _this.setState({ perms: nextProps.value });
	        };

	        this.closeModal = function () {
	            _this.setState({
	                isModalEditPermsOpen: false,
	                perms: _this.start
	            });
	        };

	        this.openModal = function () {
	            _this.setState({ isModalEditPermsOpen: true });
	        };

	        this.onChangeHandler = function (perm) {
	            _this.setState({ perms: perm });
	        };

	        this.saveModal = function () {
	            _AuthDashboard.AppState.myCompany.userPermsChange(_this.state.perms, _this.props.obj.uid);
	            _this.closeModal();
	        };

	        this.render = function () {
	            var Perms = _AuthDashboard.AppState.myCompany.getPerms(_this.props.value),
	                Edit = undefined;

	            if (_utils.Utils.checkFlags(_AuthDashboard.AppState.user.state.comp_flags, 2)) {
	                Edit = React.createElement(
	                    'div',
	                    { style: {
	                            'display': 'inline-block'
	                        } },
	                    React.createElement(
	                        'div',
	                        { 'data-tooltip': 'Изменить права' },
	                        React.createElement(_ControlsIcon.Icon, { name: 'edit', size: 16, onClick: _this.openModal })
	                    ),
	                    React.createElement(
	                        _ControlsModalWindow.ModalWindow,
	                        { isOpen: _this.state.isModalEditPermsOpen, onClose: _this.closeModal, width: 355, title: 'Изменение прав сотрудника' },
	                        React.createElement(
	                            'div',
	                            { className: 'modal-container__body' },
	                            React.createElement(_ControlsSettingsBlock.SettingsBlock, { name: 'show-my-profile', type: 'checkbox',
	                                flags: _this.state.perms, change: _this.onChangeHandler,
	                                choice: _AuthDashboard.AppState.myCompany.perms_list }),
	                            React.createElement(
	                                'div',
	                                { className: 'modal-container__footer' },
	                                React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { caption: 'Изменить', type: 'success', onClick: _this.saveModal, disabled: _this.start === _this.state.perms || _this.state.perms === 0 })
	                            )
	                        )
	                    )
	                );
	            }

	            return React.createElement(
	                'div',
	                null,
	                Perms.toString(),
	                Edit
	            );
	        };

	        this.start = this.props.value;
	    }

	    return ContactsDataTable__Cell_Perms;
	})(React.Component);

	exports['default'] = ContactsDataTable__Cell_Perms;
	module.exports = exports['default'];

/***/ },
/* 427 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _Dispatcher = __webpack_require__(4);

	var _AuthDashboard = __webpack_require__(247);

	var _utils = __webpack_require__(2);

	var _ClassesLogger = __webpack_require__(3);

	var _ControlsIcon = __webpack_require__(232);

	var _ControlsModalWindow = __webpack_require__(233);

	var _ControlsFormsFormGroup = __webpack_require__(224);

	var _ControlsFormsInputSimple = __webpack_require__(225);

	var _ControlsFormsButtonSimple = __webpack_require__(226);

	var React = __webpack_require__(202);

	var ContactsDataTable__Cell_Position = (function (_React$Component) {
	    _inherits(ContactsDataTable__Cell_Position, _React$Component);

	    function ContactsDataTable__Cell_Position(props) {
	        var _this = this;

	        _classCallCheck(this, ContactsDataTable__Cell_Position);

	        _get(Object.getPrototypeOf(ContactsDataTable__Cell_Position.prototype), 'constructor', this).call(this, props);
	        this.state = {
	            isModalEditPositionOpen: false,
	            position: this.props.obj.position
	        };

	        this.closeModal = function () {
	            _this.setState({ isModalEditPositionOpen: false });
	        };

	        this.openModal = function () {
	            _this.setState({ isModalEditPositionOpen: true });
	        };

	        this.editUserPosition = function () {
	            _AuthDashboard.AppState.myCompany.userPositionChange({ user_id: _this.props.obj.uid, position: _this.state.position });
	            _this.closeModal();
	        };

	        this.onChangeHandler = function (obj) {
	            _this.setState(obj);
	            _this.validateForm();
	        };

	        this.validateFields = {
	            fields: [{ name: "position", value: false }]
	        };

	        this.validateForm = function () {
	            _this.validateFields.fields.forEach(function (field) {
	                if (_this.state[field.name] && _this.state[field.name].length) {
	                    field.value = true;
	                } else {
	                    field.value = false;
	                }
	            });
	            _this.setState({ isValidated: _this.isValidated() });
	        };

	        this.isValidated = function () {
	            return _this.validateFields.fields.every(function (field) {
	                return field.value === true;
	            });
	        };

	        this.render = function () {
	            var Edit = undefined;

	            if (_utils.Utils.checkFlags(_AuthDashboard.AppState.user.state.comp_flags)) {
	                Edit = React.createElement(
	                    'div',
	                    { style: {
	                            'display': 'inline-block'
	                        } },
	                    React.createElement(
	                        'div',
	                        { 'data-tooltip': 'Изменить должность' },
	                        React.createElement(_ControlsIcon.Icon, { name: 'edit', onClick: _this.openModal, size: 16 })
	                    ),
	                    React.createElement(
	                        _ControlsModalWindow.ModalWindow,
	                        { isOpen: _this.state.isModalEditPositionOpen, onClose: _this.closeModal, width: 350, title: 'Изменение должности сотрудника' },
	                        React.createElement(
	                            'div',
	                            { className: 'modal-container__body' },
	                            React.createElement(
	                                _ControlsFormsFormGroup.FormGroup,
	                                { name: 'position', from: 'Должность' },
	                                React.createElement(_ControlsFormsInputSimple.InputSimple, { name: 'position', onChange: _this.onChangeHandler, value: _this.state.position })
	                            ),
	                            React.createElement(
	                                'div',
	                                { className: 'modal-container__footer' },
	                                React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.editUserPosition, disabled: !_this.state.isValidated, type: 'success', caption: 'Изменить' })
	                            )
	                        )
	                    )
	                );
	            }

	            return React.createElement(
	                'div',
	                null,
	                _this.props.value,
	                Edit
	            );
	        };
	    }

	    return ContactsDataTable__Cell_Position;
	})(React.Component);

	exports['default'] = ContactsDataTable__Cell_Position;
	module.exports = exports['default'];

/***/ },
/* 428 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _SimpleComponentsSmallPanel = __webpack_require__(407);

	var _SimpleComponentsTransparentButton = __webpack_require__(264);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	var _SimpleComponentsModalWindow = __webpack_require__(362);

	var _SimpleComponentsInputSimple = __webpack_require__(248);

	var _SimpleComponentsInputCheckBox2 = __webpack_require__(400);

	var _SimpleComponentsInputSelect2 = __webpack_require__(267);

	var _SimpleComponentsRadioInput = __webpack_require__(417);

	var _api = __webpack_require__(1);

	var _AuthDashboard = __webpack_require__(247);

	var _Dispatcher = __webpack_require__(4);

	var _ClassesLogger = __webpack_require__(3);

	var _ClassesLogger2 = _interopRequireDefault(_ClassesLogger);

	var _ControlsFormsButtonSimple = __webpack_require__(226);

	var React = __webpack_require__(202);

	var PrivateSettings = React.createClass({
	    displayName: 'PrivateSettings',

	    getInitialState: function getInitialState() {
	        var comp = this.props.company;
	        var taxationList = _Dispatcher.Dictionary.taxationList.map(function (item, key) {
	            if (item.tag == comp.taxation) {
	                return { id: item.tag, value: item.value, __selected__: true };
	            } else {
	                return { id: item.tag, value: item.value };
	            }
	        });
	        return {
	            isModalOpen: false,
	            isEditMode: false,
	            rel_transport_from: comp.rel_transport_from,
	            rel_transport_to: comp.rel_transport_to,
	            taxationList: taxationList,
	            taxation: comp.taxation
	        };
	    },

	    componentWillReceiveProps: function componentWillReceiveProps() {
	        this.forceUpdate();
	    },

	    closeModal: function closeModal() {
	        this.setState({ isModalOpen: false });
	    },

	    saveChanges: function saveChanges() {
	        var _this = this;

	        console.log("save");
	        var s = this.state;
	        var params = {
	            rel_transport_from: s.rel_transport_from,
	            rel_transport_to: s.rel_transport_to,
	            taxation: s.taxation
	        };
	        var message = {};
	        _api.Api.updateCompanyRequest(this.state).then(function (res) {
	            if (res.err) {
	                _ClassesLogger2['default'].error(_this, 'Error while creating the price request', res.msg);
	                message = { message: res.msg, type: "error" };
	            } else {
	                message = { message: "Настройки компании сохранены", type: "info" };
	                _AuthDashboard.AppState.myCompany.update();
	                _Dispatcher.Events.run(_Dispatcher.Events.EV_COMP_DETAILS);
	            }
	            _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, message);
	        });
	    },

	    updateFromInputs: function updateFromInputs(v) {
	        this.setState({ isEditMode: true });
	    },

	    onChangeInputSelect: function onChangeInputSelect(selector) {
	        console.log(selector.props.list, selector.getSelectedList()[0].id);
	        this.setState({ taxationList: selector.props.list });
	        this.setState({ taxation: selector.getSelectedList()[0].id });
	        this.setState({ isEditMode: true });
	    },

	    render: function render() {

	        return React.createElement(
	            'div',
	            { className: 'box-cln-nw' },
	            React.createElement(
	                'div',
	                { className: 'box-cln-nw col-large' },
	                React.createElement(
	                    'div',
	                    { className: 'box-cln-nw panel-md' },
	                    React.createElement(
	                        'div',
	                        { className: 'divider font600' },
	                        'Кто может указать мою компанию в качестве Перевозчика:'
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'message message-nl' },
	                        React.createElement(_SimpleComponentsRadioInput.RadioInput, {
	                            labelWidth: 0,
	                            choice: [{ text: "Любая компания", value: "any" }, { text: "Никто", value: "none" }, { text: "Только по запросу", value: "request" }],
	                            selected: this.state.rel_transport_to,
	                            inputName: 'rel_transport_to',
	                            returnValue: this.updateFromInputs
	                        })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'box-cln-nw panel-md' },
	                    React.createElement(
	                        'div',
	                        { className: 'divider font600' },
	                        'Кто может указать мою компанию в качестве Заказчика перевозки (Грузовладельца):'
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'message message-nl' },
	                        React.createElement(_SimpleComponentsRadioInput.RadioInput, {
	                            labelWidth: 0,
	                            choice: [{ text: "Любая компания", value: "any" }, { text: "Никто", value: "none" }, { text: "Только по запросу", value: "request" }],
	                            selected: this.state.rel_transport_from,
	                            inputName: 'rel_transport_from',
	                            returnValue: this.updateFromInputs
	                        })
	                    )
	                )
	            ),
	            React.createElement(
	                'div',
	                { className: 'box-cln-nw col-large' },
	                React.createElement(
	                    'div',
	                    { className: 'box-cln-nw panel-md' },
	                    React.createElement(
	                        'div',
	                        { className: 'divider font600' },
	                        'Система налогообложения'
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'message message-nl' },
	                        React.createElement(
	                            'p',
	                            null,
	                            'Укажите систему налогообложения компании.'
	                        )
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'message message-nl' },
	                        React.createElement(_SimpleComponentsInputSelect2.InputSelect2, { noIcon: true, list: this.state.taxationList, onChanged: this.onChangeInputSelect })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'box-row-nw just-end table-footer table-pr' },
	                    React.createElement(_SimpleComponentsModalWindow.ModalWindow, { isOpen: this.state.isModalOpen, onClose: this.closeModal }),
	                    React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { type: 'success', disabled: !this.state.isEditMode, onClick: this.saveChanges, caption: 'Сохранить' })
	                )
	            )
	        );
	    }
	});

	var CompanySettings = React.createClass({
	    displayName: 'CompanySettings',

	    render: function render() {
	        return React.createElement(
	            'div',
	            { className: 'col-xs-12' },
	            React.createElement(PrivateSettings, { company: this.props.company })
	        );
	    }
	});

	exports.CompanySettings = CompanySettings;

/***/ },
/* 429 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _SimpleComponentsSmallPanelTest = __webpack_require__(430);

	var _SimpleComponentsInputText = __webpack_require__(408);

	var _SimpleComponentsTransparentButton = __webpack_require__(264);

	var _SimpleComponentsLoading = __webpack_require__(361);

	var _TenderForm = __webpack_require__(431);

	var _Dispatcher = __webpack_require__(4);

	var _SimpleComponentsCard = __webpack_require__(418);

	var _SimpleComponentsCard2 = _interopRequireDefault(_SimpleComponentsCard);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	var _CreateTender = __webpack_require__(433);

	var _utils = __webpack_require__(2);

	var _api = __webpack_require__(1);

	var _SimpleComponentsModalWindow = __webpack_require__(362);

	var React = __webpack_require__(202);

	var NewForm = (function (_React$Component) {
	    _inherits(NewForm, _React$Component);

	    function NewForm() {
	        var _this = this;

	        _classCallCheck(this, NewForm);

	        _get(Object.getPrototypeOf(NewForm.prototype), 'constructor', this).apply(this, arguments);

	        this.state = {};

	        this.saveForm = function (state) {
	            console.log("debug form");
	            console.debug(_this);
	            var success = _this.props.params.onSuccessSave;
	            var err = _this.props.params.onErrorSave;
	            _this.props.params.saveData.apply(_this.props.params.context, state).then(function (res) {
	                if (res.err) {
	                    err(res.err, res.msg);
	                } else {
	                    success(res);
	                }
	            });
	        };

	        this.render = function () {
	            return React.createElement(
	                'div',
	                null,
	                _this.props.children,
	                React.createElement(
	                    'p',
	                    null,
	                    '1'
	                ),
	                React.createElement(
	                    'button',
	                    { onClick: _this.saveForm },
	                    'Save'
	                ),
	                React.createElement(
	                    'p',
	                    null,
	                    '2'
	                )
	            );
	        };
	    }

	    _createClass(NewForm, null, [{
	        key: 'propTypes',
	        value: {
	            params: React.PropTypes.object.isRequired
	        },
	        enumerable: true
	    }]);

	    return NewForm;
	})(React.Component);

	var CardFooterOwner = React.createClass({
	    displayName: 'CardFooterOwner',

	    propTypes: {
	        footerProps: React.PropTypes.any

	    },
	    deleteTender: function deleteTender() {
	        var _this2 = this;

	        //Actions.deleteTender(this.props.footerProps.id)
	        _api.Api.deleteTender(this.props.footerProps.id).then(function (res) {
	            if (res.err) {
	                console.log(res.msg);
	            } else {
	                console.log(res);
	                _this2.props.footerProps.update();
	            }
	        });
	    },
	    edit: function edit() {
	        this.props.footerProps.triggerEdit(this.props.footerProps.idInStore);
	    },
	    render: function render() {
	        return React.createElement(
	            'div',
	            { className: 'box-row-nw just-end table-footer table-pr' },
	            React.createElement(
	                'a',
	                { target: '_blank', href: this.props.footerProps.link },
	                React.createElement(_SimpleComponentsTransparentButton.TransparentButton, { caption: 'Подробнее' })
	            ),
	            React.createElement(_SimpleComponentsTransparentButton.TransparentButton, { onClick: this.edit, caption: 'Редактировать' }),
	            React.createElement(_SimpleComponentsTransparentButton.TransparentButton, { onClick: this.deleteTender, caption: 'Удалить' })
	        );
	    }

	});

	var Tenders = React.createClass({
	    displayName: 'Tenders',

	    getTenders: function getTenders() {
	        var _this3 = this;

	        _api.Api.req('graph', {
	            query: {
	                comps: {
	                    filters: [["id", "eq", this.props.company.id]],
	                    sub: {
	                        tenders: {},
	                        owned_tenders: {
	                            src: "tenders",
	                            relation: "comp_owner_of_tender"
	                        }
	                    }
	                }
	            }
	        }, false).then(function (res) {
	            //console.log("GOT tenders");
	            //console.log(res);
	            var tenders = res.comps.data[0].tenders.data;
	            var owned_tenders = res.comps.data[0].owned_tenders.data;
	            _this3.setState({ tenders: tenders, owned_tenders: owned_tenders });
	        });
	    },

	    componentWillMount: function componentWillMount() {
	        this.getTenders();
	    },

	    getInitialState: function getInitialState() {
	        return {
	            company: this.props.company,
	            editMode: false,
	            selectedTender: null,
	            tenders: [],
	            owned_tenders: [],
	            isModalOpen: false
	        };
	    },
	    createTender: function createTender() {
	        this.setState({ isModalOpen: true });
	    },
	    editTender: function editTender(id) {
	        this.setState({
	            editMode: !this.state.editMode,
	            selectedTender: id
	        });
	        this.getTenders();
	    },
	    onModalClose: function onModalClose() {
	        this.setState({ isModalOpen: false });
	    },
	    testEvent: function testEvent(e) {
	        console.log("test event");
	        console.log(e);
	    },
	    successSave: function successSave(e) {
	        console.log("successSave");
	        console.log(e);
	    },
	    errorSave: function errorSave(e, msg) {
	        console.log("errorSave");
	        console.log(e, msg);
	    },

	    render: function render() {
	        var _this4 = this;

	        //console.log("Tenders State");
	        //console.log(this.state);
	        var tenders = this.state.owned_tenders;
	        //console.log(tenders);
	        var Tenders = tenders.map(function (tender, id) {
	            var startDate = new _utils.DateTime(tender.stime);
	            var endDate = new _utils.DateTime(tender.etime);
	            var publicDate = new _utils.DateTime(tender.ctime);
	            return React.createElement(
	                _SimpleComponentsCard2['default'],
	                { key: id,
	                    title: tender.name,
	                    subTitle: tender.organizer,
	                    footer: CardFooterOwner,
	                    footerProps: {
	                        id: tender.id,
	                        link: tender.organizer,
	                        triggerEdit: _this4.editTender,
	                        idInStore: id,
	                        update: _this4.getTenders

	                    }
	                },
	                React.createElement(
	                    'div',
	                    { className: 'box-row-nw just-btw' },
	                    React.createElement(
	                        'div',
	                        { className: 'card-p' },
	                        React.createElement(
	                            'p',
	                            { className: 'font-bold' },
	                            'Начало:'
	                        ),
	                        React.createElement(
	                            'p',
	                            null,
	                            startDate.getFullMonthDate()
	                        )
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'card-p' },
	                        React.createElement(
	                            'p',
	                            { className: 'font-bold' },
	                            'Окончание:'
	                        ),
	                        React.createElement(
	                            'p',
	                            null,
	                            endDate.getFullMonthDate()
	                        )
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'card-p card-disab' },
	                        React.createElement(
	                            'p',
	                            { className: 'font-bold' },
	                            'Дата публикации:'
	                        ),
	                        React.createElement(
	                            'p',
	                            null,
	                            publicDate.getFullMonthDate()
	                        ),
	                        React.createElement(
	                            'p',
	                            null,
	                            publicDate.getTime()
	                        )
	                    )
	                )
	            );
	        });

	        var newParams = {
	            formName: "Создание тендера",
	            saveData: _api.Api.createTender,
	            context: _api.Api,
	            onSaveData: this.testEvent,
	            onSuccessSave: this.successSave,
	            onErrorSave: this.errorSave
	        };

	        return React.createElement(
	            'div',
	            null,
	            React.createElement(
	                _SimpleComponentsFlexBox.FlexBox,
	                { direction: 'row' },
	                React.createElement(
	                    'div',
	                    { className: 'box-row-nw align-center conn-header panel panel-default' },
	                    React.createElement(
	                        'div',
	                        { className: 'table-pr sm-header-bord' },
	                        React.createElement(
	                            'a',
	                            { href: '', className: 'sm-header-a font-sec font600 text-under' },
	                            'Наши тендеры'
	                        )
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'table-pr table-pl sm-header-bord' },
	                        React.createElement(
	                            'a',
	                            { href: '', className: 'sm-header-a font-sec font600 text-under' },
	                            'Закладки'
	                        )
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'table-pl' },
	                        React.createElement(
	                            'a',
	                            { href: '', className: 'sm-header-a font-sec font600 text-under' },
	                            'Приглашения'
	                        )
	                    )
	                )
	            ),
	            React.createElement(
	                'div',
	                { className: 'box-row-nw col-large' },
	                React.createElement(
	                    'div',
	                    { className: 'box-col-nw' },
	                    Tenders,
	                    React.createElement(_SimpleComponentsTransparentButton.TransparentButton, { onClick: this.createTender, caption: 'Создать' })
	                ),
	                React.createElement(
	                    _SimpleComponentsModalWindow.ModalWindow,
	                    { isOpen: this.state.isModalOpen, onClose: this.onModalClose },
	                    React.createElement(
	                        NewForm,
	                        { params: newParams },
	                        React.createElement(
	                            'div',
	                            { value: 'fff' },
	                            'ggg'
	                        ),
	                        React.createElement(
	                            'div',
	                            null,
	                            'ggg'
	                        )
	                    )
	                )
	            )
	        );
	    }
	});

	exports.Tenders = Tenders;

	//
	//<div className="marg-lr col-default">
	//                <Loading dataRecived={!this.state.editMode} dontShow={true}>
	//                    <div className="test-animate">
	//                        {Tenders}
	//                    </div>
	//                    <SmallPanelTest headerName="Создание тендера" className="test2-animate">
	//                        <div className="box-row-nw just-end table-footer table-pr">
	//                            <TransparentButton onClick={this.createTender} caption = "Создать" />
	//                        </div>
	//                    </SmallPanelTest>
	//                </Loading>
	//                <Loading dataRecived={this.state.editMode} dontShow={true} >
	//                    <CreateTender
	//                        company={this.props.company}
	//                        tenderObject={tenders[this.state.selectedTender]}
	//                        backToTenders={this.editTender}
	//                        />
	//                </Loading>
	//            </div>

/***/ },
/* 430 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _SimpleComponentsIcons = __webpack_require__(252);

	var React = __webpack_require__(202);

	var SmallPanelTest = React.createClass({
	    displayName: 'SmallPanelTest',

	    getInitialState: function getInitialState() {
	        return {
	            open: true
	        };
	    },
	    trigger: function trigger() {
	        this.setState({
	            open: this.state.open ? false : true
	        });
	    },
	    render: function render() {

	        var icon = this.state.open ? "expand-less" : "expand-more";
	        var cl = this.props.className ? this.props.className : "" + " box-row-nw";

	        if (this.props.disabled) {
	            return null;
	        } else {
	            return React.createElement(
	                'div',
	                { className: cl },
	                React.createElement(
	                    'div',
	                    { className: 'panel panel-default col-default' },
	                    React.createElement(
	                        'div',
	                        { className: 'panel-heading panel-md box-row-nw just-btw' },
	                        React.createElement(
	                            'h3',
	                            { className: 'font-title' },
	                            this.props.headerName
	                        ),
	                        React.createElement(
	                            'span',
	                            { onClick: this.trigger },
	                            React.createElement(_SimpleComponentsIcons.Icon, { iconName: icon })
	                        )
	                    ),
	                    this.state.open ? this.props.children : null
	                )
	            );
	        }
	    }
	});
	exports.SmallPanelTest = SmallPanelTest;

/***/ },
/* 431 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _Dispatcher = __webpack_require__(4);

	var _api = __webpack_require__(1);

	var _utils = __webpack_require__(2);

	var _SimpleComponentsSmallPanel = __webpack_require__(407);

	var _SimpleComponentsLoading = __webpack_require__(361);

	var _SimpleComponentsInputText = __webpack_require__(408);

	var _SimpleComponentsInputAddress = __webpack_require__(432);

	var _SimpleComponentsTransparentButton = __webpack_require__(264);

	var _SimpleComponentsInputSelectJs = __webpack_require__(266);

	var _SimpleComponentsRadioInputJs = __webpack_require__(417);

	var _SimpleComponentsDateSimple = __webpack_require__(403);

	var React = __webpack_require__(202);

	var TenderForm = React.createClass({
	    displayName: 'TenderForm',

	    propTypes: {
	        id: React.PropTypes.number.isRequired,
	        name: React.PropTypes.string.isRequired,
	        stime: React.PropTypes.string.isRequired,
	        etime: React.PropTypes.string.isRequired,
	        organizer: React.PropTypes.string.isRequired

	    },

	    getInitialState: function getInitialState() {
	        return {
	            comp_id: _Dispatcher.Store.userState.comps[0].id,
	            id: this.props.id,
	            editMode: false,
	            name: this.props.name,
	            stime: this.props.stime,
	            etime: this.props.etime,
	            organizer: this.props.organizer

	        };
	    },

	    componentWillMount: function componentWillMount() {
	        console.log("CREATE Tender");
	        console.log(this.props.params);
	    },
	    mergeState: function mergeState(obj) {
	        this.setState(obj);
	    },

	    cancelEdit: function cancelEdit() {
	        //window.location.hash="#/dashboard/tenders";
	        this.setState({ editMode: false });
	    },

	    editInfo: function editInfo() {
	        this.setState({ editMode: true });
	    },
	    saveInfo: function saveInfo() {
	        var params = {
	            tender_id: this.state.id,
	            name: this.state.name,
	            stime: this.state.stime,
	            etime: this.state.etime,
	            organizer: this.state.organizer

	        };
	        this.setState({ editMode: false });
	        _Dispatcher.Actions.updateTender(params);
	    },
	    deleteTender: function deleteTender() {
	        _Dispatcher.Actions.deleteTender(this.props.id);
	    },

	    render: function render() {
	        console.log(this.state);
	        if (this.props.hidden) {
	            return null;
	        }
	        return React.createElement(
	            'div',
	            { className: 'box-row-wr align-start' },
	            React.createElement(
	                _SimpleComponentsSmallPanel.SmallPanel,
	                { headerName: this.props.name },
	                React.createElement(
	                    'div',
	                    { className: 'box-cln-nw align-stretch panel-md' },
	                    React.createElement(
	                        'div',
	                        { className: '' },
	                        React.createElement(_SimpleComponentsInputText.InputText, {
	                            type: 'text',
	                            active: this.state.editMode,
	                            inputName: 'name',
	                            caption: 'Название тендера',
	                            value: this.state.name,
	                            returnValue: this.mergeState,
	                            labelWidth: 150
	                        })
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'wrap-tb' },
	                        React.createElement(_SimpleComponentsDateSimple.DateSimple, {
	                            name: 'stime',
	                            caption: 'Дата начала приема заявок',
	                            onChange: this.mergeState,
	                            value: this.state.stime,
	                            active: this.state.editMode,
	                            labelWidth: 150
	                        })
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'wrap-tb' },
	                        React.createElement(_SimpleComponentsDateSimple.DateSimple, {
	                            name: 'etime',
	                            caption: 'Дата окончания приема заявок',
	                            onChange: this.mergeState,
	                            value: this.state.etime,
	                            active: this.state.editMode,
	                            labelWidth: 150
	                        })
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: '' },
	                        React.createElement(_SimpleComponentsInputText.InputText, {
	                            type: 'text',
	                            active: this.state.editMode,
	                            inputName: 'organizer',
	                            caption: 'Электронная площадка торгов',
	                            value: this.state.organizer,
	                            returnValue: this.mergeState,
	                            labelWidth: 150
	                        })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'box-row-nw just-end table-footer table-pr' },
	                    React.createElement(_SimpleComponentsTransparentButton.TransparentButton, { hidden: this.state.editMode, onClick: this.editInfo, caption: 'Изменить' }),
	                    React.createElement(TransparentButtonton, { hidden: this.state.editMode, onClick: this.deleteTender,
	                        caption: 'Удалить' }),
	                    React.createElement(_SimpleComponentsTransparentButton.TransparentButton, { hidden: !this.state.editMode, onClick: this.saveInfo, caption: 'Сохранить' }),
	                    React.createElement(_SimpleComponentsTransparentButton.TransparentButton, { hidden: !this.state.editMode, onClick: this.cancelEdit, caption: 'Отменить' })
	                )
	            )
	        );
	    }
	});

	exports.TenderForm = TenderForm;

/***/ },
/* 432 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _utils = __webpack_require__(2);

	var _ClassesLogger = __webpack_require__(3);

	var _ClassesLogger2 = _interopRequireDefault(_ClassesLogger);

	var React = __webpack_require__(202);

	var PureRenderMixin = React.PureRenderMixin;

	var InputAddress = React.createClass({
	    displayName: 'InputAddress',

	    mixins: [PureRenderMixin],

	    propTypes: {
	        labelWidth: React.PropTypes.number,
	        value: React.PropTypes.string
	    },
	    getDefaultProps: function getDefaultProps() {
	        return {
	            labelWidth: 114,
	            results: 5
	        };
	    },

	    //getInitialState () {
	    //  return({})
	    //},

	    focus: function focus() {
	        this.isFocus = true;
	        this.expanded = true;
	        this.setState({});
	    },

	    blur: function blur() {
	        this.isFocus = false;
	        this.expanded = false;
	        this.setState({});
	    },

	    change: function change(e) {
	        //console.debug('[InputAddress] change ' + e.target.value)
	        this.addr = e.target.value;
	        if (this.tid) {
	            clearTimeout(this.tid);
	            this.tid = null;
	        }
	        this.tid = setTimeout(this.addrTimerHr, 1000);
	        if (this.props.onChange) {
	            var obj;
	            if (this.props.name) {
	                obj = {};
	                obj[this.props.name] = e.target.value;
	            } else {
	                obj = e.target.value;
	            }
	            this.props.onChange(obj);
	        }
	    },

	    addrTimerHr: function addrTimerHr() {
	        var _this = this;

	        console.log('[InputAddress] addrTimerHr');
	        if (!ymaps) {
	            console.error('ymaps not avaliable now');
	            return;
	        }
	        this.selectedAddrObj = null;
	        var myGeocoder = ymaps.geocode(this.addr, { json: true, results: this.props.results });
	        myGeocoder.then(function (res) {
	            _this.sugg = res.GeoObjectCollection.featureMember;
	            //console.debug(this.sugg)
	            _this.expanded = true;
	            _this.forceUpdate();
	        }, function (err) {
	            console.error('ymaps.geocode failed: ' + err);
	        });
	    },

	    addrSelect: function addrSelect(o) {
	        //console.log('[InputAddress] addrSelect');
	        //console.debug(o);
	        this.addr = o.metaDataProperty.GeocoderMetaData.text;
	        var pos = _utils.Utils.extract_longlat(o.Point.pos) || { x: null, y: null };
	        this.refs['input'].getDOMNode().value = this.addr;
	        this.expanded = false;
	        this.setState({});
	        if (this.props.onSelect) this.props.onSelect(this.addr, o, pos.x, pos.y);
	    },

	    render: function render() {
	        var _this2 = this;

	        //console.log('[InputAddress] render');

	        var suggest = undefined;
	        if (this.expanded && this.sugg && this.sugg.length > 0) {
	            suggest = React.createElement(
	                'div',
	                { className: 'addressList box-cln-nw' },
	                this.sugg.map(function (o, i) {
	                    return React.createElement(
	                        'div',
	                        { key: i, className: 'addressListItem',
	                            onMouseDown: _this2.addrSelect.bind(null, o.GeoObject) },
	                        o.GeoObject.metaDataProperty.GeocoderMetaData.text
	                    );
	                })
	            );
	        }

	        var labelStyle = {
	            flex: "0 0 " + this.props.labelWidth + "px"
	        };
	        return React.createElement(
	            'div',
	            { className: 'box-cln-nw' },
	            React.createElement(
	                'div',
	                { className: this.props.className ? "box-row-nw align-center " + this.props.className : "box-row-nw align-center" },
	                React.createElement('textarea', {
	                    defaultValue: this.props.value,
	                    ref: 'input', type: this.props.type,
	                    disabled: !this.props.active,
	                    className: 'text-area input-underline',
	                    onFocus: this.focus,
	                    onBlur: this.blur,
	                    onChange: this.change
	                })
	            ),
	            suggest
	        );
	    }

	});

	exports.InputAddress = InputAddress;

	// <label
	//     style={labelStyle}
	//     className={this.isFocus ? 'label label-active' : 'label'}
	//     >{this.props.caption}</label>
	//    
	//    
	//    
	//             //     if (this.expanded && this.sugg && this.sugg.length > 0) {
	//     suggest = (
	//         <div style={{marginLeft: this.props.labelWidth}} className="addressList box-cln-nw">
	//             {
	//                 this.sugg.map((o, i) => {
	//                     return <div key={i} className="addressListItem"
	//                                 onMouseDown={this.addrSelect.bind(null, o.GeoObject)}>{o.GeoObject.metaDataProperty.GeocoderMetaData.text}</div>
	//                 })
	//             }
	//         </div>
	//     )
	// }

/***/ },
/* 433 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _Dispatcher = __webpack_require__(4);

	var _api = __webpack_require__(1);

	var _utils = __webpack_require__(2);

	var _SimpleComponentsSmallPanel = __webpack_require__(407);

	var _SimpleComponentsLoading = __webpack_require__(361);

	var _SimpleComponentsInputText = __webpack_require__(408);

	var _SimpleComponentsInputAddress = __webpack_require__(432);

	var _SimpleComponentsTransparentButton = __webpack_require__(264);

	var _SimpleComponentsInputSelectJs = __webpack_require__(266);

	var _SimpleComponentsRadioInputJs = __webpack_require__(417);

	var _SimpleComponentsDateSimple = __webpack_require__(403);

	var React = __webpack_require__(202);

	var CreateTender = React.createClass({
	    displayName: 'CreateTender',

	    // переделать на ES6 и добавить типы свойств

	    getInitialState: function getInitialState() {
	        return {
	            comp_id: this.props.company.id,
	            name: this.props.tenderObject ? this.props.tenderObject.name : null,
	            stime: this.props.tenderObject ? this.props.tenderObject.stime : null,
	            etime: this.props.tenderObject ? this.props.tenderObject.etime : null,
	            organizer: this.props.tenderObject ? this.props.tenderObject.organizer : null
	        };
	    },

	    componentWillMount: function componentWillMount() {
	        console.log("CREATE Tender");
	        console.log(this.props.params);
	    },
	    mergeState: function mergeState(obj) {
	        console.log('[CreateTender] mergeState');
	        console.debug(obj);
	        this.setState(obj);
	    },

	    cancelCreate: function cancelCreate() {
	        if (this.props.tenderObject) {
	            this.props.backToTenders();
	        } else {
	            window.location.hash = "#/dashboard/company/tenders";
	        }
	    },

	    createTender: function createTender() {
	        //console.log('[CreateTender] createTender');
	        //console.debug(this.state);

	        if (!_utils.Utils.is_valid_yyyymmdd(this.state.stime)) {
	            alert('Неверная дата начала');
	            return;
	        }

	        if (!_utils.Utils.is_valid_yyyymmdd(this.state.etime)) {
	            alert('Неверная дата окончания');
	            return;
	        }

	        _api.Api.createTender(params).then(function (res) {
	            if (res.err) {
	                console.log(res.msg);
	            } else {
	                console.log(res);
	                window.location.hash = 'dashboard/company/tenders';
	            }
	        });
	    },

	    saveTender: function saveTender() {
	        var _this = this;

	        var newEdition = this.state;
	        delete newEdition.comp_id;
	        newEdition.tender_id = this.props.tenderObject.id;

	        //Actions.updateTender(newEdition, this.props.backToTenders)

	        _api.Api.updateTender(newEdition).then(function (res) {
	            if (res.err) {
	                alert(res.msg);
	                console.log(res.msg);
	            } else {
	                console.log(res);
	                //this.updateCompanyInfo();
	                _this.props.backToTenders();
	            }
	        });
	    },

	    render: function render() {
	        console.log("CREATETE");
	        console.log(this.props.tenderObject);
	        var Save = !this.props.tenderObject ? React.createElement(_SimpleComponentsTransparentButton.TransparentButton, { onClick: this.createTender, caption: 'Создать' }) : React.createElement(_SimpleComponentsTransparentButton.TransparentButton, { onClick: this.saveTender, caption: 'Сохранить' });
	        return React.createElement(
	            'div',
	            { className: 'box-row-wr align-start test-animate' },
	            React.createElement(
	                _SimpleComponentsSmallPanel.SmallPanel,
	                { headerName: this.props.tenderObject ? "Редактирование тендера" : "Создание тендера" },
	                React.createElement(
	                    'div',
	                    { className: 'box-cln-nw align-stretch panel-md ' },
	                    React.createElement(
	                        'div',
	                        { className: '' },
	                        React.createElement(_SimpleComponentsInputText.InputText, {
	                            type: 'text',
	                            active: true,
	                            inputName: 'name',
	                            caption: 'Название тендера',
	                            value: this.state.name,
	                            returnValue: this.mergeState,
	                            labelWidth: 150,
	                            placeholder: 'Введите название'
	                        })
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'wrap-tb' },
	                        React.createElement(_SimpleComponentsDateSimple.DateSimple, {
	                            name: 'stime',
	                            caption: 'Дата начала приема заявок',
	                            onChange: this.mergeState,
	                            labelWidth: 150,
	                            value: this.state.stime
	                        })
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'wrap-tb' },
	                        React.createElement(_SimpleComponentsDateSimple.DateSimple, {
	                            name: 'etime',
	                            caption: 'Дата окончания приема заявок',
	                            onChange: this.mergeState,
	                            labelWidth: 150,
	                            value: this.state.etime,
	                            _test_value: '2250-Май-Среда'
	                        })
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: '' },
	                        React.createElement(_SimpleComponentsInputText.InputText, {
	                            type: 'text',
	                            active: true,
	                            inputName: 'organizer',
	                            caption: 'Электронная площадка торгов',
	                            value: this.state.organizer,
	                            returnValue: this.mergeState,
	                            labelWidth: 150,
	                            placeholder: 'Ссылка на сайт оператора'
	                        })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'box-row-nw just-end table-footer table-pr' },
	                    Save,
	                    React.createElement(_SimpleComponentsTransparentButton.TransparentButton, { onClick: this.cancelCreate, caption: 'Отменить' })
	                )
	            )
	        );
	    }
	});

	exports.CreateTender = CreateTender;

/***/ },
/* 434 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _api = __webpack_require__(1);

	var _AuthDashboard = __webpack_require__(247);

	var _Dispatcher = __webpack_require__(4);

	var _SimpleComponentsSmallPanel = __webpack_require__(407);

	var _ControlsFormsButtonSimple = __webpack_require__(226);

	var _ControlsSettingsBlock = __webpack_require__(238);

	var React = __webpack_require__(202);

	var Settings = (function (_React$Component) {
	    _inherits(Settings, _React$Component);

	    function Settings(props) {
	        var _this = this;

	        _classCallCheck(this, Settings);

	        _get(Object.getPrototypeOf(Settings.prototype), 'constructor', this).call(this, props);
	        this.state = { flags: _AuthDashboard.AppState.user.state.flags };

	        this.cancelChanges = function () {
	            _this.setState({ flags: _this.start });
	        };

	        this.onChangeHandler = function (flags) {
	            _this.setState({ flags: flags });
	        };

	        this.saveChanges = function () {
	            var message = {};

	            _api.Api.userEditRequest({ flags: _this.state.flags }).then(function (res) {
	                if (res) {
	                    if (res.err) {
	                        logger.log(_this, 'Настройка приватности: ошибка при сохранение настроек', res.msg, 'error');
	                        message = { message: res.msg, type: "error" };
	                        return;
	                    }

	                    message = { message: 'Настройки сохранены', type: 'info' };
	                    _this.start = _this.state.flags;
	                }

	                _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, message);
	            });
	        };

	        this.render = function () {
	            return React.createElement(
	                'div',
	                { className: 'row' },
	                React.createElement(
	                    'div',
	                    { className: 'col-xs-12' },
	                    React.createElement(_ControlsSettingsBlock.SettingsBlock, { title: 'Кому показывать Мой профиль', name: 'show-my-profile',
	                        type: 'checkbox', flags: _this.state.flags, change: _this.onChangeHandler,
	                        choice: [{ id: 0x00002000, value: 'Всем пользователям', exclude: 1 }, { id: 0x00004000, value: 'Пользователям связанных компаний' }, { id: 0x00008000, value: 'Пользователям по переписке' }, { id: 0x00010000, value: 'Пользователям из списка моих контактов' }]
	                    }),
	                    React.createElement(_ControlsSettingsBlock.SettingsBlock, { title: 'Кто может писать мне Сообщения', name: 'show-my-profile',
	                        type: 'checkbox', flags: _this.state.flags, change: _this.onChangeHandler,
	                        choice: [{ id: 0x00000002, value: 'Все пользователи', exclude: 1 }, { id: 0x00000008, value: 'Пользователи связанных компаний' }, { id: 0x00000004, value: 'Пользователи из списка моих контактов' }, { id: 0x00000001, value: 'Никто', exclude: 1 }]
	                    }),
	                    React.createElement(_ControlsSettingsBlock.SettingsBlock, { title: 'Кому доступна Контактная информация', name: 'show-my-profile',
	                        type: 'checkbox', flags: _this.state.flags, change: _this.onChangeHandler,
	                        choice: [{ id: 0x00000200, value: 'Всем пользователям', exclude: 1 }, { id: 0x00000400, value: 'Пользователям связанных компаний' }, { id: 0x00000800, value: 'Пользователям по переписке' }, { id: 0x00001000, value: 'Пользователям из списка моих контактов' }]
	                    }),
	                    React.createElement(_ControlsSettingsBlock.SettingsBlock, { title: 'Кто может приглашать меня в каналы', name: 'show-my-profile',
	                        type: 'checkbox', flags: _this.state.flags, change: _this.onChangeHandler,
	                        choice: [{ id: 0x00000020, value: 'Все пользователи', exclude: 1 }, { id: 0x00000080, value: 'Пользователи связанных компаний' }, { id: 0x00000040, value: 'Пользователи из списка моих контактов' }, { id: 0x00000010, value: 'Никто', exclude: 1 }]
	                    }),
	                    React.createElement(_ControlsSettingsBlock.SettingsBlock, { title: 'Использовать двойную проверку при входе', name: 'invite-to-channel123',
	                        type: 'radio', flags: _this.state.flags, change: _this.onChangeHandler,
	                        choice: [{ id: 0x00000100, value: 'Да', exclude: 1 }, { value: 'Нет', exclude: 1 }]
	                    }),
	                    React.createElement(
	                        'div',
	                        { className: 'box-row-nw just-end table-footer table-pr' },
	                        React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { type: 'success', onClick: _this.saveChanges, disabled: _this.start === _this.state.flags, caption: 'Сохранить' }),
	                        React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { type: 'danger', onClick: _this.cancelChanges, disabled: _this.start === _this.state.flags, caption: 'Отменить' })
	                    )
	                )
	            );
	        };

	        this.start = _AuthDashboard.AppState.user.state.flags;
	    }

	    return Settings;
	})(React.Component);

	exports.Settings = Settings;

	// <div className="col-6">
	//         <div className="box-cln-nw panel-md">
	//             <div className="divider font600">
	//                 Смена пароля:
	//             </div>
	//             <div className="message message-nl">
	//                 <p>Для смены пароля подтвердите действие кнопкой "Сменить пароль".</p>

	//                 <p>На Ваш email будет выслано письмо с дальнейшими инструкциями.</p>
	//             </div>
	//         </div>
	//         <div className="box-row-nw just-end table-footer table-pr">
	//             <TransparentButton onClick={this.changePass} caption="Сменить пароль"/>
	//         </div>
	// </div>
	// <div className="col-6">
	//         <div className="box-cln-nw panel-md">
	//             <div className="divider font600">
	//                 Смена email:
	//             </div>
	//             <div className="message message-nl">
	//                 <p>Для смены email подтвердите действие кнопкой "Сменить email".</p>

	//                 <p>На Ваш текущий email будет выслано письмо с дальнейшими инструкциями.</p>
	//             </div>
	//         </div>
	//         <div className="box-row-nw just-end table-footer table-pr">
	//             <TransparentButton onClick={this.changeEmail} caption="Сменить email"/>
	//         </div>
	// </div>

/***/ },
/* 435 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _Dispatcher = __webpack_require__(4);

	var _api = __webpack_require__(1);

	var _utils = __webpack_require__(2);

	var _SimpleComponentsLoading = __webpack_require__(361);

	var _SimpleComponentsSmallPanel = __webpack_require__(407);

	var _SimpleComponentsIcons = __webpack_require__(252);

	var _ControlsFormsButtonSimple = __webpack_require__(226);

	var React = __webpack_require__(202);

	var Accounts = React.createClass({
	  displayName: 'Accounts',

	  componentDidMount: function componentDidMount() {
	    this.refreshUserState();
	  },

	  componentWillUnmount: function componentWillUnmount() {},

	  updateStateWrapper: function updateStateWrapper(o) {},

	  getInitialState: function getInitialState() {
	    return {};
	  },

	  refreshUserState: function refreshUserState() {
	    var _this = this;

	    _api.Api.justDoRequest('user_state').then(function (res) {
	      //console.log('[Accounts] user_state handler')
	      //console.debug(res)
	      if (res.err) {
	        alert(res.err);return;
	      }
	      _this.setState({ accounts: res.accounts });
	    });
	  },

	  authDialog: function authDialog(uri) {
	    var w = 500;
	    var h = 350;
	    var t = window.screen.height / 2 - h / 2 - 100;
	    var l = window.screen.width / 2 - w / 2;
	    window.open(uri, 'SignIn', 'width=' + w + ',height=' + h + ',left=' + l + ',top=' + t);
	  },

	  bindFacebook: function bindFacebook() {
	    //console.log('[Accounts] bindFacebook')
	    var params = ['client_id=1593971670882893', 'redirect_uri=http://localhost:8081/?bind_provider=facebook' + '%23' + '/_=_', 'response_type=code', 'display=popup', 'scope=email'];
	    this.authDialog('https://www.facebook.com/dialog/oauth?' + params.join('&'));
	  },

	  bindLinkedin: function bindLinkedin() {
	    //console.log('[Accounts] bindLinkedin')
	    var params = ['response_type=code', 'client_id=7535z2f08cvusf', 'redirect_uri=http://localhost:8081?bind_provider=linkedin', // не дает использовать #
	    'state=' + Math.random(), 'scope=r_basicprofile%20r_emailaddress'];
	    this.authDialog('https://www.linkedin.com/uas/oauth2/authorization?' + params.join('&'));
	  },

	  unbindFacebook: function unbindFacebook() {
	    var _this2 = this;

	    //console.log('[Accounts] unbindFacebook')
	    _api.Api.justDoRequest('social_facebook_unbind').then(function (res) {
	      //console.log('[Accounts] user_state handler')
	      //console.debug(res)
	      if (res.err) {
	        alert(res.err);return;
	      }
	      _this2.refreshUserState();
	    });
	  },

	  unbindLinkedin: function unbindLinkedin() {
	    var _this3 = this;

	    //console.log('[Accounts] unbindFacebook')
	    _api.Api.justDoRequest('social_linkedin_unbind').then(function (res) {
	      //console.log('[Accounts] user_state handler')
	      //console.debug(res)
	      if (res.err) {
	        alert(res.err);return;
	      }
	      _this3.refreshUserState();
	    });
	  },

	  render: function render() {
	    //console.log('[Accounts] render')
	    //console.debug(this.state.accounts)
	    var a = this.state.accounts;
	    if (!a) {
	      return React.createElement(
	        'div',
	        null,
	        'loading...'
	      );
	    }

	    function isAccExists(provider) {
	      for (var i = 0, l = (a || []).length; i < l; i++) {
	        if (a[i].provider == provider) return a[i].j_doc;
	      }
	      return null;
	    }

	    var isFacebook = isAccExists('facebook'),
	        infoFacebook,
	        isLinkedin = isAccExists('linkedin'),
	        infoLinkedin;

	    if (isFacebook) {
	      infoFacebook = React.createElement(
	        'div',
	        { className: 'box-cln-nw panel-md social-account__info' },
	        React.createElement(
	          'div',
	          { className: 'box-row-nw divider' },
	          React.createElement(
	            'p',
	            { className: 'text-card p-list profile-label marg-right' },
	            'Имя '
	          ),
	          React.createElement(
	            'p',
	            { className: 'p-list' },
	            isFacebook.name
	          )
	        ),
	        React.createElement(
	          'div',
	          { className: 'box-row-nw divider' },
	          React.createElement(
	            'p',
	            { className: 'text-card p-list profile-label marg-right' },
	            'E-mail '
	          ),
	          React.createElement(
	            'p',
	            { className: 'p-list' },
	            isFacebook.email
	          )
	        ),
	        React.createElement(
	          'div',
	          { className: 'box-row-nw divider' },
	          React.createElement(
	            'p',
	            { className: 'text-card p-list profile-label marg-right' },
	            'Пол'
	          ),
	          React.createElement(
	            'p',
	            { className: 'p-list' },
	            isFacebook.gender
	          )
	        )
	      );
	    }

	    if (isLinkedin) {
	      infoLinkedin = React.createElement(
	        'div',
	        { className: 'box-cln-nw panel-md social-account__info' },
	        React.createElement(
	          'div',
	          { className: 'box-row-nw divider' },
	          React.createElement(
	            'p',
	            { className: 'text-card p-list profile-label marg-right' },
	            'Имя '
	          ),
	          React.createElement(
	            'p',
	            { className: 'p-list' },
	            isLinkedin.firstName,
	            ' ',
	            isLinkedin.lastName
	          )
	        ),
	        React.createElement(
	          'div',
	          { className: 'box-row-nw divider' },
	          React.createElement(
	            'p',
	            { className: 'text-card p-list profile-label marg-right' },
	            'E-mail '
	          ),
	          React.createElement(
	            'p',
	            { className: 'p-list' },
	            isLinkedin.emailAddress
	          )
	        )
	      );
	    }

	    return React.createElement(
	      'div',
	      { className: 'row' },
	      React.createElement(
	        'div',
	        { className: 'col-xs-12' },
	        React.createElement(
	          'div',
	          { className: 'box-row-wr' },
	          React.createElement(
	            'div',
	            { className: 'box-cln-nw col-large' },
	            React.createElement(
	              _SimpleComponentsSmallPanel.SmallPanel,
	              { className: 'social-account', styles: { smallPanel: { width: "335px", marginRight: "20px" } } },
	              React.createElement(
	                'div',
	                { className: 'box-cln-nw align-center social-box social-account__facebook' },
	                React.createElement(_SimpleComponentsIcons.Icon, { iconName: 'facebook-box', className: 'icon-social-box', size: 60 })
	              ),
	              infoFacebook,
	              React.createElement(
	                'div',
	                { className: 'box-row-nw just-end table-footer table-pr social-account__info' },
	                isFacebook ? React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: this.unbindFacebook, caption: 'Отвязать' }) : React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { type: 'primary', onClick: this.bindFacebook, caption: 'Привязать' })
	              )
	            )
	          ),
	          React.createElement(
	            'div',
	            { className: 'box-cln-nw col-large' },
	            React.createElement(
	              _SimpleComponentsSmallPanel.SmallPanel,
	              { className: 'social-account', styles: { smallPanel: { width: "335px", marginRight: "20px" } } },
	              React.createElement(
	                'div',
	                { className: 'box-cln-nw align-center social-box social-account__linkedin' },
	                React.createElement(_SimpleComponentsIcons.Icon, { iconName: 'linkedin-icon', className: 'icon-social-box', size: 60 })
	              ),
	              infoLinkedin,
	              React.createElement(
	                'div',
	                { className: 'box-row-nw just-end table-footer table-pr social-account__info' },
	                isLinkedin ? React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: this.unbindLinkedin, caption: 'Отвязать' }) : React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { type: 'primary', onClick: this.bindLinkedin, caption: 'Привязать' })
	              )
	            )
	          )
	        )
	      )
	    );
	  } });

	exports.Accounts = Accounts;

/***/ },
/* 436 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _SimpleComponentsSmallPanel = __webpack_require__(407);

	var _SimpleComponentsTransparentButton = __webpack_require__(264);

	var _SimpleComponentsModalWindow = __webpack_require__(362);

	var _SimpleComponentsIcons = __webpack_require__(252);

	var _UserEditDialog = __webpack_require__(263);

	var _ClassesLogger = __webpack_require__(3);

	var _ClassesLogger2 = _interopRequireDefault(_ClassesLogger);

	var React = __webpack_require__(202);

	var User = React.createClass({
	    displayName: 'User',

	    getInitialState: function getInitialState() {
	        return { isModalOpen: false };
	    },

	    editMode: function editMode() {
	        try {
	            this.setState({ isModalOpen: true });
	        } catch (e) {
	            console.debug(e);
	        }
	    },

	    componentWillMount: function componentWillMount() {
	        this.setState(this.props);
	    },

	    componentWillReceiveProps: function componentWillReceiveProps(props) {
	        this.setState(props);
	    },

	    closeModal: function closeModal() {
	        this.setState({ isModalOpen: false });
	    },

	    render: function render() {
	        return React.createElement(
	            'div',
	            { className: 'row' },
	            React.createElement(
	                'div',
	                { className: 'col-xs-12' },
	                React.createElement(
	                    'div',
	                    { className: 'box-cln-nw align-center photo-box' },
	                    React.createElement(_SimpleComponentsIcons.Icon, { iconName: 'user-icon', size: 100, className: 'icon-photo-box' })
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'box-cln-nw panel-md' },
	                    React.createElement(
	                        'div',
	                        { className: 'box-row-nw divider' },
	                        React.createElement(
	                            'p',
	                            { className: 'text-card p-list profile-label' },
	                            'Фамилия'
	                        ),
	                        React.createElement(
	                            'p',
	                            { className: 'p-list' },
	                            this.state.user.last_name
	                        )
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'box-row-nw divider' },
	                        React.createElement(
	                            'p',
	                            { className: 'text-card p-list profile-label' },
	                            'Имя'
	                        ),
	                        React.createElement(
	                            'p',
	                            { className: 'p-list' },
	                            this.state.user.first_name
	                        )
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'box-row-nw divider' },
	                        React.createElement(
	                            'p',
	                            { className: 'text-card p-list profile-label' },
	                            'Отчество'
	                        ),
	                        React.createElement(
	                            'p',
	                            { className: 'p-list' },
	                            this.state.user.pat_name
	                        )
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'box-row-nw divider' },
	                        React.createElement(
	                            'p',
	                            { className: 'text-card p-list profile-label' },
	                            'Должность'
	                        ),
	                        React.createElement(
	                            'p',
	                            { className: 'p-list' },
	                            this.state.user.position
	                        )
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'box-row-nw divider padd-top-card' },
	                        React.createElement(
	                            'p',
	                            { className: 'text-card p-list padd-right' },
	                            'Дата рождения'
	                        ),
	                        React.createElement(
	                            'p',
	                            { className: 'p-list' },
	                            this.state.user.birthday
	                        )
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'box-row-nw divider padd-top-card' },
	                        React.createElement(
	                            'p',
	                            { className: 'padd-icon-mod' },
	                            React.createElement(_SimpleComponentsIcons.Icon, { iconName: 'mail-icon', size: 20, className: 'icon-color' })
	                        ),
	                        React.createElement(
	                            'p',
	                            { className: 'p-list padd-user' },
	                            this.state.user.email
	                        )
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'box-row-nw divider' },
	                        React.createElement(
	                            'p',
	                            { className: 'padd-icon-mod' },
	                            React.createElement(_SimpleComponentsIcons.Icon, { iconName: 'cellphone-icon', size: 20, className: 'icon-color' })
	                        ),
	                        React.createElement(
	                            'p',
	                            { className: 'p-list padd-user' },
	                            this.state.user.mobile
	                        )
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'box-row-nw divider' },
	                        React.createElement(
	                            'p',
	                            { className: 'padd-icon-mod' },
	                            React.createElement(_SimpleComponentsIcons.Icon, { iconName: 'skype-icon', size: 20, className: 'icon-color' })
	                        ),
	                        React.createElement(
	                            'p',
	                            { className: 'p-list padd-user' },
	                            this.state.user.skype
	                        )
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'box-row-nw' },
	                        React.createElement(
	                            'p',
	                            { className: 'text-card p-list padd-right' },
	                            'ICQ'
	                        ),
	                        React.createElement(
	                            'p',
	                            { className: 'p-list' },
	                            this.state.user.icq
	                        )
	                    )
	                ),
	                React.createElement(_UserEditDialog.UserEditDialog, { user: this.state.user })
	            )
	        );
	    }
	});

	exports.User = User;

/***/ },
/* 437 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	//import {Dispatcher} from './Dispatcher';

	var _api = __webpack_require__(1);

	var _utils = __webpack_require__(2);

	var _Validation = __webpack_require__(223);

	var _SimpleComponentsLoading = __webpack_require__(361);

	var _Dispatcher = __webpack_require__(4);

	var _SimpleComponentsSmallPanel = __webpack_require__(407);

	var _SimpleComponentsTransparentButton = __webpack_require__(264);

	var _SimpleComponentsInputSimple = __webpack_require__(248);

	var _SimpleComponentsInputText = __webpack_require__(408);

	var _SimpleComponentsRadioInput = __webpack_require__(417);

	var _SimpleComponentsInputError = __webpack_require__(438);

	var _SimpleComponentsIcons = __webpack_require__(252);

	var _SimpleComponentsInputSelect = __webpack_require__(266);

	var _SimpleComponentsInputSelect2 = __webpack_require__(267);

	var _SimpleComponentsDateSimple = __webpack_require__(403);

	var _SimpleComponentsCard = __webpack_require__(418);

	var _SimpleComponentsCard2 = _interopRequireDefault(_SimpleComponentsCard);

	var _AuthDashboard = __webpack_require__(247);

	var React = __webpack_require__(202);

	var CardFooter = React.createClass({
	    displayName: 'CardFooter',

	    propTypes: {
	        footerProps: React.PropTypes.any
	    },

	    accept: function accept() {
	        _Dispatcher.Actions.tender_invite_accept(this.props.footerProps.id);
	    },
	    reject: function reject() {},
	    render: function render() {
	        return React.createElement(
	            'div',
	            { className: 'box-row-nw just-end table-footer table-pr' },
	            React.createElement(
	                'a',
	                { target: '_blank', href: this.props.footerProps.link },
	                React.createElement(Button, { caption: 'Подробнее' })
	            ),
	            React.createElement(_SimpleComponentsTransparentButton.TransparentButton, { onClick: this.accept, caption: 'Принять' }),
	            React.createElement(_SimpleComponentsTransparentButton.TransparentButton, { onClick: this.reject, caption: 'Отказаться' })
	        );
	    }
	});

	var Test = React.createClass({
	    displayName: 'Test',

	    //относится к InputSelect
	    onChangeValueSelect: function onChangeValueSelect(obj) {
	        this.setState(obj);
	    },

	    inputSelect2Changed: function inputSelect2Changed(caller) {
	        console.log('[Test] inputSelect2Changed');
	        console.debug(caller);
	        console.log(caller.getSelectedList());
	    },

	    getInitialState: function getInitialState() {
	        return {
	            compFormationValue: 1,
	            list: "10", //относится к InputSelect,
	            date: null,
	            apiMode: true
	        };
	    },
	    changeInput: function changeInput(v) {
	        console.log("changeInputValue" + v);
	    },
	    compFormationHandler: function compFormationHandler(o) {
	        console.log('compFormationHandler');
	        //console.debug(o.date)
	        this.setState(o);
	    },
	    click: function click() {
	        console.log("ddd");
	    },

	    graphRequestApply: function graphRequestApply() {
	        var _this = this;

	        //console.log('graphRequestApply');
	        var v = this.refs.graphRequestInput.getDOMNode().value;
	        var q = undefined;
	        try {
	            q = JSON.parse(v);
	        } catch (e) {
	            this.graphResultSet('invalid json: ' + e);
	            return;
	        }
	        this.graphResultSet('Loading...');

	        _api.Api.req('graph', { query: q }, false).then(function (res) {
	            _this.graphResultSet(JSON.stringify(res, null, '  '));
	        });
	    },
	    graphRequestSet: function graphRequestSet(r) {
	        //console.log('graphRequestSet');
	        this.refs.graphRequestInput.getDOMNode().value = JSON.stringify(r, null, '  ');
	    },
	    graphResultSet: function graphResultSet(t) {
	        //console.log('graphResultSet');
	        this.refs.graphRequestResult.getDOMNode().value = t;
	    },
	    changeMode: function changeMode() {
	        this.setState({ apiMode: !this.state.apiMode });
	    },
	    go: function go(o) {
	        console.log("links ready");
	        console.log(o.getBookmarksList());
	    },
	    testOn: function testOn() {

	        _AuthDashboard.AppState.myCompanyLinks.on("links_ready", this.go);
	        _AuthDashboard.AppState.myCompanyLinks.updateLinks();
	    },
	    render: function render() {
	        console.log("TEST STATE");
	        console.log(this.state);
	        var compFormationFiz = 'физ. лицо';
	        var compFormationJur = 'юр. лицо';

	        function getInnElement(v) {
	            switch (v) {
	                case compFormationFiz:
	                    return React.createElement(_SimpleComponentsInputText.InputText, { type: 'search', active: true, validation: { typing: _Validation.Validation.typingInt },
	                        maxLength: '12', minLength: '12', unique: 'comp_inn', inputName: 'testInn12',
	                        caption: 'тест ИНН 12 зн.' });
	                case compFormationJur:
	                    return React.createElement(_SimpleComponentsInputText.InputText, { type: 'search', active: true, validation: { typing: _Validation.Validation.typingInt },
	                        maxLength: '10', minLength: '10', unique: 'comp_inn', inputName: 'testInn10',
	                        caption: 'тест ИНН 10 зн.' });
	            }
	            return null;
	        }

	        var s = 1000;
	        return React.createElement(
	            'div',
	            null,
	            React.createElement(
	                'button',
	                { onClick: this.changeMode },
	                !this.state.apiMode ? "API" : "Test INTERFACE"
	            ),
	            React.createElement(
	                'button',
	                { onClick: this.testOn },
	                'test'
	            ),
	            React.createElement(
	                'div',
	                { className: 'box-row-wr max-size' },
	                React.createElement(
	                    _SimpleComponentsSmallPanel.SmallPanel,
	                    { headerName: 'Testing place', styles: { smallPanel: { width: "410px" } } },
	                    React.createElement(
	                        _SimpleComponentsLoading.Loading,
	                        { dataRecived: !this.state.apiMode, dontShow: true },
	                        React.createElement(_SimpleComponentsRadioInput.RadioInput, { active: true, inputName: 'compFormationValue', caption: 'тест формы компании',
	                            choice: [compFormationFiz, compFormationJur],
	                            selected: this.state.compFormationValue,
	                            returnValue: this.compFormationHandler }),
	                        getInnElement(this.state.compFormationValue),
	                        React.createElement(_SimpleComponentsInputText.InputText, { key: 'vldInt', type: 'search', inputName: 'inInt', caption: 'valid Int', active: true,
	                            validation: { typing: _Validation.Validation.typingInt } }),
	                        React.createElement(_SimpleComponentsInputText.InputText, { key: 'vldFlt', type: 'search', inputName: 'inFlt', caption: 'valid Float', active: true,
	                            validation: { typing: _Validation.Validation.typingFloat } }),
	                        React.createElement(_SimpleComponentsInputText.InputText, { key: 'vldEml', type: 'search', inputName: 'inEml', caption: 'valid Email', active: true,
	                            validation: { typing: _Validation.Validation.typingEmail } }),
	                        React.createElement(_SimpleComponentsInputText.InputText, { key: 'vldPhn', type: 'search', inputName: 'inPhn', caption: 'valid Phone', active: true,
	                            validation: { typing: _Validation.Validation.typingPhone } }),
	                        React.createElement(_SimpleComponentsInputText.InputText, { key: 'uniEml', type: 'search', inputName: 'inEml', caption: 'unique Email', active: true,
	                            validation: { typing: _Validation.Validation.typingEmail, changing: _Validation.Validation.changingUnique, uniqueType: 'user_email', uniqueHolder: _api.Api.user_id } }),
	                        React.createElement(_SimpleComponentsInputText.InputText, { key: 'uniMob', type: 'search', inputName: 'inMob', caption: 'unique Mobile',
	                            active: true,
	                            validation: { typing: _Validation.Validation.typingPhone, changing: _Validation.Validation.changingUnique, uniqueType: 'user_mobile' } }),
	                        React.createElement(_SimpleComponentsInputText.InputText, { key: 'uniIcq', type: 'search', inputName: 'inIcq', caption: 'unique Icq', active: true,
	                            validation: { typing: _Validation.Validation.typingInt, changing: _Validation.Validation.changingUnique, uniqueType: 'user_icq' } }),
	                        React.createElement(_SimpleComponentsInputText.InputText, { key: 'uniSkype', type: 'search', inputName: 'inSkype', caption: 'unique Skype',
	                            active: true,
	                            validation: { changing: _Validation.Validation.changingUnique, uniqueType: 'user_skype' } }),
	                        React.createElement(_SimpleComponentsInputText.InputText, { key: 'uniINN', type: 'search', inputName: 'inINN', caption: 'unique INN', active: true,
	                            validation: { typing: _Validation.Validation.typingInt, changing: _Validation.Validation.changingUnique, uniqueType: 'comp_inn' } }),
	                        React.createElement(_SimpleComponentsInputText.InputText, { key: 'uniOGRN', type: 'search', inputName: 'inORGN', caption: 'unique OGRN',
	                            active: true,
	                            validation: { typing: _Validation.Validation.typingInt, changing: _Validation.Validation.changingUnique, uniqueType: 'comp_ogrn' } }),
	                        React.createElement(_SimpleComponentsInputError.InputError, { type: 'search', active: true, validation: { typing: _Validation.Validation.typingInt },
	                            inputName: 'testInput', caption: 'тест input' }),
	                        React.createElement(
	                            'div',
	                            { className: 'box-row-wr align-center just-end table-footer pagin-pr' },
	                            React.createElement(
	                                'div',
	                                null,
	                                React.createElement(
	                                    'p',
	                                    { className: 'footer-style' },
	                                    'Отображать по: '
	                                )
	                            ),
	                            React.createElement(
	                                'div',
	                                { className: '' },
	                                React.createElement(_SimpleComponentsInputSelect.InputSelect, {
	                                    name: 'list',
	                                    selectedItem: this.state.list,
	                                    listItems: [10, 20, 40],
	                                    getValue: this.onChangeValueSelect
	                                })
	                            ),
	                            React.createElement(
	                                'div',
	                                { className: 'pagin-plb' },
	                                React.createElement(
	                                    'p',
	                                    { className: 'footer-style' },
	                                    '1-10 из 100'
	                                )
	                            ),
	                            React.createElement(
	                                'div',
	                                { className: 'pagin-plb' },
	                                React.createElement(_SimpleComponentsIcons.Icon, { iconName: 'arrow-left' })
	                            ),
	                            React.createElement(
	                                'div',
	                                { className: 'pagin-pl' },
	                                React.createElement(_SimpleComponentsIcons.Icon, { iconName: 'arrow-right' })
	                            )
	                        ),
	                        React.createElement(_SimpleComponentsDateSimple.DateSimple, {
	                            caption: 'Date',
	                            name: 'super_date',
	                            value: this.state.super_date || '2000-01-01',
	                            onChange: this.compFormationHandler
	                        }),
	                        React.createElement(_SimpleComponentsInputSelect2.InputSelect2, {
	                            name: 'list2',
	                            list: [{ id: 0, value: 10 }, { id: 2, value: 20 }, { id: 999, value: 40, __selected__: true }],
	                            onChanged: this.inputSelect2Changed
	                        }),
	                        React.createElement(_SimpleComponentsInputSelect2.InputSelect2, {
	                            name: 'list3',
	                            list: [{ id: 0, value: 10 }, { id: 2, value: 20, __selected__: true }, { id: 999, value: 40 }],
	                            multiSelect: true,
	                            onChanged: this.inputSelect2Changed
	                        }),
	                        React.createElement(_SimpleComponentsInputSelect2.InputSelect2, {
	                            active: false,
	                            name: 'list3',
	                            list: [{ id: 0, value: 10000 }, { id: 2, value: 5555 }, { id: 999, value: 66666, __selected__: true }, { id: 4, value: 777777 }, { id: 5, value: 'ololololo' }],
	                            onChanged: this.inputSelect2Changed
	                        }),
	                        React.createElement('br', null),
	                        React.createElement('br', null)
	                    ),
	                    React.createElement(
	                        _SimpleComponentsLoading.Loading,
	                        { dataRecived: this.state.apiMode, dontShow: true },
	                        'Запрос:',
	                        React.createElement('br', null),
	                        React.createElement('br', null),
	                        React.createElement('input', { key: s++, type: 'button', value: 'все юзеры (все поля)',
	                            onClick: this.graphRequestSet.bind(null, { users: {} }) }),
	                        React.createElement('input', { key: s++, type: 'button', value: 'все юзеры (email)',
	                            onClick: this.graphRequestSet.bind(null, { users: { fields: ["email"] } }) }),
	                        React.createElement('input', { key: s++, type: 'button', value: 'все юзеры (email) с алиасом',
	                            onClick: this.graphRequestSet.bind(null, { peoples: { src: "users", fields: ["email"] } }) }),
	                        React.createElement('input', { key: s++, type: 'button', value: 'все юзеры (email) с сортировкой по email',
	                            onClick: this.graphRequestSet.bind(null, { peoples: { src: "users", fields: ["email"], order: "email" } }) }),
	                        React.createElement('input', { key: s++, type: 'button', value: 'все юзеры (email) с обратной сортировкой по email',
	                            onClick: this.graphRequestSet.bind(null, { peoples: { src: "users", fields: ["email"], order: "email", dir: "DESC" } }) }),
	                        React.createElement('input', { key: s++, type: 'button', value: 'первые два юзера (email)',
	                            onClick: this.graphRequestSet.bind(null, { users: { fields: ["email"], limit: 2 } }) }),
	                        React.createElement('input', { key: s++, type: 'button', value: 'третий юзер (email)',
	                            onClick: this.graphRequestSet.bind(null, { users: { fields: ["email"], offset: 2, limit: 1 } }) }),
	                        React.createElement('input', { key: s++, type: 'button', value: 'юзеры у которых в имени есть \'sLa\'',
	                            onClick: this.graphRequestSet.bind(null, { users: { filters: [["first_name", "contains", "sLa"]] } }) }),
	                        React.createElement('input', { key: s++, type: 'button', value: 'юзер 168 (все поля)',
	                            onClick: this.graphRequestSet.bind(null, { users: { filters: [["id", "eq", 168]] } }) }),
	                        React.createElement('input', { key: s++, type: 'button', value: 'юзеры 168 и 120 (все поля)',
	                            onClick: this.graphRequestSet.bind(null, { users: { filters: [["id", "in", [168, 120]]] } }) }),
	                        React.createElement('input', { key: s++, type: 'button', value: 'юзер 168 (email,skype)',
	                            onClick: this.graphRequestSet.bind(null, { users: { fields: ["email", "skype"], filters: [["id", "eq", 168]] } }) }),
	                        React.createElement('input', { key: s++, type: 'button', value: 'юзер 168 + его компании (с inn)',
	                            onClick: this.graphRequestSet.bind(null, { users: { filters: [["id", "eq", 168]], sub: { comps: { fields: ["inn"] } } } }) }),
	                        React.createElement('input', { key: s++, type: 'button', value: 'юзер 168 + его общие права',
	                            onClick: this.graphRequestSet.bind(null, { users: { filters: [["id", "eq", 168]], sub: { user_perm: {} } } }) }),
	                        React.createElement('input', { key: s++, type: 'button', value: 'юзер 168 + его права в компаниях',
	                            onClick: this.graphRequestSet.bind(null, { users: { filters: [["id", "eq", 168]], sub: { perms: {} } } }) }),
	                        React.createElement('br', null),
	                        React.createElement('br', null),
	                        React.createElement('input', { key: s++, type: 'button', value: 'все компании(inn) + их юзеры(email)',
	                            onClick: this.graphRequestSet.bind(null, { comps: { fields: ["inn"], sub: { users: { fields: ["email"] } } } }) }),
	                        React.createElement('input', { key: s++, type: 'button', value: 'компания 204 + расшифровка опф',
	                            onClick: this.graphRequestSet.bind(null, { comps: { filters: [["id", "eq", 204]], sub: { dadata_opf: {} } } }) }),
	                        React.createElement('input', { key: s++, type: 'button', value: 'компания 169 + тендеры в которых участвет',
	                            onClick: this.graphRequestSet.bind(null, { comps: { filters: [["id", "eq", 169]], sub: { tenders: {} } } }) }),
	                        React.createElement('input', { key: s++, type: 'button', value: 'компания 169 + тендеры которыми владеет',
	                            onClick: this.graphRequestSet.bind(null, { comps: { filters: [["id", "eq", 169]], sub: { owned_tenders: { src: "tenders", relation: "comp_owner_of_tender" } } } }) }),
	                        React.createElement('input', { key: s++, type: 'button', value: 'компания 9 + ее тэги',
	                            onClick: this.graphRequestSet.bind(null, { comps: { filters: [["id", "eq", 9]], sub: { comp_tags: {} } } }) }),
	                        React.createElement('input', { key: s++, type: 'button', value: 'компания 5 + запросы вступления в нее',
	                            onClick: this.graphRequestSet.bind(null, { comps: { filters: [["id", "eq", 5]], sub: { join_requests: {} } } }) }),
	                        React.createElement('input', { key: s++, type: 'button', value: 'компания 221 + связи от нее',
	                            onClick: this.graphRequestSet.bind(null, { comps: { fields: ["inn"], filters: [["id", "eq", 221]], sub: { comp_relations: {} } } }) }),
	                        React.createElement('input', { key: s++, type: 'button', value: 'компания 221 + связи на нее',
	                            onClick: this.graphRequestSet.bind(null, { comps: { fields: ["inn"], filters: [["id", "eq", 221]], sub: { comp_relations: { relation: "reverse" } } } }) }),
	                        React.createElement('input', { key: s++, type: 'button', value: 'все компани + все их связи',
	                            onClick: this.graphRequestSet.bind(null, { comps: { fields: ["id"], sub: { directLinks: { src: "comp_relations", relation: "default" }, reverseLinks: { src: "comp_relations", relation: "reverse" } } } }) }),
	                        React.createElement('input', { key: s++, type: 'button', value: 'все компани + запросы связей от них и к ним',
	                            onClick: this.graphRequestSet.bind(null, { comps: { fields: ["id"], sub: { directLinks: { src: "comp_relation_requests", relation: "default" }, reverseLinks: { src: "comp_relation_requests", relation: "reverse" } } } }) }),
	                        React.createElement('input', { key: s++, type: 'button', value: 'компания 221 + связанные компании',
	                            onClick: this.graphRequestSet.bind(null, { comps: { fields: ["inn"], filters: [["id", "eq", 221]], sub: { comp_relations: { sub: { comps: { fields: ["inn"] } } } } } }) }),
	                        React.createElement('input', { key: s++, type: 'button', value: 'компания 281 + приглашения сотрудников',
	                            onClick: this.graphRequestSet.bind(null, { comps: { fields: ["inn"], filters: [["id", "eq", 281]], sub: { user_invites: {} } } }) }),
	                        React.createElement('br', null),
	                        React.createElement('br', null),
	                        React.createElement('input', { key: s++, type: 'button', value: 'все связи компаний',
	                            onClick: this.graphRequestSet.bind(null, { comp_relations: {} }) }),
	                        React.createElement('input', { key: s++, type: 'button', value: 'все связи компаний + компании',
	                            onClick: this.graphRequestSet.bind(null, { comp_relations: { sub: { compFrom: { src: "comps", relation: "from", fields: ["inn"] }, compTo: { src: "comps", relation: "default", fields: ["inn"] } } } }) }),
	                        React.createElement('br', null),
	                        React.createElement('br', null),
	                        React.createElement('input', { key: s++, type: 'button', value: 'все тендеры',
	                            onClick: this.graphRequestSet.bind(null, { tenders: {} }) }),
	                        React.createElement('input', { key: s++, type: 'button', value: 'тендеры созданные 2015-07-03',
	                            onClick: this.graphRequestSet.bind(null, { tenders: { filters: [["ctime", "gt", "2015-07-03"], ["ctime", "lt", "2015-07-04"]] } }) }),
	                        React.createElement('input', { key: s++, type: 'button', value: 'все тендеры + участники',
	                            onClick: this.graphRequestSet.bind(null, { tenders: { sub: { comps: {} } } }) }),
	                        React.createElement('input', { key: s++, type: 'button', value: 'все тендеры + участники + юзеры участников',
	                            onClick: this.graphRequestSet.bind(null, { tenders: { sub: { comps: { sub: { users: {} } } } } }) }),
	                        React.createElement('input', { key: s++, type: 'button', value: 'все тендеры + участники + владелец',
	                            onClick: this.graphRequestSet.bind(null, { tenders: { sub: { comps: {}, owner: { src: "comps", relation: "comp_owner_of_tender" } } } }) }),
	                        React.createElement('input', { key: s++, type: 'button', value: 'все тендеры + приглашения в них',
	                            onClick: this.graphRequestSet.bind(null, { tenders: { sub: { invites_to_this_tender: { src: "tender_invites" } } } }) }),
	                        React.createElement('input', { key: s++, type: 'button', value: 'первый тендер + создатели',
	                            onClick: this.graphRequestSet.bind(null, { tenders: { limit: 1, sub: { owner: { src: "comps", relation: "comp_owner_of_tender" } } } }) }),
	                        React.createElement('br', null),
	                        React.createElement('br', null),
	                        React.createElement('textarea', { key: s++, ref: 'graphRequestInput', style: {
	                                'height': '300',
	                                'width': '400'
	                            } }),
	                        React.createElement('input', { key: s++, type: 'button', value: 'Выполнить', onClick: this.graphRequestApply }),
	                        React.createElement('br', null),
	                        'Ответ: ',
	                        React.createElement('textarea', { key: s++, ref: 'graphRequestResult',
	                            style: {
	                                'height': '400',
	                                'width': '400'
	                            } }),
	                        React.createElement('br', null),
	                        React.createElement('br', null),
	                        React.createElement('br', null),
	                        React.createElement('br', null),
	                        React.createElement('br', null),
	                        React.createElement('br', null),
	                        React.createElement('br', null),
	                        React.createElement('br', null),
	                        React.createElement('br', null),
	                        React.createElement('br', null),
	                        React.createElement('br', null),
	                        React.createElement('br', null),
	                        React.createElement('br', null),
	                        React.createElement('br', null)
	                    )
	                )
	            )
	        );
	    }

	});

	exports.Test = Test;

/***/ },
/* 438 */
/***/ function(module, exports, __webpack_require__) {

	/*

	 параметры

	 format - ограничение символов
	 int - только целые числа
	 float - только числа
	 email - только мыло
	 phone - только цифры, пробелы, плюс и минус, должно содержать 11 цифр
	 skype - только символы и цифры
	 Skype Username Restrictions
	 A Skype username cannot be shorter than six characters or longer than 32.
	 It can contain both letters and numbers, but must start with a letter;
	 accented characters are not allowed.
	 The only punctuation marks you can use are commas, dashes, periods and underscores.

	 unique - проверка уникального ИНН
	 user_email
	 user_mobile
	 user_icq
	 user_skype
	 comp_inn
	 comp_ogrn


	 */

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _api = __webpack_require__(1);

	var _utils = __webpack_require__(2);

	var React = __webpack_require__(202);
	var PureRenderMixin = React.PureRenderMixin;

	var InputError = React.createClass({
	    displayName: 'InputError',

	    mixins: [PureRenderMixin],
	    componentWillUnmount: function componentWillUnmount() {
	        this.clear_timeout();
	    },
	    getInitialState: function getInitialState() {
	        return {
	            unique: true,
	            value: this.props.value,
	            labelClass: ""
	        };
	    },
	    change: function change(e) {
	        var v = e.target.value;
	        this.setState({ value: v });
	        var obj = {};
	        obj[this.props.inputName] = v;
	        var r = this.props.returnValue;
	        if (r) r(obj);
	        this.clear_timeout();
	        if (v != '' && this.props.unique && this.isValid(v)) {
	            this.setUniquePending();
	            this.ti = setTimeout(this.content_ready_for_check, 800);
	        } else {
	            this.setUniqueTrue();
	        }
	    },
	    focus: function focus() {
	        this.setState({ labelClass: "label-active" });
	    },
	    blur: function blur() {
	        this.setState({ labelClass: "" });
	    },

	    setUniquePending: function setUniquePending() {
	        this.setState({ unique: 'pending' });
	    },
	    setUniqueTrue: function setUniqueTrue() {
	        this.setState({ unique: true });
	    },
	    setUniqueFalse: function setUniqueFalse() {
	        this.setState({ unique: false });
	    },

	    clear_timeout: function clear_timeout() {
	        if (this.ti) {
	            clearTimeout(this.ti);
	            this.ti = null;
	        }
	    },
	    content_ready_for_check: function content_ready_for_check() {
	        var _this = this;

	        console.log('content_ready_for_check ' + this.state.value);
	        if (!this.props.unique) return;
	        var v = this.state.value;
	        if (this.props.format == 'phone') {
	            v = _utils.Utils.extract_phone_number(v);
	        }
	        _api.Api.checkUnique(this.props.unique, v).then(function (res) {
	            if (res.err === -1) {
	                alert('неверный тип');
	            } else {
	                console.log(res.holder_id, _api.Api.user_id);
	                res.unique === true || res.holder_id == _api.Api.user_id ? _this.setUniqueTrue() : _this.setUniqueFalse();
	            }
	        });
	    },

	    keypress: function keypress(e) {
	        // перехват события ввода
	        var ev = e || window.event; // событие
	        //for (var q in ev) { console.log('ev['+q+']=' + ev[q]) }
	        //for (var q in ev.target) { console.log('ev.target['+q+']=' + ev.target[q]) }
	        var et = ev.target;
	        var sPos = et.selectionStart;
	        var ePos = et.selectionEnd;

	        function chk(exp, t) {
	            return new RegExp(exp).test(t);
	        }

	        function abort() {
	            ev.returnValue = false;
	            if (ev.preventDefault) ev.preventDefault();
	        }

	        function resel() {
	            et.setSelectionRange(sPos + 1, sPos + 1);
	        }

	        var kCode = e.keyCode || e.which; // код символа
	        var kChar = String.fromCharCode(kCode); // строковое выржение символа
	        switch (this.props.format) {
	            case 'int':
	                if (!chk('[0-9-]', kChar)) {
	                    // предотвращаем ввод недопустимого символа
	                    abort();
	                    return;
	                }
	                if (kChar == '-') {
	                    // перехватываем и исправляем ввод "минуса"
	                    abort();
	                    et.value = chk('-', et.value) ? et.value.substr(1) : '-' + et.value;
	                    return;
	                }
	                break;
	            case 'float':
	                if (!chk('[0-9-.]', kChar)) {
	                    // предотвращаем ввод недопустимого символа
	                    abort();
	                    return;
	                }
	                switch (kChar) {
	                    case '-':
	                        // перехватываем и исправляем ввод "минуса"
	                        abort();
	                        et.value = chk('-', et.value) ? et.value.substr(1) : '-' + et.value;
	                        resel();
	                        return;
	                    case '.':
	                        // перехватываем и исправляем ввод "точки"
	                        abort();
	                        var v = et.value.replace('.', ' ');
	                        v = v.substr(0, sPos) + '.' + v.substr(ePos);
	                        et.value = v.replace(' ', '');
	                        resel();
	                        return;
	                }
	                break;
	            case 'email':
	                if (String("@abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!#$%&'*+-/=?^_`{|}~.").indexOf(kChar) == -1) {
	                    abort();
	                    return;
	                }
	                break;
	            case 'phone':
	                if (String("()0123456789+- ").indexOf(kChar) == -1) {
	                    abort();
	                    return;
	                }
	                break;
	        }
	    },

	    isValid: function isValid(v) {
	        if (!v || v == '') return true;
	        var p = this.props;

	        function isContentValid() {
	            function chk(exp, t) {
	                return exp.test(t);
	            }

	            switch (p.format) {
	                case 'int':
	                    return chk(/^-?[0-9]+$/, v);
	                case 'float':
	                    return chk(/^-?[0-9]+(.[0-9]+)?$/, v);
	                case 'email':
	                    return chk(/^([\w-]+(?:\.[\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$/i, v);
	                case 'phone':
	                    var m = v.match(/(\d)/g);
	                    return m && m.length == 11;
	            }
	            return true;
	        }

	        function isLengthValid() {
	            if (p.minLength && v.length < parseInt(p.minLength)) return false;
	            if (p.maxLength && v.length > parseInt(p.maxLength)) return false;
	            return true;
	        }

	        return isContentValid() && isLengthValid();
	    },

	    getFormStyle: function getFormStyle() {
	        var s1 = { background: '#f88' }; // invalid
	        if (this.isValid(this.state.value)) {
	            switch (this.state.unique) {
	                case true:
	                    return { background: '#fff' }; // valid
	                case false:
	                    return s1; // invalid
	                case 'pending':
	                    return { background: '#ff8' }; // pending
	            }
	        }
	        return s1; // invalid
	    },

	    render: function render() {
	        var labelClass = "label error table-prb " + this.state.labelClass;
	        var inputClass = "input-underline text-form " + this.state.inputClass;
	        //когда делается проверка, в случае невалидности ввода надо добавить класс .error в labelClass
	        //и добавить в класс input className="input-error"
	        //отобразить <p className="error error-text">текст ошибки</p>
	        return React.createElement(
	            'div',
	            { className: '' },
	            React.createElement(
	                'div',
	                { className: 'box-row-nw align-center' },
	                React.createElement(
	                    'label',
	                    { style: this.props.labelStyle, className: labelClass },
	                    this.props.caption
	                ),
	                React.createElement('input', { type: this.props.type,
	                    disabled: !this.props.active,
	                    style: this.getFormStyle(),
	                    className: inputClass,
	                    onChange: this.change, value: this.props.value,
	                    onFocus: this.focus,
	                    onBlur: this.blur,
	                    onKeyPress: this.keypress
	                })
	            ),
	            React.createElement(
	                'div',
	                { className: 'box-row-nw align-center' },
	                React.createElement(
	                    'p',
	                    { className: 'error error-text' },
	                    'Ошибка'
	                )
	            )
	        );
	    }
	});

	exports.InputError = InputError;

/***/ },
/* 439 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _SimpleComponentsSmallPanelTest = __webpack_require__(430);

	var _SimpleComponentsInputText = __webpack_require__(408);

	var _SimpleComponentsTransparentButton = __webpack_require__(264);

	var _SimpleComponentsLoading = __webpack_require__(361);

	var _SimpleComponentsDateSimple = __webpack_require__(403);

	var _SimpleComponentsSimpleTable2 = __webpack_require__(399);

	var _SimpleComponentsTableCells = __webpack_require__(402);

	var _api = __webpack_require__(1);

	var _utils = __webpack_require__(2);

	var React = __webpack_require__(202);

	var ResultsTable = React.createClass({
	    displayName: 'ResultsTable',

	    render: function render() {
	        this.opt = {
	            // хедер
	            headerClass: _SimpleComponentsSimpleTable2.TblHead,
	            headData: [{ id: 'name', title: 'Название' }, { id: 'owner', title: 'Заказчик', cellClass: _SimpleComponentsTableCells.TblOwnerCls }, { id: 'ctime', title: 'Опубликовано', cellClass: _SimpleComponentsTableCells.TblDateTimeCls }, { id: 'stime', title: 'Начало', cellClass: _SimpleComponentsTableCells.TblDateCls }, { id: 'etime', title: 'Окончание', cellClass: _SimpleComponentsTableCells.TblDateCls }, { id: 'organizer', title: 'Детали', cellClass: _SimpleComponentsTableCells.TblLinkCls }, { id: 'id', title: 'Действия', cellClass: _SimpleComponentsTableCells.TblActionsCls }],
	            // контент
	            bodyClass: _SimpleComponentsSimpleTable2.TblBody,
	            //bodyData: Store.sessions,
	            bodyData: this.props.data,
	            // вспомогательные
	            pagesClass: _SimpleComponentsSimpleTable2.TblPages,
	            pagesConf: {
	                availableCapacity: [2, 5],
	                currentCapacity: 5, // capacity может быть сохрарено в state (если нет, то делаем 5)
	                currentPage: 1

	            },
	            title: 'Тендеры', // заголовок контейнера
	            selectionKey: 'sKey', // ключ в объекте который будет использован для флага выделения
	            selectable: false, // включает стандартный механизм выбора (кликом по ряду), можно выключить и сделать свой через bodyClass или cellClass
	            multiselect: true // можно выбирать несколько рядов
	        };
	        return React.createElement(
	            'div',
	            { className: 'box-row-wr align-s-start test-animate' },
	            React.createElement(_SimpleComponentsSimpleTable2.SimpleTable2, { opt: this.opt })
	        );
	    }

	});

	var FindTenders = React.createClass({
	    displayName: 'FindTenders',

	    updateStateWrapper: function updateStateWrapper(newState) {
	        this.setState(newState);
	    },

	    getInitialState: function getInitialState() {
	        return {
	            from_date: null,
	            to_date: null,
	            results: null
	        };
	    },

	    searchHandler: function searchHandler() {
	        var _this = this;

	        console.log("Search!");
	        _api.Api.req('graph', {
	            query: {
	                tenders: {
	                    sub: {
	                        owner: {
	                            src: "comps",
	                            relation: "comp_owner_of_tender",
	                            fields: ["name"]
	                        }
	                    }
	                }
	            }
	        }, false).then(function (res) {
	            console.log(res);
	            _this.setState({ results: res.tenders.data });
	        });
	    },

	    render: function render() {
	        console.log(this.state);
	        var Results = this.state.results ? React.createElement(ResultsTable, {
	            data: this.state.results
	        }) : null;
	        return React.createElement(
	            'div',
	            { className: 'box-col-nw max-size test-animate' },
	            React.createElement(
	                'div',
	                { className: 'box-col-nw' },
	                React.createElement(
	                    _SimpleComponentsSmallPanelTest.SmallPanelTest,
	                    { headerName: 'Поиск тендеров' },
	                    React.createElement(
	                        'div',
	                        { className: 'box-cln-nw align-stretch panel-md' },
	                        React.createElement(_SimpleComponentsDateSimple.DateSimple, { value: this.state.from_date, name: 'from_date', caption: 'Дата начала',
	                            onChange: this.updateStateWrapper }),
	                        React.createElement(_SimpleComponentsDateSimple.DateSimple, { value: this.state.to_date, name: 'to_date', caption: 'Дата окончания', onChange: this.updateStateWrapper })
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'box-row-nw just-end table-footer table-pr' },
	                        React.createElement(_SimpleComponentsTransparentButton.TransparentButton, { onClick: this.searchHandler, caption: 'Найти' })
	                    )
	                )
	            ),
	            Results
	        );
	    }
	});

	exports.FindTenders = FindTenders;

/***/ },
/* 440 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _SimpleComponentsTransparentButton = __webpack_require__(264);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	var _SimpleComponentsLoading = __webpack_require__(361);

	var _SimpleComponentsSimpleTable2 = __webpack_require__(399);

	var _api = __webpack_require__(1);

	var React = __webpack_require__(202);
	var Router = __webpack_require__(7);
	var RouteHandler = Router.RouteHandler;

	var Admin = (function (_React$Component) {
	    _inherits(Admin, _React$Component);

	    function Admin(props) {
	        _classCallCheck(this, Admin);

	        _get(Object.getPrototypeOf(Admin.prototype), 'constructor', this).call(this, props);
	        this.state = {
	            selectedItem: "users"
	        };
	    }

	    _createClass(Admin, [{
	        key: 'selectActiveItem',
	        value: function selectActiveItem(itemName) {
	            switch (itemName) {
	                case "companies":
	                    window.location.hash = "dashboard/admin/companies";
	                    break;
	                case "tenders":
	                    window.location.hash = "dashboard/admin/a_tenders";
	                    break;
	                case "invites":
	                    window.location.hash = "dashboard/admin/a_invites";
	                    break;
	                case "connections":
	                    window.location.hash = "dashboard/admin/a_connections";
	                    break;
	                default:
	                    window.location.hash = "dashboard/admin/users";

	            }
	            this.setState({
	                selectedItem: itemName
	            });
	        }
	    }, {
	        key: 'render',
	        value: function render() {

	            return React.createElement(
	                _SimpleComponentsFlexBox.FlexBox,
	                { direction: 'column' },
	                React.createElement(
	                    _SimpleComponentsFlexBox.FlexBox,
	                    null,
	                    React.createElement(_SimpleComponentsTransparentButton.TransparentButton, { caption: 'Users', onClick: this.selectActiveItem.bind(this), buttonId: 'users' }),
	                    React.createElement(_SimpleComponentsTransparentButton.TransparentButton, { caption: 'Companies', onClick: this.selectActiveItem.bind(this),
	                        buttonId: 'companies' }),
	                    React.createElement(_SimpleComponentsTransparentButton.TransparentButton, { caption: 'Tenders', onClick: this.selectActiveItem.bind(this), buttonId: 'tenders' }),
	                    React.createElement(_SimpleComponentsTransparentButton.TransparentButton, { caption: 'Invites', onClick: this.selectActiveItem.bind(this), buttonId: 'invites' }),
	                    React.createElement(_SimpleComponentsTransparentButton.TransparentButton, { caption: 'Connections', onClick: this.selectActiveItem.bind(this),
	                        buttonId: 'connections' })
	                ),
	                React.createElement(RouteHandler, { company: this.props.company, user: this.props.user })
	            );
	        }
	    }], [{
	        key: 'propTypes',
	        value: {},
	        enumerable: true
	    }, {
	        key: 'defaultProps',
	        value: {},
	        enumerable: true
	    }]);

	    return Admin;
	})(React.Component);

	exports['default'] = Admin;
	module.exports = exports['default'];

/***/ },
/* 441 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _Dispatcher = __webpack_require__(4);

	var _SimpleComponentsButtonActive = __webpack_require__(253);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	var _SimpleComponentsLoading = __webpack_require__(361);

	var _SimpleComponentsSimpleTable2 = __webpack_require__(399);

	var _api = __webpack_require__(1);

	var _SimpleComponentsTableCells = __webpack_require__(402);

	var React = __webpack_require__(202);

	var TblCellGender = (function (_React$Component) {
	    _inherits(TblCellGender, _React$Component);

	    function TblCellGender() {
	        _classCallCheck(this, TblCellGender);

	        _get(Object.getPrototypeOf(TblCellGender.prototype), 'constructor', this).apply(this, arguments);
	    }

	    _createClass(TblCellGender, [{
	        key: 'render',
	        value: function render() {
	            var gender;
	            if (this.props.value === "мужской") {
	                gender = "M";
	            } else if (this.props.value === "женский") {
	                gender = "Ж";
	            } else gender = "не указан";

	            return React.createElement(
	                'div',
	                null,
	                gender
	            );
	        }
	    }]);

	    return TblCellGender;
	})(React.Component);

	var TblFullName = (function (_React$Component2) {
	    _inherits(TblFullName, _React$Component2);

	    function TblFullName() {
	        _classCallCheck(this, TblFullName);

	        _get(Object.getPrototypeOf(TblFullName.prototype), 'constructor', this).apply(this, arguments);
	    }

	    _createClass(TblFullName, [{
	        key: 'render',
	        value: function render() {
	            var lastName = this.props.obj.last_name ? this.props.obj.last_name : "";
	            var patName = this.props.obj.pat_name ? this.props.obj.pat_name : "";
	            var firstName = this.props.value ? this.props.value : "";
	            var fullName = lastName + " " + firstName + " " + patName;
	            return React.createElement(
	                'div',
	                null,
	                fullName
	            );
	        }
	    }]);

	    return TblFullName;
	})(React.Component);

	var TblUserComp = (function (_React$Component3) {
	    _inherits(TblUserComp, _React$Component3);

	    function TblUserComp() {
	        _classCallCheck(this, TblUserComp);

	        _get(Object.getPrototypeOf(TblUserComp.prototype), 'constructor', this).apply(this, arguments);
	    }

	    _createClass(TblUserComp, [{
	        key: 'render',
	        value: function render() {
	            var company = this.props.value.data.length > 0 ? this.props.value.data[0].name : null;
	            var inn = this.props.value.data.length > 0 ? this.props.value.data[0].inn : null;

	            return React.createElement(
	                'div',
	                null,
	                company,
	                '(',
	                inn,
	                ')'
	            );
	        }
	    }]);

	    return TblUserComp;
	})(React.Component);

	var UsersTable = (function (_React$Component4) {
	    _inherits(UsersTable, _React$Component4);

	    function UsersTable() {
	        _classCallCheck(this, UsersTable);

	        _get(Object.getPrototypeOf(UsersTable.prototype), 'constructor', this).apply(this, arguments);
	    }

	    _createClass(UsersTable, [{
	        key: 'render',
	        value: function render() {

	            this.opt = {
	                // хедер
	                headerClass: _SimpleComponentsSimpleTable2.TblHead,
	                headData: [{ id: 'id', title: 'ID' }, { id: 'first_name', title: 'ФИО', cellClass: TblFullName }, { id: 'comps', title: 'Компания', cellClass: TblUserComp }, { id: 'email', title: 'email' }, { id: 'gender', title: 'Пол', cellClass: TblCellGender }, { id: 'perms', title: 'Права', cellClass: _SimpleComponentsTableCells.TblCellPerms }],
	                // контент
	                bodyClass: _SimpleComponentsSimpleTable2.TblBody,
	                //bodyData: Store.sessions,
	                bodyData: this.props.users,
	                // пагенатор
	                pagesClass: _SimpleComponentsSimpleTable2.TblPages,
	                pagesConf: {
	                    availableCapacity: [1, 2, 5, 10],
	                    currentCapacity: 5,
	                    currentPage: 1
	                },
	                // события
	                onSelectChanged: this.onSelectChanged, // вызывается при изменении выделения, параметр - измененный объект
	                //onCloseSelected: this.onCloseSelected,  // вызывается из футера по клику на "Close"
	                // вспомогательные
	                title: 'Users', // заголовок контейнера
	                isSelectable: function isSelectable(obj) {
	                    return obj.sid != _api.Api.sid;
	                }, // ф-я проверки возможности выделения объекта
	                selectionKey: 'sKey', // ключ в объекте который будет использован для флага выделения
	                selectable: false, // включает стандартный механизм выбора (кликом по ряду), можно выключить и сделать свой через bodyClass или cellClass
	                multiselect: true // можно выбирать несколько рядов
	            };
	            if (this.props.users) {
	                return React.createElement(
	                    'div',
	                    { className: 'box-row-wr align-s-start' },
	                    React.createElement(_SimpleComponentsSimpleTable2.SimpleTable2, { opt: this.opt })
	                );
	            }
	            return React.createElement(
	                'div',
	                null,
	                'no data'
	            );
	        }
	    }]);

	    return UsersTable;
	})(React.Component);

	var A_Users = (function (_React$Component5) {
	    _inherits(A_Users, _React$Component5);

	    function A_Users(props) {
	        _classCallCheck(this, A_Users);

	        _get(Object.getPrototypeOf(A_Users.prototype), 'constructor', this).call(this, props);
	        this.state = {
	            users: null
	        };
	    }

	    _createClass(A_Users, [{
	        key: 'componentWillMount',
	        value: function componentWillMount() {
	            this.getUsers();
	        }
	    }, {
	        key: 'getUsers',
	        value: function getUsers() {
	            var _this = this;

	            console.log("GET USERS!");
	            _api.Api.req('graph', {
	                query: {
	                    users: {
	                        fields: ["id", "first_name", "last_name", "pat_name", "email", "gender"],
	                        sub: {
	                            comps: {
	                                fields: ["name", "inn"]
	                            },
	                            perms: {}
	                        }
	                    }
	                }
	            }, false).then(function (res) {
	                console.log(res);
	                _this.setState({ users: res.users.data });
	            });
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            return React.createElement(
	                _SimpleComponentsLoading.Loading,
	                { dontShow: true, dataRecived: this.state.users },
	                React.createElement(UsersTable, { users: this.state.users })
	            );
	        }
	    }]);

	    return A_Users;
	})(React.Component);

	exports['default'] = A_Users;
	module.exports = exports['default'];

/***/ },
/* 442 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _SimpleComponentsButtonActive = __webpack_require__(253);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	var _SimpleComponentsLoading = __webpack_require__(361);

	var _SimpleComponentsSimpleTable2 = __webpack_require__(399);

	var _api = __webpack_require__(1);

	var React = __webpack_require__(202);

	var TendersTable = (function (_React$Component) {
	    _inherits(TendersTable, _React$Component);

	    function TendersTable() {
	        _classCallCheck(this, TendersTable);

	        _get(Object.getPrototypeOf(TendersTable.prototype), 'constructor', this).apply(this, arguments);
	    }

	    _createClass(TendersTable, [{
	        key: 'render',
	        value: function render() {

	            this.opt = {
	                // хедер
	                headerClass: _SimpleComponentsSimpleTable2.TblHead,
	                headData: [{ id: 'id', title: 'ID' }, { id: 'name', title: 'Название' }, { id: 'comps', title: 'Участники', cellClass: _SimpleComponentsSimpleTable2.TblCellUsers }, { id: 'owner', title: 'Организатор', cellClass: _SimpleComponentsSimpleTable2.TblCellOwner }],
	                // контент
	                bodyClass: _SimpleComponentsSimpleTable2.TblBody,
	                //bodyData: Store.sessions,
	                bodyData: this.props.tenders,
	                // пагенатор
	                pagesClass: _SimpleComponentsSimpleTable2.TblPages,
	                pagesConf: {
	                    availableCapacity: [1, 2, 5, 10],
	                    currentCapacity: 5,
	                    currentPage: 1
	                },
	                // события
	                onSelectChanged: this.onSelectChanged, // вызывается при изменении выделения, параметр - измененный объект
	                //onCloseSelected: this.onCloseSelected,  // вызывается из футера по клику на "Close"
	                // вспомогательные
	                title: 'Tenders', // заголовок контейнера
	                isSelectable: function isSelectable(obj) {
	                    return obj.sid != _api.Api.sid;
	                }, // ф-я проверки возможности выделения объекта
	                selectionKey: 'sKey', // ключ в объекте который будет использован для флага выделения
	                selectable: false, // включает стандартный механизм выбора (кликом по ряду), можно выключить и сделать свой через bodyClass или cellClass
	                multiselect: true // можно выбирать несколько рядов
	            };
	            if (this.props.tenders) {
	                return React.createElement(
	                    'div',
	                    null,
	                    React.createElement(_SimpleComponentsSimpleTable2.SimpleTable2, { opt: this.opt })
	                );
	            }
	            return React.createElement(
	                'div',
	                null,
	                'no data'
	            );
	        }
	    }]);

	    return TendersTable;
	})(React.Component);

	var A_Tenders = (function (_React$Component2) {
	    _inherits(A_Tenders, _React$Component2);

	    function A_Tenders(props) {
	        _classCallCheck(this, A_Tenders);

	        _get(Object.getPrototypeOf(A_Tenders.prototype), 'constructor', this).call(this, props);
	        this.state = {
	            tenders: null
	        };
	    }

	    _createClass(A_Tenders, [{
	        key: 'componentWillMount',
	        value: function componentWillMount() {
	            this.getTenders();
	        }
	    }, {
	        key: 'getTenders',
	        value: function getTenders() {
	            var _this = this;

	            console.log("GET TENDERS!");
	            _api.Api.req('graph', {
	                query: {
	                    tenders: {
	                        fields: ["id", "name"],
	                        sub: {
	                            comps: {
	                                fields: ["id"]
	                            },
	                            owner: {
	                                src: "comps",
	                                relation: "comp_owner_of_tender"
	                            }
	                        }
	                    }
	                }
	            }, false).then(function (res) {
	                console.log(res.tenders.data);
	                _this.setState({ tenders: res.tenders.data });
	            });
	        }
	    }, {
	        key: 'render',
	        value: function render() {

	            return React.createElement(
	                _SimpleComponentsLoading.Loading,
	                { dontShow: true, dataRecived: this.state.tenders },
	                React.createElement(TendersTable, { tenders: this.state.tenders })
	            );
	        }
	    }]);

	    return A_Tenders;
	})(React.Component);

	exports['default'] = A_Tenders;
	module.exports = exports['default'];

/***/ },
/* 443 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _Dispatcher = __webpack_require__(4);

	var _SimpleComponentsTransparentButton = __webpack_require__(264);

	var _SimpleComponentsSmallPanel = __webpack_require__(407);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	var _SimpleComponentsLoading = __webpack_require__(361);

	var _SimpleComponentsInputSimple = __webpack_require__(248);

	var _SimpleComponentsSimpleTable2 = __webpack_require__(399);

	var _api = __webpack_require__(1);

	var _SimpleComponentsModalWindow = __webpack_require__(362);

	var React = __webpack_require__(202);

	var TblCellControls = (function (_React$Component) {
	    _inherits(TblCellControls, _React$Component);

	    function TblCellControls() {
	        var _this = this;

	        _classCallCheck(this, TblCellControls);

	        _get(Object.getPrototypeOf(TblCellControls.prototype), 'constructor', this).apply(this, arguments);

	        this.deleteCompany = function () {
	            _this.props.opt.deleteCompany(_this.props.value);
	        };

	        this.enterToCompany = function () {
	            _this.props.opt.enterToCompany(_this.props.value);
	        };

	        this.createInvite = function () {
	            _this.props.opt.createInvite(_this.props.value);
	        };
	    }

	    _createClass(TblCellControls, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(
	                'div',
	                null,
	                React.createElement(
	                    _SimpleComponentsFlexBox.FlexBox,
	                    { direction: 'column' },
	                    React.createElement(_SimpleComponentsTransparentButton.TransparentButton, { caption: 'Удалить', onClick: this.deleteCompany }),
	                    React.createElement(_SimpleComponentsTransparentButton.TransparentButton, { caption: 'Вступить', onClick: this.enterToCompany }),
	                    React.createElement(_SimpleComponentsTransparentButton.TransparentButton, { caption: 'Создать приглашение', onClick: this.createInvite })
	                )
	            );
	        }
	    }]);

	    return TblCellControls;
	})(React.Component);

	var TblHead = React.createClass({
	    displayName: 'TblHead',

	    componentWillMount: function componentWillMount() {
	        this.props.opt.headerIns = this;
	    },
	    getInitialState: function getInitialState() {
	        return {};
	    },

	    //render(){
	    //
	    //    return(
	    //
	    //
	    //
	    //    )
	    //
	    //
	    //}

	    render: function render() {

	        var result = [],
	            src = this.props.opt.headData,
	            it = -1,
	            end = src.length - 1;

	        //function cls () {
	        //    if (it == 0)   return 'table-head table-pl text-left table-prb';
	        //    if (it == end) return 'table-head tr-width table-pr text-left';
	        //    return 'table-head text-left table-pr'
	        //}
	        function cls() {
	            if (it == 0) return '';
	            if (it == end) return '';
	            return '';
	        }

	        while (it++ < end) {
	            result.push(React.createElement(
	                'th',
	                { key: it, style: src[it].style, className: cls() },
	                src[it].title
	            ));
	        }

	        return React.createElement(
	            'thead',
	            null,
	            React.createElement(
	                'tr',
	                null,
	                result
	            )
	        );
	    }

	});

	var CompaniesTable = (function (_React$Component2) {
	    _inherits(CompaniesTable, _React$Component2);

	    function CompaniesTable() {
	        var _this2 = this;

	        _classCallCheck(this, CompaniesTable);

	        _get(Object.getPrototypeOf(CompaniesTable.prototype), 'constructor', this).apply(this, arguments);

	        this.render = function () {

	            _this2.opt = {
	                // хедер
	                headerClass: TblHead,
	                headData: [{ id: 'id', title: 'ID', style: { width: "50px" } }, { id: 'name', title: 'Название', style: { width: "100px" } }, { id: 'addr', title: 'Адрес', style: { width: "100px" } }, { id: 'users', title: 'Пользователи', cellClass: _SimpleComponentsSimpleTable2.TblCellUsers, style: { width: "100px" } }, { id: 'tenders', title: 'Тендеры', cellClass: _SimpleComponentsSimpleTable2.TblCellTenders, style: { width: "100px" } }, { id: 'id', title: 'Действия', cellClass: TblCellControls, style: { width: "100px" } }],
	                // контент
	                bodyClass: _SimpleComponentsSimpleTable2.TblBody,
	                //bodyData: Store.sessions,
	                bodyData: _this2.props.companies,
	                // пагенатор
	                pagesClass: _SimpleComponentsSimpleTable2.TblPages,
	                pagesConf: {
	                    availableCapacity: [1, 2, 5, 10],
	                    currentCapacity: 5,
	                    currentPage: 1
	                },
	                // события
	                onSelectChanged: _this2.onSelectChanged, // вызывается при изменении выделения, параметр - измененный объект
	                //onCloseSelected: this.onCloseSelected,  // вызывается из футера по клику на "Close"
	                deleteCompany: _this2.props.deleteCompany,
	                enterToCompany: _this2.props.enterToCompany,
	                createInvite: _this2.props.createInvite,
	                // вспомогательные
	                title: 'Companies', // заголовок контейнера
	                isSelectable: function isSelectable(obj) {
	                    return obj.sid != _api.Api.sid;
	                }, // ф-я проверки возможности выделения объекта
	                selectionKey: 'sKey', // ключ в объекте который будет использован для флага выделения
	                selectable: false, // включает стандартный механизм выбора (кликом по ряду), можно выключить и сделать свой через bodyClass или cellClass
	                multiselect: true // можно выбирать несколько рядов
	            };
	            if (_this2.props.companies) {
	                return React.createElement(
	                    'div',
	                    null,
	                    React.createElement(_SimpleComponentsSimpleTable2.SimpleTable2, { opt: _this2.opt })
	                );
	            }
	            return React.createElement(
	                'div',
	                null,
	                'no data'
	            );
	        };
	    }

	    return CompaniesTable;
	})(React.Component);

	var A_Companies = (function (_React$Component3) {
	    _inherits(A_Companies, _React$Component3);

	    function A_Companies(props) {
	        var _this3 = this;

	        _classCallCheck(this, A_Companies);

	        _get(Object.getPrototypeOf(A_Companies.prototype), 'constructor', this).call(this, props);

	        this.deleteCompany = function (id) {
	            _api.Api.deleteCompanyRequest(id).then(function (res) {
	                if (res.err) {
	                    _Dispatcher.Error.newError(res.err, res.msg);
	                } else {
	                    _this3.getCompanies();
	                }
	            });
	        };

	        this.enterToCompany = function (id) {
	            console.log(_this3.props.user.id);
	            var params = {
	                user_id: _this3.props.user.id,
	                comp_id: id
	            };
	            _api.Api.compUserMove(params).then(function (res) {
	                if (res.err) {
	                    console.log("ERROR " + res.msg);
	                } else {
	                    _this3.getCompanies();
	                }
	            });
	        };

	        this.createInvite = function (v) {
	            _this3.setState({ isModalEditProfileOpen: true, selectedCompId: v });
	            console.log("НОВЫЙ ИНВАЙТ" + v);
	        };

	        this.sendInvite = function () {
	            var params = {};
	            params.email = _this3.state.email;
	            params.phone = _this3.state.phone;
	            params.last_name = _this3.state.last_name;
	            params.first_name = _this3.state.first_name;
	            params.pat_name = _this3.state.pat_name;
	            params.comp_id = _this3.state.selectedCompId;
	            _api.Api.compInviteCreate(params).then(function (res) {
	                if (res.err) {
	                    console.log("ERROR!");
	                    console.log(res.msg);
	                } else {
	                    console.log(res);
	                    _this3.setState({ selectedCompId: null, isModalEditProfileOpen: false });
	                }
	            });
	            console.log("SEND");
	        };

	        this.updateInputs = function (o) {
	            _this3.setState(o);
	        };

	        this.createNewCompany = function () {
	            window.location.hash = "dashboard/admin/a_create_company";
	        };

	        this.render = function () {
	            console.log("INVITE");
	            console.log(_this3.state);
	            if (_this3.state.companies) {
	                return React.createElement(
	                    'div',
	                    null,
	                    React.createElement(
	                        _SimpleComponentsModalWindow.ModalWindow,
	                        { isOpen: _this3.state.isModalEditProfileOpen },
	                        React.createElement(
	                            'table',
	                            null,
	                            React.createElement(
	                                'tbody',
	                                null,
	                                React.createElement(
	                                    'tr',
	                                    null,
	                                    React.createElement(
	                                        'td',
	                                        { style: {
	                                                'width': '100px'
	                                            } },
	                                        React.createElement(
	                                            'p',
	                                            null,
	                                            'email'
	                                        )
	                                    ),
	                                    React.createElement(
	                                        'td',
	                                        null,
	                                        React.createElement(_SimpleComponentsInputSimple.InputSimple, { name: 'email', onChange: _this3.updateInputs })
	                                    )
	                                ),
	                                React.createElement(
	                                    'tr',
	                                    null,
	                                    React.createElement(
	                                        'td',
	                                        null,
	                                        React.createElement(
	                                            'p',
	                                            null,
	                                            'Телефон'
	                                        )
	                                    ),
	                                    React.createElement(
	                                        'td',
	                                        null,
	                                        React.createElement(_SimpleComponentsInputSimple.InputSimple, { name: 'phone', onChange: _this3.updateInputs })
	                                    )
	                                ),
	                                React.createElement(
	                                    'tr',
	                                    null,
	                                    React.createElement(
	                                        'td',
	                                        null,
	                                        React.createElement(
	                                            'p',
	                                            null,
	                                            'Фамилия'
	                                        )
	                                    ),
	                                    React.createElement(
	                                        'td',
	                                        null,
	                                        React.createElement(_SimpleComponentsInputSimple.InputSimple, { name: 'last_name', onChange: _this3.updateInputs })
	                                    )
	                                ),
	                                React.createElement(
	                                    'tr',
	                                    null,
	                                    React.createElement(
	                                        'td',
	                                        null,
	                                        React.createElement(
	                                            'p',
	                                            null,
	                                            'Имя'
	                                        )
	                                    ),
	                                    React.createElement(
	                                        'td',
	                                        null,
	                                        React.createElement(_SimpleComponentsInputSimple.InputSimple, { name: 'first_name', onChange: _this3.updateInputs })
	                                    )
	                                ),
	                                React.createElement(
	                                    'tr',
	                                    null,
	                                    React.createElement(
	                                        'td',
	                                        null,
	                                        React.createElement(
	                                            'p',
	                                            null,
	                                            'Отчество'
	                                        )
	                                    ),
	                                    React.createElement(
	                                        'td',
	                                        null,
	                                        React.createElement(_SimpleComponentsInputSimple.InputSimple, { name: 'pat_name', onChange: _this3.updateInputs })
	                                    )
	                                )
	                            )
	                        ),
	                        React.createElement(_SimpleComponentsTransparentButton.TransparentButton, { caption: 'Отправить приглашение', onClick: _this3.sendInvite })
	                    ),
	                    React.createElement(CompaniesTable, {
	                        companies: _this3.state.companies,
	                        deleteCompany: _this3.deleteCompany,
	                        enterToCompany: _this3.enterToCompany,
	                        createInvite: _this3.createInvite
	                    }),
	                    React.createElement(_SimpleComponentsTransparentButton.TransparentButton, { onClick: _this3.createNewCompany, caption: 'Create' })
	                );
	            }
	            return null;
	        };

	        this.state = {
	            companies: null,
	            isModalOpen: false
	        };
	    }

	    _createClass(A_Companies, [{
	        key: 'componentWillMount',
	        value: function componentWillMount() {
	            this.getCompanies();
	        }
	    }, {
	        key: 'getCompanies',
	        value: function getCompanies() {
	            var _this4 = this;

	            console.log("GET COMPANIES!");
	            _api.Api.req('graph', {
	                query: {
	                    comps: {
	                        fields: ["id", "name", "addr"],
	                        sub: {
	                            users: {
	                                fields: ["id"]
	                            },
	                            tenders: {
	                                fields: ["id"]
	                            }
	                        }
	                    }
	                }
	            }, false).then(function (res) {
	                console.log(res.comps.data);
	                _this4.setState({ companies: res.comps.data });
	            });
	        }
	    }]);

	    return A_Companies;
	})(React.Component);

	exports['default'] = A_Companies;
	module.exports = exports['default'];

/***/ },
/* 444 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _SimpleComponentsTransparentButton = __webpack_require__(264);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	var _SimpleComponentsLoading = __webpack_require__(361);

	var _api = __webpack_require__(1);

	var React = __webpack_require__(202);

	var A_Invites = (function (_React$Component) {
	    _inherits(A_Invites, _React$Component);

	    function A_Invites() {
	        _classCallCheck(this, A_Invites);

	        _get(Object.getPrototypeOf(A_Invites.prototype), 'constructor', this).apply(this, arguments);
	    }

	    _createClass(A_Invites, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(
	                'div',
	                null,
	                React.createElement(_SimpleComponentsTransparentButton.TransparentButton, { caption: 'Создать приглашение' })
	            );
	        }
	    }]);

	    return A_Invites;
	})(React.Component);

	exports['default'] = A_Invites;
	module.exports = exports['default'];

/***/ },
/* 445 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _api = __webpack_require__(1);

	var _SimpleComponentsInputSelect2Js = __webpack_require__(267);

	var _Dispatcher = __webpack_require__(4);

	var _SimpleComponentsIcons = __webpack_require__(252);

	var _SimpleComponentsInputText = __webpack_require__(408);

	var _SimpleComponentsInputSimple = __webpack_require__(248);

	var _SimpleComponentsSmallPanel = __webpack_require__(407);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	var _SimpleComponentsTableForm = __webpack_require__(446);

	var _utils = __webpack_require__(2);

	var _SimpleComponentsButtonActive = __webpack_require__(253);

	var _SimpleComponentsLoading = __webpack_require__(361);

	var _SimpleComponentsStateInfo = __webpack_require__(447);

	var _Map = __webpack_require__(448);

	//7705714511 бумтранс
	//290303665550 Осипов РА

	var React = __webpack_require__(202);

	var DadataSuggest = (function (_React$Component) {
	    _inherits(DadataSuggest, _React$Component);

	    function DadataSuggest() {
	        var _this = this;

	        _classCallCheck(this, DadataSuggest);

	        _get(Object.getPrototypeOf(DadataSuggest.prototype), 'constructor', this).apply(this, arguments);

	        this.selectItem = function (e) {
	            //console.log(e.target.dataset.id);
	            var id = parseInt(e.target.dataset.id);
	            var obj = {};
	            obj[_this.props.name] = _this.props.list[id];
	            _this.props.onSelect(obj);
	            _this.setState({ hidden: true });
	        };

	        this.render = function () {
	            //console.log(this.state);
	            if (_this.props.list) {
	                var suggestList = _this.props.list.map(function (item, id) {
	                    return React.createElement(
	                        'tr',
	                        { 'data-id': id, onClick: _this.selectItem },
	                        React.createElement(
	                            'td',
	                            { 'data-id': id },
	                            React.createElement(
	                                'p',
	                                { 'data-id': id },
	                                item.data.inn
	                            )
	                        ),
	                        React.createElement(
	                            'td',
	                            { 'data-id': id },
	                            React.createElement(
	                                'p',
	                                { 'data-id': id },
	                                item.value
	                            )
	                        ),
	                        React.createElement(
	                            'td',
	                            { 'data-id': id },
	                            React.createElement(
	                                'p',
	                                { 'data-id': id },
	                                item.data.address.value
	                            )
	                        )
	                    );
	                });
	            }

	            if (_this.props.hidden) {
	                return null;
	            }
	            return React.createElement(
	                'div',
	                null,
	                React.createElement(
	                    'table',
	                    { className: 'table-nohead', style: {
	                            'width': 'parent'
	                        } },
	                    React.createElement(
	                        'thead',
	                        null,
	                        React.createElement(
	                            'tr',
	                            null,
	                            React.createElement(
	                                'th',
	                                null,
	                                React.createElement(
	                                    'p',
	                                    null,
	                                    'ИНН'
	                                )
	                            ),
	                            React.createElement(
	                                'th',
	                                null,
	                                React.createElement(
	                                    'p',
	                                    null,
	                                    'Название'
	                                )
	                            ),
	                            React.createElement(
	                                'th',
	                                null,
	                                React.createElement(
	                                    'p',
	                                    null,
	                                    'Адрес'
	                                )
	                            )
	                        )
	                    ),
	                    React.createElement(
	                        'tbody',
	                        null,
	                        suggestList
	                    )
	                )
	            );
	        };
	    }

	    _createClass(DadataSuggest, null, [{
	        key: 'propTypes',
	        value: {
	            list: React.PropTypes.array,
	            onSelect: React.PropTypes.func,
	            name: React.PropTypes.func,
	            hidden: React.PropTypes.bool
	        },
	        enumerable: true
	    }, {
	        key: 'defaultProps',
	        value: {},
	        enumerable: true
	    }]);

	    return DadataSuggest;
	})(React.Component);

	var A_CreateCompany = (function (_React$Component2) {
	    _inherits(A_CreateCompany, _React$Component2);

	    function A_CreateCompany() {
	        var _this2 = this;

	        _classCallCheck(this, A_CreateCompany);

	        _get(Object.getPrototypeOf(A_CreateCompany.prototype), 'constructor', this).apply(this, arguments);

	        this.state = {
	            dadataResponse: null,
	            searchRequest: null,
	            isSelected: false,
	            searchMode: false
	        };

	        this.getSuggest = function () {
	            if (_this2.state.searchRequest) {
	                var params = {
	                    type: "suggest/party",
	                    data: {
	                        query: _this2.state.searchRequest,
	                        count: 5
	                    }
	                };
	                _api.Api.getDadata(params).then(function (res) {
	                    var resp;
	                    try {
	                        resp = res.dadata.suggestions;
	                    } catch (e) {
	                        console.log(e);
	                    }
	                    _this2.setState({ dadataResponse: resp, searchMode: true, isSelected: false, selectedCompany: null });
	                });
	            } else console.log("ничего не введено");
	        };

	        this.selectInputChange = function (value) {
	            console.log("from select");
	            var tags = value.getSelectedList().map(function (tag) {
	                return tag.id;
	            });
	            _this2.setState({ tags: tags });
	        };

	        this.selectCompany = function (obj) {

	            obj.searchMode = false;
	            obj.isSelected = true;
	            obj.onYmapsReadyGeoCodingStart = true;
	            _this2.setState(obj);
	        };

	        this.updateInputs = function (obj) {
	            _this2.setState(obj);
	        };

	        this.saveCompany = function () {
	            var newObj = {};
	            newObj.phone = _this2.state.phone;
	            newObj.inn = _this2.state.selectedCompany.data.inn;
	            newObj.addr = _this2.state.selectedCompany.data.address.value;
	            newObj.kpp = _this2.state.selectedCompany.data.kpp;
	            newObj.tags = _this2.state.tags;
	            newObj.email = _this2.state.email;
	            // newObj.ati_code = this.state.ati_code;   // deprecated
	            newObj.web_site = _this2.state.web_site;

	            newObj.x = _this2.state.x;
	            newObj.y = _this2.state.y;

	            //console.log("Сохранить");
	            //console.log(newObj);
	            _api.Api.createCompanyNewRequest(newObj).then(function (res) {
	                if (res.err) {
	                    console.log(res.msg);
	                    _Dispatcher.Error.newError(res.err, res, msg);
	                } else {
	                    console.log(res.comp_id);
	                    window.location.hash = "/dashboard/admin/companies";
	                }
	            });
	        };

	        this.cancel = function () {

	            _this2.setState({
	                searchMode: false, isSelected: false, selectedCompany: null, searchRequest: ""

	            });
	            console.log("Отменить");
	        };

	        this.getCoordinate = function () {
	            var myGeocoder = ymaps.geocode(_this2.state.selectedCompany.data.address.value, { json: true, results: 1 });
	            myGeocoder.then(function (res) {
	                var sugg = res.GeoObjectCollection.featureMember;
	                console.debug(sugg);
	                var coord = sugg[0].GeoObject.Point.pos.split(" ");
	                console.log("COORD");
	                console.log(coord);
	                var x = coord[0];
	                var y = coord[1];
	                _this2.inputAddressSelect(x, y);
	            }, function (err) {
	                console.error('ymaps.geocode failed: ' + err);
	            });
	        };

	        this.ymapsReadyHandler = function () {
	            console.log("READY YMAPS");
	            if (_this2.state.onYmapsReadyGeoCodingStart) {
	                _this2.state.onYmapsReadyGeoCodingStart = false;
	                _this2.getCoordinate();
	            }
	        };

	        this.render = function () {
	            console.log(_this2.state);
	            if (_this2.state.isSelected) {
	                var dadata = _this2.state.selectedCompany;
	                console.log(dadata);
	                var body = [{
	                    type: "divider",
	                    name: "Данные из Dadata.ru"
	                }, {
	                    fieldName: "Название",
	                    value: _utils.Utils.getValue(dadata, 'value')
	                }, {
	                    fieldName: "ИНН",
	                    value: _utils.Utils.getValue(dadata, 'data.inn')
	                }, {
	                    fieldName: "КПП",
	                    value: _utils.Utils.getValue(dadata, 'data.kpp')
	                }, {
	                    fieldName: "ОГРН",
	                    value: _utils.Utils.getValue(dadata, 'data.ogrn')
	                }, {
	                    fieldName: "Адрес",
	                    value: _utils.Utils.getValue(dadata, 'data.address.value')
	                }, {
	                    type: "divider",
	                    name: "Дополнительные данные"
	                }];
	            }
	            var stateStringify = JSON.stringify(_this2.state, null, '   ');
	            return React.createElement(
	                _SimpleComponentsFlexBox.FlexBox,
	                { direction: 'row', alignItems: 'start' },
	                React.createElement(
	                    _SimpleComponentsSmallPanel.SmallPanel,
	                    { headerName: 'Создание компании', styles: { smallPanel: { marginRight: "10px" } } },
	                    React.createElement(
	                        _SimpleComponentsFlexBox.FlexBox,
	                        null,
	                        React.createElement(_SimpleComponentsInputSimple.InputSimple, {
	                            type: 'search',
	                            placeholder: 'Введите ИНН или название',
	                            name: 'searchRequest',
	                            value: _this2.state.searchRequest,
	                            onChange: _this2.updateInputs
	                        }),
	                        React.createElement(_SimpleComponentsButtonActive.ButtonActive, { caption: 'Проверить', onClick: _this2.getSuggest })
	                    ),
	                    React.createElement(DadataSuggest, {
	                        hidden: !_this2.state.searchMode,
	                        list: _this2.state.dadataResponse,
	                        name: 'selectedCompany',
	                        onSelect: _this2.selectCompany
	                    }),
	                    React.createElement(_SimpleComponentsTableForm.TableForm, { hidden: !_this2.state.isSelected, body: body }),
	                    React.createElement(
	                        _SimpleComponentsLoading.Loading,
	                        { dataRecived: _this2.state.isSelected, dontShow: true },
	                        React.createElement(
	                            'table',
	                            null,
	                            React.createElement(
	                                'tbody',
	                                null,
	                                React.createElement(
	                                    'tr',
	                                    null,
	                                    React.createElement(
	                                        'td',
	                                        { style: {
	                                                'width': '100px'
	                                            } },
	                                        React.createElement(
	                                            'p',
	                                            null,
	                                            'email'
	                                        )
	                                    ),
	                                    React.createElement(
	                                        'td',
	                                        null,
	                                        React.createElement(_SimpleComponentsInputSimple.InputSimple, { name: 'email', onChange: _this2.updateInputs })
	                                    )
	                                ),
	                                React.createElement(
	                                    'tr',
	                                    null,
	                                    React.createElement(
	                                        'td',
	                                        null,
	                                        React.createElement(
	                                            'p',
	                                            null,
	                                            'Телефон'
	                                        )
	                                    ),
	                                    React.createElement(
	                                        'td',
	                                        null,
	                                        React.createElement(_SimpleComponentsInputSimple.InputSimple, { name: 'phone', onChange: _this2.updateInputs })
	                                    )
	                                ),
	                                React.createElement(
	                                    'tr',
	                                    null,
	                                    React.createElement(
	                                        'td',
	                                        null,
	                                        React.createElement(
	                                            'p',
	                                            null,
	                                            'Веб-сайт'
	                                        )
	                                    ),
	                                    React.createElement(
	                                        'td',
	                                        null,
	                                        React.createElement(_SimpleComponentsInputSimple.InputSimple, { name: 'web_site', onChange: _this2.updateInputs })
	                                    )
	                                ),
	                                React.createElement(
	                                    'tr',
	                                    null,
	                                    React.createElement(
	                                        'td',
	                                        null,
	                                        React.createElement(
	                                            'p',
	                                            null,
	                                            'Признаки компании'
	                                        )
	                                    ),
	                                    React.createElement(
	                                        'td',
	                                        { style: {
	                                                'padding': '5px'
	                                            } },
	                                        React.createElement(_SimpleComponentsInputSelect2Js.InputSelect2, {
	                                            ref: 'tags',
	                                            list: _Dispatcher.Dictionary.getTagsList(),
	                                            multiSelect: true,
	                                            elementClass: _SimpleComponentsInputSelect2Js.Tag,
	                                            onChanged: _this2.selectInputChange
	                                        })
	                                    )
	                                )
	                            )
	                        ),
	                        React.createElement(_SimpleComponentsButtonActive.ButtonActive, { caption: 'Сохранить', onClick: _this2.saveCompany }),
	                        React.createElement(_SimpleComponentsButtonActive.ButtonActive, { caption: 'Отменить', onClick: _this2.cancel })
	                    )
	                ),
	                React.createElement(
	                    _SimpleComponentsSmallPanel.SmallPanel,
	                    { headerName: 'Address', disabled: !_this2.state.isSelected },
	                    React.createElement(_Map.Map, { ref: 'yandexMap',
	                        className: 'border',
	                        style: {
	                            'width': '410px',
	                            'height': '300px'
	                        },
	                        disabled: false,
	                        onReady: _this2.ymapsReadyHandler
	                    })
	                ),
	                React.createElement(_SimpleComponentsStateInfo.StateInfo, { value: stateStringify })
	            );
	        };
	    }

	    // deprecated
	    //
	    // <tr>
	    //                                 <td>
	    //                                     <p>Код в АТИ</p>
	    //                                 </td>
	    //                                 <td>
	    //                                     <InputSimple name="ati_code" onChange={this.updateInputs}/>
	    //                                 </td>
	    //                             </tr>

	    _createClass(A_CreateCompany, [{
	        key: 'inputAddressSelect',
	        value: function inputAddressSelect(addrX, addrY) {
	            this.setState({
	                x: addrX,
	                y: addrY
	            });
	            var m = this.refs.yandexMap;
	            m.clearGeoObjects();
	            m.setPos(addrX, addrY);
	            m.addBaloon(addrX, addrY, name);
	        }
	    }]);

	    return A_CreateCompany;
	})(React.Component);

	exports['default'] = A_CreateCompany;
	module.exports = exports['default'];

/***/ },
/* 446 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(202);

	var TableForm = (function (_React$Component) {
	    _inherits(TableForm, _React$Component);

	    function TableForm() {
	        var _this = this;

	        _classCallCheck(this, TableForm);

	        _get(Object.getPrototypeOf(TableForm.prototype), "constructor", this).apply(this, arguments);

	        this.render = function () {

	            if (_this.props.hidden) {
	                return null;
	            }

	            var body = _this.props.body.map(function (row, id) {
	                if (row.type === "divider") {
	                    return React.createElement(
	                        "tr",
	                        null,
	                        React.createElement(
	                            "td",
	                            { style: {
	                                    "fontWeight": "bold"
	                                }, colSpan: "2" },
	                            row.name
	                        )
	                    );
	                }
	                return React.createElement(
	                    "tr",
	                    { key: id },
	                    React.createElement(
	                        "td",
	                        { className: "table-pl" },
	                        row.fieldName
	                    ),
	                    React.createElement(
	                        "td",
	                        { className: "table-plbig table-pr" },
	                        row.value
	                    )
	                );
	            });
	            return React.createElement(
	                "table",
	                { className: "table table-nohead" },
	                React.createElement(
	                    "tbody",
	                    null,
	                    body
	                )
	            );
	        };
	    }

	    _createClass(TableForm, null, [{
	        key: "propTypes",
	        value: {
	            disabled: React.PropTypes.bool,
	            body: React.PropTypes.array
	        },
	        enumerable: true
	    }]);

	    return TableForm;
	})(React.Component);

	exports.TableForm = TableForm;

/***/ },
/* 447 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(202);

	var StateInfo = (function (_React$Component) {
	    _inherits(StateInfo, _React$Component);

	    function StateInfo() {
	        _classCallCheck(this, StateInfo);

	        _get(Object.getPrototypeOf(StateInfo.prototype), "constructor", this).apply(this, arguments);
	    }

	    _createClass(StateInfo, [{
	        key: "render",
	        value: function render() {
	            var styles = {
	                stateInfoWrap: {
	                    "position": "absolute",
	                    "zIndex": "1000",
	                    "bottom": "0"
	                },
	                stateInfo: {}
	            };
	            return React.createElement(
	                "div",
	                { style: styles.stateInfoWrap },
	                React.createElement("textarea", { style: styles.stateInfo, name: "area", id: "", cols: "60", rows: "15",
	                    value: this.props.value })
	            );
	        }
	    }], [{
	        key: "defaultProps",
	        value: {
	            value: ""
	        },
	        enumerable: true
	    }]);

	    return StateInfo;
	})(React.Component);

	exports.StateInfo = StateInfo;

/***/ },
/* 448 */
/***/ function(module, exports, __webpack_require__) {

	//require('../../styles/map.scss');

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});
	var React = __webpack_require__(202);
	//import {init, myMap} from '../MapController';

	var Map = React.createClass({
	    displayName: 'Map',

	    componentDidMount: function componentDidMount() {
	        console.log('[Map] componentDidMount');

	        if (!this.props.disabled) {
	            this.ymapsLoader = document.createElement('script');
	            this.ymapsLoader.onload = this.ymapsLoaded;
	            this.ymapsLoader.src = "http://api-maps.yandex.ru/2.1/?lang=ru_RU&amp;amp;load=package.full";
	            document.getElementsByTagName('head')[0].appendChild(this.ymapsLoader);
	        }
	    },

	    componentWillUnmount: function componentWillUnmount() {
	        this.ymapsLdrRemove();
	        if (this.mapIns) this.mapIns.destroy();
	    },

	    ymapsLoaded: function ymapsLoaded() {
	        this.ymapsLdrRemove();
	        //console.log("[Map] ymapsLoaded")
	        ymaps.ready(this.ymapsReady);
	    },

	    ymapsReady: function ymapsReady() {
	        //console.log("[Map] ymapsReady")
	        this.mapIns = new ymaps.Map("map", { center: [55.76, 37.64], zoom: 12, controls: [] });
	        this.mapIns.controls.add(new ymaps.control.ZoomControl({
	            options: {
	                size: "small",
	                position: { top: 10, right: 30 }
	            }
	        }));
	        this.mapIns.events.add('boundschange', this.changeBounds);
	        var f = this.props.onReady;
	        if (f) f();
	    },

	    ymapsLdrRemove: function ymapsLdrRemove() {
	        if (this.ymapsLoader) {
	            document.getElementsByTagName('head')[0].removeChild(this.ymapsLoader);
	            this.ymapsLoader.onload = null;
	            this.ymapsLoader = null;
	        }
	    },

	    changeBounds: function changeBounds() {
	        //console.log("[Map] changeBounds");
	        if (this.props.changeBounds) {
	            this.props.changeBounds(this.mapIns);
	        }
	    },

	    getMap: function getMap() {
	        return this.mapIns;
	    },
	    setPos: function setPos(x, y) {
	        this.mapIns.setCenter([y, x]);
	    },
	    addBaloon: function addBaloon(x, y, name) {
	        this.mapIns.geoObjects.add(new ymaps.Placemark([y, x], { iconContent: name, balloonContent: name }, { preset: "islands#circleDotIcon" }));
	    },
	    setBounds: function setBounds(b) {
	        //console.log('[Map] setBounds ' + b)
	        this.mapIns.setBounds(b, { checkZoomRange: true });
	    },
	    clearGeoObjects: function clearGeoObjects() {
	        var _this = this;

	        try {
	            if (this.mapIns.geoObjects) this.mapIns.geoObjects.each(function (o) {
	                _this.mapIns.geoObjects.remove(o);
	            });
	        } catch (e) {
	            console.log(e);
	        }
	    },

	    render: function render() {
	        //console.log("[Map] render");
	        //console.log(this.props);
	        if (this.props.disabled) return null;
	        return React.createElement(
	            'div',
	            { style: this.props.style, className: this.props.className, id: 'map' },
	            this.props.children
	        );
	    }
	});

	exports.Map = Map;

/***/ },
/* 449 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _api = __webpack_require__(1);

	var _SimpleComponentsAnimateButton = __webpack_require__(412);

	var React = __webpack_require__(202);

	var A_Connections = (function (_React$Component) {
	    _inherits(A_Connections, _React$Component);

	    function A_Connections() {
	        _classCallCheck(this, A_Connections);

	        _get(Object.getPrototypeOf(A_Connections.prototype), 'constructor', this).apply(this, arguments);
	    }

	    _createClass(A_Connections, [{
	        key: 'testClick',
	        value: function testClick() {
	            console.log("test");
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            return React.createElement(
	                'div',
	                null,
	                'Connections'
	            );
	        }
	    }]);

	    return A_Connections;
	})(React.Component);

	exports['default'] = A_Connections;
	module.exports = exports['default'];

/***/ },
/* 450 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	var _AuthDashboard = __webpack_require__(247);

	var _ClassesLogger = __webpack_require__(3);

	var _ControlsNavTabs = __webpack_require__(405);

	var React = __webpack_require__(202);
	var Router = __webpack_require__(7);
	var RouteHandler = Router.RouteHandler;

	var Links = (function (_React$Component) {
	    _inherits(Links, _React$Component);

	    function Links() {
	        var _this = this;

	        _classCallCheck(this, Links);

	        _get(Object.getPrototypeOf(Links.prototype), 'constructor', this).apply(this, arguments);

	        this.state = {
	            relationsQuantity: _AuthDashboard.AppState.myCompany.relationsQuantity
	        };

	        this.updateLinks = function (relationsQuantity) {
	            _this.setState({ relationsQuantity: relationsQuantity });
	        };

	        this.componentWillMount = function () {
	            _AuthDashboard.AppState.myCompany.on("updateLinksQuantity", _this.updateLinks);
	        };

	        this.componentWillUnmount = function () {
	            _AuthDashboard.AppState.myCompany.rem("updateLinksQuantity", _this.updateLinks);
	        };

	        this.render = function () {
	            var q = _this.state.relationsQuantity,
	                tabs = [{ name: "Поиск" }, { name: "Перевозчики", href: "/carriers", hash: "carriers", count: q.carriers }, { name: "Экспедиторы", href: "/expeditors", hash: "expeditors", count: q.expeditors }, { name: "Грузовладельцы", href: "/shippers", hash: "shippers", count: q.shippers }, { name: "Закладки", href: "/bookmarks", hash: "bookmarks", count: q.social }, { name: "Черный Список", href: "/blackmarks", hash: "blackmarks", count: q.blacklist }];

	            return React.createElement(
	                'div',
	                { className: 'panel' },
	                React.createElement(
	                    'div',
	                    { className: 'panel__header' },
	                    React.createElement(
	                        'h1',
	                        { className: 'panel__title' },
	                        'Партнеры'
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'panel__nav-tabs' },
	                    React.createElement(_ControlsNavTabs.NavTabs, { baseHref: '#/dashboard/links', data: tabs })
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'panel__body' },
	                    React.createElement(RouteHandler, null)
	                )
	            );
	        };
	    }

	    _createClass(Links, null, [{
	        key: 'propTypes',
	        value: {
	            company: React.PropTypes.object
	        },
	        enumerable: true
	    }]);

	    return Links;
	})(React.Component);

	exports.Links = Links;

/***/ },
/* 451 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _RelationRequestsTable = __webpack_require__(452);

	var _RelationTable = __webpack_require__(454);

	var _ClassesLogger = __webpack_require__(3);

	var _AuthDashboard = __webpack_require__(247);

	var React = __webpack_require__(202);

	var Carriers = (function (_React$Component) {
	    _inherits(Carriers, _React$Component);

	    function Carriers(props) {
	        _classCallCheck(this, Carriers);

	        _get(Object.getPrototypeOf(Carriers.prototype), 'constructor', this).call(this, props);
	    }

	    _createClass(Carriers, [{
	        key: 'render',
	        value: function render() {
	            /*
	            logger.log(this, "render");
	            console.debug(this.props.company);
	            */
	            return React.createElement(
	                'div',
	                null,
	                React.createElement(_RelationRequestsTable.RelationRequestsTable, { title: 'Нам предлагают сотрудничество', type: 'in_carriers', in_out: true }),
	                React.createElement(_RelationTable.RelationTable, { title: 'Наши перевозчики', relation: 'carriers', comp_id: _AuthDashboard.AppState.myCompany.id }),
	                React.createElement(_RelationRequestsTable.RelationRequestsTable, { title: 'Мы предлагаем сотрудничество', type: 'out_carriers', in_out: false })
	            );
	        }
	    }]);

	    return Carriers;
	})(React.Component);

	exports['default'] = Carriers;
	module.exports = exports['default'];

/***/ },
/* 452 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _SimpleComponentsSimpleTable2 = __webpack_require__(399);

	var _AuthDashboard = __webpack_require__(247);

	var _api = __webpack_require__(1);

	var _Dispatcher = __webpack_require__(4);

	var _SimpleComponentsTableCells = __webpack_require__(402);

	var _RelationTblCells = __webpack_require__(453);

	var _ClassesLogger = __webpack_require__(3);

	var _utils = __webpack_require__(2);

	var React = __webpack_require__(202);

	var RelationRequestsTable = (function (_React$Component) {
	    _inherits(RelationRequestsTable, _React$Component);

	    function RelationRequestsTable() {
	        var _this = this;

	        _classCallCheck(this, RelationRequestsTable);

	        _get(Object.getPrototypeOf(RelationRequestsTable.prototype), 'constructor', this).apply(this, arguments);

	        this.state = {};
	        this.content = null;
	        this.r_list = null;
	        this.r_act = null;

	        this.componentWillMount = function () {
	            //logger.log(this, 'mount');

	            var req = undefined;
	            if (_this.props.in_out) {
	                // входящие связи
	                _Dispatcher.Events.on(_Dispatcher.Events.EV_RELATION_REQUEST_REFUSE, _this.onRefuse);
	                _Dispatcher.Events.on(_Dispatcher.Events.EV_RELATION_REQUEST_ACCEPT, _this.onAccept);
	                req = { type: _this.props.type, fields: ['id', 'ctime', 'requester_name', 'requester_id'] };
	            } else {
	                // исходящие связи
	                _Dispatcher.Events.on(_Dispatcher.Events.EV_RELATION_REQUEST_CANCEL, _this.onCancel);
	                req = { type: _this.props.type, fields: ['id', 'ctime', 'requested_name', 'requested_id'] };
	            }
	            _Dispatcher.Events.on(_Dispatcher.Events.EV_RELATION_REQUEST_MESSAGE, _this.onMessage);

	            // загрузка запросов на создание связей
	            _this.r_list = new _api.xreq('comp_rel_req_list', req, function (xr) {
	                if (xr.res.err) return;
	                _this.content = xr.res.data; // это данные (хорошо бы их проверить на валидность)
	                _this.forceUpdate(); // передергиваем компонент
	            });
	        };

	        this.componentWillUnmount = function () {
	            //logger.log(this, 'unmount');
	            if (_this.r_list) {
	                _this.r_list.cancel();_this.r_list = null;
	            }
	            if (_this.r_act) {
	                _this.r_act.cancel();_this.r_act = null;
	            }
	            if (_this.props.in_out) {
	                _Dispatcher.Events.rem(_Dispatcher.Events.EV_RELATION_REQUEST_REFUSE, _this.onRefuse);
	                _Dispatcher.Events.rem(_Dispatcher.Events.EV_RELATION_REQUEST_ACCEPT, _this.onAccept);
	            } else {
	                _Dispatcher.Events.rem(_Dispatcher.Events.EV_RELATION_REQUEST_CANCEL, _this.onCancel);
	            }
	            _Dispatcher.Events.rem(_Dispatcher.Events.EV_RELATION_REQUEST_MESSAGE, _this.onMessage);
	        };

	        this.requestTemplateCm = function (cm, relreq, hr) {
	            // шаблон запроа к api
	            if (_this.r_act) return;
	            _this.r_act = new _api.xreq(cm, { request_id: relreq.id }, function (xr) {
	                if (xr.res.err) return;
	                _this.r_act = null;
	                _utils.Utils.run(hr, relreq);
	            });
	        };

	        this.delContentElemById = function (id) {
	            // удалятель эелемента из списка по request_id
	            for (var i = 0, l = _this.content.length; i < l; i++) {
	                if (_this.content[i].id == id) {
	                    _this.content.splice(i, 1); // удаляем предложение из списка
	                    return true;
	                }
	            }
	            return false;
	        };

	        this.onRefuse = function (r) {
	            // отклоняем предложение
	            //logger.log(this, 'onRefuse');
	            //console.debug(r);
	            _this.requestTemplateCm('comp_relation_request_refuse', r, _this.removed);
	        };

	        this.onAccept = function (r) {
	            // принимаем предложение
	            //logger.log(this, 'onAccept');
	            //console.debug(r);
	            _this.requestTemplateCm('comp_relation_request_accept', r, _this.accepted);
	        };

	        this.onCancel = function (r) {
	            // отменяем предложение
	            //logger.log(this, 'onCancel');
	            //console.debug(r);
	            _this.requestTemplateCm('comp_relation_request_delete', r, _this.removed);
	        };

	        this.onMessage = function (r) {// пишем мессагу приглашателю
	            //logger.log(this, 'onMessage');
	            //console.debug(r);
	            // todo ....
	        };

	        this.removed = function (r) {
	            // предложение убрано
	            _ClassesLogger.logger.log(_this, 'removed');
	            if (_this.delContentElemById(r.id)) // удаляем из списка предложений
	                _this.forceUpdate(); // если удалилось, то передергиваем компонент
	        };

	        this.accepted = function (r) {
	            // предложение принято
	            _ClassesLogger.logger.log(_this, 'accepted');
	            if (_this.delContentElemById(r.id)) {
	                // удаляем из списка предложений
	                _this.forceUpdate(); // если удалилось, то передергиваем компонент
	                _Dispatcher.Events.run(Event.EV_COMP_RELATIONS_CHANGED); // и сигналим о изменении связей
	            }
	        };
	    }

	    _createClass(RelationRequestsTable, [{
	        key: 'render',
	        value: function render() {
	            //logger.log(this, 'render');

	            if (!this.content) return null; // загрузка не завершена
	            if (this.content.length < 1) return null; // данных нет

	            var hd = this.props.in_out ? [{ id: 'requester_name', title: 'Компания', cellClass: _RelationTblCells.TblCellRelationCompName }, { id: 'ctime', title: 'Дата', cellClass: _SimpleComponentsTableCells.TblDateUTCCls }, { id: 'id', title: 'Действия', cellClass: _RelationTblCells.TblCellRelationInRequestActions }] : [{ id: 'requested_name', title: 'Компания', cellClass: _RelationTblCells.TblCellRelationCompName }, { id: 'ctime', title: 'Дата', cellClass: _SimpleComponentsTableCells.TblDateUTCCls }, { id: 'id', title: 'Действия', cellClass: _RelationTblCells.TblCellRelationOutRequestActions }];

	            this.opt = {
	                title: this.props.title,
	                className: "panel panel-default max-size",
	                headerClass: _SimpleComponentsSimpleTable2.TblHead, // хедер
	                headData: hd,
	                bodyClass: _SimpleComponentsSimpleTable2.TblBody, bodyData: this.content, // контент
	                incomingRel: this.props.in_out,
	                pagesClass: _SimpleComponentsSimpleTable2.TblPages, pagesConf: { availableCapacity: [5, 10], currentCapacity: 5, currentPage: 1 } };

	            // пагенатор
	            return React.createElement(
	                'div',
	                { className: 'row' },
	                React.createElement(
	                    'div',
	                    { className: 'col-xs-12' },
	                    React.createElement(_SimpleComponentsSimpleTable2.SimpleTable2, { opt: this.opt })
	                )
	            );
	        }
	    }]);

	    return RelationRequestsTable;
	})(React.Component);

	exports.RelationRequestsTable = RelationRequestsTable;
	// api.xreq
	// api.xreq

/***/ },
/* 453 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _Dispatcher = __webpack_require__(4);

	var _ClassesLogger = __webpack_require__(3);

	var _SimpleComponentsIcons = __webpack_require__(252);

	var _SimpleComponentsHint = __webpack_require__(363);

	var _SimpleComponentsHint2 = _interopRequireDefault(_SimpleComponentsHint);

	var _ControlsModalWindow = __webpack_require__(233);

	var _ControlsFormsButtonSimple = __webpack_require__(226);

	var _ControlsFormsFormGroup = __webpack_require__(224);

	// кликабельное название компании
	var React = __webpack_require__(202);

	var TblCellRelationCompName = (function (_React$Component) {
	    _inherits(TblCellRelationCompName, _React$Component);

	    function TblCellRelationCompName() {
	        var _this = this;

	        _classCallCheck(this, TblCellRelationCompName);

	        _get(Object.getPrototypeOf(TblCellRelationCompName.prototype), 'constructor', this).apply(this, arguments);

	        this.render = function () {
	            var compId = _this.props.obj.requested_id || _this.props.obj.requester_id || _this.props.obj.comp_id;

	            return React.createElement(
	                'div',
	                { className: 'box-row-nw' },
	                React.createElement(
	                    'a',
	                    { target: '_blank', href: "/#/dashboard/comp/" + compId },
	                    _this.props.value
	                )
	            );
	        };
	    }

	    // действия на существующую связь компании
	    return TblCellRelationCompName;
	})(React.Component);

	exports.TblCellRelationCompName = TblCellRelationCompName;

	var TblCellRelationActions = (function (_React$Component2) {
	    _inherits(TblCellRelationActions, _React$Component2);

	    function TblCellRelationActions() {
	        var _this2 = this;

	        _classCallCheck(this, TblCellRelationActions);

	        _get(Object.getPrototypeOf(TblCellRelationActions.prototype), 'constructor', this).apply(this, arguments);

	        this.state = { isModalRemoveOpen: false };

	        this.remove = function () {
	            _Dispatcher.Events.run(_Dispatcher.Events.EV_RELATION_REQUEST_DELETE, _this2.props.obj);
	            _this2.triggerModalRemove();
	        };

	        this.triggerModalRemove = function () {
	            _this2.setState({ isModalRemoveOpen: !_this2.state.isModalRemoveOpen });
	        };

	        this.render = function () {
	            if (!_this2.props.opt.delAvailable) return null;

	            return React.createElement(
	                'div',
	                { className: 'row row-nw row-space-children' },
	                React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this2.triggerModalRemove, type: 'warning', size: 'small', caption: 'Удалить связь' }),
	                React.createElement(
	                    _ControlsModalWindow.ModalWindow,
	                    { isOpen: _this2.state.isModalRemoveOpen,
	                        onClose: _this2.triggerModalRemove,
	                        title: 'Удаление связи' },
	                    React.createElement(
	                        'div',
	                        { className: 'modal-container__body' },
	                        React.createElement(
	                            'div',
	                            null,
	                            'Вы действительно хотите удалить связь с компанией ',
	                            _this2.props.obj.name,
	                            '?'
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'modal-container__footer' },
	                            React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { type: 'danger', onClick: _this2.remove, caption: 'Удалить' })
	                        )
	                    )
	                )
	            );

	            //  OLD
	            // <div data-tooltip="Удалить" className="pagin-pls" data-name="close" onClick={this.remove} >
	            //                 <Icon iconName="close-circle-icon" dataName="close" size={20} />
	            //             </div>
	        };
	    }

	    // действия на предложение создания связей с моей компанией
	    return TblCellRelationActions;
	})(React.Component);

	exports.TblCellRelationActions = TblCellRelationActions;

	var TblCellRelationInRequestActions = (function (_React$Component3) {
	    _inherits(TblCellRelationInRequestActions, _React$Component3);

	    function TblCellRelationInRequestActions() {
	        var _this3 = this;

	        _classCallCheck(this, TblCellRelationInRequestActions);

	        _get(Object.getPrototypeOf(TblCellRelationInRequestActions.prototype), 'constructor', this).apply(this, arguments);

	        this.state = { isModalRefuseOpen: false };

	        this.refuse = function () {
	            _Dispatcher.Events.run(_Dispatcher.Events.EV_RELATION_REQUEST_REFUSE, _this3.props.obj);
	            _this3.triggerModalRefuse();
	        };

	        this.accept = function () {
	            _Dispatcher.Events.run(_Dispatcher.Events.EV_RELATION_REQUEST_ACCEPT, _this3.props.obj);
	        };

	        this.triggerModalRefuse = function () {
	            _this3.setState({ isModalRefuseOpen: !_this3.state.isModalRefuseOpen });
	        };

	        this.render = function () {
	            return React.createElement(
	                'div',
	                { className: 'row row-nw row-space-children' },
	                React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this3.accept, type: 'success', size: 'small', caption: 'Принять' }),
	                React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this3.triggerModalRefuse, type: 'warning', size: 'small', caption: 'Отклонить' }),
	                React.createElement(
	                    _ControlsModalWindow.ModalWindow,
	                    { isOpen: _this3.state.isModalRefuseOpen,
	                        onClose: _this3.triggerModalRefuse,
	                        title: 'Отклонить запрос' },
	                    React.createElement(
	                        'div',
	                        { className: 'modal-container__body' },
	                        React.createElement(
	                            'div',
	                            null,
	                            'Вы действительно хотите отклонить запрос на создание связи с компанией ',
	                            _this3.props.obj.requester_name,
	                            '?'
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'modal-container__footer' },
	                            React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { type: 'danger', onClick: _this3.refuse, caption: 'Отклонить' })
	                        )
	                    )
	                )
	            );
	        };
	    }

	    // действия на предложение создания связей от моей компании
	    return TblCellRelationInRequestActions;
	})(React.Component);

	exports.TblCellRelationInRequestActions = TblCellRelationInRequestActions;

	// OLD
	// render=()=> {
	//     return (
	//         <div className="box-row-nw">
	//             <div data-tooltip="Отклонить" className="pagin-pls" data-name="close" onClick={this.refuse} >
	//                 <Icon iconName="close-circle-icon" dataName="close" size={20} />
	//             </div>
	//             <div data-tooltip="Принять" className="pagin-pls" data-name="mail" onClick={this.accept} >
	//                 <Icon iconName="plus-circle-icon" dataName="close" size={20} />
	//             </div>
	//         </div>
	//     )
	// }

	var TblCellRelationOutRequestActions = (function (_React$Component4) {
	    _inherits(TblCellRelationOutRequestActions, _React$Component4);

	    function TblCellRelationOutRequestActions() {
	        var _this4 = this;

	        _classCallCheck(this, TblCellRelationOutRequestActions);

	        _get(Object.getPrototypeOf(TblCellRelationOutRequestActions.prototype), 'constructor', this).apply(this, arguments);

	        this.state = { isModalCancelOpen: false };

	        this.cancel = function () {
	            _Dispatcher.Events.run(_Dispatcher.Events.EV_RELATION_REQUEST_CANCEL, _this4.props.obj);
	            _this4.triggerModalCancel();
	        };

	        this.triggerModalCancel = function () {
	            _this4.setState({ isModalCancelOpen: !_this4.state.isModalCancelOpen });
	        };

	        this.render = function () {
	            return React.createElement(
	                'div',
	                { className: 'row row-nw row-space-children' },
	                React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this4.triggerModalCancel, type: 'warning', size: 'small', caption: 'Отменить запрос' }),
	                React.createElement(
	                    _ControlsModalWindow.ModalWindow,
	                    { isOpen: _this4.state.isModalCancelOpen,
	                        onClose: _this4.triggerModalCancel,
	                        title: 'Отмена запроса' },
	                    React.createElement(
	                        'div',
	                        { className: 'modal-container__body' },
	                        React.createElement(
	                            'div',
	                            null,
	                            'Вы действительно хотите отменить запрос на создание связи с компанией ',
	                            _this4.props.obj.requested_name,
	                            '?'
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'modal-container__footer' },
	                            React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { type: 'danger', onClick: _this4.cancel, caption: 'Отменить' })
	                        )
	                    )
	                )
	            );

	            // OLD
	            // return (
	            //     <div className="row row-nw row-space-children">
	            //         <div data-tooltip="Отменить" className="pagin-pls" data-name="close" onClick={this.cancel} >
	            //             <Icon iconName="close-circle-icon" dataName="close" size={20} />
	            //         </div>
	            //     </div>
	            // )
	        };
	    }

	    return TblCellRelationOutRequestActions;
	})(React.Component);

	exports.TblCellRelationOutRequestActions = TblCellRelationOutRequestActions;

	// message=()=>{ Events.run(Events.EV_RELATION_REQUEST_MESSAGE, this.props.obj); };

	// message=()=>{ Events.run(Events.EV_RELATION_REQUEST_MESSAGE, this.props.obj); };

	// message=()=>{ Events.run(Events.EV_RELATION_REQUEST_MESSAGE, this.props.obj); }

/***/ },
/* 454 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _SimpleComponentsSimpleTable2 = __webpack_require__(399);

	var _AuthDashboard = __webpack_require__(247);

	var _api = __webpack_require__(1);

	var _Dispatcher = __webpack_require__(4);

	var _SimpleComponentsTableCells = __webpack_require__(402);

	var _RelationTblCells = __webpack_require__(453);

	var _ClassesLogger = __webpack_require__(3);

	var _utils = __webpack_require__(2);

	var React = __webpack_require__(202);

	var RelationTable = (function (_React$Component) {
	    _inherits(RelationTable, _React$Component);

	    function RelationTable() {
	        var _this = this;

	        _classCallCheck(this, RelationTable);

	        _get(Object.getPrototypeOf(RelationTable.prototype), 'constructor', this).apply(this, arguments);

	        this.state = {};
	        this.content = null;
	        this.r_list = null;
	        this.r_act = null;

	        this.r_list_stop = function () {
	            // выключаем api
	            if (_this.r_list) {
	                _this.r_list.cancel();_this.r_list = null;
	            }
	        };

	        this.r_act_stop = function () {
	            // выключаем api
	            if (_this.r_act) {
	                _this.r_act.cancel();_this.r_act = null;
	            }
	        };

	        this.componentWillMount = function () {
	            // logger.log(this, 'mount');

	            // слушаем действия над связями
	            _Dispatcher.Events.on(_Dispatcher.Events.EV_RELATION_REQUEST_MESSAGE, _this.onMessage);
	            _Dispatcher.Events.on(_Dispatcher.Events.EV_RELATION_REQUEST_DELETE, _this.onDelete);

	            // слушаем сигнал о изменении связей
	            _Dispatcher.Events.on(_Dispatcher.Events.EV_COMP_RELATIONS_CHANGED, _this.onRelationChanged);

	            // загружаем
	            _this.load(_this.props.comp_id, _this.props.relation);
	        };

	        this.componentWillUnmount = function () {
	            //logger.log(this, 'unmount');

	            _this.r_list_stop();
	            _this.r_act_stop();
	            _Dispatcher.Events.rem(_Dispatcher.Events.EV_RELATION_REQUEST_MESSAGE, _this.onMessage);
	            _Dispatcher.Events.rem(_Dispatcher.Events.EV_RELATION_REQUEST_DELETE, _this.onDelete);
	            _Dispatcher.Events.rem(_Dispatcher.Events.EV_COMP_RELATIONS_CHANGED, _this.onRelationChanged);
	        };

	        this.componentWillReceiveProps = function (p) {
	            // logger.log(this, 'props');

	            _this.r_list_stop();
	            _this.r_act_stop();
	            _this.content = null;
	            _this.forceUpdate();
	            _this.load(p.comp_id, p.relation);
	        };

	        this.load = function (cid, rel) {
	            // загрузка существующих связей
	            _this.r_list_stop();
	            var p = {
	                comp_id: cid,
	                relation: rel,
	                fields: ['relation_id', 'name', 'inn', 'phone', 'ati_code', 'comp_id']
	            };
	            _this.r_list = new _api.xreq('comp_rel_list', p, _this.loaded);
	        };

	        this.loaded = function (req) {
	            //logger.log(this, 'loaded');
	            //console.debug(res);
	            _this.r_list_stop();
	            if (req.res.err) return;
	            _this.content = req.res.data; // это данные (хорошо бы их проверить на валидность)
	            _this.forceUpdate(); // передергиваем компонент
	        };

	        this.render = function () {
	            // logger.log(this, 'render');

	            if (!_this.content) return null; // загрузка не завершена
	            if (_this.content.length < 1) return null; // данных нет

	            _this.opt = {
	                title: _this.props.title,
	                className: 'panel panel-default max-size',
	                headerClass: _SimpleComponentsSimpleTable2.TblHead, // хедер
	                headData: [{ id: 'name', title: 'Название', cellClass: _RelationTblCells.TblCellRelationCompName }, { id: 'inn', title: 'ИНН' }, { id: 'phone', title: 'Телефон' },
	                // {id: 'ati_code',    title: 'Код АТИ'}, // deprecated
	                { id: 'relation_id', title: 'Действия', cellClass: _RelationTblCells.TblCellRelationActions }],
	                delAvailable: _this.props.comp_id == _AuthDashboard.AppState.myCompany.id,
	                bodyClass: _SimpleComponentsSimpleTable2.TblBody, bodyData: _this.content, // контент
	                pagesClass: _SimpleComponentsSimpleTable2.TblPages, pagesConf: { availableCapacity: [5, 10], currentCapacity: 5, currentPage: 1 } };

	            // пагенатор
	            return React.createElement(
	                'div',
	                { className: 'row' },
	                React.createElement(
	                    'div',
	                    { className: 'col-xs-12' },
	                    React.createElement(_SimpleComponentsSimpleTable2.SimpleTable2, { opt: _this.opt })
	                )
	            );
	        };

	        this.onDelete = function (r) {
	            // отменяем предложение
	            _ClassesLogger.logger.log(_this, 'onDelete');

	            if (_this.r_act) return; // предыдущий запрос не завершен
	            _this.r_act = new _api.xreq('comp_relation_delete', { relation_id: r.relation_id }, _this.xreqDeleteHandler);
	        };

	        this.onRelationChanged = function () {
	            _ClassesLogger.logger.log(_this, 'onRelationChanged');

	            _this.content = null; // очищаем
	            _this.forceUpdate(); // передергиваем
	            _this.load(_this.props.comp_id, _this.props.relation); // загружаем
	        };

	        this.xreqDeleteHandler = function (req) {
	            // предложение удалено
	            _ClassesLogger.logger.log(_this, 'xreqDeleteHandler');

	            _this.r_act_stop();
	            if (req.res.err) return;
	            if (_this.delContentElemById(req.res.relation_id)) // удаляем из списка предложений
	                _this.forceUpdate(); // если удалилось, то передергиваем компонент
	        };

	        this.delContentElemById = function (id) {
	            // удалятель эелемента из списка по relation_id
	            for (var i = 0, l = _this.content.length; i < l; i++) {
	                if (_this.content[i].relation_id == id) {
	                    _this.content.splice(i, 1); // удаляем предложение из списка
	                    return true;
	                }
	            }
	            return false;
	        };
	    }

	    return RelationTable;
	})(React.Component);

	exports.RelationTable = RelationTable;
	// данные таблицы
	// api.xreq
	// api.xreq

	// loading

	// handlers

	// onMessage=(r)=>{  // пишем мессагу приглашателю
	//     // todo ....
	// }

	// helpers

/***/ },
/* 455 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _RelationRequestsTable = __webpack_require__(452);

	var _RelationTable = __webpack_require__(454);

	var _ClassesLogger = __webpack_require__(3);

	var _AuthDashboard = __webpack_require__(247);

	var React = __webpack_require__(202);

	var Expeditors = (function (_React$Component) {
	    _inherits(Expeditors, _React$Component);

	    function Expeditors(props) {
	        _classCallCheck(this, Expeditors);

	        _get(Object.getPrototypeOf(Expeditors.prototype), 'constructor', this).call(this, props);
	    }

	    _createClass(Expeditors, [{
	        key: 'render',
	        value: function render() {
	            /*
	            logger.log(this, "render");
	            console.debug(this.props.company);
	            */
	            return React.createElement(
	                'div',
	                null,
	                React.createElement(_RelationRequestsTable.RelationRequestsTable, { title: 'Нам предлагают сотрудничество', type: 'in_expeditors', in_out: true }),
	                React.createElement(_RelationTable.RelationTable, { title: 'Наши экспедиторы', relation: 'expeditors', comp_id: _AuthDashboard.AppState.myCompany.id }),
	                React.createElement(_RelationRequestsTable.RelationRequestsTable, { title: 'Мы предлагаем сотрудничество', type: 'out_expeditors', in_out: false })
	            );
	        }
	    }]);

	    return Expeditors;
	})(React.Component);

	exports['default'] = Expeditors;
	module.exports = exports['default'];

/***/ },
/* 456 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _RelationRequestsTable = __webpack_require__(452);

	var _RelationTable = __webpack_require__(454);

	var _ClassesLogger = __webpack_require__(3);

	var _AuthDashboard = __webpack_require__(247);

	var React = __webpack_require__(202);

	var Shippers = (function (_React$Component) {
	    _inherits(Shippers, _React$Component);

	    function Shippers(props) {
	        _classCallCheck(this, Shippers);

	        _get(Object.getPrototypeOf(Shippers.prototype), 'constructor', this).call(this, props);
	    }

	    _createClass(Shippers, [{
	        key: 'render',
	        value: function render() {
	            /*
	            logger.log(this, "render");
	            console.debug(this.props.company);
	            */
	            return React.createElement(
	                'div',
	                null,
	                React.createElement(_RelationRequestsTable.RelationRequestsTable, { title: 'Нам предлагают сотрудничество', type: 'in_shippers', in_out: true }),
	                React.createElement(_RelationTable.RelationTable, { title: 'Наши грузовладельцы', relation: 'shippers', comp_id: _AuthDashboard.AppState.myCompany.id }),
	                React.createElement(_RelationRequestsTable.RelationRequestsTable, { title: 'Мы предлагаем сотрудничество', type: 'out_shippers', in_out: false })
	            );
	        }
	    }]);

	    return Shippers;
	})(React.Component);

	exports['default'] = Shippers;
	module.exports = exports['default'];

/***/ },
/* 457 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _Dispatcher = __webpack_require__(4);

	var _SimpleComponentsButtonActive = __webpack_require__(253);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	var _SimpleComponentsLoading = __webpack_require__(361);

	var _SimpleComponentsSimpleTable2 = __webpack_require__(399);

	var _api = __webpack_require__(1);

	var _SimpleComponentsTableCells = __webpack_require__(402);

	var _SimpleComponentsTransparentButton = __webpack_require__(264);

	var _AuthDashboard = __webpack_require__(247);

	var _RelationTblCells = __webpack_require__(453);

	var React = __webpack_require__(202);

	var SocialTable = (function (_React$Component) {
	    _inherits(SocialTable, _React$Component);

	    function SocialTable() {
	        var _this = this;

	        _classCallCheck(this, SocialTable);

	        _get(Object.getPrototypeOf(SocialTable.prototype), 'constructor', this).apply(this, arguments);

	        this.render = function () {

	            _this.opt = {
	                // хедер
	                headerClass: _SimpleComponentsSimpleTable2.TblHead,
	                //headerClassName: "panel-heading-grey panel-md border-btm",
	                className: "panel panel-default max-size",
	                headData: [{ id: 'name', title: 'Название', cellClass: _RelationTblCells.TblCellRelationCompName }, { id: 'inn', title: 'ИНН' }, { id: 'phone', title: 'Телефон' },
	                // {id: 'ati_code', title: 'Код АТИ'}, // deprecated
	                //{id: 'compFrom', title: 'Контактное лицо', cellClass: TblCellPartnerPhone},
	                { id: 'relation_id', title: 'Действия', cellClass: _SimpleComponentsTableCells.TblCellActions }],
	                // контент
	                bodyClass: _SimpleComponentsSimpleTable2.TblBody,
	                //bodyData: Store.sessions,
	                bodyData: _this.props.social,
	                linkType: "social",
	                // пагенатор
	                pagesClass: _SimpleComponentsSimpleTable2.TblPages,
	                pagesConf: {
	                    availableCapacity: [1, 2, 5, 10],
	                    currentCapacity: 5,
	                    currentPage: 1
	                },
	                // события
	                onSelectChanged: _this.onSelectChanged, // вызывается при изменении выделения, параметр - измененный объект
	                //onCloseSelected: this.onCloseSelected,  // вызывается из футера по клику на "Close"
	                // вспомогательные
	                //title          : 'Закладки',  // заголовок контейнера
	                isSelectable: function isSelectable(obj) {
	                    return obj.sid != _api.Api.sid;
	                }, // ф-я проверки возможности выделения объекта
	                selectionKey: 'sKey', // ключ в объекте который будет использован для флага выделения
	                selectable: false, // включает стандартный механизм выбора (кликом по ряду), можно выключить и сделать свой через bodyClass или cellClass
	                multiselect: true // можно выбирать несколько рядов
	            };
	            if (_this.props.social) {
	                return React.createElement(
	                    'div',
	                    { className: 'row' },
	                    React.createElement(
	                        'div',
	                        { className: 'col-xs-12' },
	                        React.createElement(_SimpleComponentsSimpleTable2.SimpleTable2, { opt: _this.opt })
	                    )
	                );
	            }
	            return React.createElement(
	                'div',
	                null,
	                'no data'
	            );
	        };
	    }

	    return SocialTable;
	})(React.Component);

	var Bookmarks = (function (_React$Component2) {
	    _inherits(Bookmarks, _React$Component2);

	    function Bookmarks(props) {
	        var _this2 = this;

	        _classCallCheck(this, Bookmarks);

	        _get(Object.getPrototypeOf(Bookmarks.prototype), 'constructor', this).call(this, props);

	        this.state = {
	            bookmarks: []
	        };

	        this.componentWillMount = function () {
	            _AuthDashboard.AppState.myCompany.updateLinks("social");
	            _AuthDashboard.AppState.myCompany.on("social", _this2.updateLinks);
	        };

	        this.componentWillUnmount = function () {
	            _AuthDashboard.AppState.myCompany.rem("social", _this2.updateLinks);
	        };

	        this.updateLinks = function (social) {
	            _this2.setState({ social: social });
	        };
	    }

	    //<CarriersTable users={this.state.carriers}/>

	    _createClass(Bookmarks, [{
	        key: 'render',
	        value: function render() {
	            //console.log("Bookmarks links");
	            //console.log(this.state.bookmarks);
	            var socialList = this.state.social ? this.state.social.data : [];
	            return React.createElement(
	                _SimpleComponentsLoading.Loading,
	                { dontShow: true, dataRecived: this.state.social },
	                React.createElement(SocialTable, { social: socialList })
	            );
	        }
	    }], [{
	        key: 'propTypes',
	        value: {
	            company: React.PropTypes.object
	        },
	        enumerable: true
	    }]);

	    return Bookmarks;
	})(React.Component);

	exports['default'] = Bookmarks;
	module.exports = exports['default'];

/***/ },
/* 458 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _Dispatcher = __webpack_require__(4);

	var _SimpleComponentsButtonActive = __webpack_require__(253);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	var _SimpleComponentsLoading = __webpack_require__(361);

	var _SimpleComponentsSimpleTable2 = __webpack_require__(399);

	var _api = __webpack_require__(1);

	var _SimpleComponentsTableCells = __webpack_require__(402);

	var _SimpleComponentsTransparentButton = __webpack_require__(264);

	var _SimpleComponentsIcons = __webpack_require__(252);

	var _AuthDashboard = __webpack_require__(247);

	var _RelationTblCells = __webpack_require__(453);

	var React = __webpack_require__(202);

	var BlackmarksTable = (function (_React$Component) {
	    _inherits(BlackmarksTable, _React$Component);

	    function BlackmarksTable() {
	        _classCallCheck(this, BlackmarksTable);

	        _get(Object.getPrototypeOf(BlackmarksTable.prototype), 'constructor', this).apply(this, arguments);
	    }

	    _createClass(BlackmarksTable, [{
	        key: 'render',
	        value: function render() {

	            this.opt = {
	                // хедер
	                headerClass: _SimpleComponentsSimpleTable2.TblHead,
	                //headerClassName: "panel-heading-grey panel-md border-btm",
	                className: "panel panel-default max-size",
	                headData: [{ id: 'name', title: 'Название', cellClass: _RelationTblCells.TblCellRelationCompName }, { id: 'inn', title: 'ИНН' }, { id: 'phone', title: 'Телефон' },
	                // {id: 'ati_code', title: 'Код АТИ'}, // deprecated
	                //{id: 'compFrom', title: 'Контактное лицо', cellClass: TblCellPartnerPhone},
	                { id: 'relation_id', title: 'Действия', cellClass: _SimpleComponentsTableCells.TblCellActions }],
	                // контент
	                bodyClass: _SimpleComponentsSimpleTable2.TblBody,
	                //bodyData: Store.sessions,
	                bodyData: this.props.blacklist,
	                linkType: "blacklist",
	                // пагенатор
	                pagesClass: _SimpleComponentsSimpleTable2.TblPages,
	                pagesConf: {
	                    availableCapacity: [1, 2, 5, 10],
	                    currentCapacity: 5,
	                    currentPage: 1
	                },
	                // события
	                onSelectChanged: this.onSelectChanged, // вызывается при изменении выделения, параметр - измененный объект
	                //onCloseSelected: this.onCloseSelected,  // вызывается из футера по клику на "Close"
	                // вспомогательные
	                //title          : 'Черный список',  // заголовок контейнера
	                isSelectable: function isSelectable(obj) {
	                    return obj.sid != _api.Api.sid;
	                }, // ф-я проверки возможности выделения объекта
	                selectionKey: 'sKey', // ключ в объекте который будет использован для флага выделения
	                selectable: false, // включает стандартный механизм выбора (кликом по ряду), можно выключить и сделать свой через bodyClass или cellClass
	                multiselect: true // можно выбирать несколько рядов
	            };
	            if (this.props.blacklist) {
	                return React.createElement(
	                    'div',
	                    { className: 'row' },
	                    React.createElement(
	                        'div',
	                        { className: 'col-xs-12' },
	                        React.createElement(_SimpleComponentsSimpleTable2.SimpleTable2, { opt: this.opt })
	                    )
	                );
	            }
	            return React.createElement(
	                'div',
	                null,
	                'no data'
	            );
	        }
	    }]);

	    return BlackmarksTable;
	})(React.Component);

	var Blackmarks = (function (_React$Component2) {
	    _inherits(Blackmarks, _React$Component2);

	    function Blackmarks(props) {
	        var _this = this;

	        _classCallCheck(this, Blackmarks);

	        _get(Object.getPrototypeOf(Blackmarks.prototype), 'constructor', this).call(this, props);

	        this.componentWillUnmount = function () {
	            _AuthDashboard.AppState.myCompany.rem("blacklist", _this.updateLinks);
	        };

	        this.updateLinks = function (blacklist) {
	            _this.setState({ blacklist: blacklist });
	        };

	        this.state = {
	            blacklist: null
	        };
	    }

	    //<CarriersTable users={this.state.carriers}/>

	    _createClass(Blackmarks, [{
	        key: 'componentWillMount',
	        value: function componentWillMount() {
	            _AuthDashboard.AppState.myCompany.updateLinks("blacklist");
	            _AuthDashboard.AppState.myCompany.on("blacklist", this.updateLinks);
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            //console.log("BlackList");

	            var blackList = this.state.blacklist ? this.state.blacklist.data : [];
	            return React.createElement(
	                _SimpleComponentsLoading.Loading,
	                { dontShow: true, dataRecived: this.state.blacklist },
	                React.createElement(BlackmarksTable, { blacklist: blackList })
	            );
	        }
	    }], [{
	        key: 'propTypes',
	        value: {
	            company: React.PropTypes.object
	        },
	        enumerable: true
	    }]);

	    return Blackmarks;
	})(React.Component);

	exports['default'] = Blackmarks;
	module.exports = exports['default'];

/***/ },
/* 459 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _Dispatcher = __webpack_require__(4);

	var _AuthDashboard = __webpack_require__(247);

	var _ClassesLoggerJs = __webpack_require__(3);

	var _SimpleComponentsTableCells = __webpack_require__(402);

	var _SimpleComponentsSimpleTable2 = __webpack_require__(399);

	var _SimpleComponentsIcons = __webpack_require__(252);

	var _SimpleComponentsModalWindow = __webpack_require__(362);

	var _SimpleComponentsTransparentButton = __webpack_require__(264);

	var _SimpleComponentsHintJs = __webpack_require__(363);

	var _SimpleComponentsHintJs2 = _interopRequireDefault(_SimpleComponentsHintJs);

	var React = __webpack_require__(202);

	var TblCellActions = (function (_React$Component) {
	    _inherits(TblCellActions, _React$Component);

	    function TblCellActions() {
	        var _this = this;

	        _classCallCheck(this, TblCellActions);

	        _get(Object.getPrototypeOf(TblCellActions.prototype), 'constructor', this).apply(this, arguments);

	        this.state = {
	            modalRemoveContact: {
	                isOpen: false,
	                first_name: null,
	                last_name: null,
	                id: null
	            }
	        };

	        this.sendMessage = function () {
	            _ClassesLoggerJs.logger.log('Not realized yet.');
	        };

	        this.removeContact = function () {
	            _AuthDashboard.AppState.myContacts.removeContact(_this.state.modalRemoveContact.id);
	            _this.closeModalRemoveContact();
	        };

	        this.closeModalRemoveContact = function () {
	            _this.setState({
	                modalRemoveContact: { isOpen: false, first_name: null, last_name: null, id: null }
	            });
	        };

	        this.openModalRemoveContact = function (first_name, last_name, id) {
	            if (!id) return;
	            _this.setState({
	                modalRemoveContact: { isOpen: true, first_name: first_name, last_name: last_name, id: id }
	            });
	        };

	        this.render = function () {
	            return React.createElement(
	                'div',
	                { className: 'box-row-nw' },
	                React.createElement(
	                    'div',
	                    { className: 'pagin-pls', onClick: _this.sendMessage },
	                    React.createElement(_SimpleComponentsIcons.Icon, { iconName: 'mail-icon', size: 20 })
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'pagin-pls', onClick: _this.openModalRemoveContact.bind(_this, _this.props.obj.first_name, _this.props.obj.last_name, _this.props.obj.user_id) },
	                    React.createElement(_SimpleComponentsIcons.Icon, { iconName: 'close-circle-icon', size: 20 })
	                ),
	                React.createElement(
	                    _SimpleComponentsModalWindow.ModalWindow,
	                    { isOpen: _this.state.modalRemoveContact.isOpen, onClose: _this.state.closeModalRemoveContact, title: 'Удаление контакта', width: 350 },
	                    React.createElement(
	                        'div',
	                        null,
	                        'Вы действительно хотите удалить ',
	                        React.createElement(
	                            'b',
	                            null,
	                            '"',
	                            _this.state.modalRemoveContact.first_name,
	                            ' ',
	                            _this.state.modalRemoveContact.last_name,
	                            '"'
	                        ),
	                        ' из ваших контактов?'
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'box-row-nw just-end marg-t' },
	                        React.createElement(_SimpleComponentsTransparentButton.TransparentButton, { onClick: _this.removeContact, caption: 'Удалить' }),
	                        React.createElement(_SimpleComponentsTransparentButton.TransparentButton, { onClick: _this.closeModalRemoveContact, caption: 'Отменить' })
	                    )
	                )
	            );
	        };
	    }

	    return TblCellActions;
	})(React.Component);

	var MyContacts = (function (_React$Component2) {
	    _inherits(MyContacts, _React$Component2);

	    function MyContacts() {
	        var _this2 = this;

	        _classCallCheck(this, MyContacts);

	        _get(Object.getPrototypeOf(MyContacts.prototype), 'constructor', this).apply(this, arguments);

	        this.state = {
	            contactList: []
	        };

	        this.updateList = function (list) {
	            _this2.setState({ contactList: list });
	        };

	        this.getList = function () {
	            // this.state.contactList=AppState.myContactList.getList();
	            if (_AuthDashboard.AppState.myContacts.isReady) {
	                _this2.state.contactList = _AuthDashboard.AppState.myContacts.getData();
	            }
	        };

	        this.componentWillMount = function () {
	            _AuthDashboard.AppState.myContacts.on("Contacts_getlist_complete", _this2.updateList);
	            _this2.getList();
	            // AppState.myContactList.on("get_list", this.updateList)
	        };

	        this.componentWillUnmount = function () {
	            _AuthDashboard.AppState.myContacts.rem("Contacts_getlist_complete", _this2.updateList);
	            // AppState.myContactList.rem("get_list", this.updateList)
	        };

	        this.render = function () {
	            _this2.opt = {
	                // хедер
	                headerClass: _SimpleComponentsSimpleTable2.TblHead,
	                headData: [{ id: 'first_name', title: 'Имя' }, { id: 'last_name', title: 'Фамилия' }, { id: 'comp_name', title: 'Компания' }, { id: 'user_id', title: 'Действия', cellClass: TblCellActions }],
	                // контент
	                bodyClass: _SimpleComponentsSimpleTable2.TblBody,

	                bodyData: _this2.state.contactList
	            };

	            return React.createElement(
	                'div',
	                { className: 'col-large' },
	                React.createElement(_SimpleComponentsSimpleTable2.SimpleTable2, { opt: _this2.opt })
	            );
	        };
	    }

	    return MyContacts;
	})(React.Component);

	exports.MyContacts = MyContacts;

	// componentWillReceiveProps = ()=> {
	//     this.forceUpdate();
	// };

/***/ },
/* 460 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x2, _x3, _x4) { var _again = true; _function: while (_again) { var object = _x2, property = _x3, receiver = _x4; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x2 = parent; _x3 = property; _x4 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _api = __webpack_require__(1);

	var _ClassesLogger = __webpack_require__(3);

	var _AuthDashboard = __webpack_require__(247);

	var _ControlsFormsInputSimple = __webpack_require__(225);

	var _ControlsFormsButtonSimple = __webpack_require__(226);

	var React = __webpack_require__(202),
	    Router = __webpack_require__(7),
	    RouteHandler = Router.RouteHandler;

	var Search = (function (_React$Component) {
	    _inherits(Search, _React$Component);

	    function Search(props) {
	        var _this = this;

	        _classCallCheck(this, Search);

	        _get(Object.getPrototypeOf(Search.prototype), 'constructor', this).call(this, props);
	        this.state = {
	            req: this.props.query.search,
	            data: [],
	            search: false
	        };

	        this.onChangeHandler = function (obj) {
	            _this.setState({ req: obj.req });
	        };

	        this.onKeyUp = function (e) {
	            if (e.key === "Enter") {
	                _this.submitSearchRequest();
	            }
	            if (e.key === "Escape") {
	                _this.clearSearch();
	            }
	        };

	        this.componentDidMount = function () {
	            _this.submitSearchRequest();
	        };

	        this.submitSearchRequest = function () {
	            var req = arguments.length <= 0 || arguments[0] === undefined ? _this.state.req : arguments[0];

	            if (!req) return;

	            window.location.hash = '/dashboard/links?search=' + encodeURI(req);

	            _api.Api.compSuggest({ query: req, count: 12 }).then(function (res) {
	                if (res.err) {
	                    _ClassesLogger.logger.log(_this, 'links search [onSendRequest]', res.err, 'error');
	                    return;
	                }

	                _this.setState({ data: res.suggestions, search: true });
	            });
	        };

	        this.clearSearch = function () {
	            window.location.hash = '/dashboard/links';
	            _this.setState({ req: '', data: [] });
	        };

	        this.render = function () {
	            var results = undefined;

	            if (_this.state.data.length) {
	                results = _this.state.data.map(function (comp, i) {
	                    return React.createElement(
	                        'div',
	                        { className: 'col-xs-4' },
	                        React.createElement(CompanyCard, { data: comp, key: i })
	                    );
	                });
	            } else {
	                results = React.createElement(
	                    'div',
	                    { className: 'col-xs-12' },
	                    'По вашему запросу ничего не найдено.'
	                );
	            }

	            return React.createElement(
	                'div',
	                { className: 'container-fluid' },
	                React.createElement(
	                    'div',
	                    { className: 'row' },
	                    React.createElement(
	                        'div',
	                        { className: 'col-xs-12' },
	                        React.createElement(
	                            'div',
	                            { className: 'links-search' },
	                            React.createElement(_ControlsFormsInputSimple.InputSimple, { name: 'req', value: _this.state.req, className: 'links-search__input', placeholder: 'Укажите название, ИНН или ФИО руководителя и нажмите Enter', onChange: _this.onChangeHandler, onKeyUp: _this.onKeyUp, autoFocus: true })
	                        )
	                    )
	                ),
	                _this.state.search ? React.createElement(
	                    'div',
	                    { className: 'container-fluid' },
	                    React.createElement(
	                        'div',
	                        { className: 'row' },
	                        React.createElement(
	                            'div',
	                            { className: 'col-xs-12' },
	                            React.createElement(
	                                'h2',
	                                null,
	                                'Результаты поиска'
	                            )
	                        )
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'row' },
	                        results
	                    )
	                ) : null
	            );
	        };
	    }

	    return Search;
	})(React.Component);

	var CompanyCard = (function (_React$Component2) {
	    _inherits(CompanyCard, _React$Component2);

	    function CompanyCard(props) {
	        var _this2 = this;

	        _classCallCheck(this, CompanyCard);

	        _get(Object.getPrototypeOf(CompanyCard.prototype), 'constructor', this).call(this, props);

	        this.onClick = function () {
	            var comp = _this2.props.data;

	            if (comp.id) {
	                window.open('#/dashboard/comp/' + _this2.props.data.id, '_blank');
	                return;
	            }

	            var data = { inn: comp.dadata.data.inn, addr: comp.dadata.data.address.value };
	            if (comp.dadata.data.kpp) data['kpp'] = comp.dadata.data.kpp;

	            new _api.xreq('comp_check', data, function (comp) {
	                window.open('#/dashboard/comp/' + comp.res.id, '_blank');
	            });
	        };

	        this.render = function () {
	            var comp = _this2.props.data,
	                card = null;

	            if (comp.id) {
	                var tags = _AuthDashboard.AppState.myCompany.getTagNames(comp.tags);

	                card = React.createElement(
	                    'div',
	                    { className: 'company-card', onClick: _this2.onClick },
	                    React.createElement(
	                        'div',
	                        { className: 'company-card__name' },
	                        comp.name
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'company-card__addr' },
	                        comp.addr
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'company-card__tags' },
	                        tags.length ? tags.map(function (tag, i) {
	                            return React.createElement(
	                                'span',
	                                { className: 'label label-primary', key: i },
	                                tag
	                            );
	                        }) : null
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'company-card__inn' },
	                        'ИНН: ',
	                        comp.inn
	                    )
	                );
	            } else {
	                card = React.createElement(
	                    'div',
	                    { className: 'company-card', onClick: _this2.onClick },
	                    React.createElement(
	                        'div',
	                        { className: 'company-card__name' },
	                        comp.dadata.value
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'company-card__addr' },
	                        comp.dadata.data.address.value
	                    ),
	                    React.createElement('div', { className: 'company-card__tags' }),
	                    React.createElement(
	                        'div',
	                        { className: 'company-card__inn' },
	                        'ИНН: ',
	                        comp.dadata.data.inn
	                    )
	                );
	            }

	            return card;
	        };
	    }

	    _createClass(CompanyCard, null, [{
	        key: 'propTypes',
	        value: {
	            data: React.PropTypes.object.isRequired
	        },
	        enumerable: true
	    }]);

	    return CompanyCard;
	})(React.Component);

	exports.Search = Search;

/***/ },
/* 461 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _Dispatcher = __webpack_require__(4);

	var _SimpleComponentsBigPanel = __webpack_require__(462);

	var _SimpleComponentsTableForm = __webpack_require__(446);

	var _Map2 = __webpack_require__(416);

	var _SimpleComponentsSmallPanel = __webpack_require__(407);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	var _api = __webpack_require__(1);

	var _SimpleComponentsIcons = __webpack_require__(252);

	var _AboutTextForm = __webpack_require__(463);

	var _SimpleComponentsTransparentButton = __webpack_require__(264);

	var _SimpleComponentsModalWindow = __webpack_require__(362);

	var _SimpleComponentsInputSimple = __webpack_require__(248);

	var _SimpleComponentsInputSelect2Js = __webpack_require__(267);

	var _MainInfo = __webpack_require__(526);

	var React = __webpack_require__(202);

	var CompanyAbout = (function (_React$Component) {
	    _inherits(CompanyAbout, _React$Component);

	    function CompanyAbout() {
	        _classCallCheck(this, CompanyAbout);

	        _get(Object.getPrototypeOf(CompanyAbout.prototype), 'constructor', this).apply(this, arguments);
	    }

	    _createClass(CompanyAbout, [{
	        key: 'render',
	        value: function render() {
	            console.log("ABOUT");
	            var comp = this.props.company;
	            var address = comp.addr;
	            var name = comp.name;
	            var width = "400px"; // ширина блока с картой
	            return React.createElement(
	                _SimpleComponentsFlexBox.FlexBox,
	                { direction: 'row', alignItems: 'start' },
	                React.createElement(_AboutTextForm.AboutTextForm, { company: this.props.company })
	            );
	        }
	    }]);

	    return CompanyAbout;
	})(React.Component);

	exports.CompanyAbout = CompanyAbout;

/***/ },
/* 462 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var React = __webpack_require__(202);
	var BigPanel = React.createClass({
	    displayName: "BigPanel",

	    render: function render() {
	        if (this.props.disabled) {
	            return null;
	        } else {
	            return React.createElement(
	                "div",
	                { className: "marg-lr panel panel-default" },
	                React.createElement(
	                    "div",
	                    { className: "panel-heading panel-md" },
	                    React.createElement(
	                        "h3",
	                        { className: "font-title" },
	                        this.props.headerName
	                    )
	                ),
	                this.props.children
	            );
	        }
	    }
	});
	exports.BigPanel = BigPanel;

	//col-big

/***/ },
/* 463 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _SimpleComponentsSmallPanel = __webpack_require__(407);

	var _SimpleComponentsIcons = __webpack_require__(252);

	var React = __webpack_require__(202);

	var Source = __webpack_require__(464);

	var Remarkable = __webpack_require__(465);
	var md = new Remarkable({
	    html: true, // Enable HTML tags in source
	    xhtmlOut: true, // Use '/' to close single tags (<br />)
	    breaks: false, // Convert '\n' in paragraphs into <br>
	    langPrefix: 'language-', // CSS language prefix for fenced blocks
	    linkify: true, // Autoconvert URL-like text to links

	    // Enable some language-neutral replacement + quotes beautification
	    typographer: true,

	    // Double + single quotes replacement pairs, when typographer enabled,
	    // and smartquotes on. Set doubles to '«»' for Russian, '„“' for German.
	    quotes: '“”‘’'

	    // Highlighter function. Should return escaped HTML,
	    // or '' if the source string is not changed

	});

	var AboutTextForm = (function (_React$Component) {
	    _inherits(AboutTextForm, _React$Component);

	    function AboutTextForm() {
	        var _this = this;

	        _classCallCheck(this, AboutTextForm);

	        _get(Object.getPrototypeOf(AboutTextForm.prototype), 'constructor', this).apply(this, arguments);

	        this.state = {
	            text: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n        Sint hic libero perspiciatis quibusdam doloribus, culpa illum.\n            Officiis ut illo dolorum veniam architecto non, necessitatibus quo alias,\n        blanditiis, debitis fugiat sequi!\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n        Sint hic.\n    Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n    Sint hic libero perspiciatis quibusdam doloribus, culpa illum.\n    Officiis ut illo dolorum veniam architecto non, necessitatibus quo alias,\n    blanditiis, debitis fugiat sequi! Численность: 100 человек',
	            editMode: false
	        };

	        this.editTrigger = function () {
	            if (_this.state.editMode) {
	                _this.state.text = _this.refs.edit.getDOMNode().value;
	            }
	            _this.setState({
	                editMode: !_this.state.editMode
	            });
	        };

	        this.render = function () {

	            var textView = React.createElement('div', { className: 'p-list', dangerouslySetInnerHTML: { __html: md.render(_this.state.text) } });
	            var Guide = 'FORMATTING GUIDE hide\n\n                    **bold**\n                    _italic_\n\n                    # heading 1\n                    ## heading 2\n                    ### heading 3\n\n                    --- (divider)\n\n                    `pre-formatted text`\n\n                    * list item\n                    * list item two\n\n                    1. first list item\n                    1. second list item\n                    1. third list item\n\n                    [Google](http://www.google.com)\n\n                    ![image title](http://path.to/filename.png)';
	            var textEdit = React.createElement(
	                'div',
	                null,
	                React.createElement('textarea', { ref: 'edit', rows: 30, cols: 80, defaultValue: _this.state.text }),
	                ';',
	                React.createElement(
	                    'div',
	                    null,
	                    Guide
	                )
	            );
	            var select = _this.state.editMode ? textEdit : textView;
	            var btn = _this.state.editMode ? "save" : "edit";

	            return React.createElement(
	                _SimpleComponentsSmallPanel.SmallPanel,
	                { styles: { smallPanel: { width: "1050px" } } },
	                React.createElement(
	                    'div',
	                    { className: 'box-cln-nw panel-md' },
	                    React.createElement(
	                        'div',
	                        { className: 'box-cln-nw align-center divider' },
	                        React.createElement('img', { className: 'logo-size', src: Source, alt: '' })
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'box-row-nw divider' },
	                        select
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'box-row-nw' },
	                        React.createElement(
	                            'p',
	                            { className: 'p-list' },
	                            'Мы в социальных сетях:'
	                        ),
	                        React.createElement(
	                            'a',
	                            { href: '' },
	                            React.createElement(_SimpleComponentsIcons.Icon, { iconName: 'linkedin-icon', className: 'icon-color marg-lr' })
	                        ),
	                        React.createElement(
	                            'a',
	                            { href: '' },
	                            React.createElement(_SimpleComponentsIcons.Icon, { iconName: 'facebook-box', className: 'icon-color marg-r' })
	                        ),
	                        React.createElement(
	                            'a',
	                            { href: '' },
	                            React.createElement(_SimpleComponentsIcons.Icon, { iconName: 'twitter-icon', className: 'icon-color marg-r' })
	                        ),
	                        React.createElement(
	                            'a',
	                            { href: '' },
	                            React.createElement(_SimpleComponentsIcons.Icon, { iconName: 'vk-icon', className: 'icon-color' })
	                        )
	                    ),
	                    React.createElement(
	                        'button',
	                        { onClick: _this.editTrigger },
	                        btn
	                    )
	                )
	            );
	        };
	    }

	    return AboutTextForm;
	})(React.Component);

	exports.AboutTextForm = AboutTextForm;

	// render: function() {
	//     return (
	//       <div className="MarkdownEditor">
	//         <h3>Input</h3>
	//         <textarea
	//           onChange={this.handleChange}
	//           ref="textarea"
	//           defaultValue={this.state.value} />
	//         <h3>Output</h3>
	//         <div
	//           className="content"
	//           dangerouslySetInnerHTML={{
	//             __html: converter.makeHtml(this.state.value)
	//           }}
	//         />
	//       </div>
	//     );
	//   }

/***/ },
/* 464 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "e97d207b5bc38faf3116bafbfd4fd5c7.gif"

/***/ },
/* 465 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';


	module.exports = __webpack_require__(466);


/***/ },
/* 466 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Local dependencies
	 */

	var assign       = __webpack_require__(467).assign;
	var Renderer     = __webpack_require__(469);
	var ParserCore   = __webpack_require__(471);
	var ParserBlock  = __webpack_require__(489);
	var ParserInline = __webpack_require__(504);
	var Ruler        = __webpack_require__(472);

	/**
	 * Preset configs
	 */

	var config = {
	  'default':    __webpack_require__(523),
	  'full':       __webpack_require__(524),
	  'commonmark': __webpack_require__(525)
	};

	/**
	 * The `StateCore` class manages state.
	 *
	 * @param {Object} `self` Remarkable instance
	 * @param {String} `str` Markdown string
	 * @param {Object} `env`
	 */

	function StateCore(self, str, env) {
	  this.src = str;
	  this.env = env;
	  this.options = self.options;
	  this.tokens = [];
	  this.inlineMode = false;

	  this.inline = self.inline;
	  this.block = self.block;
	  this.renderer = self.renderer;
	  this.typographer = self.typographer;
	}

	/**
	 * The main `Remarkable` class. Create an instance of
	 * `Remarkable` with a `preset` and/or `options`.
	 *
	 * @param {String} `preset` If no preset is given, `default` is used.
	 * @param {Object} `options`
	 */

	function Remarkable(preset, options) {
	  if (typeof preset !== 'string') {
	    options = preset;
	    preset = 'default';
	  }

	  this.inline   = new ParserInline();
	  this.block    = new ParserBlock();
	  this.core     = new ParserCore();
	  this.renderer = new Renderer();
	  this.ruler    = new Ruler();

	  this.options  = {};
	  this.configure(config[preset]);
	  this.set(options || {});
	}

	/**
	 * Set options as an alternative to passing them
	 * to the constructor.
	 *
	 * ```js
	 * md.set({typographer: true});
	 * ```
	 * @param {Object} `options`
	 * @api public
	 */

	Remarkable.prototype.set = function (options) {
	  assign(this.options, options);
	};

	/**
	 * Batch loader for components rules states, and options
	 *
	 * @param  {Object} `presets`
	 */

	Remarkable.prototype.configure = function (presets) {
	  var self = this;

	  if (!presets) { throw new Error('Wrong `remarkable` preset, check name/content'); }
	  if (presets.options) { self.set(presets.options); }
	  if (presets.components) {
	    Object.keys(presets.components).forEach(function (name) {
	      if (presets.components[name].rules) {
	        self[name].ruler.enable(presets.components[name].rules, true);
	      }
	    });
	  }
	};

	/**
	 * Use a plugin.
	 *
	 * ```js
	 * var md = new Remarkable();
	 *
	 * md.use(plugin1)
	 *   .use(plugin2, opts)
	 *   .use(plugin3);
	 * ```
	 *
	 * @param  {Function} `plugin`
	 * @param  {Object} `options`
	 * @return {Object} `Remarkable` for chaining
	 */

	Remarkable.prototype.use = function (plugin, options) {
	  plugin(this, options);
	  return this;
	};


	/**
	 * Parse the input `string` and return a tokens array.
	 * Modifies `env` with definitions data.
	 *
	 * @param  {String} `string`
	 * @param  {Object} `env`
	 * @return {Array} Array of tokens
	 */

	Remarkable.prototype.parse = function (str, env) {
	  var state = new StateCore(this, str, env);
	  this.core.process(state);
	  return state.tokens;
	};

	/**
	 * The main `.render()` method that does all the magic :)
	 *
	 * @param  {String} `string`
	 * @param  {Object} `env`
	 * @return {String} Rendered HTML.
	 */

	Remarkable.prototype.render = function (str, env) {
	  env = env || {};
	  return this.renderer.render(this.parse(str, env), this.options, env);
	};

	/**
	 * Parse the given content `string` as a single string.
	 *
	 * @param  {String} `string`
	 * @param  {Object} `env`
	 * @return {Array} Array of tokens
	 */

	Remarkable.prototype.parseInline = function (str, env) {
	  var state = new StateCore(this, str, env);
	  state.inlineMode = true;
	  this.core.process(state);
	  return state.tokens;
	};

	/**
	 * Render a single content `string`, without wrapping it
	 * to paragraphs
	 *
	 * @param  {String} `str`
	 * @param  {Object} `env`
	 * @return {String}
	 */

	Remarkable.prototype.renderInline = function (str, env) {
	  env = env || {};
	  return this.renderer.render(this.parseInline(str, env), this.options, env);
	};

	/**
	 * Expose `Remarkable`
	 */

	module.exports = Remarkable;

	/**
	 * Expose `utils`, Useful helper functions for custom
	 * rendering.
	 */

	module.exports.utils = __webpack_require__(467);


/***/ },
/* 467 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Utility functions
	 */

	function typeOf(obj) {
	  return Object.prototype.toString.call(obj);
	}

	function isString(obj) {
	  return typeOf(obj) === '[object String]';
	}

	var hasOwn = Object.prototype.hasOwnProperty;

	function has(object, key) {
	  return object
	    ? hasOwn.call(object, key)
	    : false;
	}

	// Extend objects
	//
	function assign(obj /*from1, from2, from3, ...*/) {
	  var sources = [].slice.call(arguments, 1);

	  sources.forEach(function (source) {
	    if (!source) { return; }

	    if (typeof source !== 'object') {
	      throw new TypeError(source + 'must be object');
	    }

	    Object.keys(source).forEach(function (key) {
	      obj[key] = source[key];
	    });
	  });

	  return obj;
	}

	////////////////////////////////////////////////////////////////////////////////

	var UNESCAPE_MD_RE = /\\([\\!"#$%&'()*+,.\/:;<=>?@[\]^_`{|}~-])/g;

	function unescapeMd(str) {
	  if (str.indexOf('\\') < 0) { return str; }
	  return str.replace(UNESCAPE_MD_RE, '$1');
	}

	////////////////////////////////////////////////////////////////////////////////

	function isValidEntityCode(c) {
	  /*eslint no-bitwise:0*/
	  // broken sequence
	  if (c >= 0xD800 && c <= 0xDFFF) { return false; }
	  // never used
	  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }
	  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }
	  // control codes
	  if (c >= 0x00 && c <= 0x08) { return false; }
	  if (c === 0x0B) { return false; }
	  if (c >= 0x0E && c <= 0x1F) { return false; }
	  if (c >= 0x7F && c <= 0x9F) { return false; }
	  // out of range
	  if (c > 0x10FFFF) { return false; }
	  return true;
	}

	function fromCodePoint(c) {
	  /*eslint no-bitwise:0*/
	  if (c > 0xffff) {
	    c -= 0x10000;
	    var surrogate1 = 0xd800 + (c >> 10),
	        surrogate2 = 0xdc00 + (c & 0x3ff);

	    return String.fromCharCode(surrogate1, surrogate2);
	  }
	  return String.fromCharCode(c);
	}

	var NAMED_ENTITY_RE   = /&([a-z#][a-z0-9]{1,31});/gi;
	var DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;
	var entities = __webpack_require__(468);

	function replaceEntityPattern(match, name) {
	  var code = 0;

	  if (has(entities, name)) {
	    return entities[name];
	  } else if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {
	    code = name[1].toLowerCase() === 'x' ?
	      parseInt(name.slice(2), 16)
	    :
	      parseInt(name.slice(1), 10);
	    if (isValidEntityCode(code)) {
	      return fromCodePoint(code);
	    }
	  }
	  return match;
	}

	function replaceEntities(str) {
	  if (str.indexOf('&') < 0) { return str; }

	  return str.replace(NAMED_ENTITY_RE, replaceEntityPattern);
	}

	////////////////////////////////////////////////////////////////////////////////

	var HTML_ESCAPE_TEST_RE = /[&<>"]/;
	var HTML_ESCAPE_REPLACE_RE = /[&<>"]/g;
	var HTML_REPLACEMENTS = {
	  '&': '&amp;',
	  '<': '&lt;',
	  '>': '&gt;',
	  '"': '&quot;'
	};

	function replaceUnsafeChar(ch) {
	  return HTML_REPLACEMENTS[ch];
	}

	function escapeHtml(str) {
	  if (HTML_ESCAPE_TEST_RE.test(str)) {
	    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);
	  }
	  return str;
	}

	////////////////////////////////////////////////////////////////////////////////

	exports.assign            = assign;
	exports.isString          = isString;
	exports.has               = has;
	exports.unescapeMd        = unescapeMd;
	exports.isValidEntityCode = isValidEntityCode;
	exports.fromCodePoint     = fromCodePoint;
	exports.replaceEntities   = replaceEntities;
	exports.escapeHtml        = escapeHtml;


/***/ },
/* 468 */
/***/ function(module, exports) {

	// List of valid entities
	//
	// Generate with ./support/entities.js script
	//
	'use strict';

	/*eslint quotes:0*/
	module.exports = {
	  "Aacute":"\u00C1",
	  "aacute":"\u00E1",
	  "Abreve":"\u0102",
	  "abreve":"\u0103",
	  "ac":"\u223E",
	  "acd":"\u223F",
	  "acE":"\u223E\u0333",
	  "Acirc":"\u00C2",
	  "acirc":"\u00E2",
	  "acute":"\u00B4",
	  "Acy":"\u0410",
	  "acy":"\u0430",
	  "AElig":"\u00C6",
	  "aelig":"\u00E6",
	  "af":"\u2061",
	  "Afr":"\uD835\uDD04",
	  "afr":"\uD835\uDD1E",
	  "Agrave":"\u00C0",
	  "agrave":"\u00E0",
	  "alefsym":"\u2135",
	  "aleph":"\u2135",
	  "Alpha":"\u0391",
	  "alpha":"\u03B1",
	  "Amacr":"\u0100",
	  "amacr":"\u0101",
	  "amalg":"\u2A3F",
	  "AMP":"\u0026",
	  "amp":"\u0026",
	  "And":"\u2A53",
	  "and":"\u2227",
	  "andand":"\u2A55",
	  "andd":"\u2A5C",
	  "andslope":"\u2A58",
	  "andv":"\u2A5A",
	  "ang":"\u2220",
	  "ange":"\u29A4",
	  "angle":"\u2220",
	  "angmsd":"\u2221",
	  "angmsdaa":"\u29A8",
	  "angmsdab":"\u29A9",
	  "angmsdac":"\u29AA",
	  "angmsdad":"\u29AB",
	  "angmsdae":"\u29AC",
	  "angmsdaf":"\u29AD",
	  "angmsdag":"\u29AE",
	  "angmsdah":"\u29AF",
	  "angrt":"\u221F",
	  "angrtvb":"\u22BE",
	  "angrtvbd":"\u299D",
	  "angsph":"\u2222",
	  "angst":"\u00C5",
	  "angzarr":"\u237C",
	  "Aogon":"\u0104",
	  "aogon":"\u0105",
	  "Aopf":"\uD835\uDD38",
	  "aopf":"\uD835\uDD52",
	  "ap":"\u2248",
	  "apacir":"\u2A6F",
	  "apE":"\u2A70",
	  "ape":"\u224A",
	  "apid":"\u224B",
	  "apos":"\u0027",
	  "ApplyFunction":"\u2061",
	  "approx":"\u2248",
	  "approxeq":"\u224A",
	  "Aring":"\u00C5",
	  "aring":"\u00E5",
	  "Ascr":"\uD835\uDC9C",
	  "ascr":"\uD835\uDCB6",
	  "Assign":"\u2254",
	  "ast":"\u002A",
	  "asymp":"\u2248",
	  "asympeq":"\u224D",
	  "Atilde":"\u00C3",
	  "atilde":"\u00E3",
	  "Auml":"\u00C4",
	  "auml":"\u00E4",
	  "awconint":"\u2233",
	  "awint":"\u2A11",
	  "backcong":"\u224C",
	  "backepsilon":"\u03F6",
	  "backprime":"\u2035",
	  "backsim":"\u223D",
	  "backsimeq":"\u22CD",
	  "Backslash":"\u2216",
	  "Barv":"\u2AE7",
	  "barvee":"\u22BD",
	  "Barwed":"\u2306",
	  "barwed":"\u2305",
	  "barwedge":"\u2305",
	  "bbrk":"\u23B5",
	  "bbrktbrk":"\u23B6",
	  "bcong":"\u224C",
	  "Bcy":"\u0411",
	  "bcy":"\u0431",
	  "bdquo":"\u201E",
	  "becaus":"\u2235",
	  "Because":"\u2235",
	  "because":"\u2235",
	  "bemptyv":"\u29B0",
	  "bepsi":"\u03F6",
	  "bernou":"\u212C",
	  "Bernoullis":"\u212C",
	  "Beta":"\u0392",
	  "beta":"\u03B2",
	  "beth":"\u2136",
	  "between":"\u226C",
	  "Bfr":"\uD835\uDD05",
	  "bfr":"\uD835\uDD1F",
	  "bigcap":"\u22C2",
	  "bigcirc":"\u25EF",
	  "bigcup":"\u22C3",
	  "bigodot":"\u2A00",
	  "bigoplus":"\u2A01",
	  "bigotimes":"\u2A02",
	  "bigsqcup":"\u2A06",
	  "bigstar":"\u2605",
	  "bigtriangledown":"\u25BD",
	  "bigtriangleup":"\u25B3",
	  "biguplus":"\u2A04",
	  "bigvee":"\u22C1",
	  "bigwedge":"\u22C0",
	  "bkarow":"\u290D",
	  "blacklozenge":"\u29EB",
	  "blacksquare":"\u25AA",
	  "blacktriangle":"\u25B4",
	  "blacktriangledown":"\u25BE",
	  "blacktriangleleft":"\u25C2",
	  "blacktriangleright":"\u25B8",
	  "blank":"\u2423",
	  "blk12":"\u2592",
	  "blk14":"\u2591",
	  "blk34":"\u2593",
	  "block":"\u2588",
	  "bne":"\u003D\u20E5",
	  "bnequiv":"\u2261\u20E5",
	  "bNot":"\u2AED",
	  "bnot":"\u2310",
	  "Bopf":"\uD835\uDD39",
	  "bopf":"\uD835\uDD53",
	  "bot":"\u22A5",
	  "bottom":"\u22A5",
	  "bowtie":"\u22C8",
	  "boxbox":"\u29C9",
	  "boxDL":"\u2557",
	  "boxDl":"\u2556",
	  "boxdL":"\u2555",
	  "boxdl":"\u2510",
	  "boxDR":"\u2554",
	  "boxDr":"\u2553",
	  "boxdR":"\u2552",
	  "boxdr":"\u250C",
	  "boxH":"\u2550",
	  "boxh":"\u2500",
	  "boxHD":"\u2566",
	  "boxHd":"\u2564",
	  "boxhD":"\u2565",
	  "boxhd":"\u252C",
	  "boxHU":"\u2569",
	  "boxHu":"\u2567",
	  "boxhU":"\u2568",
	  "boxhu":"\u2534",
	  "boxminus":"\u229F",
	  "boxplus":"\u229E",
	  "boxtimes":"\u22A0",
	  "boxUL":"\u255D",
	  "boxUl":"\u255C",
	  "boxuL":"\u255B",
	  "boxul":"\u2518",
	  "boxUR":"\u255A",
	  "boxUr":"\u2559",
	  "boxuR":"\u2558",
	  "boxur":"\u2514",
	  "boxV":"\u2551",
	  "boxv":"\u2502",
	  "boxVH":"\u256C",
	  "boxVh":"\u256B",
	  "boxvH":"\u256A",
	  "boxvh":"\u253C",
	  "boxVL":"\u2563",
	  "boxVl":"\u2562",
	  "boxvL":"\u2561",
	  "boxvl":"\u2524",
	  "boxVR":"\u2560",
	  "boxVr":"\u255F",
	  "boxvR":"\u255E",
	  "boxvr":"\u251C",
	  "bprime":"\u2035",
	  "Breve":"\u02D8",
	  "breve":"\u02D8",
	  "brvbar":"\u00A6",
	  "Bscr":"\u212C",
	  "bscr":"\uD835\uDCB7",
	  "bsemi":"\u204F",
	  "bsim":"\u223D",
	  "bsime":"\u22CD",
	  "bsol":"\u005C",
	  "bsolb":"\u29C5",
	  "bsolhsub":"\u27C8",
	  "bull":"\u2022",
	  "bullet":"\u2022",
	  "bump":"\u224E",
	  "bumpE":"\u2AAE",
	  "bumpe":"\u224F",
	  "Bumpeq":"\u224E",
	  "bumpeq":"\u224F",
	  "Cacute":"\u0106",
	  "cacute":"\u0107",
	  "Cap":"\u22D2",
	  "cap":"\u2229",
	  "capand":"\u2A44",
	  "capbrcup":"\u2A49",
	  "capcap":"\u2A4B",
	  "capcup":"\u2A47",
	  "capdot":"\u2A40",
	  "CapitalDifferentialD":"\u2145",
	  "caps":"\u2229\uFE00",
	  "caret":"\u2041",
	  "caron":"\u02C7",
	  "Cayleys":"\u212D",
	  "ccaps":"\u2A4D",
	  "Ccaron":"\u010C",
	  "ccaron":"\u010D",
	  "Ccedil":"\u00C7",
	  "ccedil":"\u00E7",
	  "Ccirc":"\u0108",
	  "ccirc":"\u0109",
	  "Cconint":"\u2230",
	  "ccups":"\u2A4C",
	  "ccupssm":"\u2A50",
	  "Cdot":"\u010A",
	  "cdot":"\u010B",
	  "cedil":"\u00B8",
	  "Cedilla":"\u00B8",
	  "cemptyv":"\u29B2",
	  "cent":"\u00A2",
	  "CenterDot":"\u00B7",
	  "centerdot":"\u00B7",
	  "Cfr":"\u212D",
	  "cfr":"\uD835\uDD20",
	  "CHcy":"\u0427",
	  "chcy":"\u0447",
	  "check":"\u2713",
	  "checkmark":"\u2713",
	  "Chi":"\u03A7",
	  "chi":"\u03C7",
	  "cir":"\u25CB",
	  "circ":"\u02C6",
	  "circeq":"\u2257",
	  "circlearrowleft":"\u21BA",
	  "circlearrowright":"\u21BB",
	  "circledast":"\u229B",
	  "circledcirc":"\u229A",
	  "circleddash":"\u229D",
	  "CircleDot":"\u2299",
	  "circledR":"\u00AE",
	  "circledS":"\u24C8",
	  "CircleMinus":"\u2296",
	  "CirclePlus":"\u2295",
	  "CircleTimes":"\u2297",
	  "cirE":"\u29C3",
	  "cire":"\u2257",
	  "cirfnint":"\u2A10",
	  "cirmid":"\u2AEF",
	  "cirscir":"\u29C2",
	  "ClockwiseContourIntegral":"\u2232",
	  "CloseCurlyDoubleQuote":"\u201D",
	  "CloseCurlyQuote":"\u2019",
	  "clubs":"\u2663",
	  "clubsuit":"\u2663",
	  "Colon":"\u2237",
	  "colon":"\u003A",
	  "Colone":"\u2A74",
	  "colone":"\u2254",
	  "coloneq":"\u2254",
	  "comma":"\u002C",
	  "commat":"\u0040",
	  "comp":"\u2201",
	  "compfn":"\u2218",
	  "complement":"\u2201",
	  "complexes":"\u2102",
	  "cong":"\u2245",
	  "congdot":"\u2A6D",
	  "Congruent":"\u2261",
	  "Conint":"\u222F",
	  "conint":"\u222E",
	  "ContourIntegral":"\u222E",
	  "Copf":"\u2102",
	  "copf":"\uD835\uDD54",
	  "coprod":"\u2210",
	  "Coproduct":"\u2210",
	  "COPY":"\u00A9",
	  "copy":"\u00A9",
	  "copysr":"\u2117",
	  "CounterClockwiseContourIntegral":"\u2233",
	  "crarr":"\u21B5",
	  "Cross":"\u2A2F",
	  "cross":"\u2717",
	  "Cscr":"\uD835\uDC9E",
	  "cscr":"\uD835\uDCB8",
	  "csub":"\u2ACF",
	  "csube":"\u2AD1",
	  "csup":"\u2AD0",
	  "csupe":"\u2AD2",
	  "ctdot":"\u22EF",
	  "cudarrl":"\u2938",
	  "cudarrr":"\u2935",
	  "cuepr":"\u22DE",
	  "cuesc":"\u22DF",
	  "cularr":"\u21B6",
	  "cularrp":"\u293D",
	  "Cup":"\u22D3",
	  "cup":"\u222A",
	  "cupbrcap":"\u2A48",
	  "CupCap":"\u224D",
	  "cupcap":"\u2A46",
	  "cupcup":"\u2A4A",
	  "cupdot":"\u228D",
	  "cupor":"\u2A45",
	  "cups":"\u222A\uFE00",
	  "curarr":"\u21B7",
	  "curarrm":"\u293C",
	  "curlyeqprec":"\u22DE",
	  "curlyeqsucc":"\u22DF",
	  "curlyvee":"\u22CE",
	  "curlywedge":"\u22CF",
	  "curren":"\u00A4",
	  "curvearrowleft":"\u21B6",
	  "curvearrowright":"\u21B7",
	  "cuvee":"\u22CE",
	  "cuwed":"\u22CF",
	  "cwconint":"\u2232",
	  "cwint":"\u2231",
	  "cylcty":"\u232D",
	  "Dagger":"\u2021",
	  "dagger":"\u2020",
	  "daleth":"\u2138",
	  "Darr":"\u21A1",
	  "dArr":"\u21D3",
	  "darr":"\u2193",
	  "dash":"\u2010",
	  "Dashv":"\u2AE4",
	  "dashv":"\u22A3",
	  "dbkarow":"\u290F",
	  "dblac":"\u02DD",
	  "Dcaron":"\u010E",
	  "dcaron":"\u010F",
	  "Dcy":"\u0414",
	  "dcy":"\u0434",
	  "DD":"\u2145",
	  "dd":"\u2146",
	  "ddagger":"\u2021",
	  "ddarr":"\u21CA",
	  "DDotrahd":"\u2911",
	  "ddotseq":"\u2A77",
	  "deg":"\u00B0",
	  "Del":"\u2207",
	  "Delta":"\u0394",
	  "delta":"\u03B4",
	  "demptyv":"\u29B1",
	  "dfisht":"\u297F",
	  "Dfr":"\uD835\uDD07",
	  "dfr":"\uD835\uDD21",
	  "dHar":"\u2965",
	  "dharl":"\u21C3",
	  "dharr":"\u21C2",
	  "DiacriticalAcute":"\u00B4",
	  "DiacriticalDot":"\u02D9",
	  "DiacriticalDoubleAcute":"\u02DD",
	  "DiacriticalGrave":"\u0060",
	  "DiacriticalTilde":"\u02DC",
	  "diam":"\u22C4",
	  "Diamond":"\u22C4",
	  "diamond":"\u22C4",
	  "diamondsuit":"\u2666",
	  "diams":"\u2666",
	  "die":"\u00A8",
	  "DifferentialD":"\u2146",
	  "digamma":"\u03DD",
	  "disin":"\u22F2",
	  "div":"\u00F7",
	  "divide":"\u00F7",
	  "divideontimes":"\u22C7",
	  "divonx":"\u22C7",
	  "DJcy":"\u0402",
	  "djcy":"\u0452",
	  "dlcorn":"\u231E",
	  "dlcrop":"\u230D",
	  "dollar":"\u0024",
	  "Dopf":"\uD835\uDD3B",
	  "dopf":"\uD835\uDD55",
	  "Dot":"\u00A8",
	  "dot":"\u02D9",
	  "DotDot":"\u20DC",
	  "doteq":"\u2250",
	  "doteqdot":"\u2251",
	  "DotEqual":"\u2250",
	  "dotminus":"\u2238",
	  "dotplus":"\u2214",
	  "dotsquare":"\u22A1",
	  "doublebarwedge":"\u2306",
	  "DoubleContourIntegral":"\u222F",
	  "DoubleDot":"\u00A8",
	  "DoubleDownArrow":"\u21D3",
	  "DoubleLeftArrow":"\u21D0",
	  "DoubleLeftRightArrow":"\u21D4",
	  "DoubleLeftTee":"\u2AE4",
	  "DoubleLongLeftArrow":"\u27F8",
	  "DoubleLongLeftRightArrow":"\u27FA",
	  "DoubleLongRightArrow":"\u27F9",
	  "DoubleRightArrow":"\u21D2",
	  "DoubleRightTee":"\u22A8",
	  "DoubleUpArrow":"\u21D1",
	  "DoubleUpDownArrow":"\u21D5",
	  "DoubleVerticalBar":"\u2225",
	  "DownArrow":"\u2193",
	  "Downarrow":"\u21D3",
	  "downarrow":"\u2193",
	  "DownArrowBar":"\u2913",
	  "DownArrowUpArrow":"\u21F5",
	  "DownBreve":"\u0311",
	  "downdownarrows":"\u21CA",
	  "downharpoonleft":"\u21C3",
	  "downharpoonright":"\u21C2",
	  "DownLeftRightVector":"\u2950",
	  "DownLeftTeeVector":"\u295E",
	  "DownLeftVector":"\u21BD",
	  "DownLeftVectorBar":"\u2956",
	  "DownRightTeeVector":"\u295F",
	  "DownRightVector":"\u21C1",
	  "DownRightVectorBar":"\u2957",
	  "DownTee":"\u22A4",
	  "DownTeeArrow":"\u21A7",
	  "drbkarow":"\u2910",
	  "drcorn":"\u231F",
	  "drcrop":"\u230C",
	  "Dscr":"\uD835\uDC9F",
	  "dscr":"\uD835\uDCB9",
	  "DScy":"\u0405",
	  "dscy":"\u0455",
	  "dsol":"\u29F6",
	  "Dstrok":"\u0110",
	  "dstrok":"\u0111",
	  "dtdot":"\u22F1",
	  "dtri":"\u25BF",
	  "dtrif":"\u25BE",
	  "duarr":"\u21F5",
	  "duhar":"\u296F",
	  "dwangle":"\u29A6",
	  "DZcy":"\u040F",
	  "dzcy":"\u045F",
	  "dzigrarr":"\u27FF",
	  "Eacute":"\u00C9",
	  "eacute":"\u00E9",
	  "easter":"\u2A6E",
	  "Ecaron":"\u011A",
	  "ecaron":"\u011B",
	  "ecir":"\u2256",
	  "Ecirc":"\u00CA",
	  "ecirc":"\u00EA",
	  "ecolon":"\u2255",
	  "Ecy":"\u042D",
	  "ecy":"\u044D",
	  "eDDot":"\u2A77",
	  "Edot":"\u0116",
	  "eDot":"\u2251",
	  "edot":"\u0117",
	  "ee":"\u2147",
	  "efDot":"\u2252",
	  "Efr":"\uD835\uDD08",
	  "efr":"\uD835\uDD22",
	  "eg":"\u2A9A",
	  "Egrave":"\u00C8",
	  "egrave":"\u00E8",
	  "egs":"\u2A96",
	  "egsdot":"\u2A98",
	  "el":"\u2A99",
	  "Element":"\u2208",
	  "elinters":"\u23E7",
	  "ell":"\u2113",
	  "els":"\u2A95",
	  "elsdot":"\u2A97",
	  "Emacr":"\u0112",
	  "emacr":"\u0113",
	  "empty":"\u2205",
	  "emptyset":"\u2205",
	  "EmptySmallSquare":"\u25FB",
	  "emptyv":"\u2205",
	  "EmptyVerySmallSquare":"\u25AB",
	  "emsp":"\u2003",
	  "emsp13":"\u2004",
	  "emsp14":"\u2005",
	  "ENG":"\u014A",
	  "eng":"\u014B",
	  "ensp":"\u2002",
	  "Eogon":"\u0118",
	  "eogon":"\u0119",
	  "Eopf":"\uD835\uDD3C",
	  "eopf":"\uD835\uDD56",
	  "epar":"\u22D5",
	  "eparsl":"\u29E3",
	  "eplus":"\u2A71",
	  "epsi":"\u03B5",
	  "Epsilon":"\u0395",
	  "epsilon":"\u03B5",
	  "epsiv":"\u03F5",
	  "eqcirc":"\u2256",
	  "eqcolon":"\u2255",
	  "eqsim":"\u2242",
	  "eqslantgtr":"\u2A96",
	  "eqslantless":"\u2A95",
	  "Equal":"\u2A75",
	  "equals":"\u003D",
	  "EqualTilde":"\u2242",
	  "equest":"\u225F",
	  "Equilibrium":"\u21CC",
	  "equiv":"\u2261",
	  "equivDD":"\u2A78",
	  "eqvparsl":"\u29E5",
	  "erarr":"\u2971",
	  "erDot":"\u2253",
	  "Escr":"\u2130",
	  "escr":"\u212F",
	  "esdot":"\u2250",
	  "Esim":"\u2A73",
	  "esim":"\u2242",
	  "Eta":"\u0397",
	  "eta":"\u03B7",
	  "ETH":"\u00D0",
	  "eth":"\u00F0",
	  "Euml":"\u00CB",
	  "euml":"\u00EB",
	  "euro":"\u20AC",
	  "excl":"\u0021",
	  "exist":"\u2203",
	  "Exists":"\u2203",
	  "expectation":"\u2130",
	  "ExponentialE":"\u2147",
	  "exponentiale":"\u2147",
	  "fallingdotseq":"\u2252",
	  "Fcy":"\u0424",
	  "fcy":"\u0444",
	  "female":"\u2640",
	  "ffilig":"\uFB03",
	  "fflig":"\uFB00",
	  "ffllig":"\uFB04",
	  "Ffr":"\uD835\uDD09",
	  "ffr":"\uD835\uDD23",
	  "filig":"\uFB01",
	  "FilledSmallSquare":"\u25FC",
	  "FilledVerySmallSquare":"\u25AA",
	  "fjlig":"\u0066\u006A",
	  "flat":"\u266D",
	  "fllig":"\uFB02",
	  "fltns":"\u25B1",
	  "fnof":"\u0192",
	  "Fopf":"\uD835\uDD3D",
	  "fopf":"\uD835\uDD57",
	  "ForAll":"\u2200",
	  "forall":"\u2200",
	  "fork":"\u22D4",
	  "forkv":"\u2AD9",
	  "Fouriertrf":"\u2131",
	  "fpartint":"\u2A0D",
	  "frac12":"\u00BD",
	  "frac13":"\u2153",
	  "frac14":"\u00BC",
	  "frac15":"\u2155",
	  "frac16":"\u2159",
	  "frac18":"\u215B",
	  "frac23":"\u2154",
	  "frac25":"\u2156",
	  "frac34":"\u00BE",
	  "frac35":"\u2157",
	  "frac38":"\u215C",
	  "frac45":"\u2158",
	  "frac56":"\u215A",
	  "frac58":"\u215D",
	  "frac78":"\u215E",
	  "frasl":"\u2044",
	  "frown":"\u2322",
	  "Fscr":"\u2131",
	  "fscr":"\uD835\uDCBB",
	  "gacute":"\u01F5",
	  "Gamma":"\u0393",
	  "gamma":"\u03B3",
	  "Gammad":"\u03DC",
	  "gammad":"\u03DD",
	  "gap":"\u2A86",
	  "Gbreve":"\u011E",
	  "gbreve":"\u011F",
	  "Gcedil":"\u0122",
	  "Gcirc":"\u011C",
	  "gcirc":"\u011D",
	  "Gcy":"\u0413",
	  "gcy":"\u0433",
	  "Gdot":"\u0120",
	  "gdot":"\u0121",
	  "gE":"\u2267",
	  "ge":"\u2265",
	  "gEl":"\u2A8C",
	  "gel":"\u22DB",
	  "geq":"\u2265",
	  "geqq":"\u2267",
	  "geqslant":"\u2A7E",
	  "ges":"\u2A7E",
	  "gescc":"\u2AA9",
	  "gesdot":"\u2A80",
	  "gesdoto":"\u2A82",
	  "gesdotol":"\u2A84",
	  "gesl":"\u22DB\uFE00",
	  "gesles":"\u2A94",
	  "Gfr":"\uD835\uDD0A",
	  "gfr":"\uD835\uDD24",
	  "Gg":"\u22D9",
	  "gg":"\u226B",
	  "ggg":"\u22D9",
	  "gimel":"\u2137",
	  "GJcy":"\u0403",
	  "gjcy":"\u0453",
	  "gl":"\u2277",
	  "gla":"\u2AA5",
	  "glE":"\u2A92",
	  "glj":"\u2AA4",
	  "gnap":"\u2A8A",
	  "gnapprox":"\u2A8A",
	  "gnE":"\u2269",
	  "gne":"\u2A88",
	  "gneq":"\u2A88",
	  "gneqq":"\u2269",
	  "gnsim":"\u22E7",
	  "Gopf":"\uD835\uDD3E",
	  "gopf":"\uD835\uDD58",
	  "grave":"\u0060",
	  "GreaterEqual":"\u2265",
	  "GreaterEqualLess":"\u22DB",
	  "GreaterFullEqual":"\u2267",
	  "GreaterGreater":"\u2AA2",
	  "GreaterLess":"\u2277",
	  "GreaterSlantEqual":"\u2A7E",
	  "GreaterTilde":"\u2273",
	  "Gscr":"\uD835\uDCA2",
	  "gscr":"\u210A",
	  "gsim":"\u2273",
	  "gsime":"\u2A8E",
	  "gsiml":"\u2A90",
	  "GT":"\u003E",
	  "Gt":"\u226B",
	  "gt":"\u003E",
	  "gtcc":"\u2AA7",
	  "gtcir":"\u2A7A",
	  "gtdot":"\u22D7",
	  "gtlPar":"\u2995",
	  "gtquest":"\u2A7C",
	  "gtrapprox":"\u2A86",
	  "gtrarr":"\u2978",
	  "gtrdot":"\u22D7",
	  "gtreqless":"\u22DB",
	  "gtreqqless":"\u2A8C",
	  "gtrless":"\u2277",
	  "gtrsim":"\u2273",
	  "gvertneqq":"\u2269\uFE00",
	  "gvnE":"\u2269\uFE00",
	  "Hacek":"\u02C7",
	  "hairsp":"\u200A",
	  "half":"\u00BD",
	  "hamilt":"\u210B",
	  "HARDcy":"\u042A",
	  "hardcy":"\u044A",
	  "hArr":"\u21D4",
	  "harr":"\u2194",
	  "harrcir":"\u2948",
	  "harrw":"\u21AD",
	  "Hat":"\u005E",
	  "hbar":"\u210F",
	  "Hcirc":"\u0124",
	  "hcirc":"\u0125",
	  "hearts":"\u2665",
	  "heartsuit":"\u2665",
	  "hellip":"\u2026",
	  "hercon":"\u22B9",
	  "Hfr":"\u210C",
	  "hfr":"\uD835\uDD25",
	  "HilbertSpace":"\u210B",
	  "hksearow":"\u2925",
	  "hkswarow":"\u2926",
	  "hoarr":"\u21FF",
	  "homtht":"\u223B",
	  "hookleftarrow":"\u21A9",
	  "hookrightarrow":"\u21AA",
	  "Hopf":"\u210D",
	  "hopf":"\uD835\uDD59",
	  "horbar":"\u2015",
	  "HorizontalLine":"\u2500",
	  "Hscr":"\u210B",
	  "hscr":"\uD835\uDCBD",
	  "hslash":"\u210F",
	  "Hstrok":"\u0126",
	  "hstrok":"\u0127",
	  "HumpDownHump":"\u224E",
	  "HumpEqual":"\u224F",
	  "hybull":"\u2043",
	  "hyphen":"\u2010",
	  "Iacute":"\u00CD",
	  "iacute":"\u00ED",
	  "ic":"\u2063",
	  "Icirc":"\u00CE",
	  "icirc":"\u00EE",
	  "Icy":"\u0418",
	  "icy":"\u0438",
	  "Idot":"\u0130",
	  "IEcy":"\u0415",
	  "iecy":"\u0435",
	  "iexcl":"\u00A1",
	  "iff":"\u21D4",
	  "Ifr":"\u2111",
	  "ifr":"\uD835\uDD26",
	  "Igrave":"\u00CC",
	  "igrave":"\u00EC",
	  "ii":"\u2148",
	  "iiiint":"\u2A0C",
	  "iiint":"\u222D",
	  "iinfin":"\u29DC",
	  "iiota":"\u2129",
	  "IJlig":"\u0132",
	  "ijlig":"\u0133",
	  "Im":"\u2111",
	  "Imacr":"\u012A",
	  "imacr":"\u012B",
	  "image":"\u2111",
	  "ImaginaryI":"\u2148",
	  "imagline":"\u2110",
	  "imagpart":"\u2111",
	  "imath":"\u0131",
	  "imof":"\u22B7",
	  "imped":"\u01B5",
	  "Implies":"\u21D2",
	  "in":"\u2208",
	  "incare":"\u2105",
	  "infin":"\u221E",
	  "infintie":"\u29DD",
	  "inodot":"\u0131",
	  "Int":"\u222C",
	  "int":"\u222B",
	  "intcal":"\u22BA",
	  "integers":"\u2124",
	  "Integral":"\u222B",
	  "intercal":"\u22BA",
	  "Intersection":"\u22C2",
	  "intlarhk":"\u2A17",
	  "intprod":"\u2A3C",
	  "InvisibleComma":"\u2063",
	  "InvisibleTimes":"\u2062",
	  "IOcy":"\u0401",
	  "iocy":"\u0451",
	  "Iogon":"\u012E",
	  "iogon":"\u012F",
	  "Iopf":"\uD835\uDD40",
	  "iopf":"\uD835\uDD5A",
	  "Iota":"\u0399",
	  "iota":"\u03B9",
	  "iprod":"\u2A3C",
	  "iquest":"\u00BF",
	  "Iscr":"\u2110",
	  "iscr":"\uD835\uDCBE",
	  "isin":"\u2208",
	  "isindot":"\u22F5",
	  "isinE":"\u22F9",
	  "isins":"\u22F4",
	  "isinsv":"\u22F3",
	  "isinv":"\u2208",
	  "it":"\u2062",
	  "Itilde":"\u0128",
	  "itilde":"\u0129",
	  "Iukcy":"\u0406",
	  "iukcy":"\u0456",
	  "Iuml":"\u00CF",
	  "iuml":"\u00EF",
	  "Jcirc":"\u0134",
	  "jcirc":"\u0135",
	  "Jcy":"\u0419",
	  "jcy":"\u0439",
	  "Jfr":"\uD835\uDD0D",
	  "jfr":"\uD835\uDD27",
	  "jmath":"\u0237",
	  "Jopf":"\uD835\uDD41",
	  "jopf":"\uD835\uDD5B",
	  "Jscr":"\uD835\uDCA5",
	  "jscr":"\uD835\uDCBF",
	  "Jsercy":"\u0408",
	  "jsercy":"\u0458",
	  "Jukcy":"\u0404",
	  "jukcy":"\u0454",
	  "Kappa":"\u039A",
	  "kappa":"\u03BA",
	  "kappav":"\u03F0",
	  "Kcedil":"\u0136",
	  "kcedil":"\u0137",
	  "Kcy":"\u041A",
	  "kcy":"\u043A",
	  "Kfr":"\uD835\uDD0E",
	  "kfr":"\uD835\uDD28",
	  "kgreen":"\u0138",
	  "KHcy":"\u0425",
	  "khcy":"\u0445",
	  "KJcy":"\u040C",
	  "kjcy":"\u045C",
	  "Kopf":"\uD835\uDD42",
	  "kopf":"\uD835\uDD5C",
	  "Kscr":"\uD835\uDCA6",
	  "kscr":"\uD835\uDCC0",
	  "lAarr":"\u21DA",
	  "Lacute":"\u0139",
	  "lacute":"\u013A",
	  "laemptyv":"\u29B4",
	  "lagran":"\u2112",
	  "Lambda":"\u039B",
	  "lambda":"\u03BB",
	  "Lang":"\u27EA",
	  "lang":"\u27E8",
	  "langd":"\u2991",
	  "langle":"\u27E8",
	  "lap":"\u2A85",
	  "Laplacetrf":"\u2112",
	  "laquo":"\u00AB",
	  "Larr":"\u219E",
	  "lArr":"\u21D0",
	  "larr":"\u2190",
	  "larrb":"\u21E4",
	  "larrbfs":"\u291F",
	  "larrfs":"\u291D",
	  "larrhk":"\u21A9",
	  "larrlp":"\u21AB",
	  "larrpl":"\u2939",
	  "larrsim":"\u2973",
	  "larrtl":"\u21A2",
	  "lat":"\u2AAB",
	  "lAtail":"\u291B",
	  "latail":"\u2919",
	  "late":"\u2AAD",
	  "lates":"\u2AAD\uFE00",
	  "lBarr":"\u290E",
	  "lbarr":"\u290C",
	  "lbbrk":"\u2772",
	  "lbrace":"\u007B",
	  "lbrack":"\u005B",
	  "lbrke":"\u298B",
	  "lbrksld":"\u298F",
	  "lbrkslu":"\u298D",
	  "Lcaron":"\u013D",
	  "lcaron":"\u013E",
	  "Lcedil":"\u013B",
	  "lcedil":"\u013C",
	  "lceil":"\u2308",
	  "lcub":"\u007B",
	  "Lcy":"\u041B",
	  "lcy":"\u043B",
	  "ldca":"\u2936",
	  "ldquo":"\u201C",
	  "ldquor":"\u201E",
	  "ldrdhar":"\u2967",
	  "ldrushar":"\u294B",
	  "ldsh":"\u21B2",
	  "lE":"\u2266",
	  "le":"\u2264",
	  "LeftAngleBracket":"\u27E8",
	  "LeftArrow":"\u2190",
	  "Leftarrow":"\u21D0",
	  "leftarrow":"\u2190",
	  "LeftArrowBar":"\u21E4",
	  "LeftArrowRightArrow":"\u21C6",
	  "leftarrowtail":"\u21A2",
	  "LeftCeiling":"\u2308",
	  "LeftDoubleBracket":"\u27E6",
	  "LeftDownTeeVector":"\u2961",
	  "LeftDownVector":"\u21C3",
	  "LeftDownVectorBar":"\u2959",
	  "LeftFloor":"\u230A",
	  "leftharpoondown":"\u21BD",
	  "leftharpoonup":"\u21BC",
	  "leftleftarrows":"\u21C7",
	  "LeftRightArrow":"\u2194",
	  "Leftrightarrow":"\u21D4",
	  "leftrightarrow":"\u2194",
	  "leftrightarrows":"\u21C6",
	  "leftrightharpoons":"\u21CB",
	  "leftrightsquigarrow":"\u21AD",
	  "LeftRightVector":"\u294E",
	  "LeftTee":"\u22A3",
	  "LeftTeeArrow":"\u21A4",
	  "LeftTeeVector":"\u295A",
	  "leftthreetimes":"\u22CB",
	  "LeftTriangle":"\u22B2",
	  "LeftTriangleBar":"\u29CF",
	  "LeftTriangleEqual":"\u22B4",
	  "LeftUpDownVector":"\u2951",
	  "LeftUpTeeVector":"\u2960",
	  "LeftUpVector":"\u21BF",
	  "LeftUpVectorBar":"\u2958",
	  "LeftVector":"\u21BC",
	  "LeftVectorBar":"\u2952",
	  "lEg":"\u2A8B",
	  "leg":"\u22DA",
	  "leq":"\u2264",
	  "leqq":"\u2266",
	  "leqslant":"\u2A7D",
	  "les":"\u2A7D",
	  "lescc":"\u2AA8",
	  "lesdot":"\u2A7F",
	  "lesdoto":"\u2A81",
	  "lesdotor":"\u2A83",
	  "lesg":"\u22DA\uFE00",
	  "lesges":"\u2A93",
	  "lessapprox":"\u2A85",
	  "lessdot":"\u22D6",
	  "lesseqgtr":"\u22DA",
	  "lesseqqgtr":"\u2A8B",
	  "LessEqualGreater":"\u22DA",
	  "LessFullEqual":"\u2266",
	  "LessGreater":"\u2276",
	  "lessgtr":"\u2276",
	  "LessLess":"\u2AA1",
	  "lesssim":"\u2272",
	  "LessSlantEqual":"\u2A7D",
	  "LessTilde":"\u2272",
	  "lfisht":"\u297C",
	  "lfloor":"\u230A",
	  "Lfr":"\uD835\uDD0F",
	  "lfr":"\uD835\uDD29",
	  "lg":"\u2276",
	  "lgE":"\u2A91",
	  "lHar":"\u2962",
	  "lhard":"\u21BD",
	  "lharu":"\u21BC",
	  "lharul":"\u296A",
	  "lhblk":"\u2584",
	  "LJcy":"\u0409",
	  "ljcy":"\u0459",
	  "Ll":"\u22D8",
	  "ll":"\u226A",
	  "llarr":"\u21C7",
	  "llcorner":"\u231E",
	  "Lleftarrow":"\u21DA",
	  "llhard":"\u296B",
	  "lltri":"\u25FA",
	  "Lmidot":"\u013F",
	  "lmidot":"\u0140",
	  "lmoust":"\u23B0",
	  "lmoustache":"\u23B0",
	  "lnap":"\u2A89",
	  "lnapprox":"\u2A89",
	  "lnE":"\u2268",
	  "lne":"\u2A87",
	  "lneq":"\u2A87",
	  "lneqq":"\u2268",
	  "lnsim":"\u22E6",
	  "loang":"\u27EC",
	  "loarr":"\u21FD",
	  "lobrk":"\u27E6",
	  "LongLeftArrow":"\u27F5",
	  "Longleftarrow":"\u27F8",
	  "longleftarrow":"\u27F5",
	  "LongLeftRightArrow":"\u27F7",
	  "Longleftrightarrow":"\u27FA",
	  "longleftrightarrow":"\u27F7",
	  "longmapsto":"\u27FC",
	  "LongRightArrow":"\u27F6",
	  "Longrightarrow":"\u27F9",
	  "longrightarrow":"\u27F6",
	  "looparrowleft":"\u21AB",
	  "looparrowright":"\u21AC",
	  "lopar":"\u2985",
	  "Lopf":"\uD835\uDD43",
	  "lopf":"\uD835\uDD5D",
	  "loplus":"\u2A2D",
	  "lotimes":"\u2A34",
	  "lowast":"\u2217",
	  "lowbar":"\u005F",
	  "LowerLeftArrow":"\u2199",
	  "LowerRightArrow":"\u2198",
	  "loz":"\u25CA",
	  "lozenge":"\u25CA",
	  "lozf":"\u29EB",
	  "lpar":"\u0028",
	  "lparlt":"\u2993",
	  "lrarr":"\u21C6",
	  "lrcorner":"\u231F",
	  "lrhar":"\u21CB",
	  "lrhard":"\u296D",
	  "lrm":"\u200E",
	  "lrtri":"\u22BF",
	  "lsaquo":"\u2039",
	  "Lscr":"\u2112",
	  "lscr":"\uD835\uDCC1",
	  "Lsh":"\u21B0",
	  "lsh":"\u21B0",
	  "lsim":"\u2272",
	  "lsime":"\u2A8D",
	  "lsimg":"\u2A8F",
	  "lsqb":"\u005B",
	  "lsquo":"\u2018",
	  "lsquor":"\u201A",
	  "Lstrok":"\u0141",
	  "lstrok":"\u0142",
	  "LT":"\u003C",
	  "Lt":"\u226A",
	  "lt":"\u003C",
	  "ltcc":"\u2AA6",
	  "ltcir":"\u2A79",
	  "ltdot":"\u22D6",
	  "lthree":"\u22CB",
	  "ltimes":"\u22C9",
	  "ltlarr":"\u2976",
	  "ltquest":"\u2A7B",
	  "ltri":"\u25C3",
	  "ltrie":"\u22B4",
	  "ltrif":"\u25C2",
	  "ltrPar":"\u2996",
	  "lurdshar":"\u294A",
	  "luruhar":"\u2966",
	  "lvertneqq":"\u2268\uFE00",
	  "lvnE":"\u2268\uFE00",
	  "macr":"\u00AF",
	  "male":"\u2642",
	  "malt":"\u2720",
	  "maltese":"\u2720",
	  "Map":"\u2905",
	  "map":"\u21A6",
	  "mapsto":"\u21A6",
	  "mapstodown":"\u21A7",
	  "mapstoleft":"\u21A4",
	  "mapstoup":"\u21A5",
	  "marker":"\u25AE",
	  "mcomma":"\u2A29",
	  "Mcy":"\u041C",
	  "mcy":"\u043C",
	  "mdash":"\u2014",
	  "mDDot":"\u223A",
	  "measuredangle":"\u2221",
	  "MediumSpace":"\u205F",
	  "Mellintrf":"\u2133",
	  "Mfr":"\uD835\uDD10",
	  "mfr":"\uD835\uDD2A",
	  "mho":"\u2127",
	  "micro":"\u00B5",
	  "mid":"\u2223",
	  "midast":"\u002A",
	  "midcir":"\u2AF0",
	  "middot":"\u00B7",
	  "minus":"\u2212",
	  "minusb":"\u229F",
	  "minusd":"\u2238",
	  "minusdu":"\u2A2A",
	  "MinusPlus":"\u2213",
	  "mlcp":"\u2ADB",
	  "mldr":"\u2026",
	  "mnplus":"\u2213",
	  "models":"\u22A7",
	  "Mopf":"\uD835\uDD44",
	  "mopf":"\uD835\uDD5E",
	  "mp":"\u2213",
	  "Mscr":"\u2133",
	  "mscr":"\uD835\uDCC2",
	  "mstpos":"\u223E",
	  "Mu":"\u039C",
	  "mu":"\u03BC",
	  "multimap":"\u22B8",
	  "mumap":"\u22B8",
	  "nabla":"\u2207",
	  "Nacute":"\u0143",
	  "nacute":"\u0144",
	  "nang":"\u2220\u20D2",
	  "nap":"\u2249",
	  "napE":"\u2A70\u0338",
	  "napid":"\u224B\u0338",
	  "napos":"\u0149",
	  "napprox":"\u2249",
	  "natur":"\u266E",
	  "natural":"\u266E",
	  "naturals":"\u2115",
	  "nbsp":"\u00A0",
	  "nbump":"\u224E\u0338",
	  "nbumpe":"\u224F\u0338",
	  "ncap":"\u2A43",
	  "Ncaron":"\u0147",
	  "ncaron":"\u0148",
	  "Ncedil":"\u0145",
	  "ncedil":"\u0146",
	  "ncong":"\u2247",
	  "ncongdot":"\u2A6D\u0338",
	  "ncup":"\u2A42",
	  "Ncy":"\u041D",
	  "ncy":"\u043D",
	  "ndash":"\u2013",
	  "ne":"\u2260",
	  "nearhk":"\u2924",
	  "neArr":"\u21D7",
	  "nearr":"\u2197",
	  "nearrow":"\u2197",
	  "nedot":"\u2250\u0338",
	  "NegativeMediumSpace":"\u200B",
	  "NegativeThickSpace":"\u200B",
	  "NegativeThinSpace":"\u200B",
	  "NegativeVeryThinSpace":"\u200B",
	  "nequiv":"\u2262",
	  "nesear":"\u2928",
	  "nesim":"\u2242\u0338",
	  "NestedGreaterGreater":"\u226B",
	  "NestedLessLess":"\u226A",
	  "NewLine":"\u000A",
	  "nexist":"\u2204",
	  "nexists":"\u2204",
	  "Nfr":"\uD835\uDD11",
	  "nfr":"\uD835\uDD2B",
	  "ngE":"\u2267\u0338",
	  "nge":"\u2271",
	  "ngeq":"\u2271",
	  "ngeqq":"\u2267\u0338",
	  "ngeqslant":"\u2A7E\u0338",
	  "nges":"\u2A7E\u0338",
	  "nGg":"\u22D9\u0338",
	  "ngsim":"\u2275",
	  "nGt":"\u226B\u20D2",
	  "ngt":"\u226F",
	  "ngtr":"\u226F",
	  "nGtv":"\u226B\u0338",
	  "nhArr":"\u21CE",
	  "nharr":"\u21AE",
	  "nhpar":"\u2AF2",
	  "ni":"\u220B",
	  "nis":"\u22FC",
	  "nisd":"\u22FA",
	  "niv":"\u220B",
	  "NJcy":"\u040A",
	  "njcy":"\u045A",
	  "nlArr":"\u21CD",
	  "nlarr":"\u219A",
	  "nldr":"\u2025",
	  "nlE":"\u2266\u0338",
	  "nle":"\u2270",
	  "nLeftarrow":"\u21CD",
	  "nleftarrow":"\u219A",
	  "nLeftrightarrow":"\u21CE",
	  "nleftrightarrow":"\u21AE",
	  "nleq":"\u2270",
	  "nleqq":"\u2266\u0338",
	  "nleqslant":"\u2A7D\u0338",
	  "nles":"\u2A7D\u0338",
	  "nless":"\u226E",
	  "nLl":"\u22D8\u0338",
	  "nlsim":"\u2274",
	  "nLt":"\u226A\u20D2",
	  "nlt":"\u226E",
	  "nltri":"\u22EA",
	  "nltrie":"\u22EC",
	  "nLtv":"\u226A\u0338",
	  "nmid":"\u2224",
	  "NoBreak":"\u2060",
	  "NonBreakingSpace":"\u00A0",
	  "Nopf":"\u2115",
	  "nopf":"\uD835\uDD5F",
	  "Not":"\u2AEC",
	  "not":"\u00AC",
	  "NotCongruent":"\u2262",
	  "NotCupCap":"\u226D",
	  "NotDoubleVerticalBar":"\u2226",
	  "NotElement":"\u2209",
	  "NotEqual":"\u2260",
	  "NotEqualTilde":"\u2242\u0338",
	  "NotExists":"\u2204",
	  "NotGreater":"\u226F",
	  "NotGreaterEqual":"\u2271",
	  "NotGreaterFullEqual":"\u2267\u0338",
	  "NotGreaterGreater":"\u226B\u0338",
	  "NotGreaterLess":"\u2279",
	  "NotGreaterSlantEqual":"\u2A7E\u0338",
	  "NotGreaterTilde":"\u2275",
	  "NotHumpDownHump":"\u224E\u0338",
	  "NotHumpEqual":"\u224F\u0338",
	  "notin":"\u2209",
	  "notindot":"\u22F5\u0338",
	  "notinE":"\u22F9\u0338",
	  "notinva":"\u2209",
	  "notinvb":"\u22F7",
	  "notinvc":"\u22F6",
	  "NotLeftTriangle":"\u22EA",
	  "NotLeftTriangleBar":"\u29CF\u0338",
	  "NotLeftTriangleEqual":"\u22EC",
	  "NotLess":"\u226E",
	  "NotLessEqual":"\u2270",
	  "NotLessGreater":"\u2278",
	  "NotLessLess":"\u226A\u0338",
	  "NotLessSlantEqual":"\u2A7D\u0338",
	  "NotLessTilde":"\u2274",
	  "NotNestedGreaterGreater":"\u2AA2\u0338",
	  "NotNestedLessLess":"\u2AA1\u0338",
	  "notni":"\u220C",
	  "notniva":"\u220C",
	  "notnivb":"\u22FE",
	  "notnivc":"\u22FD",
	  "NotPrecedes":"\u2280",
	  "NotPrecedesEqual":"\u2AAF\u0338",
	  "NotPrecedesSlantEqual":"\u22E0",
	  "NotReverseElement":"\u220C",
	  "NotRightTriangle":"\u22EB",
	  "NotRightTriangleBar":"\u29D0\u0338",
	  "NotRightTriangleEqual":"\u22ED",
	  "NotSquareSubset":"\u228F\u0338",
	  "NotSquareSubsetEqual":"\u22E2",
	  "NotSquareSuperset":"\u2290\u0338",
	  "NotSquareSupersetEqual":"\u22E3",
	  "NotSubset":"\u2282\u20D2",
	  "NotSubsetEqual":"\u2288",
	  "NotSucceeds":"\u2281",
	  "NotSucceedsEqual":"\u2AB0\u0338",
	  "NotSucceedsSlantEqual":"\u22E1",
	  "NotSucceedsTilde":"\u227F\u0338",
	  "NotSuperset":"\u2283\u20D2",
	  "NotSupersetEqual":"\u2289",
	  "NotTilde":"\u2241",
	  "NotTildeEqual":"\u2244",
	  "NotTildeFullEqual":"\u2247",
	  "NotTildeTilde":"\u2249",
	  "NotVerticalBar":"\u2224",
	  "npar":"\u2226",
	  "nparallel":"\u2226",
	  "nparsl":"\u2AFD\u20E5",
	  "npart":"\u2202\u0338",
	  "npolint":"\u2A14",
	  "npr":"\u2280",
	  "nprcue":"\u22E0",
	  "npre":"\u2AAF\u0338",
	  "nprec":"\u2280",
	  "npreceq":"\u2AAF\u0338",
	  "nrArr":"\u21CF",
	  "nrarr":"\u219B",
	  "nrarrc":"\u2933\u0338",
	  "nrarrw":"\u219D\u0338",
	  "nRightarrow":"\u21CF",
	  "nrightarrow":"\u219B",
	  "nrtri":"\u22EB",
	  "nrtrie":"\u22ED",
	  "nsc":"\u2281",
	  "nsccue":"\u22E1",
	  "nsce":"\u2AB0\u0338",
	  "Nscr":"\uD835\uDCA9",
	  "nscr":"\uD835\uDCC3",
	  "nshortmid":"\u2224",
	  "nshortparallel":"\u2226",
	  "nsim":"\u2241",
	  "nsime":"\u2244",
	  "nsimeq":"\u2244",
	  "nsmid":"\u2224",
	  "nspar":"\u2226",
	  "nsqsube":"\u22E2",
	  "nsqsupe":"\u22E3",
	  "nsub":"\u2284",
	  "nsubE":"\u2AC5\u0338",
	  "nsube":"\u2288",
	  "nsubset":"\u2282\u20D2",
	  "nsubseteq":"\u2288",
	  "nsubseteqq":"\u2AC5\u0338",
	  "nsucc":"\u2281",
	  "nsucceq":"\u2AB0\u0338",
	  "nsup":"\u2285",
	  "nsupE":"\u2AC6\u0338",
	  "nsupe":"\u2289",
	  "nsupset":"\u2283\u20D2",
	  "nsupseteq":"\u2289",
	  "nsupseteqq":"\u2AC6\u0338",
	  "ntgl":"\u2279",
	  "Ntilde":"\u00D1",
	  "ntilde":"\u00F1",
	  "ntlg":"\u2278",
	  "ntriangleleft":"\u22EA",
	  "ntrianglelefteq":"\u22EC",
	  "ntriangleright":"\u22EB",
	  "ntrianglerighteq":"\u22ED",
	  "Nu":"\u039D",
	  "nu":"\u03BD",
	  "num":"\u0023",
	  "numero":"\u2116",
	  "numsp":"\u2007",
	  "nvap":"\u224D\u20D2",
	  "nVDash":"\u22AF",
	  "nVdash":"\u22AE",
	  "nvDash":"\u22AD",
	  "nvdash":"\u22AC",
	  "nvge":"\u2265\u20D2",
	  "nvgt":"\u003E\u20D2",
	  "nvHarr":"\u2904",
	  "nvinfin":"\u29DE",
	  "nvlArr":"\u2902",
	  "nvle":"\u2264\u20D2",
	  "nvlt":"\u003C\u20D2",
	  "nvltrie":"\u22B4\u20D2",
	  "nvrArr":"\u2903",
	  "nvrtrie":"\u22B5\u20D2",
	  "nvsim":"\u223C\u20D2",
	  "nwarhk":"\u2923",
	  "nwArr":"\u21D6",
	  "nwarr":"\u2196",
	  "nwarrow":"\u2196",
	  "nwnear":"\u2927",
	  "Oacute":"\u00D3",
	  "oacute":"\u00F3",
	  "oast":"\u229B",
	  "ocir":"\u229A",
	  "Ocirc":"\u00D4",
	  "ocirc":"\u00F4",
	  "Ocy":"\u041E",
	  "ocy":"\u043E",
	  "odash":"\u229D",
	  "Odblac":"\u0150",
	  "odblac":"\u0151",
	  "odiv":"\u2A38",
	  "odot":"\u2299",
	  "odsold":"\u29BC",
	  "OElig":"\u0152",
	  "oelig":"\u0153",
	  "ofcir":"\u29BF",
	  "Ofr":"\uD835\uDD12",
	  "ofr":"\uD835\uDD2C",
	  "ogon":"\u02DB",
	  "Ograve":"\u00D2",
	  "ograve":"\u00F2",
	  "ogt":"\u29C1",
	  "ohbar":"\u29B5",
	  "ohm":"\u03A9",
	  "oint":"\u222E",
	  "olarr":"\u21BA",
	  "olcir":"\u29BE",
	  "olcross":"\u29BB",
	  "oline":"\u203E",
	  "olt":"\u29C0",
	  "Omacr":"\u014C",
	  "omacr":"\u014D",
	  "Omega":"\u03A9",
	  "omega":"\u03C9",
	  "Omicron":"\u039F",
	  "omicron":"\u03BF",
	  "omid":"\u29B6",
	  "ominus":"\u2296",
	  "Oopf":"\uD835\uDD46",
	  "oopf":"\uD835\uDD60",
	  "opar":"\u29B7",
	  "OpenCurlyDoubleQuote":"\u201C",
	  "OpenCurlyQuote":"\u2018",
	  "operp":"\u29B9",
	  "oplus":"\u2295",
	  "Or":"\u2A54",
	  "or":"\u2228",
	  "orarr":"\u21BB",
	  "ord":"\u2A5D",
	  "order":"\u2134",
	  "orderof":"\u2134",
	  "ordf":"\u00AA",
	  "ordm":"\u00BA",
	  "origof":"\u22B6",
	  "oror":"\u2A56",
	  "orslope":"\u2A57",
	  "orv":"\u2A5B",
	  "oS":"\u24C8",
	  "Oscr":"\uD835\uDCAA",
	  "oscr":"\u2134",
	  "Oslash":"\u00D8",
	  "oslash":"\u00F8",
	  "osol":"\u2298",
	  "Otilde":"\u00D5",
	  "otilde":"\u00F5",
	  "Otimes":"\u2A37",
	  "otimes":"\u2297",
	  "otimesas":"\u2A36",
	  "Ouml":"\u00D6",
	  "ouml":"\u00F6",
	  "ovbar":"\u233D",
	  "OverBar":"\u203E",
	  "OverBrace":"\u23DE",
	  "OverBracket":"\u23B4",
	  "OverParenthesis":"\u23DC",
	  "par":"\u2225",
	  "para":"\u00B6",
	  "parallel":"\u2225",
	  "parsim":"\u2AF3",
	  "parsl":"\u2AFD",
	  "part":"\u2202",
	  "PartialD":"\u2202",
	  "Pcy":"\u041F",
	  "pcy":"\u043F",
	  "percnt":"\u0025",
	  "period":"\u002E",
	  "permil":"\u2030",
	  "perp":"\u22A5",
	  "pertenk":"\u2031",
	  "Pfr":"\uD835\uDD13",
	  "pfr":"\uD835\uDD2D",
	  "Phi":"\u03A6",
	  "phi":"\u03C6",
	  "phiv":"\u03D5",
	  "phmmat":"\u2133",
	  "phone":"\u260E",
	  "Pi":"\u03A0",
	  "pi":"\u03C0",
	  "pitchfork":"\u22D4",
	  "piv":"\u03D6",
	  "planck":"\u210F",
	  "planckh":"\u210E",
	  "plankv":"\u210F",
	  "plus":"\u002B",
	  "plusacir":"\u2A23",
	  "plusb":"\u229E",
	  "pluscir":"\u2A22",
	  "plusdo":"\u2214",
	  "plusdu":"\u2A25",
	  "pluse":"\u2A72",
	  "PlusMinus":"\u00B1",
	  "plusmn":"\u00B1",
	  "plussim":"\u2A26",
	  "plustwo":"\u2A27",
	  "pm":"\u00B1",
	  "Poincareplane":"\u210C",
	  "pointint":"\u2A15",
	  "Popf":"\u2119",
	  "popf":"\uD835\uDD61",
	  "pound":"\u00A3",
	  "Pr":"\u2ABB",
	  "pr":"\u227A",
	  "prap":"\u2AB7",
	  "prcue":"\u227C",
	  "prE":"\u2AB3",
	  "pre":"\u2AAF",
	  "prec":"\u227A",
	  "precapprox":"\u2AB7",
	  "preccurlyeq":"\u227C",
	  "Precedes":"\u227A",
	  "PrecedesEqual":"\u2AAF",
	  "PrecedesSlantEqual":"\u227C",
	  "PrecedesTilde":"\u227E",
	  "preceq":"\u2AAF",
	  "precnapprox":"\u2AB9",
	  "precneqq":"\u2AB5",
	  "precnsim":"\u22E8",
	  "precsim":"\u227E",
	  "Prime":"\u2033",
	  "prime":"\u2032",
	  "primes":"\u2119",
	  "prnap":"\u2AB9",
	  "prnE":"\u2AB5",
	  "prnsim":"\u22E8",
	  "prod":"\u220F",
	  "Product":"\u220F",
	  "profalar":"\u232E",
	  "profline":"\u2312",
	  "profsurf":"\u2313",
	  "prop":"\u221D",
	  "Proportion":"\u2237",
	  "Proportional":"\u221D",
	  "propto":"\u221D",
	  "prsim":"\u227E",
	  "prurel":"\u22B0",
	  "Pscr":"\uD835\uDCAB",
	  "pscr":"\uD835\uDCC5",
	  "Psi":"\u03A8",
	  "psi":"\u03C8",
	  "puncsp":"\u2008",
	  "Qfr":"\uD835\uDD14",
	  "qfr":"\uD835\uDD2E",
	  "qint":"\u2A0C",
	  "Qopf":"\u211A",
	  "qopf":"\uD835\uDD62",
	  "qprime":"\u2057",
	  "Qscr":"\uD835\uDCAC",
	  "qscr":"\uD835\uDCC6",
	  "quaternions":"\u210D",
	  "quatint":"\u2A16",
	  "quest":"\u003F",
	  "questeq":"\u225F",
	  "QUOT":"\u0022",
	  "quot":"\u0022",
	  "rAarr":"\u21DB",
	  "race":"\u223D\u0331",
	  "Racute":"\u0154",
	  "racute":"\u0155",
	  "radic":"\u221A",
	  "raemptyv":"\u29B3",
	  "Rang":"\u27EB",
	  "rang":"\u27E9",
	  "rangd":"\u2992",
	  "range":"\u29A5",
	  "rangle":"\u27E9",
	  "raquo":"\u00BB",
	  "Rarr":"\u21A0",
	  "rArr":"\u21D2",
	  "rarr":"\u2192",
	  "rarrap":"\u2975",
	  "rarrb":"\u21E5",
	  "rarrbfs":"\u2920",
	  "rarrc":"\u2933",
	  "rarrfs":"\u291E",
	  "rarrhk":"\u21AA",
	  "rarrlp":"\u21AC",
	  "rarrpl":"\u2945",
	  "rarrsim":"\u2974",
	  "Rarrtl":"\u2916",
	  "rarrtl":"\u21A3",
	  "rarrw":"\u219D",
	  "rAtail":"\u291C",
	  "ratail":"\u291A",
	  "ratio":"\u2236",
	  "rationals":"\u211A",
	  "RBarr":"\u2910",
	  "rBarr":"\u290F",
	  "rbarr":"\u290D",
	  "rbbrk":"\u2773",
	  "rbrace":"\u007D",
	  "rbrack":"\u005D",
	  "rbrke":"\u298C",
	  "rbrksld":"\u298E",
	  "rbrkslu":"\u2990",
	  "Rcaron":"\u0158",
	  "rcaron":"\u0159",
	  "Rcedil":"\u0156",
	  "rcedil":"\u0157",
	  "rceil":"\u2309",
	  "rcub":"\u007D",
	  "Rcy":"\u0420",
	  "rcy":"\u0440",
	  "rdca":"\u2937",
	  "rdldhar":"\u2969",
	  "rdquo":"\u201D",
	  "rdquor":"\u201D",
	  "rdsh":"\u21B3",
	  "Re":"\u211C",
	  "real":"\u211C",
	  "realine":"\u211B",
	  "realpart":"\u211C",
	  "reals":"\u211D",
	  "rect":"\u25AD",
	  "REG":"\u00AE",
	  "reg":"\u00AE",
	  "ReverseElement":"\u220B",
	  "ReverseEquilibrium":"\u21CB",
	  "ReverseUpEquilibrium":"\u296F",
	  "rfisht":"\u297D",
	  "rfloor":"\u230B",
	  "Rfr":"\u211C",
	  "rfr":"\uD835\uDD2F",
	  "rHar":"\u2964",
	  "rhard":"\u21C1",
	  "rharu":"\u21C0",
	  "rharul":"\u296C",
	  "Rho":"\u03A1",
	  "rho":"\u03C1",
	  "rhov":"\u03F1",
	  "RightAngleBracket":"\u27E9",
	  "RightArrow":"\u2192",
	  "Rightarrow":"\u21D2",
	  "rightarrow":"\u2192",
	  "RightArrowBar":"\u21E5",
	  "RightArrowLeftArrow":"\u21C4",
	  "rightarrowtail":"\u21A3",
	  "RightCeiling":"\u2309",
	  "RightDoubleBracket":"\u27E7",
	  "RightDownTeeVector":"\u295D",
	  "RightDownVector":"\u21C2",
	  "RightDownVectorBar":"\u2955",
	  "RightFloor":"\u230B",
	  "rightharpoondown":"\u21C1",
	  "rightharpoonup":"\u21C0",
	  "rightleftarrows":"\u21C4",
	  "rightleftharpoons":"\u21CC",
	  "rightrightarrows":"\u21C9",
	  "rightsquigarrow":"\u219D",
	  "RightTee":"\u22A2",
	  "RightTeeArrow":"\u21A6",
	  "RightTeeVector":"\u295B",
	  "rightthreetimes":"\u22CC",
	  "RightTriangle":"\u22B3",
	  "RightTriangleBar":"\u29D0",
	  "RightTriangleEqual":"\u22B5",
	  "RightUpDownVector":"\u294F",
	  "RightUpTeeVector":"\u295C",
	  "RightUpVector":"\u21BE",
	  "RightUpVectorBar":"\u2954",
	  "RightVector":"\u21C0",
	  "RightVectorBar":"\u2953",
	  "ring":"\u02DA",
	  "risingdotseq":"\u2253",
	  "rlarr":"\u21C4",
	  "rlhar":"\u21CC",
	  "rlm":"\u200F",
	  "rmoust":"\u23B1",
	  "rmoustache":"\u23B1",
	  "rnmid":"\u2AEE",
	  "roang":"\u27ED",
	  "roarr":"\u21FE",
	  "robrk":"\u27E7",
	  "ropar":"\u2986",
	  "Ropf":"\u211D",
	  "ropf":"\uD835\uDD63",
	  "roplus":"\u2A2E",
	  "rotimes":"\u2A35",
	  "RoundImplies":"\u2970",
	  "rpar":"\u0029",
	  "rpargt":"\u2994",
	  "rppolint":"\u2A12",
	  "rrarr":"\u21C9",
	  "Rrightarrow":"\u21DB",
	  "rsaquo":"\u203A",
	  "Rscr":"\u211B",
	  "rscr":"\uD835\uDCC7",
	  "Rsh":"\u21B1",
	  "rsh":"\u21B1",
	  "rsqb":"\u005D",
	  "rsquo":"\u2019",
	  "rsquor":"\u2019",
	  "rthree":"\u22CC",
	  "rtimes":"\u22CA",
	  "rtri":"\u25B9",
	  "rtrie":"\u22B5",
	  "rtrif":"\u25B8",
	  "rtriltri":"\u29CE",
	  "RuleDelayed":"\u29F4",
	  "ruluhar":"\u2968",
	  "rx":"\u211E",
	  "Sacute":"\u015A",
	  "sacute":"\u015B",
	  "sbquo":"\u201A",
	  "Sc":"\u2ABC",
	  "sc":"\u227B",
	  "scap":"\u2AB8",
	  "Scaron":"\u0160",
	  "scaron":"\u0161",
	  "sccue":"\u227D",
	  "scE":"\u2AB4",
	  "sce":"\u2AB0",
	  "Scedil":"\u015E",
	  "scedil":"\u015F",
	  "Scirc":"\u015C",
	  "scirc":"\u015D",
	  "scnap":"\u2ABA",
	  "scnE":"\u2AB6",
	  "scnsim":"\u22E9",
	  "scpolint":"\u2A13",
	  "scsim":"\u227F",
	  "Scy":"\u0421",
	  "scy":"\u0441",
	  "sdot":"\u22C5",
	  "sdotb":"\u22A1",
	  "sdote":"\u2A66",
	  "searhk":"\u2925",
	  "seArr":"\u21D8",
	  "searr":"\u2198",
	  "searrow":"\u2198",
	  "sect":"\u00A7",
	  "semi":"\u003B",
	  "seswar":"\u2929",
	  "setminus":"\u2216",
	  "setmn":"\u2216",
	  "sext":"\u2736",
	  "Sfr":"\uD835\uDD16",
	  "sfr":"\uD835\uDD30",
	  "sfrown":"\u2322",
	  "sharp":"\u266F",
	  "SHCHcy":"\u0429",
	  "shchcy":"\u0449",
	  "SHcy":"\u0428",
	  "shcy":"\u0448",
	  "ShortDownArrow":"\u2193",
	  "ShortLeftArrow":"\u2190",
	  "shortmid":"\u2223",
	  "shortparallel":"\u2225",
	  "ShortRightArrow":"\u2192",
	  "ShortUpArrow":"\u2191",
	  "shy":"\u00AD",
	  "Sigma":"\u03A3",
	  "sigma":"\u03C3",
	  "sigmaf":"\u03C2",
	  "sigmav":"\u03C2",
	  "sim":"\u223C",
	  "simdot":"\u2A6A",
	  "sime":"\u2243",
	  "simeq":"\u2243",
	  "simg":"\u2A9E",
	  "simgE":"\u2AA0",
	  "siml":"\u2A9D",
	  "simlE":"\u2A9F",
	  "simne":"\u2246",
	  "simplus":"\u2A24",
	  "simrarr":"\u2972",
	  "slarr":"\u2190",
	  "SmallCircle":"\u2218",
	  "smallsetminus":"\u2216",
	  "smashp":"\u2A33",
	  "smeparsl":"\u29E4",
	  "smid":"\u2223",
	  "smile":"\u2323",
	  "smt":"\u2AAA",
	  "smte":"\u2AAC",
	  "smtes":"\u2AAC\uFE00",
	  "SOFTcy":"\u042C",
	  "softcy":"\u044C",
	  "sol":"\u002F",
	  "solb":"\u29C4",
	  "solbar":"\u233F",
	  "Sopf":"\uD835\uDD4A",
	  "sopf":"\uD835\uDD64",
	  "spades":"\u2660",
	  "spadesuit":"\u2660",
	  "spar":"\u2225",
	  "sqcap":"\u2293",
	  "sqcaps":"\u2293\uFE00",
	  "sqcup":"\u2294",
	  "sqcups":"\u2294\uFE00",
	  "Sqrt":"\u221A",
	  "sqsub":"\u228F",
	  "sqsube":"\u2291",
	  "sqsubset":"\u228F",
	  "sqsubseteq":"\u2291",
	  "sqsup":"\u2290",
	  "sqsupe":"\u2292",
	  "sqsupset":"\u2290",
	  "sqsupseteq":"\u2292",
	  "squ":"\u25A1",
	  "Square":"\u25A1",
	  "square":"\u25A1",
	  "SquareIntersection":"\u2293",
	  "SquareSubset":"\u228F",
	  "SquareSubsetEqual":"\u2291",
	  "SquareSuperset":"\u2290",
	  "SquareSupersetEqual":"\u2292",
	  "SquareUnion":"\u2294",
	  "squarf":"\u25AA",
	  "squf":"\u25AA",
	  "srarr":"\u2192",
	  "Sscr":"\uD835\uDCAE",
	  "sscr":"\uD835\uDCC8",
	  "ssetmn":"\u2216",
	  "ssmile":"\u2323",
	  "sstarf":"\u22C6",
	  "Star":"\u22C6",
	  "star":"\u2606",
	  "starf":"\u2605",
	  "straightepsilon":"\u03F5",
	  "straightphi":"\u03D5",
	  "strns":"\u00AF",
	  "Sub":"\u22D0",
	  "sub":"\u2282",
	  "subdot":"\u2ABD",
	  "subE":"\u2AC5",
	  "sube":"\u2286",
	  "subedot":"\u2AC3",
	  "submult":"\u2AC1",
	  "subnE":"\u2ACB",
	  "subne":"\u228A",
	  "subplus":"\u2ABF",
	  "subrarr":"\u2979",
	  "Subset":"\u22D0",
	  "subset":"\u2282",
	  "subseteq":"\u2286",
	  "subseteqq":"\u2AC5",
	  "SubsetEqual":"\u2286",
	  "subsetneq":"\u228A",
	  "subsetneqq":"\u2ACB",
	  "subsim":"\u2AC7",
	  "subsub":"\u2AD5",
	  "subsup":"\u2AD3",
	  "succ":"\u227B",
	  "succapprox":"\u2AB8",
	  "succcurlyeq":"\u227D",
	  "Succeeds":"\u227B",
	  "SucceedsEqual":"\u2AB0",
	  "SucceedsSlantEqual":"\u227D",
	  "SucceedsTilde":"\u227F",
	  "succeq":"\u2AB0",
	  "succnapprox":"\u2ABA",
	  "succneqq":"\u2AB6",
	  "succnsim":"\u22E9",
	  "succsim":"\u227F",
	  "SuchThat":"\u220B",
	  "Sum":"\u2211",
	  "sum":"\u2211",
	  "sung":"\u266A",
	  "Sup":"\u22D1",
	  "sup":"\u2283",
	  "sup1":"\u00B9",
	  "sup2":"\u00B2",
	  "sup3":"\u00B3",
	  "supdot":"\u2ABE",
	  "supdsub":"\u2AD8",
	  "supE":"\u2AC6",
	  "supe":"\u2287",
	  "supedot":"\u2AC4",
	  "Superset":"\u2283",
	  "SupersetEqual":"\u2287",
	  "suphsol":"\u27C9",
	  "suphsub":"\u2AD7",
	  "suplarr":"\u297B",
	  "supmult":"\u2AC2",
	  "supnE":"\u2ACC",
	  "supne":"\u228B",
	  "supplus":"\u2AC0",
	  "Supset":"\u22D1",
	  "supset":"\u2283",
	  "supseteq":"\u2287",
	  "supseteqq":"\u2AC6",
	  "supsetneq":"\u228B",
	  "supsetneqq":"\u2ACC",
	  "supsim":"\u2AC8",
	  "supsub":"\u2AD4",
	  "supsup":"\u2AD6",
	  "swarhk":"\u2926",
	  "swArr":"\u21D9",
	  "swarr":"\u2199",
	  "swarrow":"\u2199",
	  "swnwar":"\u292A",
	  "szlig":"\u00DF",
	  "Tab":"\u0009",
	  "target":"\u2316",
	  "Tau":"\u03A4",
	  "tau":"\u03C4",
	  "tbrk":"\u23B4",
	  "Tcaron":"\u0164",
	  "tcaron":"\u0165",
	  "Tcedil":"\u0162",
	  "tcedil":"\u0163",
	  "Tcy":"\u0422",
	  "tcy":"\u0442",
	  "tdot":"\u20DB",
	  "telrec":"\u2315",
	  "Tfr":"\uD835\uDD17",
	  "tfr":"\uD835\uDD31",
	  "there4":"\u2234",
	  "Therefore":"\u2234",
	  "therefore":"\u2234",
	  "Theta":"\u0398",
	  "theta":"\u03B8",
	  "thetasym":"\u03D1",
	  "thetav":"\u03D1",
	  "thickapprox":"\u2248",
	  "thicksim":"\u223C",
	  "ThickSpace":"\u205F\u200A",
	  "thinsp":"\u2009",
	  "ThinSpace":"\u2009",
	  "thkap":"\u2248",
	  "thksim":"\u223C",
	  "THORN":"\u00DE",
	  "thorn":"\u00FE",
	  "Tilde":"\u223C",
	  "tilde":"\u02DC",
	  "TildeEqual":"\u2243",
	  "TildeFullEqual":"\u2245",
	  "TildeTilde":"\u2248",
	  "times":"\u00D7",
	  "timesb":"\u22A0",
	  "timesbar":"\u2A31",
	  "timesd":"\u2A30",
	  "tint":"\u222D",
	  "toea":"\u2928",
	  "top":"\u22A4",
	  "topbot":"\u2336",
	  "topcir":"\u2AF1",
	  "Topf":"\uD835\uDD4B",
	  "topf":"\uD835\uDD65",
	  "topfork":"\u2ADA",
	  "tosa":"\u2929",
	  "tprime":"\u2034",
	  "TRADE":"\u2122",
	  "trade":"\u2122",
	  "triangle":"\u25B5",
	  "triangledown":"\u25BF",
	  "triangleleft":"\u25C3",
	  "trianglelefteq":"\u22B4",
	  "triangleq":"\u225C",
	  "triangleright":"\u25B9",
	  "trianglerighteq":"\u22B5",
	  "tridot":"\u25EC",
	  "trie":"\u225C",
	  "triminus":"\u2A3A",
	  "TripleDot":"\u20DB",
	  "triplus":"\u2A39",
	  "trisb":"\u29CD",
	  "tritime":"\u2A3B",
	  "trpezium":"\u23E2",
	  "Tscr":"\uD835\uDCAF",
	  "tscr":"\uD835\uDCC9",
	  "TScy":"\u0426",
	  "tscy":"\u0446",
	  "TSHcy":"\u040B",
	  "tshcy":"\u045B",
	  "Tstrok":"\u0166",
	  "tstrok":"\u0167",
	  "twixt":"\u226C",
	  "twoheadleftarrow":"\u219E",
	  "twoheadrightarrow":"\u21A0",
	  "Uacute":"\u00DA",
	  "uacute":"\u00FA",
	  "Uarr":"\u219F",
	  "uArr":"\u21D1",
	  "uarr":"\u2191",
	  "Uarrocir":"\u2949",
	  "Ubrcy":"\u040E",
	  "ubrcy":"\u045E",
	  "Ubreve":"\u016C",
	  "ubreve":"\u016D",
	  "Ucirc":"\u00DB",
	  "ucirc":"\u00FB",
	  "Ucy":"\u0423",
	  "ucy":"\u0443",
	  "udarr":"\u21C5",
	  "Udblac":"\u0170",
	  "udblac":"\u0171",
	  "udhar":"\u296E",
	  "ufisht":"\u297E",
	  "Ufr":"\uD835\uDD18",
	  "ufr":"\uD835\uDD32",
	  "Ugrave":"\u00D9",
	  "ugrave":"\u00F9",
	  "uHar":"\u2963",
	  "uharl":"\u21BF",
	  "uharr":"\u21BE",
	  "uhblk":"\u2580",
	  "ulcorn":"\u231C",
	  "ulcorner":"\u231C",
	  "ulcrop":"\u230F",
	  "ultri":"\u25F8",
	  "Umacr":"\u016A",
	  "umacr":"\u016B",
	  "uml":"\u00A8",
	  "UnderBar":"\u005F",
	  "UnderBrace":"\u23DF",
	  "UnderBracket":"\u23B5",
	  "UnderParenthesis":"\u23DD",
	  "Union":"\u22C3",
	  "UnionPlus":"\u228E",
	  "Uogon":"\u0172",
	  "uogon":"\u0173",
	  "Uopf":"\uD835\uDD4C",
	  "uopf":"\uD835\uDD66",
	  "UpArrow":"\u2191",
	  "Uparrow":"\u21D1",
	  "uparrow":"\u2191",
	  "UpArrowBar":"\u2912",
	  "UpArrowDownArrow":"\u21C5",
	  "UpDownArrow":"\u2195",
	  "Updownarrow":"\u21D5",
	  "updownarrow":"\u2195",
	  "UpEquilibrium":"\u296E",
	  "upharpoonleft":"\u21BF",
	  "upharpoonright":"\u21BE",
	  "uplus":"\u228E",
	  "UpperLeftArrow":"\u2196",
	  "UpperRightArrow":"\u2197",
	  "Upsi":"\u03D2",
	  "upsi":"\u03C5",
	  "upsih":"\u03D2",
	  "Upsilon":"\u03A5",
	  "upsilon":"\u03C5",
	  "UpTee":"\u22A5",
	  "UpTeeArrow":"\u21A5",
	  "upuparrows":"\u21C8",
	  "urcorn":"\u231D",
	  "urcorner":"\u231D",
	  "urcrop":"\u230E",
	  "Uring":"\u016E",
	  "uring":"\u016F",
	  "urtri":"\u25F9",
	  "Uscr":"\uD835\uDCB0",
	  "uscr":"\uD835\uDCCA",
	  "utdot":"\u22F0",
	  "Utilde":"\u0168",
	  "utilde":"\u0169",
	  "utri":"\u25B5",
	  "utrif":"\u25B4",
	  "uuarr":"\u21C8",
	  "Uuml":"\u00DC",
	  "uuml":"\u00FC",
	  "uwangle":"\u29A7",
	  "vangrt":"\u299C",
	  "varepsilon":"\u03F5",
	  "varkappa":"\u03F0",
	  "varnothing":"\u2205",
	  "varphi":"\u03D5",
	  "varpi":"\u03D6",
	  "varpropto":"\u221D",
	  "vArr":"\u21D5",
	  "varr":"\u2195",
	  "varrho":"\u03F1",
	  "varsigma":"\u03C2",
	  "varsubsetneq":"\u228A\uFE00",
	  "varsubsetneqq":"\u2ACB\uFE00",
	  "varsupsetneq":"\u228B\uFE00",
	  "varsupsetneqq":"\u2ACC\uFE00",
	  "vartheta":"\u03D1",
	  "vartriangleleft":"\u22B2",
	  "vartriangleright":"\u22B3",
	  "Vbar":"\u2AEB",
	  "vBar":"\u2AE8",
	  "vBarv":"\u2AE9",
	  "Vcy":"\u0412",
	  "vcy":"\u0432",
	  "VDash":"\u22AB",
	  "Vdash":"\u22A9",
	  "vDash":"\u22A8",
	  "vdash":"\u22A2",
	  "Vdashl":"\u2AE6",
	  "Vee":"\u22C1",
	  "vee":"\u2228",
	  "veebar":"\u22BB",
	  "veeeq":"\u225A",
	  "vellip":"\u22EE",
	  "Verbar":"\u2016",
	  "verbar":"\u007C",
	  "Vert":"\u2016",
	  "vert":"\u007C",
	  "VerticalBar":"\u2223",
	  "VerticalLine":"\u007C",
	  "VerticalSeparator":"\u2758",
	  "VerticalTilde":"\u2240",
	  "VeryThinSpace":"\u200A",
	  "Vfr":"\uD835\uDD19",
	  "vfr":"\uD835\uDD33",
	  "vltri":"\u22B2",
	  "vnsub":"\u2282\u20D2",
	  "vnsup":"\u2283\u20D2",
	  "Vopf":"\uD835\uDD4D",
	  "vopf":"\uD835\uDD67",
	  "vprop":"\u221D",
	  "vrtri":"\u22B3",
	  "Vscr":"\uD835\uDCB1",
	  "vscr":"\uD835\uDCCB",
	  "vsubnE":"\u2ACB\uFE00",
	  "vsubne":"\u228A\uFE00",
	  "vsupnE":"\u2ACC\uFE00",
	  "vsupne":"\u228B\uFE00",
	  "Vvdash":"\u22AA",
	  "vzigzag":"\u299A",
	  "Wcirc":"\u0174",
	  "wcirc":"\u0175",
	  "wedbar":"\u2A5F",
	  "Wedge":"\u22C0",
	  "wedge":"\u2227",
	  "wedgeq":"\u2259",
	  "weierp":"\u2118",
	  "Wfr":"\uD835\uDD1A",
	  "wfr":"\uD835\uDD34",
	  "Wopf":"\uD835\uDD4E",
	  "wopf":"\uD835\uDD68",
	  "wp":"\u2118",
	  "wr":"\u2240",
	  "wreath":"\u2240",
	  "Wscr":"\uD835\uDCB2",
	  "wscr":"\uD835\uDCCC",
	  "xcap":"\u22C2",
	  "xcirc":"\u25EF",
	  "xcup":"\u22C3",
	  "xdtri":"\u25BD",
	  "Xfr":"\uD835\uDD1B",
	  "xfr":"\uD835\uDD35",
	  "xhArr":"\u27FA",
	  "xharr":"\u27F7",
	  "Xi":"\u039E",
	  "xi":"\u03BE",
	  "xlArr":"\u27F8",
	  "xlarr":"\u27F5",
	  "xmap":"\u27FC",
	  "xnis":"\u22FB",
	  "xodot":"\u2A00",
	  "Xopf":"\uD835\uDD4F",
	  "xopf":"\uD835\uDD69",
	  "xoplus":"\u2A01",
	  "xotime":"\u2A02",
	  "xrArr":"\u27F9",
	  "xrarr":"\u27F6",
	  "Xscr":"\uD835\uDCB3",
	  "xscr":"\uD835\uDCCD",
	  "xsqcup":"\u2A06",
	  "xuplus":"\u2A04",
	  "xutri":"\u25B3",
	  "xvee":"\u22C1",
	  "xwedge":"\u22C0",
	  "Yacute":"\u00DD",
	  "yacute":"\u00FD",
	  "YAcy":"\u042F",
	  "yacy":"\u044F",
	  "Ycirc":"\u0176",
	  "ycirc":"\u0177",
	  "Ycy":"\u042B",
	  "ycy":"\u044B",
	  "yen":"\u00A5",
	  "Yfr":"\uD835\uDD1C",
	  "yfr":"\uD835\uDD36",
	  "YIcy":"\u0407",
	  "yicy":"\u0457",
	  "Yopf":"\uD835\uDD50",
	  "yopf":"\uD835\uDD6A",
	  "Yscr":"\uD835\uDCB4",
	  "yscr":"\uD835\uDCCE",
	  "YUcy":"\u042E",
	  "yucy":"\u044E",
	  "Yuml":"\u0178",
	  "yuml":"\u00FF",
	  "Zacute":"\u0179",
	  "zacute":"\u017A",
	  "Zcaron":"\u017D",
	  "zcaron":"\u017E",
	  "Zcy":"\u0417",
	  "zcy":"\u0437",
	  "Zdot":"\u017B",
	  "zdot":"\u017C",
	  "zeetrf":"\u2128",
	  "ZeroWidthSpace":"\u200B",
	  "Zeta":"\u0396",
	  "zeta":"\u03B6",
	  "Zfr":"\u2128",
	  "zfr":"\uD835\uDD37",
	  "ZHcy":"\u0416",
	  "zhcy":"\u0436",
	  "zigrarr":"\u21DD",
	  "Zopf":"\u2124",
	  "zopf":"\uD835\uDD6B",
	  "Zscr":"\uD835\uDCB5",
	  "zscr":"\uD835\uDCCF",
	  "zwj":"\u200D",
	  "zwnj":"\u200C"
	};


/***/ },
/* 469 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Local dependencies
	 */

	var utils = __webpack_require__(467);
	var rules = __webpack_require__(470);

	/**
	 * Expose `Renderer`
	 */

	module.exports = Renderer;

	/**
	 * Renderer class. Renders HTML and exposes `rules` to allow
	 * local modifications.
	 */

	function Renderer() {
	  this.rules = utils.assign({}, rules);

	  // exported helper, for custom rules only
	  this.getBreak = rules.getBreak;
	}

	/**
	 * Render a string of inline HTML with the given `tokens` and
	 * `options`.
	 *
	 * @param  {Array} `tokens`
	 * @param  {Object} `options`
	 * @param  {Object} `env`
	 * @return {String}
	 * @api public
	 */

	Renderer.prototype.renderInline = function (tokens, options, env) {
	  var _rules = this.rules;
	  var len = tokens.length, i = 0;
	  var result = '';

	  while (len--) {
	    result += _rules[tokens[i].type](tokens, i++, options, env, this);
	  }

	  return result;
	};

	/**
	 * Render a string of HTML with the given `tokens` and
	 * `options`.
	 *
	 * @param  {Array} `tokens`
	 * @param  {Object} `options`
	 * @param  {Object} `env`
	 * @return {String}
	 * @api public
	 */

	Renderer.prototype.render = function (tokens, options, env) {
	  var _rules = this.rules;
	  var len = tokens.length, i = -1;
	  var result = '';

	  while (++i < len) {
	    if (tokens[i].type === 'inline') {
	      result += this.renderInline(tokens[i].children, options, env);
	    } else {
	      result += _rules[tokens[i].type](tokens, i, options, env, this);
	    }
	  }
	  return result;
	};


/***/ },
/* 470 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Local dependencies
	 */

	var has             = __webpack_require__(467).has;
	var unescapeMd      = __webpack_require__(467).unescapeMd;
	var replaceEntities = __webpack_require__(467).replaceEntities;
	var escapeHtml      = __webpack_require__(467).escapeHtml;

	/**
	 * Renderer rules cache
	 */

	var rules = {};

	/**
	 * Blockquotes
	 */

	rules.blockquote_open = function (/* tokens, idx, options, env */) {
	  return '<blockquote>\n';
	};

	rules.blockquote_close = function (tokens, idx /*, options, env */) {
	  return '</blockquote>' + getBreak(tokens, idx);
	};

	/**
	 * Code
	 */

	rules.code = function (tokens, idx /*, options, env */) {
	  if (tokens[idx].block) {
	    return '<pre><code>' + escapeHtml(tokens[idx].content) + '</code></pre>' + getBreak(tokens, idx);
	  }
	  return '<code>' + escapeHtml(tokens[idx].content) + '</code>';
	};

	/**
	 * Fenced code blocks
	 */

	rules.fence = function (tokens, idx, options, env, self) {
	  var token = tokens[idx];
	  var langClass = '';
	  var langPrefix = options.langPrefix;
	  var langName = '', fenceName;
	  var highlighted;

	  if (token.params) {

	    //
	    // ```foo bar
	    //
	    // Try custom renderer "foo" first. That will simplify overwrite
	    // for diagrams, latex, and any other fenced block with custom look
	    //

	    fenceName = token.params.split(/\s+/g)[0];

	    if (has(self.rules.fence_custom, fenceName)) {
	      return self.rules.fence_custom[fenceName](tokens, idx, options, env, self);
	    }

	    langName = escapeHtml(replaceEntities(unescapeMd(fenceName)));
	    langClass = ' class="' + langPrefix + langName + '"';
	  }

	  if (options.highlight) {
	    highlighted = options.highlight(token.content, langName) || escapeHtml(token.content);
	  } else {
	    highlighted = escapeHtml(token.content);
	  }

	  return '<pre><code' + langClass + '>'
	        + highlighted
	        + '</code></pre>'
	        + getBreak(tokens, idx);
	};

	rules.fence_custom = {};

	/**
	 * Headings
	 */

	rules.heading_open = function (tokens, idx /*, options, env */) {
	  return '<h' + tokens[idx].hLevel + '>';
	};
	rules.heading_close = function (tokens, idx /*, options, env */) {
	  return '</h' + tokens[idx].hLevel + '>\n';
	};

	/**
	 * Horizontal rules
	 */

	rules.hr = function (tokens, idx, options /*, env */) {
	  return (options.xhtmlOut ? '<hr />' : '<hr>') + getBreak(tokens, idx);
	};

	/**
	 * Bullets
	 */

	rules.bullet_list_open = function (/* tokens, idx, options, env */) {
	  return '<ul>\n';
	};
	rules.bullet_list_close = function (tokens, idx /*, options, env */) {
	  return '</ul>' + getBreak(tokens, idx);
	};

	/**
	 * List items
	 */

	rules.list_item_open = function (/* tokens, idx, options, env */) {
	  return '<li>';
	};
	rules.list_item_close = function (/* tokens, idx, options, env */) {
	  return '</li>\n';
	};

	/**
	 * Ordered list items
	 */

	rules.ordered_list_open = function (tokens, idx /*, options, env */) {
	  var token = tokens[idx];
	  var order = token.order > 1 ? ' start="' + token.order + '"' : '';
	  return '<ol' + order + '>\n';
	};
	rules.ordered_list_close = function (tokens, idx /*, options, env */) {
	  return '</ol>' + getBreak(tokens, idx);
	};

	/**
	 * Paragraphs
	 */

	rules.paragraph_open = function (tokens, idx /*, options, env */) {
	  return tokens[idx].tight ? '' : '<p>';
	};
	rules.paragraph_close = function (tokens, idx /*, options, env */) {
	  var addBreak = !(tokens[idx].tight && idx && tokens[idx - 1].type === 'inline' && !tokens[idx - 1].content);
	  return (tokens[idx].tight ? '' : '</p>') + (addBreak ? getBreak(tokens, idx) : '');
	};

	/**
	 * Links
	 */

	rules.link_open = function (tokens, idx /*, options, env */) {
	  var title = tokens[idx].title ? (' title="' + escapeHtml(replaceEntities(tokens[idx].title)) + '"') : '';
	  return '<a href="' + escapeHtml(tokens[idx].href) + '"' + title + '>';
	};
	rules.link_close = function (/* tokens, idx, options, env */) {
	  return '</a>';
	};

	/**
	 * Images
	 */

	rules.image = function (tokens, idx, options /*, env */) {
	  var src = ' src="' + escapeHtml(tokens[idx].src) + '"';
	  var title = tokens[idx].title ? (' title="' + escapeHtml(replaceEntities(tokens[idx].title)) + '"') : '';
	  var alt = ' alt="' + (tokens[idx].alt ? escapeHtml(replaceEntities(tokens[idx].alt)) : '') + '"';
	  var suffix = options.xhtmlOut ? ' /' : '';
	  return '<img' + src + alt + title + suffix + '>';
	};

	/**
	 * Tables
	 */

	rules.table_open = function (/* tokens, idx, options, env */) {
	  return '<table>\n';
	};
	rules.table_close = function (/* tokens, idx, options, env */) {
	  return '</table>\n';
	};
	rules.thead_open = function (/* tokens, idx, options, env */) {
	  return '<thead>\n';
	};
	rules.thead_close = function (/* tokens, idx, options, env */) {
	  return '</thead>\n';
	};
	rules.tbody_open = function (/* tokens, idx, options, env */) {
	  return '<tbody>\n';
	};
	rules.tbody_close = function (/* tokens, idx, options, env */) {
	  return '</tbody>\n';
	};
	rules.tr_open = function (/* tokens, idx, options, env */) {
	  return '<tr>';
	};
	rules.tr_close = function (/* tokens, idx, options, env */) {
	  return '</tr>\n';
	};
	rules.th_open = function (tokens, idx /*, options, env */) {
	  var token = tokens[idx];
	  return '<th'
	    + (token.align ? ' style="text-align:' + token.align + '"' : '')
	    + '>';
	};
	rules.th_close = function (/* tokens, idx, options, env */) {
	  return '</th>';
	};
	rules.td_open = function (tokens, idx /*, options, env */) {
	  var token = tokens[idx];
	  return '<td'
	    + (token.align ? ' style="text-align:' + token.align + '"' : '')
	    + '>';
	};
	rules.td_close = function (/* tokens, idx, options, env */) {
	  return '</td>';
	};

	/**
	 * Bold
	 */

	rules.strong_open = function (/* tokens, idx, options, env */) {
	  return '<strong>';
	};
	rules.strong_close = function (/* tokens, idx, options, env */) {
	  return '</strong>';
	};

	/**
	 * Italicize
	 */

	rules.em_open = function (/* tokens, idx, options, env */) {
	  return '<em>';
	};
	rules.em_close = function (/* tokens, idx, options, env */) {
	  return '</em>';
	};

	/**
	 * Strikethrough
	 */

	rules.del_open = function (/* tokens, idx, options, env */) {
	  return '<del>';
	};
	rules.del_close = function (/* tokens, idx, options, env */) {
	  return '</del>';
	};

	/**
	 * Insert
	 */

	rules.ins_open = function (/* tokens, idx, options, env */) {
	  return '<ins>';
	};
	rules.ins_close = function (/* tokens, idx, options, env */) {
	  return '</ins>';
	};

	/**
	 * Highlight
	 */

	rules.mark_open = function (/* tokens, idx, options, env */) {
	  return '<mark>';
	};
	rules.mark_close = function (/* tokens, idx, options, env */) {
	  return '</mark>';
	};

	/**
	 * Super- and sub-script
	 */

	rules.sub = function (tokens, idx /*, options, env */) {
	  return '<sub>' + escapeHtml(tokens[idx].content) + '</sub>';
	};
	rules.sup = function (tokens, idx /*, options, env */) {
	  return '<sup>' + escapeHtml(tokens[idx].content) + '</sup>';
	};

	/**
	 * Breaks
	 */

	rules.hardbreak = function (tokens, idx, options /*, env */) {
	  return options.xhtmlOut ? '<br />\n' : '<br>\n';
	};
	rules.softbreak = function (tokens, idx, options /*, env */) {
	  return options.breaks ? (options.xhtmlOut ? '<br />\n' : '<br>\n') : '\n';
	};

	/**
	 * Text
	 */

	rules.text = function (tokens, idx /*, options, env */) {
	  return escapeHtml(tokens[idx].content);
	};

	/**
	 * Content
	 */

	rules.htmlblock = function (tokens, idx /*, options, env */) {
	  return tokens[idx].content;
	};
	rules.htmltag = function (tokens, idx /*, options, env */) {
	  return tokens[idx].content;
	};

	/**
	 * Abbreviations, initialism
	 */

	rules.abbr_open = function (tokens, idx /*, options, env */) {
	  return '<abbr title="' + escapeHtml(replaceEntities(tokens[idx].title)) + '">';
	};
	rules.abbr_close = function (/* tokens, idx, options, env */) {
	  return '</abbr>';
	};

	/**
	 * Footnotes
	 */

	rules.footnote_ref = function (tokens, idx) {
	  var n = Number(tokens[idx].id + 1).toString();
	  var id = 'fnref' + n;
	  if (tokens[idx].subId > 0) {
	    id += ':' + tokens[idx].subId;
	  }
	  return '<sup class="footnote-ref"><a href="#fn' + n + '" id="' + id + '">[' + n + ']</a></sup>';
	};
	rules.footnote_block_open = function (tokens, idx, options) {
	  var hr = options.xhtmlOut
	    ? '<hr class="footnotes-sep" />\n'
	    : '<hr class="footnotes-sep">\n';
	  return  hr + '<section class="footnotes">\n<ol class="footnotes-list">\n';
	};
	rules.footnote_block_close = function () {
	  return '</ol>\n</section>\n';
	};
	rules.footnote_open = function (tokens, idx) {
	  var id = Number(tokens[idx].id + 1).toString();
	  return '<li id="fn' + id + '"  class="footnote-item">';
	};
	rules.footnote_close = function () {
	  return '</li>\n';
	};
	rules.footnote_anchor = function (tokens, idx) {
	  var n = Number(tokens[idx].id + 1).toString();
	  var id = 'fnref' + n;
	  if (tokens[idx].subId > 0) {
	    id += ':' + tokens[idx].subId;
	  }
	  return ' <a href="#' + id + '" class="footnote-backref">↩</a>';
	};

	/**
	 * Definition lists
	 */

	rules.dl_open = function() {
	  return '<dl>\n';
	};
	rules.dt_open = function() {
	  return '<dt>';
	};
	rules.dd_open = function() {
	  return '<dd>';
	};
	rules.dl_close = function() {
	  return '</dl>\n';
	};
	rules.dt_close = function() {
	  return '</dt>\n';
	};
	rules.dd_close = function() {
	  return '</dd>\n';
	};

	/**
	 * Helper functions
	 */

	function nextToken(tokens, idx) {
	  if (++idx >= tokens.length - 2) {
	    return idx;
	  }
	  if ((tokens[idx].type === 'paragraph_open' && tokens[idx].tight) &&
	      (tokens[idx + 1].type === 'inline' && tokens[idx + 1].content.length === 0) &&
	      (tokens[idx + 2].type === 'paragraph_close' && tokens[idx + 2].tight)) {
	    return nextToken(tokens, idx + 2);
	  }
	  return idx;
	}

	/**
	 * Check to see if `\n` is needed before the next token.
	 *
	 * @param  {Array} `tokens`
	 * @param  {Number} `idx`
	 * @return {String} Empty string or newline
	 * @api private
	 */

	var getBreak = rules.getBreak = function getBreak(tokens, idx) {
	  idx = nextToken(tokens, idx);
	  if (idx < tokens.length && tokens[idx].type === 'list_item_close') {
	    return '';
	  }
	  return '\n';
	};

	/**
	 * Expose `rules`
	 */

	module.exports = rules;


/***/ },
/* 471 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Local dependencies
	 */

	var Ruler = __webpack_require__(472);

	/**
	 * Core parser `rules`
	 */

	var _rules = [
	  [ 'block',          __webpack_require__(473)          ],
	  [ 'abbr',           __webpack_require__(474)           ],
	  [ 'references',     __webpack_require__(477)     ],
	  [ 'inline',         __webpack_require__(482)         ],
	  [ 'footnote_tail',  __webpack_require__(483)  ],
	  [ 'abbr2',          __webpack_require__(484)          ],
	  [ 'replacements',   __webpack_require__(485)   ],
	  [ 'smartquotes',    __webpack_require__(486)    ],
	  [ 'linkify',        __webpack_require__(487)        ]
	];

	/**
	 * Class for top level (`core`) parser rules
	 *
	 * @api private
	 */

	function Core() {
	  this.options = {};
	  this.ruler = new Ruler();
	  for (var i = 0; i < _rules.length; i++) {
	    this.ruler.push(_rules[i][0], _rules[i][1]);
	  }
	}

	/**
	 * Process rules with the given `state`
	 *
	 * @param  {Object} `state`
	 * @api private
	 */

	Core.prototype.process = function (state) {
	  var i, l, rules;
	  rules = this.ruler.getRules('');
	  for (i = 0, l = rules.length; i < l; i++) {
	    rules[i](state);
	  }
	};

	/**
	 * Expose `Core`
	 */

	module.exports = Core;


/***/ },
/* 472 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * Ruler is a helper class for building responsibility chains from
	 * parse rules. It allows:
	 *
	 *   - easy stack rules chains
	 *   - getting main chain and named chains content (as arrays of functions)
	 *
	 * Helper methods, should not be used directly.
	 * @api private
	 */

	function Ruler() {
	  // List of added rules. Each element is:
	  //
	  // { name: XXX,
	  //   enabled: Boolean,
	  //   fn: Function(),
	  //   alt: [ name2, name3 ] }
	  //
	  this.__rules__ = [];

	  // Cached rule chains.
	  //
	  // First level - chain name, '' for default.
	  // Second level - digital anchor for fast filtering by charcodes.
	  //
	  this.__cache__ = null;
	}

	/**
	 * Find the index of a rule by `name`.
	 *
	 * @param  {String} `name`
	 * @return {Number} Index of the given `name`
	 * @api private
	 */

	Ruler.prototype.__find__ = function (name) {
	  var len = this.__rules__.length;
	  var i = -1;

	  while (len--) {
	    if (this.__rules__[++i].name === name) {
	      return i;
	    }
	  }
	  return -1;
	};

	/**
	 * Build the rules lookup cache
	 *
	 * @api private
	 */

	Ruler.prototype.__compile__ = function () {
	  var self = this;
	  var chains = [ '' ];

	  // collect unique names
	  self.__rules__.forEach(function (rule) {
	    if (!rule.enabled) {
	      return;
	    }

	    rule.alt.forEach(function (altName) {
	      if (chains.indexOf(altName) < 0) {
	        chains.push(altName);
	      }
	    });
	  });

	  self.__cache__ = {};

	  chains.forEach(function (chain) {
	    self.__cache__[chain] = [];
	    self.__rules__.forEach(function (rule) {
	      if (!rule.enabled) {
	        return;
	      }

	      if (chain && rule.alt.indexOf(chain) < 0) {
	        return;
	      }
	      self.__cache__[chain].push(rule.fn);
	    });
	  });
	};

	/**
	 * Ruler public methods
	 * ------------------------------------------------
	 */

	/**
	 * Replace rule function
	 *
	 * @param  {String} `name` Rule name
	 * @param  {Function `fn`
	 * @param  {Object} `options`
	 * @api private
	 */

	Ruler.prototype.at = function (name, fn, options) {
	  var idx = this.__find__(name);
	  var opt = options || {};

	  if (idx === -1) {
	    throw new Error('Parser rule not found: ' + name);
	  }

	  this.__rules__[idx].fn = fn;
	  this.__rules__[idx].alt = opt.alt || [];
	  this.__cache__ = null;
	};

	/**
	 * Add a rule to the chain before given the `ruleName`.
	 *
	 * @param  {String}   `beforeName`
	 * @param  {String}   `ruleName`
	 * @param  {Function} `fn`
	 * @param  {Object}   `options`
	 * @api private
	 */

	Ruler.prototype.before = function (beforeName, ruleName, fn, options) {
	  var idx = this.__find__(beforeName);
	  var opt = options || {};

	  if (idx === -1) {
	    throw new Error('Parser rule not found: ' + beforeName);
	  }

	  this.__rules__.splice(idx, 0, {
	    name: ruleName,
	    enabled: true,
	    fn: fn,
	    alt: opt.alt || []
	  });

	  this.__cache__ = null;
	};

	/**
	 * Add a rule to the chain after the given `ruleName`.
	 *
	 * @param  {String}   `afterName`
	 * @param  {String}   `ruleName`
	 * @param  {Function} `fn`
	 * @param  {Object}   `options`
	 * @api private
	 */

	Ruler.prototype.after = function (afterName, ruleName, fn, options) {
	  var idx = this.__find__(afterName);
	  var opt = options || {};

	  if (idx === -1) {
	    throw new Error('Parser rule not found: ' + afterName);
	  }

	  this.__rules__.splice(idx + 1, 0, {
	    name: ruleName,
	    enabled: true,
	    fn: fn,
	    alt: opt.alt || []
	  });

	  this.__cache__ = null;
	};

	/**
	 * Add a rule to the end of chain.
	 *
	 * @param  {String}   `ruleName`
	 * @param  {Function} `fn`
	 * @param  {Object}   `options`
	 * @return {String}
	 */

	Ruler.prototype.push = function (ruleName, fn, options) {
	  var opt = options || {};

	  this.__rules__.push({
	    name: ruleName,
	    enabled: true,
	    fn: fn,
	    alt: opt.alt || []
	  });

	  this.__cache__ = null;
	};

	/**
	 * Enable a rule or list of rules.
	 *
	 * @param  {String|Array} `list` Name or array of rule names to enable
	 * @param  {Boolean} `strict` If `true`, all non listed rules will be disabled.
	 * @api private
	 */

	Ruler.prototype.enable = function (list, strict) {
	  list = !Array.isArray(list)
	    ? [ list ]
	    : list;

	  // In strict mode disable all existing rules first
	  if (strict) {
	    this.__rules__.forEach(function (rule) {
	      rule.enabled = false;
	    });
	  }

	  // Search by name and enable
	  list.forEach(function (name) {
	    var idx = this.__find__(name);
	    if (idx < 0) {
	      throw new Error('Rules manager: invalid rule name ' + name);
	    }
	    this.__rules__[idx].enabled = true;
	  }, this);

	  this.__cache__ = null;
	};


	/**
	 * Disable a rule or list of rules.
	 *
	 * @param  {String|Array} `list` Name or array of rule names to disable
	 * @api private
	 */

	Ruler.prototype.disable = function (list) {
	  list = !Array.isArray(list)
	    ? [ list ]
	    : list;

	  // Search by name and disable
	  list.forEach(function (name) {
	    var idx = this.__find__(name);
	    if (idx < 0) {
	      throw new Error('Rules manager: invalid rule name ' + name);
	    }
	    this.__rules__[idx].enabled = false;
	  }, this);

	  this.__cache__ = null;
	};

	/**
	 * Get a rules list as an array of functions.
	 *
	 * @param  {String} `chainName`
	 * @return {Object}
	 * @api private
	 */

	Ruler.prototype.getRules = function (chainName) {
	  if (this.__cache__ === null) {
	    this.__compile__();
	  }
	  return this.__cache__[chainName];
	};

	/**
	 * Expose `Ruler`
	 */

	module.exports = Ruler;


/***/ },
/* 473 */
/***/ function(module, exports) {

	'use strict';

	module.exports = function block(state) {

	  if (state.inlineMode) {
	    state.tokens.push({
	      type: 'inline',
	      content: state.src.replace(/\n/g, ' ').trim(),
	      level: 0,
	      lines: [ 0, 1 ],
	      children: []
	    });

	  } else {
	    state.block.parse(state.src, state.options, state.env, state.tokens);
	  }
	};


/***/ },
/* 474 */
/***/ function(module, exports, __webpack_require__) {

	// Parse abbreviation definitions, i.e. `*[abbr]: description`
	//

	'use strict';


	var StateInline    = __webpack_require__(475);
	var parseLinkLabel = __webpack_require__(476);


	function parseAbbr(str, parserInline, options, env) {
	  var state, labelEnd, pos, max, label, title;

	  if (str.charCodeAt(0) !== 0x2A/* * */) { return -1; }
	  if (str.charCodeAt(1) !== 0x5B/* [ */) { return -1; }

	  if (str.indexOf(']:') === -1) { return -1; }

	  state = new StateInline(str, parserInline, options, env, []);
	  labelEnd = parseLinkLabel(state, 1);

	  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return -1; }

	  max = state.posMax;

	  // abbr title is always one line, so looking for ending "\n" here
	  for (pos = labelEnd + 2; pos < max; pos++) {
	    if (state.src.charCodeAt(pos) === 0x0A) { break; }
	  }

	  label = str.slice(2, labelEnd);
	  title = str.slice(labelEnd + 2, pos).trim();
	  if (title.length === 0) { return -1; }
	  if (!env.abbreviations) { env.abbreviations = {}; }
	  // prepend ':' to avoid conflict with Object.prototype members
	  if (typeof env.abbreviations[':' + label] === 'undefined') {
	    env.abbreviations[':' + label] = title;
	  }

	  return pos;
	}

	module.exports = function abbr(state) {
	  var tokens = state.tokens, i, l, content, pos;

	  if (state.inlineMode) {
	    return;
	  }

	  // Parse inlines
	  for (i = 1, l = tokens.length - 1; i < l; i++) {
	    if (tokens[i - 1].type === 'paragraph_open' &&
	        tokens[i].type === 'inline' &&
	        tokens[i + 1].type === 'paragraph_close') {

	      content = tokens[i].content;
	      while (content.length) {
	        pos = parseAbbr(content, state.inline, state.options, state.env);
	        if (pos < 0) { break; }
	        content = content.slice(pos).trim();
	      }

	      tokens[i].content = content;
	      if (!content.length) {
	        tokens[i - 1].tight = true;
	        tokens[i + 1].tight = true;
	      }
	    }
	  }
	};


/***/ },
/* 475 */
/***/ function(module, exports) {

	// Inline parser state

	'use strict';


	function StateInline(src, parserInline, options, env, outTokens) {
	  this.src = src;
	  this.env = env;
	  this.options = options;
	  this.parser = parserInline;
	  this.tokens = outTokens;
	  this.pos = 0;
	  this.posMax = this.src.length;
	  this.level = 0;
	  this.pending = '';
	  this.pendingLevel = 0;

	  this.cache = [];        // Stores { start: end } pairs. Useful for backtrack
	                          // optimization of pairs parse (emphasis, strikes).

	  // Link parser state vars

	  this.isInLabel = false; // Set true when seek link label - we should disable
	                          // "paired" rules (emphasis, strikes) to not skip
	                          // tailing `]`

	  this.linkLevel = 0;     // Increment for each nesting link. Used to prevent
	                          // nesting in definitions

	  this.linkContent = '';  // Temporary storage for link url

	  this.labelUnmatchedScopes = 0; // Track unpaired `[` for link labels
	                                 // (backtrack optimization)
	}


	// Flush pending text
	//
	StateInline.prototype.pushPending = function () {
	  this.tokens.push({
	    type: 'text',
	    content: this.pending,
	    level: this.pendingLevel
	  });
	  this.pending = '';
	};


	// Push new token to "stream".
	// If pending text exists - flush it as text token
	//
	StateInline.prototype.push = function (token) {
	  if (this.pending) {
	    this.pushPending();
	  }

	  this.tokens.push(token);
	  this.pendingLevel = this.level;
	};


	// Store value to cache.
	// !!! Implementation has parser-specific optimizations
	// !!! keys MUST be integer, >= 0; values MUST be integer, > 0
	//
	StateInline.prototype.cacheSet = function (key, val) {
	  for (var i = this.cache.length; i <= key; i++) {
	    this.cache.push(0);
	  }

	  this.cache[key] = val;
	};


	// Get cache value
	//
	StateInline.prototype.cacheGet = function (key) {
	  return key < this.cache.length ? this.cache[key] : 0;
	};


	module.exports = StateInline;


/***/ },
/* 476 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * Parse link labels
	 *
	 * This function assumes that first character (`[`) already matches;
	 * returns the end of the label.
	 *
	 * @param  {Object} state
	 * @param  {Number} start
	 * @api private
	 */

	module.exports = function parseLinkLabel(state, start) {
	  var level, found, marker,
	      labelEnd = -1,
	      max = state.posMax,
	      oldPos = state.pos,
	      oldFlag = state.isInLabel;

	  if (state.isInLabel) { return -1; }

	  if (state.labelUnmatchedScopes) {
	    state.labelUnmatchedScopes--;
	    return -1;
	  }

	  state.pos = start + 1;
	  state.isInLabel = true;
	  level = 1;

	  while (state.pos < max) {
	    marker = state.src.charCodeAt(state.pos);
	    if (marker === 0x5B /* [ */) {
	      level++;
	    } else if (marker === 0x5D /* ] */) {
	      level--;
	      if (level === 0) {
	        found = true;
	        break;
	      }
	    }

	    state.parser.skipToken(state);
	  }

	  if (found) {
	    labelEnd = state.pos;
	    state.labelUnmatchedScopes = 0;
	  } else {
	    state.labelUnmatchedScopes = level - 1;
	  }

	  // restore old state
	  state.pos = oldPos;
	  state.isInLabel = oldFlag;

	  return labelEnd;
	};


/***/ },
/* 477 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';


	var StateInline          = __webpack_require__(475);
	var parseLinkLabel       = __webpack_require__(476);
	var parseLinkDestination = __webpack_require__(478);
	var parseLinkTitle       = __webpack_require__(480);
	var normalizeReference   = __webpack_require__(481);


	function parseReference(str, parser, options, env) {
	  var state, labelEnd, pos, max, code, start, href, title, label;

	  if (str.charCodeAt(0) !== 0x5B/* [ */) { return -1; }

	  if (str.indexOf(']:') === -1) { return -1; }

	  state = new StateInline(str, parser, options, env, []);
	  labelEnd = parseLinkLabel(state, 0);

	  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return -1; }

	  max = state.posMax;

	  // [label]:   destination   'title'
	  //         ^^^ skip optional whitespace here
	  for (pos = labelEnd + 2; pos < max; pos++) {
	    code = state.src.charCodeAt(pos);
	    if (code !== 0x20 && code !== 0x0A) { break; }
	  }

	  // [label]:   destination   'title'
	  //            ^^^^^^^^^^^ parse this
	  if (!parseLinkDestination(state, pos)) { return -1; }
	  href = state.linkContent;
	  pos = state.pos;

	  // [label]:   destination   'title'
	  //                       ^^^ skipping those spaces
	  start = pos;
	  for (pos = pos + 1; pos < max; pos++) {
	    code = state.src.charCodeAt(pos);
	    if (code !== 0x20 && code !== 0x0A) { break; }
	  }

	  // [label]:   destination   'title'
	  //                          ^^^^^^^ parse this
	  if (pos < max && start !== pos && parseLinkTitle(state, pos)) {
	    title = state.linkContent;
	    pos = state.pos;
	  } else {
	    title = '';
	    pos = start;
	  }

	  // ensure that the end of the line is empty
	  while (pos < max && state.src.charCodeAt(pos) === 0x20/* space */) { pos++; }
	  if (pos < max && state.src.charCodeAt(pos) !== 0x0A) { return -1; }

	  label = normalizeReference(str.slice(1, labelEnd));
	  if (typeof env.references[label] === 'undefined') {
	    env.references[label] = { title: title, href: href };
	  }

	  return pos;
	}


	module.exports = function references(state) {
	  var tokens = state.tokens, i, l, content, pos;

	  state.env.references = state.env.references || {};

	  if (state.inlineMode) {
	    return;
	  }

	  // Scan definitions in paragraph inlines
	  for (i = 1, l = tokens.length - 1; i < l; i++) {
	    if (tokens[i].type === 'inline' &&
	        tokens[i - 1].type === 'paragraph_open' &&
	        tokens[i + 1].type === 'paragraph_close') {

	      content = tokens[i].content;
	      while (content.length) {
	        pos = parseReference(content, state.inline, state.options, state.env);
	        if (pos < 0) { break; }
	        content = content.slice(pos).trim();
	      }

	      tokens[i].content = content;
	      if (!content.length) {
	        tokens[i - 1].tight = true;
	        tokens[i + 1].tight = true;
	      }
	    }
	  }
	};


/***/ },
/* 478 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';


	var normalizeLink = __webpack_require__(479);
	var unescapeMd    = __webpack_require__(467).unescapeMd;

	/**
	 * Parse link destination
	 *
	 *   - on success it returns a string and updates state.pos;
	 *   - on failure it returns null
	 *
	 * @param  {Object} state
	 * @param  {Number} pos
	 * @api private
	 */

	module.exports = function parseLinkDestination(state, pos) {
	  var code, level, link,
	      start = pos,
	      max = state.posMax;

	  if (state.src.charCodeAt(pos) === 0x3C /* < */) {
	    pos++;
	    while (pos < max) {
	      code = state.src.charCodeAt(pos);
	      if (code === 0x0A /* \n */) { return false; }
	      if (code === 0x3E /* > */) {
	        link = normalizeLink(unescapeMd(state.src.slice(start + 1, pos)));
	        if (!state.parser.validateLink(link)) { return false; }
	        state.pos = pos + 1;
	        state.linkContent = link;
	        return true;
	      }
	      if (code === 0x5C /* \ */ && pos + 1 < max) {
	        pos += 2;
	        continue;
	      }

	      pos++;
	    }

	    // no closing '>'
	    return false;
	  }

	  // this should be ... } else { ... branch

	  level = 0;
	  while (pos < max) {
	    code = state.src.charCodeAt(pos);

	    if (code === 0x20) { break; }

	    // ascii control characters
	    if (code < 0x20 || code === 0x7F) { break; }

	    if (code === 0x5C /* \ */ && pos + 1 < max) {
	      pos += 2;
	      continue;
	    }

	    if (code === 0x28 /* ( */) {
	      level++;
	      if (level > 1) { break; }
	    }

	    if (code === 0x29 /* ) */) {
	      level--;
	      if (level < 0) { break; }
	    }

	    pos++;
	  }

	  if (start === pos) { return false; }

	  link = normalizeLink(unescapeMd(state.src.slice(start, pos)));
	  if (!state.parser.validateLink(link)) { return false; }

	  state.linkContent = link;
	  state.pos = pos;
	  return true;
	};


/***/ },
/* 479 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var replaceEntities = __webpack_require__(467).replaceEntities;

	module.exports = function normalizeLink(url) {
	  var normalized = replaceEntities(url);
	  // We shouldn't care about the result of malformed URIs,
	  // and should not throw an exception.
	  try {
	    normalized = decodeURI(normalized);
	  } catch (err) {}
	  return encodeURI(normalized);
	};


/***/ },
/* 480 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';


	var unescapeMd = __webpack_require__(467).unescapeMd;

	/**
	 * Parse link title
	 *
	 *   - on success it returns a string and updates state.pos;
	 *   - on failure it returns null
	 *
	 * @param  {Object} state
	 * @param  {Number} pos
	 * @api private
	 */

	module.exports = function parseLinkTitle(state, pos) {
	  var code,
	      start = pos,
	      max = state.posMax,
	      marker = state.src.charCodeAt(pos);

	  if (marker !== 0x22 /* " */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return false; }

	  pos++;

	  // if opening marker is "(", switch it to closing marker ")"
	  if (marker === 0x28) { marker = 0x29; }

	  while (pos < max) {
	    code = state.src.charCodeAt(pos);
	    if (code === marker) {
	      state.pos = pos + 1;
	      state.linkContent = unescapeMd(state.src.slice(start + 1, pos));
	      return true;
	    }
	    if (code === 0x5C /* \ */ && pos + 1 < max) {
	      pos += 2;
	      continue;
	    }

	    pos++;
	  }

	  return false;
	};


/***/ },
/* 481 */
/***/ function(module, exports) {

	'use strict';

	module.exports = function normalizeReference(str) {
	  // use .toUpperCase() instead of .toLowerCase()
	  // here to avoid a conflict with Object.prototype
	  // members (most notably, `__proto__`)
	  return str.trim().replace(/\s+/g, ' ').toUpperCase();
	};


/***/ },
/* 482 */
/***/ function(module, exports) {

	'use strict';

	module.exports = function inline(state) {
	  var tokens = state.tokens, tok, i, l;

	  // Parse inlines
	  for (i = 0, l = tokens.length; i < l; i++) {
	    tok = tokens[i];
	    if (tok.type === 'inline') {
	      state.inline.parse(tok.content, state.options, state.env, tok.children);
	    }
	  }
	};


/***/ },
/* 483 */
/***/ function(module, exports) {

	'use strict';


	module.exports = function footnote_block(state) {
	  var i, l, j, t, lastParagraph, list, tokens, current, currentLabel,
	      level = 0,
	      insideRef = false,
	      refTokens = {};

	  if (!state.env.footnotes) { return; }

	  state.tokens = state.tokens.filter(function(tok) {
	    if (tok.type === 'footnote_reference_open') {
	      insideRef = true;
	      current = [];
	      currentLabel = tok.label;
	      return false;
	    }
	    if (tok.type === 'footnote_reference_close') {
	      insideRef = false;
	      // prepend ':' to avoid conflict with Object.prototype members
	      refTokens[':' + currentLabel] = current;
	      return false;
	    }
	    if (insideRef) { current.push(tok); }
	    return !insideRef;
	  });

	  if (!state.env.footnotes.list) { return; }
	  list = state.env.footnotes.list;

	  state.tokens.push({
	    type: 'footnote_block_open',
	    level: level++
	  });
	  for (i = 0, l = list.length; i < l; i++) {
	    state.tokens.push({
	      type: 'footnote_open',
	      id: i,
	      level: level++
	    });

	    if (list[i].tokens) {
	      tokens = [];
	      tokens.push({
	        type: 'paragraph_open',
	        tight: false,
	        level: level++
	      });
	      tokens.push({
	        type: 'inline',
	        content: '',
	        level: level,
	        children: list[i].tokens
	      });
	      tokens.push({
	        type: 'paragraph_close',
	        tight: false,
	        level: --level
	      });
	    } else if (list[i].label) {
	      tokens = refTokens[':' + list[i].label];
	    }

	    state.tokens = state.tokens.concat(tokens);
	    if (state.tokens[state.tokens.length - 1].type === 'paragraph_close') {
	      lastParagraph = state.tokens.pop();
	    } else {
	      lastParagraph = null;
	    }

	    t = list[i].count > 0 ? list[i].count : 1;
	    for (j = 0; j < t; j++) {
	      state.tokens.push({
	        type: 'footnote_anchor',
	        id: i,
	        subId: j,
	        level: level
	      });
	    }

	    if (lastParagraph) {
	      state.tokens.push(lastParagraph);
	    }

	    state.tokens.push({
	      type: 'footnote_close',
	      level: --level
	    });
	  }
	  state.tokens.push({
	    type: 'footnote_block_close',
	    level: --level
	  });
	};


/***/ },
/* 484 */
/***/ function(module, exports) {

	// Enclose abbreviations in <abbr> tags
	//
	'use strict';


	var PUNCT_CHARS = ' \n()[]\'".,!?-';


	// from Google closure library
	// http://closure-library.googlecode.com/git-history/docs/local_closure_goog_string_string.js.source.html#line1021
	function regEscape(s) {
	  return s.replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, '\\$1');
	}


	module.exports = function abbr2(state) {
	  var i, j, l, tokens, token, text, nodes, pos, level, reg, m, regText,
	      blockTokens = state.tokens;

	  if (!state.env.abbreviations) { return; }
	  if (!state.env.abbrRegExp) {
	    regText = '(^|[' + PUNCT_CHARS.split('').map(regEscape).join('') + '])'
	            + '(' + Object.keys(state.env.abbreviations).map(function (x) {
	                      return x.substr(1);
	                    }).sort(function (a, b) {
	                      return b.length - a.length;
	                    }).map(regEscape).join('|') + ')'
	            + '($|[' + PUNCT_CHARS.split('').map(regEscape).join('') + '])';
	    state.env.abbrRegExp = new RegExp(regText, 'g');
	  }
	  reg = state.env.abbrRegExp;

	  for (j = 0, l = blockTokens.length; j < l; j++) {
	    if (blockTokens[j].type !== 'inline') { continue; }
	    tokens = blockTokens[j].children;

	    // We scan from the end, to keep position when new tags added.
	    for (i = tokens.length - 1; i >= 0; i--) {
	      token = tokens[i];
	      if (token.type !== 'text') { continue; }

	      pos = 0;
	      text = token.content;
	      reg.lastIndex = 0;
	      level = token.level;
	      nodes = [];

	      while ((m = reg.exec(text))) {
	        if (reg.lastIndex > pos) {
	          nodes.push({
	            type: 'text',
	            content: text.slice(pos, m.index + m[1].length),
	            level: level
	          });
	        }

	        nodes.push({
	          type: 'abbr_open',
	          title: state.env.abbreviations[':' + m[2]],
	          level: level++
	        });
	        nodes.push({
	          type: 'text',
	          content: m[2],
	          level: level
	        });
	        nodes.push({
	          type: 'abbr_close',
	          level: --level
	        });
	        pos = reg.lastIndex - m[3].length;
	      }

	      if (!nodes.length) { continue; }

	      if (pos < text.length) {
	        nodes.push({
	          type: 'text',
	          content: text.slice(pos),
	          level: level
	        });
	      }

	      // replace current node
	      blockTokens[j].children = tokens = [].concat(tokens.slice(0, i), nodes, tokens.slice(i + 1));
	    }
	  }
	};


/***/ },
/* 485 */
/***/ function(module, exports) {

	// Simple typographical replacements
	//
	'use strict';

	// TODO:
	// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾
	// - miltiplication 2 x 4 -> 2 × 4

	var RARE_RE = /\+-|\.\.|\?\?\?\?|!!!!|,,|--/;

	var SCOPED_ABBR_RE = /\((c|tm|r|p)\)/ig;
	var SCOPED_ABBR = {
	  'c': '©',
	  'r': '®',
	  'p': '§',
	  'tm': '™'
	};

	function replaceScopedAbbr(str) {
	  if (str.indexOf('(') < 0) { return str; }

	  return str.replace(SCOPED_ABBR_RE, function(match, name) {
	    return SCOPED_ABBR[name.toLowerCase()];
	  });
	}


	module.exports = function replace(state) {
	  var i, token, text, inlineTokens, blkIdx;

	  if (!state.options.typographer) { return; }

	  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {

	    if (state.tokens[blkIdx].type !== 'inline') { continue; }

	    inlineTokens = state.tokens[blkIdx].children;

	    for (i = inlineTokens.length - 1; i >= 0; i--) {
	      token = inlineTokens[i];
	      if (token.type === 'text') {
	        text = token.content;

	        text = replaceScopedAbbr(text);

	        if (RARE_RE.test(text)) {
	          text = text
	            .replace(/\+-/g, '±')
	            // .., ..., ....... -> …
	            // but ?..... & !..... -> ?.. & !..
	            .replace(/\.{2,}/g, '…').replace(/([?!])…/g, '$1..')
	            .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')
	            // em-dash
	            .replace(/(^|[^-])---([^-]|$)/mg, '$1\u2014$2')
	            // en-dash
	            .replace(/(^|\s)--(\s|$)/mg, '$1\u2013$2')
	            .replace(/(^|[^-\s])--([^-\s]|$)/mg, '$1\u2013$2');
	        }

	        token.content = text;
	      }
	    }
	  }
	};


/***/ },
/* 486 */
/***/ function(module, exports) {

	// Convert straight quotation marks to typographic ones
	//
	'use strict';


	var QUOTE_TEST_RE = /['"]/;
	var QUOTE_RE = /['"]/g;
	var PUNCT_RE = /[-\s()\[\]]/;
	var APOSTROPHE = '’';

	// This function returns true if the character at `pos`
	// could be inside a word.
	function isLetter(str, pos) {
	  if (pos < 0 || pos >= str.length) { return false; }
	  return !PUNCT_RE.test(str[pos]);
	}


	function replaceAt(str, index, ch) {
	  return str.substr(0, index) + ch + str.substr(index + 1);
	}


	module.exports = function smartquotes(state) {
	  /*eslint max-depth:0*/
	  var i, token, text, t, pos, max, thisLevel, lastSpace, nextSpace, item,
	      canOpen, canClose, j, isSingle, blkIdx, tokens,
	      stack;

	  if (!state.options.typographer) { return; }

	  stack = [];

	  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {

	    if (state.tokens[blkIdx].type !== 'inline') { continue; }

	    tokens = state.tokens[blkIdx].children;
	    stack.length = 0;

	    for (i = 0; i < tokens.length; i++) {
	      token = tokens[i];

	      if (token.type !== 'text' || QUOTE_TEST_RE.test(token.text)) { continue; }

	      thisLevel = tokens[i].level;

	      for (j = stack.length - 1; j >= 0; j--) {
	        if (stack[j].level <= thisLevel) { break; }
	      }
	      stack.length = j + 1;

	      text = token.content;
	      pos = 0;
	      max = text.length;

	      /*eslint no-labels:0,block-scoped-var:0*/
	      OUTER:
	      while (pos < max) {
	        QUOTE_RE.lastIndex = pos;
	        t = QUOTE_RE.exec(text);
	        if (!t) { break; }

	        lastSpace = !isLetter(text, t.index - 1);
	        pos = t.index + 1;
	        isSingle = (t[0] === "'");
	        nextSpace = !isLetter(text, pos);

	        if (!nextSpace && !lastSpace) {
	          // middle of word
	          if (isSingle) {
	            token.content = replaceAt(token.content, t.index, APOSTROPHE);
	          }
	          continue;
	        }

	        canOpen = !nextSpace;
	        canClose = !lastSpace;

	        if (canClose) {
	          // this could be a closing quote, rewind the stack to get a match
	          for (j = stack.length - 1; j >= 0; j--) {
	            item = stack[j];
	            if (stack[j].level < thisLevel) { break; }
	            if (item.single === isSingle && stack[j].level === thisLevel) {
	              item = stack[j];
	              if (isSingle) {
	                tokens[item.token].content = replaceAt(tokens[item.token].content, item.pos, state.options.quotes[2]);
	                token.content = replaceAt(token.content, t.index, state.options.quotes[3]);
	              } else {
	                tokens[item.token].content = replaceAt(tokens[item.token].content, item.pos, state.options.quotes[0]);
	                token.content = replaceAt(token.content, t.index, state.options.quotes[1]);
	              }
	              stack.length = j;
	              continue OUTER;
	            }
	          }
	        }

	        if (canOpen) {
	          stack.push({
	            token: i,
	            pos: t.index,
	            single: isSingle,
	            level: thisLevel
	          });
	        } else if (canClose && isSingle) {
	          token.content = replaceAt(token.content, t.index, APOSTROPHE);
	        }
	      }
	    }
	  }
	};


/***/ },
/* 487 */
/***/ function(module, exports, __webpack_require__) {

	// Replace link-like texts with link nodes.
	//
	// Currently restricted by `inline.validateLink()` to http/https/ftp
	//
	'use strict';


	var Autolinker = __webpack_require__(488);


	var LINK_SCAN_RE = /www|@|\:\/\//;


	function isLinkOpen(str) {
	  return /^<a[>\s]/i.test(str);
	}
	function isLinkClose(str) {
	  return /^<\/a\s*>/i.test(str);
	}

	// Stupid fabric to avoid singletons, for thread safety.
	// Required for engines like Nashorn.
	//
	function createLinkifier() {
	  var links = [];
	  var autolinker = new Autolinker({
	    stripPrefix: false,
	    url: true,
	    email: true,
	    twitter: false,
	    replaceFn: function (autolinker, match) {
	      // Only collect matched strings but don't change anything.
	      switch (match.getType()) {
	        /*eslint default-case:0*/
	        case 'url':
	          links.push({
	            text: match.matchedText,
	            url: match.getUrl()
	          });
	          break;
	        case 'email':
	          links.push({
	            text: match.matchedText,
	            // normalize email protocol
	            url: 'mailto:' + match.getEmail().replace(/^mailto:/i, '')
	          });
	          break;
	      }
	      return false;
	    }
	  });

	  return {
	    links: links,
	    autolinker: autolinker
	  };
	}


	module.exports = function linkify(state) {
	  var i, j, l, tokens, token, text, nodes, ln, pos, level, htmlLinkLevel,
	      blockTokens = state.tokens,
	      linkifier = null, links, autolinker;

	  if (!state.options.linkify) { return; }

	  for (j = 0, l = blockTokens.length; j < l; j++) {
	    if (blockTokens[j].type !== 'inline') { continue; }
	    tokens = blockTokens[j].children;

	    htmlLinkLevel = 0;

	    // We scan from the end, to keep position when new tags added.
	    // Use reversed logic in links start/end match
	    for (i = tokens.length - 1; i >= 0; i--) {
	      token = tokens[i];

	      // Skip content of markdown links
	      if (token.type === 'link_close') {
	        i--;
	        while (tokens[i].level !== token.level && tokens[i].type !== 'link_open') {
	          i--;
	        }
	        continue;
	      }

	      // Skip content of html tag links
	      if (token.type === 'htmltag') {
	        if (isLinkOpen(token.content) && htmlLinkLevel > 0) {
	          htmlLinkLevel--;
	        }
	        if (isLinkClose(token.content)) {
	          htmlLinkLevel++;
	        }
	      }
	      if (htmlLinkLevel > 0) { continue; }

	      if (token.type === 'text' && LINK_SCAN_RE.test(token.content)) {

	        // Init linkifier in lazy manner, only if required.
	        if (!linkifier) {
	          linkifier = createLinkifier();
	          links = linkifier.links;
	          autolinker = linkifier.autolinker;
	        }

	        text = token.content;
	        links.length = 0;
	        autolinker.link(text);

	        if (!links.length) { continue; }

	        // Now split string to nodes
	        nodes = [];
	        level = token.level;

	        for (ln = 0; ln < links.length; ln++) {

	          if (!state.inline.validateLink(links[ln].url)) { continue; }

	          pos = text.indexOf(links[ln].text);

	          if (pos) {
	            level = level;
	            nodes.push({
	              type: 'text',
	              content: text.slice(0, pos),
	              level: level
	            });
	          }
	          nodes.push({
	            type: 'link_open',
	            href: links[ln].url,
	            title: '',
	            level: level++
	          });
	          nodes.push({
	            type: 'text',
	            content: links[ln].text,
	            level: level
	          });
	          nodes.push({
	            type: 'link_close',
	            level: --level
	          });
	          text = text.slice(pos + links[ln].text.length);
	        }
	        if (text.length) {
	          nodes.push({
	            type: 'text',
	            content: text,
	            level: level
	          });
	        }

	        // replace current node
	        blockTokens[j].children = tokens = [].concat(tokens.slice(0, i), nodes, tokens.slice(i + 1));
	      }
	    }
	  }
	};


/***/ },
/* 488 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {
	  if (true) {
	    // AMD. Register as an anonymous module unless amdModuleId is set
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
	      return (root['Autolinker'] = factory());
	    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if (typeof exports === 'object') {
	    // Node. Does not work with strict CommonJS, but
	    // only CommonJS-like environments that support module.exports,
	    // like Node.
	    module.exports = factory();
	  } else {
	    root['Autolinker'] = factory();
	  }
	}(this, function () {

	/*!
	 * Autolinker.js
	 * 0.15.3
	 *
	 * Copyright(c) 2015 Gregory Jacobs <greg@greg-jacobs.com>
	 * MIT Licensed. http://www.opensource.org/licenses/mit-license.php
	 *
	 * https://github.com/gregjacobs/Autolinker.js
	 */
	/**
	 * @class Autolinker
	 * @extends Object
	 * 
	 * Utility class used to process a given string of text, and wrap the URLs, email addresses, and Twitter handles in 
	 * the appropriate anchor (&lt;a&gt;) tags to turn them into links.
	 * 
	 * Any of the configuration options may be provided in an Object (map) provided to the Autolinker constructor, which
	 * will configure how the {@link #link link()} method will process the links.
	 * 
	 * For example:
	 * 
	 *     var autolinker = new Autolinker( {
	 *         newWindow : false,
	 *         truncate  : 30
	 *     } );
	 *     
	 *     var html = autolinker.link( "Joe went to www.yahoo.com" );
	 *     // produces: 'Joe went to <a href="http://www.yahoo.com">yahoo.com</a>'
	 * 
	 * 
	 * The {@link #static-link static link()} method may also be used to inline options into a single call, which may
	 * be more convenient for one-off uses. For example:
	 * 
	 *     var html = Autolinker.link( "Joe went to www.yahoo.com", {
	 *         newWindow : false,
	 *         truncate  : 30
	 *     } );
	 *     // produces: 'Joe went to <a href="http://www.yahoo.com">yahoo.com</a>'
	 * 
	 * 
	 * ## Custom Replacements of Links
	 * 
	 * If the configuration options do not provide enough flexibility, a {@link #replaceFn} may be provided to fully customize
	 * the output of Autolinker. This function is called once for each URL/Email/Twitter handle match that is encountered.
	 * 
	 * For example:
	 * 
	 *     var input = "...";  // string with URLs, Email Addresses, and Twitter Handles
	 *     
	 *     var linkedText = Autolinker.link( input, {
	 *         replaceFn : function( autolinker, match ) {
	 *             console.log( "href = ", match.getAnchorHref() );
	 *             console.log( "text = ", match.getAnchorText() );
	 *         
	 *             switch( match.getType() ) {
	 *                 case 'url' : 
	 *                     console.log( "url: ", match.getUrl() );
	 *                     
	 *                     if( match.getUrl().indexOf( 'mysite.com' ) === -1 ) {
	 *                         var tag = autolinker.getTagBuilder().build( match );  // returns an `Autolinker.HtmlTag` instance, which provides mutator methods for easy changes
	 *                         tag.setAttr( 'rel', 'nofollow' );
	 *                         tag.addClass( 'external-link' );
	 *                         
	 *                         return tag;
	 *                         
	 *                     } else {
	 *                         return true;  // let Autolinker perform its normal anchor tag replacement
	 *                     }
	 *                     
	 *                 case 'email' :
	 *                     var email = match.getEmail();
	 *                     console.log( "email: ", email );
	 *                     
	 *                     if( email === "my@own.address" ) {
	 *                         return false;  // don't auto-link this particular email address; leave as-is
	 *                     } else {
	 *                         return;  // no return value will have Autolinker perform its normal anchor tag replacement (same as returning `true`)
	 *                     }
	 *                 
	 *                 case 'twitter' :
	 *                     var twitterHandle = match.getTwitterHandle();
	 *                     console.log( twitterHandle );
	 *                     
	 *                     return '<a href="http://newplace.to.link.twitter.handles.to/">' + twitterHandle + '</a>';
	 *             }
	 *         }
	 *     } );
	 * 
	 * 
	 * The function may return the following values:
	 * 
	 * - `true` (Boolean): Allow Autolinker to replace the match as it normally would.
	 * - `false` (Boolean): Do not replace the current match at all - leave as-is.
	 * - Any String: If a string is returned from the function, the string will be used directly as the replacement HTML for
	 *   the match.
	 * - An {@link Autolinker.HtmlTag} instance, which can be used to build/modify an HTML tag before writing out its HTML text.
	 * 
	 * @constructor
	 * @param {Object} [config] The configuration options for the Autolinker instance, specified in an Object (map).
	 */
	var Autolinker = function( cfg ) {
		Autolinker.Util.assign( this, cfg );  // assign the properties of `cfg` onto the Autolinker instance. Prototype properties will be used for missing configs.
	};


	Autolinker.prototype = {
		constructor : Autolinker,  // fix constructor property
		
		/**
		 * @cfg {Boolean} urls
		 * 
		 * `true` if miscellaneous URLs should be automatically linked, `false` if they should not be.
		 */
		urls : true,
		
		/**
		 * @cfg {Boolean} email
		 * 
		 * `true` if email addresses should be automatically linked, `false` if they should not be.
		 */
		email : true,
		
		/**
		 * @cfg {Boolean} twitter
		 * 
		 * `true` if Twitter handles ("@example") should be automatically linked, `false` if they should not be.
		 */
		twitter : true,
		
		/**
		 * @cfg {Boolean} newWindow
		 * 
		 * `true` if the links should open in a new window, `false` otherwise.
		 */
		newWindow : true,
		
		/**
		 * @cfg {Boolean} stripPrefix
		 * 
		 * `true` if 'http://' or 'https://' and/or the 'www.' should be stripped from the beginning of URL links' text, 
		 * `false` otherwise.
		 */
		stripPrefix : true,
		
		/**
		 * @cfg {Number} truncate
		 * 
		 * A number for how many characters long URLs/emails/twitter handles should be truncated to inside the text of 
		 * a link. If the URL/email/twitter is over this number of characters, it will be truncated to this length by 
		 * adding a two period ellipsis ('..') to the end of the string.
		 * 
		 * For example: A url like 'http://www.yahoo.com/some/long/path/to/a/file' truncated to 25 characters might look
		 * something like this: 'yahoo.com/some/long/pat..'
		 */
		truncate : undefined,
		
		/**
		 * @cfg {String} className
		 * 
		 * A CSS class name to add to the generated links. This class will be added to all links, as well as this class
		 * plus url/email/twitter suffixes for styling url/email/twitter links differently.
		 * 
		 * For example, if this config is provided as "myLink", then:
		 * 
		 * - URL links will have the CSS classes: "myLink myLink-url"
		 * - Email links will have the CSS classes: "myLink myLink-email", and
		 * - Twitter links will have the CSS classes: "myLink myLink-twitter"
		 */
		className : "",
		
		/**
		 * @cfg {Function} replaceFn
		 * 
		 * A function to individually process each URL/Email/Twitter match found in the input string.
		 * 
		 * See the class's description for usage.
		 * 
		 * This function is called with the following parameters:
		 * 
		 * @cfg {Autolinker} replaceFn.autolinker The Autolinker instance, which may be used to retrieve child objects from (such
		 *   as the instance's {@link #getTagBuilder tag builder}).
		 * @cfg {Autolinker.match.Match} replaceFn.match The Match instance which can be used to retrieve information about the
		 *   {@link Autolinker.match.Url URL}/{@link Autolinker.match.Email email}/{@link Autolinker.match.Twitter Twitter}
		 *   match that the `replaceFn` is currently processing.
		 */
		
		
		/**
		 * @private
		 * @property {Autolinker.htmlParser.HtmlParser} htmlParser
		 * 
		 * The HtmlParser instance used to skip over HTML tags, while finding text nodes to process. This is lazily instantiated
		 * in the {@link #getHtmlParser} method.
		 */
		htmlParser : undefined,
		
		/**
		 * @private
		 * @property {Autolinker.matchParser.MatchParser} matchParser
		 * 
		 * The MatchParser instance used to find URL/email/Twitter matches in the text nodes of an input string passed to
		 * {@link #link}. This is lazily instantiated in the {@link #getMatchParser} method.
		 */
		matchParser : undefined,
		
		/**
		 * @private
		 * @property {Autolinker.AnchorTagBuilder} tagBuilder
		 * 
		 * The AnchorTagBuilder instance used to build the URL/email/Twitter replacement anchor tags. This is lazily instantiated
		 * in the {@link #getTagBuilder} method.
		 */
		tagBuilder : undefined,
		
		
		/**
		 * Automatically links URLs, email addresses, and Twitter handles found in the given chunk of HTML. 
		 * Does not link URLs found within HTML tags.
		 * 
		 * For instance, if given the text: `You should go to http://www.yahoo.com`, then the result
		 * will be `You should go to &lt;a href="http://www.yahoo.com"&gt;http://www.yahoo.com&lt;/a&gt;`
		 * 
		 * This method finds the text around any HTML elements in the input `textOrHtml`, which will be the text that is processed.
		 * Any original HTML elements will be left as-is, as well as the text that is already wrapped in anchor (&lt;a&gt;) tags.
		 * 
		 * @param {String} textOrHtml The HTML or text to link URLs, email addresses, and Twitter handles within (depending on if
		 *   the {@link #urls}, {@link #email}, and {@link #twitter} options are enabled).
		 * @return {String} The HTML, with URLs/emails/Twitter handles automatically linked.
		 */
		link : function( textOrHtml ) {
			var htmlParser = this.getHtmlParser(),
			    htmlNodes = htmlParser.parse( textOrHtml ),
			    anchorTagStackCount = 0,  // used to only process text around anchor tags, and any inner text/html they may have
			    resultHtml = [];
			
			for( var i = 0, len = htmlNodes.length; i < len; i++ ) {
				var node = htmlNodes[ i ],
				    nodeType = node.getType(),
				    nodeText = node.getText();
				
				if( nodeType === 'element' ) {
					// Process HTML nodes in the input `textOrHtml`
					if( node.getTagName() === 'a' ) {
						if( !node.isClosing() ) {  // it's the start <a> tag
							anchorTagStackCount++;
						} else {   // it's the end </a> tag
							anchorTagStackCount = Math.max( anchorTagStackCount - 1, 0 );  // attempt to handle extraneous </a> tags by making sure the stack count never goes below 0
						}
					}
					resultHtml.push( nodeText );  // now add the text of the tag itself verbatim
					
				} else if( nodeType === 'entity' ) {
					resultHtml.push( nodeText );  // append HTML entity nodes (such as '&nbsp;') verbatim
					
				} else {
					// Process text nodes in the input `textOrHtml`
					if( anchorTagStackCount === 0 ) {
						// If we're not within an <a> tag, process the text node to linkify
						var linkifiedStr = this.linkifyStr( nodeText );
						resultHtml.push( linkifiedStr );
						
					} else {
						// `text` is within an <a> tag, simply append the text - we do not want to autolink anything 
						// already within an <a>...</a> tag
						resultHtml.push( nodeText );
					}
				}
			}
			
			return resultHtml.join( "" );
		},
		
		
		/**
		 * Process the text that lies in between HTML tags, performing the anchor tag replacements for matched 
		 * URLs/emails/Twitter handles, and returns the string with the replacements made. 
		 * 
		 * This method does the actual wrapping of URLs/emails/Twitter handles with anchor tags.
		 * 
		 * @private
		 * @param {String} str The string of text to auto-link.
		 * @return {String} The text with anchor tags auto-filled.
		 */
		linkifyStr : function( str ) {
			return this.getMatchParser().replace( str, this.createMatchReturnVal, this );
		},
		
		
		/**
		 * Creates the return string value for a given match in the input string, for the {@link #processTextNode} method.
		 * 
		 * This method handles the {@link #replaceFn}, if one was provided.
		 * 
		 * @private
		 * @param {Autolinker.match.Match} match The Match object that represents the match.
		 * @return {String} The string that the `match` should be replaced with. This is usually the anchor tag string, but
		 *   may be the `matchStr` itself if the match is not to be replaced.
		 */
		createMatchReturnVal : function( match ) {
			// Handle a custom `replaceFn` being provided
			var replaceFnResult;
			if( this.replaceFn ) {
				replaceFnResult = this.replaceFn.call( this, this, match );  // Autolinker instance is the context, and the first arg
			}
			
			if( typeof replaceFnResult === 'string' ) {
				return replaceFnResult;  // `replaceFn` returned a string, use that
				
			} else if( replaceFnResult === false ) {
				return match.getMatchedText();  // no replacement for the match
				
			} else if( replaceFnResult instanceof Autolinker.HtmlTag ) {
				return replaceFnResult.toString();
			
			} else {  // replaceFnResult === true, or no/unknown return value from function
				// Perform Autolinker's default anchor tag generation
				var tagBuilder = this.getTagBuilder(),
				    anchorTag = tagBuilder.build( match );  // returns an Autolinker.HtmlTag instance
				
				return anchorTag.toString();
			}
		},
		
		
		/**
		 * Lazily instantiates and returns the {@link #htmlParser} instance for this Autolinker instance.
		 * 
		 * @protected
		 * @return {Autolinker.htmlParser.HtmlParser}
		 */
		getHtmlParser : function() {
			var htmlParser = this.htmlParser;
			
			if( !htmlParser ) {
				htmlParser = this.htmlParser = new Autolinker.htmlParser.HtmlParser();
			}
			
			return htmlParser;
		},
		
		
		/**
		 * Lazily instantiates and returns the {@link #matchParser} instance for this Autolinker instance.
		 * 
		 * @protected
		 * @return {Autolinker.matchParser.MatchParser}
		 */
		getMatchParser : function() {
			var matchParser = this.matchParser;
			
			if( !matchParser ) {
				matchParser = this.matchParser = new Autolinker.matchParser.MatchParser( {
					urls : this.urls,
					email : this.email,
					twitter : this.twitter,
					stripPrefix : this.stripPrefix
				} );
			}
			
			return matchParser;
		},
		
		
		/**
		 * Returns the {@link #tagBuilder} instance for this Autolinker instance, lazily instantiating it
		 * if it does not yet exist.
		 * 
		 * This method may be used in a {@link #replaceFn} to generate the {@link Autolinker.HtmlTag HtmlTag} instance that 
		 * Autolinker would normally generate, and then allow for modifications before returning it. For example:
		 * 
		 *     var html = Autolinker.link( "Test google.com", {
		 *         replaceFn : function( autolinker, match ) {
		 *             var tag = autolinker.getTagBuilder().build( match );  // returns an {@link Autolinker.HtmlTag} instance
		 *             tag.setAttr( 'rel', 'nofollow' );
		 *             
		 *             return tag;
		 *         }
		 *     } );
		 *     
		 *     // generated html:
		 *     //   Test <a href="http://google.com" target="_blank" rel="nofollow">google.com</a>
		 * 
		 * @return {Autolinker.AnchorTagBuilder}
		 */
		getTagBuilder : function() {
			var tagBuilder = this.tagBuilder;
			
			if( !tagBuilder ) {
				tagBuilder = this.tagBuilder = new Autolinker.AnchorTagBuilder( {
					newWindow   : this.newWindow,
					truncate    : this.truncate,
					className   : this.className
				} );
			}
			
			return tagBuilder;
		}

	};


	/**
	 * Automatically links URLs, email addresses, and Twitter handles found in the given chunk of HTML. 
	 * Does not link URLs found within HTML tags.
	 * 
	 * For instance, if given the text: `You should go to http://www.yahoo.com`, then the result
	 * will be `You should go to &lt;a href="http://www.yahoo.com"&gt;http://www.yahoo.com&lt;/a&gt;`
	 * 
	 * Example:
	 * 
	 *     var linkedText = Autolinker.link( "Go to google.com", { newWindow: false } );
	 *     // Produces: "Go to <a href="http://google.com">google.com</a>"
	 * 
	 * @static
	 * @param {String} textOrHtml The HTML or text to find URLs, email addresses, and Twitter handles within (depending on if
	 *   the {@link #urls}, {@link #email}, and {@link #twitter} options are enabled).
	 * @param {Object} [options] Any of the configuration options for the Autolinker class, specified in an Object (map).
	 *   See the class description for an example call.
	 * @return {String} The HTML text, with URLs automatically linked
	 */
	Autolinker.link = function( textOrHtml, options ) {
		var autolinker = new Autolinker( options );
		return autolinker.link( textOrHtml );
	};


	// Autolinker Namespaces
	Autolinker.match = {};
	Autolinker.htmlParser = {};
	Autolinker.matchParser = {};
	/*global Autolinker */
	/*jshint eqnull:true, boss:true */
	/**
	 * @class Autolinker.Util
	 * @singleton
	 * 
	 * A few utility methods for Autolinker.
	 */
	Autolinker.Util = {
		
		/**
		 * @property {Function} abstractMethod
		 * 
		 * A function object which represents an abstract method.
		 */
		abstractMethod : function() { throw "abstract"; },
		
		
		/**
		 * Assigns (shallow copies) the properties of `src` onto `dest`.
		 * 
		 * @param {Object} dest The destination object.
		 * @param {Object} src The source object.
		 * @return {Object} The destination object (`dest`)
		 */
		assign : function( dest, src ) {
			for( var prop in src ) {
				if( src.hasOwnProperty( prop ) ) {
					dest[ prop ] = src[ prop ];
				}
			}
			
			return dest;
		},
		
		
		/**
		 * Extends `superclass` to create a new subclass, adding the `protoProps` to the new subclass's prototype.
		 * 
		 * @param {Function} superclass The constructor function for the superclass.
		 * @param {Object} protoProps The methods/properties to add to the subclass's prototype. This may contain the
		 *   special property `constructor`, which will be used as the new subclass's constructor function.
		 * @return {Function} The new subclass function.
		 */
		extend : function( superclass, protoProps ) {
			var superclassProto = superclass.prototype;
			
			var F = function() {};
			F.prototype = superclassProto;
			
			var subclass;
			if( protoProps.hasOwnProperty( 'constructor' ) ) {
				subclass = protoProps.constructor;
			} else {
				subclass = function() { superclassProto.constructor.apply( this, arguments ); };
			}
			
			var subclassProto = subclass.prototype = new F();  // set up prototype chain
			subclassProto.constructor = subclass;  // fix constructor property
			subclassProto.superclass = superclassProto;
			
			delete protoProps.constructor;  // don't re-assign constructor property to the prototype, since a new function may have been created (`subclass`), which is now already there
			Autolinker.Util.assign( subclassProto, protoProps );
			
			return subclass;
		},
		
		
		/**
		 * Truncates the `str` at `len - ellipsisChars.length`, and adds the `ellipsisChars` to the
		 * end of the string (by default, two periods: '..'). If the `str` length does not exceed 
		 * `len`, the string will be returned unchanged.
		 * 
		 * @param {String} str The string to truncate and add an ellipsis to.
		 * @param {Number} truncateLen The length to truncate the string at.
		 * @param {String} [ellipsisChars=..] The ellipsis character(s) to add to the end of `str`
		 *   when truncated. Defaults to '..'
		 */
		ellipsis : function( str, truncateLen, ellipsisChars ) {
			if( str.length > truncateLen ) {
				ellipsisChars = ( ellipsisChars == null ) ? '..' : ellipsisChars;
				str = str.substring( 0, truncateLen - ellipsisChars.length ) + ellipsisChars;
			}
			return str;
		},
		
		
		/**
		 * Supports `Array.prototype.indexOf()` functionality for old IE (IE8 and below).
		 * 
		 * @param {Array} arr The array to find an element of.
		 * @param {*} element The element to find in the array, and return the index of.
		 * @return {Number} The index of the `element`, or -1 if it was not found.
		 */
		indexOf : function( arr, element ) {
			if( Array.prototype.indexOf ) {
				return arr.indexOf( element );
				
			} else {
				for( var i = 0, len = arr.length; i < len; i++ ) {
					if( arr[ i ] === element ) return i;
				}
				return -1;
			}
		},
		
		
		
		/**
		 * Performs the functionality of what modern browsers do when `String.prototype.split()` is called
		 * with a regular expression that contains capturing parenthesis.
		 * 
		 * For example:
		 * 
		 *     // Modern browsers: 
		 *     "a,b,c".split( /(,)/ );  // --> [ 'a', ',', 'b', ',', 'c' ]
		 *     
		 *     // Old IE (including IE8):
		 *     "a,b,c".split( /(,)/ );  // --> [ 'a', 'b', 'c' ]
		 *     
		 * This method emulates the functionality of modern browsers for the old IE case.
		 * 
		 * @param {String} str The string to split.
		 * @param {RegExp} splitRegex The regular expression to split the input `str` on. The splitting
		 *   character(s) will be spliced into the array, as in the "modern browsers" example in the 
		 *   description of this method. 
		 *   Note #1: the supplied regular expression **must** have the 'g' flag specified.
		 *   Note #2: for simplicity's sake, the regular expression does not need 
		 *   to contain capturing parenthesis - it will be assumed that any match has them.
		 * @return {String[]} The split array of strings, with the splitting character(s) included.
		 */
		splitAndCapture : function( str, splitRegex ) {
			if( !splitRegex.global ) throw new Error( "`splitRegex` must have the 'g' flag set" );
			
			var result = [],
			    lastIdx = 0,
			    match;
			
			while( match = splitRegex.exec( str ) ) {
				result.push( str.substring( lastIdx, match.index ) );
				result.push( match[ 0 ] );  // push the splitting char(s)
				
				lastIdx = match.index + match[ 0 ].length;
			}
			result.push( str.substring( lastIdx ) );
			
			return result;
		}
		
	};
	/*global Autolinker */
	/*jshint boss:true */
	/**
	 * @class Autolinker.HtmlTag
	 * @extends Object
	 * 
	 * Represents an HTML tag, which can be used to easily build/modify HTML tags programmatically.
	 * 
	 * Autolinker uses this abstraction to create HTML tags, and then write them out as strings. You may also use
	 * this class in your code, especially within a {@link Autolinker#replaceFn replaceFn}.
	 * 
	 * ## Examples
	 * 
	 * Example instantiation:
	 * 
	 *     var tag = new Autolinker.HtmlTag( {
	 *         tagName : 'a',
	 *         attrs   : { 'href': 'http://google.com', 'class': 'external-link' },
	 *         innerHtml : 'Google'
	 *     } );
	 *     
	 *     tag.toString();  // <a href="http://google.com" class="external-link">Google</a>
	 *     
	 *     // Individual accessor methods
	 *     tag.getTagName();                 // 'a'
	 *     tag.getAttr( 'href' );            // 'http://google.com'
	 *     tag.hasClass( 'external-link' );  // true
	 * 
	 * 
	 * Using mutator methods (which may be used in combination with instantiation config properties):
	 * 
	 *     var tag = new Autolinker.HtmlTag();
	 *     tag.setTagName( 'a' );
	 *     tag.setAttr( 'href', 'http://google.com' );
	 *     tag.addClass( 'external-link' );
	 *     tag.setInnerHtml( 'Google' );
	 *     
	 *     tag.getTagName();                 // 'a'
	 *     tag.getAttr( 'href' );            // 'http://google.com'
	 *     tag.hasClass( 'external-link' );  // true
	 *     
	 *     tag.toString();  // <a href="http://google.com" class="external-link">Google</a>
	 *     
	 * 
	 * ## Example use within a {@link Autolinker#replaceFn replaceFn}
	 * 
	 *     var html = Autolinker.link( "Test google.com", {
	 *         replaceFn : function( autolinker, match ) {
	 *             var tag = autolinker.getTagBuilder().build( match );  // returns an {@link Autolinker.HtmlTag} instance, configured with the Match's href and anchor text
	 *             tag.setAttr( 'rel', 'nofollow' );
	 *             
	 *             return tag;
	 *         }
	 *     } );
	 *     
	 *     // generated html:
	 *     //   Test <a href="http://google.com" target="_blank" rel="nofollow">google.com</a>
	 *     
	 *     
	 * ## Example use with a new tag for the replacement
	 * 
	 *     var html = Autolinker.link( "Test google.com", {
	 *         replaceFn : function( autolinker, match ) {
	 *             var tag = new Autolinker.HtmlTag( {
	 *                 tagName : 'button',
	 *                 attrs   : { 'title': 'Load URL: ' + match.getAnchorHref() },
	 *                 innerHtml : 'Load URL: ' + match.getAnchorText()
	 *             } );
	 *             
	 *             return tag;
	 *         }
	 *     } );
	 *     
	 *     // generated html:
	 *     //   Test <button title="Load URL: http://google.com">Load URL: google.com</button>
	 */
	Autolinker.HtmlTag = Autolinker.Util.extend( Object, {
		
		/**
		 * @cfg {String} tagName
		 * 
		 * The tag name. Ex: 'a', 'button', etc.
		 * 
		 * Not required at instantiation time, but should be set using {@link #setTagName} before {@link #toString}
		 * is executed.
		 */
		
		/**
		 * @cfg {Object.<String, String>} attrs
		 * 
		 * An key/value Object (map) of attributes to create the tag with. The keys are the attribute names, and the
		 * values are the attribute values.
		 */
		
		/**
		 * @cfg {String} innerHtml
		 * 
		 * The inner HTML for the tag. 
		 * 
		 * Note the camel case name on `innerHtml`. Acronyms are camelCased in this utility (such as not to run into the acronym 
		 * naming inconsistency that the DOM developers created with `XMLHttpRequest`). You may alternatively use {@link #innerHTML}
		 * if you prefer, but this one is recommended.
		 */
		
		/**
		 * @cfg {String} innerHTML
		 * 
		 * Alias of {@link #innerHtml}, accepted for consistency with the browser DOM api, but prefer the camelCased version
		 * for acronym names.
		 */
		
		
		/**
		 * @protected
		 * @property {RegExp} whitespaceRegex
		 * 
		 * Regular expression used to match whitespace in a string of CSS classes.
		 */
		whitespaceRegex : /\s+/,
		
		
		/**
		 * @constructor
		 * @param {Object} [cfg] The configuration properties for this class, in an Object (map)
		 */
		constructor : function( cfg ) {
			Autolinker.Util.assign( this, cfg );
			
			this.innerHtml = this.innerHtml || this.innerHTML;  // accept either the camelCased form or the fully capitalized acronym
		},
		
		
		/**
		 * Sets the tag name that will be used to generate the tag with.
		 * 
		 * @param {String} tagName
		 * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.
		 */
		setTagName : function( tagName ) {
			this.tagName = tagName;
			return this;
		},
		
		
		/**
		 * Retrieves the tag name.
		 * 
		 * @return {String}
		 */
		getTagName : function() {
			return this.tagName || "";
		},
		
		
		/**
		 * Sets an attribute on the HtmlTag.
		 * 
		 * @param {String} attrName The attribute name to set.
		 * @param {String} attrValue The attribute value to set.
		 * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.
		 */
		setAttr : function( attrName, attrValue ) {
			var tagAttrs = this.getAttrs();
			tagAttrs[ attrName ] = attrValue;
			
			return this;
		},
		
		
		/**
		 * Retrieves an attribute from the HtmlTag. If the attribute does not exist, returns `undefined`.
		 * 
		 * @param {String} name The attribute name to retrieve.
		 * @return {String} The attribute's value, or `undefined` if it does not exist on the HtmlTag.
		 */
		getAttr : function( attrName ) {
			return this.getAttrs()[ attrName ];
		},
		
		
		/**
		 * Sets one or more attributes on the HtmlTag.
		 * 
		 * @param {Object.<String, String>} attrs A key/value Object (map) of the attributes to set.
		 * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.
		 */
		setAttrs : function( attrs ) {
			var tagAttrs = this.getAttrs();
			Autolinker.Util.assign( tagAttrs, attrs );
			
			return this;
		},
		
		
		/**
		 * Retrieves the attributes Object (map) for the HtmlTag.
		 * 
		 * @return {Object.<String, String>} A key/value object of the attributes for the HtmlTag.
		 */
		getAttrs : function() {
			return this.attrs || ( this.attrs = {} );
		},
		
		
		/**
		 * Sets the provided `cssClass`, overwriting any current CSS classes on the HtmlTag.
		 * 
		 * @param {String} cssClass One or more space-separated CSS classes to set (overwrite).
		 * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.
		 */
		setClass : function( cssClass ) {
			return this.setAttr( 'class', cssClass );
		},
		
		
		/**
		 * Convenience method to add one or more CSS classes to the HtmlTag. Will not add duplicate CSS classes.
		 * 
		 * @param {String} cssClass One or more space-separated CSS classes to add.
		 * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.
		 */
		addClass : function( cssClass ) {
			var classAttr = this.getClass(),
			    whitespaceRegex = this.whitespaceRegex,
			    indexOf = Autolinker.Util.indexOf,  // to support IE8 and below
			    classes = ( !classAttr ) ? [] : classAttr.split( whitespaceRegex ),
			    newClasses = cssClass.split( whitespaceRegex ),
			    newClass;
			
			while( newClass = newClasses.shift() ) {
				if( indexOf( classes, newClass ) === -1 ) {
					classes.push( newClass );
				}
			}
			
			this.getAttrs()[ 'class' ] = classes.join( " " );
			return this;
		},
		
		
		/**
		 * Convenience method to remove one or more CSS classes from the HtmlTag.
		 * 
		 * @param {String} cssClass One or more space-separated CSS classes to remove.
		 * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.
		 */
		removeClass : function( cssClass ) {
			var classAttr = this.getClass(),
			    whitespaceRegex = this.whitespaceRegex,
			    indexOf = Autolinker.Util.indexOf,  // to support IE8 and below
			    classes = ( !classAttr ) ? [] : classAttr.split( whitespaceRegex ),
			    removeClasses = cssClass.split( whitespaceRegex ),
			    removeClass;
			
			while( classes.length && ( removeClass = removeClasses.shift() ) ) {
				var idx = indexOf( classes, removeClass );
				if( idx !== -1 ) {
					classes.splice( idx, 1 );
				}
			}
			
			this.getAttrs()[ 'class' ] = classes.join( " " );
			return this;
		},
		
		
		/**
		 * Convenience method to retrieve the CSS class(es) for the HtmlTag, which will each be separated by spaces when
		 * there are multiple.
		 * 
		 * @return {String}
		 */
		getClass : function() {
			return this.getAttrs()[ 'class' ] || "";
		},
		
		
		/**
		 * Convenience method to check if the tag has a CSS class or not.
		 * 
		 * @param {String} cssClass The CSS class to check for.
		 * @return {Boolean} `true` if the HtmlTag has the CSS class, `false` otherwise.
		 */
		hasClass : function( cssClass ) {
			return ( ' ' + this.getClass() + ' ' ).indexOf( ' ' + cssClass + ' ' ) !== -1;
		},
		
		
		/**
		 * Sets the inner HTML for the tag.
		 * 
		 * @param {String} html The inner HTML to set.
		 * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.
		 */
		setInnerHtml : function( html ) {
			this.innerHtml = html;
			
			return this;
		},
		
		
		/**
		 * Retrieves the inner HTML for the tag.
		 * 
		 * @return {String}
		 */
		getInnerHtml : function() {
			return this.innerHtml || "";
		},
		
		
		/**
		 * Override of superclass method used to generate the HTML string for the tag.
		 * 
		 * @return {String}
		 */
		toString : function() {
			var tagName = this.getTagName(),
			    attrsStr = this.buildAttrsStr();
			
			attrsStr = ( attrsStr ) ? ' ' + attrsStr : '';  // prepend a space if there are actually attributes
			
			return [ '<', tagName, attrsStr, '>', this.getInnerHtml(), '</', tagName, '>' ].join( "" );
		},
		
		
		/**
		 * Support method for {@link #toString}, returns the string space-separated key="value" pairs, used to populate 
		 * the stringified HtmlTag.
		 * 
		 * @protected
		 * @return {String} Example return: `attr1="value1" attr2="value2"`
		 */
		buildAttrsStr : function() {
			if( !this.attrs ) return "";  // no `attrs` Object (map) has been set, return empty string
			
			var attrs = this.getAttrs(),
			    attrsArr = [];
			
			for( var prop in attrs ) {
				if( attrs.hasOwnProperty( prop ) ) {
					attrsArr.push( prop + '="' + attrs[ prop ] + '"' );
				}
			}
			return attrsArr.join( " " );
		}
		
	} );
	/*global Autolinker */
	/*jshint sub:true */
	/**
	 * @protected
	 * @class Autolinker.AnchorTagBuilder
	 * @extends Object
	 * 
	 * Builds anchor (&lt;a&gt;) tags for the Autolinker utility when a match is found.
	 * 
	 * Normally this class is instantiated, configured, and used internally by an {@link Autolinker} instance, but may 
	 * actually be retrieved in a {@link Autolinker#replaceFn replaceFn} to create {@link Autolinker.HtmlTag HtmlTag} instances
	 * which may be modified before returning from the {@link Autolinker#replaceFn replaceFn}. For example:
	 * 
	 *     var html = Autolinker.link( "Test google.com", {
	 *         replaceFn : function( autolinker, match ) {
	 *             var tag = autolinker.getTagBuilder().build( match );  // returns an {@link Autolinker.HtmlTag} instance
	 *             tag.setAttr( 'rel', 'nofollow' );
	 *             
	 *             return tag;
	 *         }
	 *     } );
	 *     
	 *     // generated html:
	 *     //   Test <a href="http://google.com" target="_blank" rel="nofollow">google.com</a>
	 */
	Autolinker.AnchorTagBuilder = Autolinker.Util.extend( Object, {
		
		/**
		 * @cfg {Boolean} newWindow
		 * @inheritdoc Autolinker#newWindow
		 */
		
		/**
		 * @cfg {Number} truncate
		 * @inheritdoc Autolinker#truncate
		 */
		
		/**
		 * @cfg {String} className
		 * @inheritdoc Autolinker#className
		 */
		
		
		/**
		 * @constructor
		 * @param {Object} [cfg] The configuration options for the AnchorTagBuilder instance, specified in an Object (map).
		 */
		constructor : function( cfg ) {
			Autolinker.Util.assign( this, cfg );
		},
		
		
		/**
		 * Generates the actual anchor (&lt;a&gt;) tag to use in place of the matched URL/email/Twitter text,
		 * via its `match` object.
		 * 
		 * @param {Autolinker.match.Match} match The Match instance to generate an anchor tag from.
		 * @return {Autolinker.HtmlTag} The HtmlTag instance for the anchor tag.
		 */
		build : function( match ) {
			var tag = new Autolinker.HtmlTag( {
				tagName   : 'a',
				attrs     : this.createAttrs( match.getType(), match.getAnchorHref() ),
				innerHtml : this.processAnchorText( match.getAnchorText() )
			} );
			
			return tag;
		},
		
		
		/**
		 * Creates the Object (map) of the HTML attributes for the anchor (&lt;a&gt;) tag being generated.
		 * 
		 * @protected
		 * @param {"url"/"email"/"twitter"} matchType The type of match that an anchor tag is being generated for.
		 * @param {String} href The href for the anchor tag.
		 * @return {Object} A key/value Object (map) of the anchor tag's attributes. 
		 */
		createAttrs : function( matchType, anchorHref ) {
			var attrs = {
				'href' : anchorHref  // we'll always have the `href` attribute
			};
			
			var cssClass = this.createCssClass( matchType );
			if( cssClass ) {
				attrs[ 'class' ] = cssClass;
			}
			if( this.newWindow ) {
				attrs[ 'target' ] = "_blank";
			}
			
			return attrs;
		},
		
		
		/**
		 * Creates the CSS class that will be used for a given anchor tag, based on the `matchType` and the {@link #className}
		 * config.
		 * 
		 * @private
		 * @param {"url"/"email"/"twitter"} matchType The type of match that an anchor tag is being generated for.
		 * @return {String} The CSS class string for the link. Example return: "myLink myLink-url". If no {@link #className}
		 *   was configured, returns an empty string.
		 */
		createCssClass : function( matchType ) {
			var className = this.className;
			
			if( !className ) 
				return "";
			else
				return className + " " + className + "-" + matchType;  // ex: "myLink myLink-url", "myLink myLink-email", or "myLink myLink-twitter"
		},
		
		
		/**
		 * Processes the `anchorText` by truncating the text according to the {@link #truncate} config.
		 * 
		 * @private
		 * @param {String} anchorText The anchor tag's text (i.e. what will be displayed).
		 * @return {String} The processed `anchorText`.
		 */
		processAnchorText : function( anchorText ) {
			anchorText = this.doTruncate( anchorText );
			
			return anchorText;
		},
		
		
		/**
		 * Performs the truncation of the `anchorText`, if the `anchorText` is longer than the {@link #truncate} option.
		 * Truncates the text to 2 characters fewer than the {@link #truncate} option, and adds ".." to the end.
		 * 
		 * @private
		 * @param {String} text The anchor tag's text (i.e. what will be displayed).
		 * @return {String} The truncated anchor text.
		 */
		doTruncate : function( anchorText ) {
			return Autolinker.Util.ellipsis( anchorText, this.truncate || Number.POSITIVE_INFINITY );
		}
		
	} );
	/*global Autolinker */
	/**
	 * @private
	 * @class Autolinker.htmlParser.HtmlParser
	 * @extends Object
	 * 
	 * An HTML parser implementation which simply walks an HTML string and returns an array of 
	 * {@link Autolinker.htmlParser.HtmlNode HtmlNodes} that represent the basic HTML structure of the input string.
	 * 
	 * Autolinker uses this to only link URLs/emails/Twitter handles within text nodes, effectively ignoring / "walking
	 * around" HTML tags.
	 */
	Autolinker.htmlParser.HtmlParser = Autolinker.Util.extend( Object, {
		
		/**
		 * @private
		 * @property {RegExp} htmlRegex
		 * 
		 * The regular expression used to pull out HTML tags from a string. Handles namespaced HTML tags and
		 * attribute names, as specified by http://www.w3.org/TR/html-markup/syntax.html.
		 * 
		 * Capturing groups:
		 * 
		 * 1. The "!DOCTYPE" tag name, if a tag is a &lt;!DOCTYPE&gt; tag.
		 * 2. If it is an end tag, this group will have the '/'.
		 * 3. The tag name for all tags (other than the &lt;!DOCTYPE&gt; tag)
		 */
		htmlRegex : (function() {
			var tagNameRegex = /[0-9a-zA-Z][0-9a-zA-Z:]*/,
			    attrNameRegex = /[^\s\0"'>\/=\x01-\x1F\x7F]+/,   // the unicode range accounts for excluding control chars, and the delete char
			    attrValueRegex = /(?:"[^"]*?"|'[^']*?'|[^'"=<>`\s]+)/, // double quoted, single quoted, or unquoted attribute values
			    nameEqualsValueRegex = attrNameRegex.source + '(?:\\s*=\\s*' + attrValueRegex.source + ')?';  // optional '=[value]'
			
			return new RegExp( [
				// for <!DOCTYPE> tag. Ex: <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">) 
				'(?:',
					'<(!DOCTYPE)',  // *** Capturing Group 1 - If it's a doctype tag
						
						// Zero or more attributes following the tag name
						'(?:',
							'\\s+',  // one or more whitespace chars before an attribute
							
							// Either:
							// A. attr="value", or 
							// B. "value" alone (To cover example doctype tag: <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">) 
							'(?:', nameEqualsValueRegex, '|', attrValueRegex.source + ')',
						')*',
					'>',
				')',
				
				'|',
				
				// All other HTML tags (i.e. tags that are not <!DOCTYPE>)
				'(?:',
					'<(/)?',  // Beginning of a tag. Either '<' for a start tag, or '</' for an end tag. 
					          // *** Capturing Group 2: The slash or an empty string. Slash ('/') for end tag, empty string for start or self-closing tag.
				
						// *** Capturing Group 3 - The tag name
						'(' + tagNameRegex.source + ')',
						
						// Zero or more attributes following the tag name
						'(?:',
							'\\s+',                // one or more whitespace chars before an attribute
							nameEqualsValueRegex,  // attr="value" (with optional ="value" part)
						')*',
						
						'\\s*/?',  // any trailing spaces and optional '/' before the closing '>'
					'>',
				')'
			].join( "" ), 'gi' );
		} )(),
		
		/**
		 * @private
		 * @property {RegExp} htmlCharacterEntitiesRegex
		 *
		 * The regular expression that matches common HTML character entities.
		 * 
		 * Ignoring &amp; as it could be part of a query string -- handling it separately.
		 */
		htmlCharacterEntitiesRegex: /(&nbsp;|&#160;|&lt;|&#60;|&gt;|&#62;|&quot;|&#34;|&#39;)/gi,
		
		
		/**
		 * Parses an HTML string and returns a simple array of {@link Autolinker.htmlParser.HtmlNode HtmlNodes} to represent
		 * the HTML structure of the input string. 
		 * 
		 * @param {String} html The HTML to parse.
		 * @return {Autolinker.htmlParser.HtmlNode[]}
		 */
		parse : function( html ) {
			var htmlRegex = this.htmlRegex,
			    currentResult,
			    lastIndex = 0,
			    textAndEntityNodes,
			    nodes = [];  // will be the result of the method
			
			while( ( currentResult = htmlRegex.exec( html ) ) !== null ) {
				var tagText = currentResult[ 0 ],
				    tagName = currentResult[ 1 ] || currentResult[ 3 ],  // The <!DOCTYPE> tag (ex: "!DOCTYPE"), or another tag (ex: "a" or "img") 
				    isClosingTag = !!currentResult[ 2 ],
				    inBetweenTagsText = html.substring( lastIndex, currentResult.index );
				
				// Push TextNodes and EntityNodes for any text found between tags
				if( inBetweenTagsText ) {
					textAndEntityNodes = this.parseTextAndEntityNodes( inBetweenTagsText );
					nodes.push.apply( nodes, textAndEntityNodes );
				}
				
				// Push the ElementNode
				nodes.push( this.createElementNode( tagText, tagName, isClosingTag ) );
				
				lastIndex = currentResult.index + tagText.length;
			}
			
			// Process any remaining text after the last HTML element. Will process all of the text if there were no HTML elements.
			if( lastIndex < html.length ) {
				var text = html.substring( lastIndex );
				
				// Push TextNodes and EntityNodes for any text found between tags
				if( text ) {
					textAndEntityNodes = this.parseTextAndEntityNodes( text );
					nodes.push.apply( nodes, textAndEntityNodes );
				}
			}
			
			return nodes;
		},
		
		
		/**
		 * Parses text and HTML entity nodes from a given string. The input string should not have any HTML tags (elements)
		 * within it.
		 * 
		 * @private
		 * @param {String} text The text to parse.
		 * @return {Autolinker.htmlParser.HtmlNode[]} An array of HtmlNodes to represent the 
		 *   {@link Autolinker.htmlParser.TextNode TextNodes} and {@link Autolinker.htmlParser.EntityNode EntityNodes} found.
		 */
		parseTextAndEntityNodes : function( text ) {
			var nodes = [],
			    textAndEntityTokens = Autolinker.Util.splitAndCapture( text, this.htmlCharacterEntitiesRegex );  // split at HTML entities, but include the HTML entities in the results array
			
			// Every even numbered token is a TextNode, and every odd numbered token is an EntityNode
			// For example: an input `text` of "Test &quot;this&quot; today" would turn into the 
			//   `textAndEntityTokens`: [ 'Test ', '&quot;', 'this', '&quot;', ' today' ]
			for( var i = 0, len = textAndEntityTokens.length; i < len; i += 2 ) {
				var textToken = textAndEntityTokens[ i ],
				    entityToken = textAndEntityTokens[ i + 1 ];
				
				if( textToken ) nodes.push( this.createTextNode( textToken ) );
				if( entityToken ) nodes.push( this.createEntityNode( entityToken ) );
			}
			return nodes;
		},
		
		
		/**
		 * Factory method to create an {@link Autolinker.htmlParser.ElementNode ElementNode}.
		 * 
		 * @private
		 * @param {String} tagText The full text of the tag (element) that was matched, including its attributes.
		 * @param {String} tagName The name of the tag. Ex: An &lt;img&gt; tag would be passed to this method as "img".
		 * @param {Boolean} isClosingTag `true` if it's a closing tag, false otherwise.
		 * @return {Autolinker.htmlParser.ElementNode}
		 */
		createElementNode : function( tagText, tagName, isClosingTag ) {
			return new Autolinker.htmlParser.ElementNode( {
				text    : tagText,
				tagName : tagName.toLowerCase(),
				closing : isClosingTag
			} );
		},
		
		
		/**
		 * Factory method to create a {@link Autolinker.htmlParser.EntityNode EntityNode}.
		 * 
		 * @private
		 * @param {String} text The text that was matched for the HTML entity (such as '&amp;nbsp;').
		 * @return {Autolinker.htmlParser.EntityNode}
		 */
		createEntityNode : function( text ) {
			return new Autolinker.htmlParser.EntityNode( { text: text } );
		},
		
		
		/**
		 * Factory method to create a {@link Autolinker.htmlParser.TextNode TextNode}.
		 * 
		 * @private
		 * @param {String} text The text that was matched.
		 * @return {Autolinker.htmlParser.TextNode}
		 */
		createTextNode : function( text ) {
			return new Autolinker.htmlParser.TextNode( { text: text } );
		}
		
	} );
	/*global Autolinker */
	/**
	 * @abstract
	 * @class Autolinker.htmlParser.HtmlNode
	 * 
	 * Represents an HTML node found in an input string. An HTML node is one of the following:
	 * 
	 * 1. An {@link Autolinker.htmlParser.ElementNode ElementNode}, which represents HTML tags.
	 * 2. A {@link Autolinker.htmlParser.TextNode TextNode}, which represents text outside or within HTML tags.
	 * 3. A {@link Autolinker.htmlParser.EntityNode EntityNode}, which represents one of the known HTML
	 *    entities that Autolinker looks for. This includes common ones such as &amp;quot; and &amp;nbsp;
	 */
	Autolinker.htmlParser.HtmlNode = Autolinker.Util.extend( Object, {
		
		/**
		 * @cfg {String} text (required)
		 * 
		 * The original text that was matched for the HtmlNode. 
		 * 
		 * - In the case of an {@link Autolinker.htmlParser.ElementNode ElementNode}, this will be the tag's
		 *   text.
		 * - In the case of a {@link Autolinker.htmlParser.TextNode TextNode}, this will be the text itself.
		 * - In the case of a {@link Autolinker.htmlParser.EntityNode EntityNode}, this will be the text of
		 *   the HTML entity.
		 */
		text : "",
		
		
		/**
		 * @constructor
		 * @param {Object} cfg The configuration properties for the Match instance, specified in an Object (map).
		 */
		constructor : function( cfg ) {
			Autolinker.Util.assign( this, cfg );
		},

		
		/**
		 * Returns a string name for the type of node that this class represents.
		 * 
		 * @abstract
		 * @return {String}
		 */
		getType : Autolinker.Util.abstractMethod,
		
		
		/**
		 * Retrieves the {@link #text} for the HtmlNode.
		 * 
		 * @return {String}
		 */
		getText : function() {
			return this.text;
		}

	} );
	/*global Autolinker */
	/**
	 * @class Autolinker.htmlParser.ElementNode
	 * @extends Autolinker.htmlParser.HtmlNode
	 * 
	 * Represents an HTML element node that has been parsed by the {@link Autolinker.htmlParser.HtmlParser}.
	 * 
	 * See this class's superclass ({@link Autolinker.htmlParser.HtmlNode}) for more details.
	 */
	Autolinker.htmlParser.ElementNode = Autolinker.Util.extend( Autolinker.htmlParser.HtmlNode, {
		
		/**
		 * @cfg {String} tagName (required)
		 * 
		 * The name of the tag that was matched.
		 */
		tagName : '',
		
		/**
		 * @cfg {Boolean} closing (required)
		 * 
		 * `true` if the element (tag) is a closing tag, `false` if its an opening tag.
		 */
		closing : false,

		
		/**
		 * Returns a string name for the type of node that this class represents.
		 * 
		 * @return {String}
		 */
		getType : function() {
			return 'element';
		},
		

		/**
		 * Returns the HTML element's (tag's) name. Ex: for an &lt;img&gt; tag, returns "img".
		 * 
		 * @return {String}
		 */
		getTagName : function() {
			return this.tagName;
		},
		
		
		/**
		 * Determines if the HTML element (tag) is a closing tag. Ex: &lt;div&gt; returns
		 * `false`, while &lt;/div&gt; returns `true`.
		 * 
		 * @return {Boolean}
		 */
		isClosing : function() {
			return this.closing;
		}
		
	} );
	/*global Autolinker */
	/**
	 * @class Autolinker.htmlParser.EntityNode
	 * @extends Autolinker.htmlParser.HtmlNode
	 * 
	 * Represents a known HTML entity node that has been parsed by the {@link Autolinker.htmlParser.HtmlParser}.
	 * Ex: '&amp;nbsp;', or '&amp#160;' (which will be retrievable from the {@link #getText} method.
	 * 
	 * Note that this class will only be returned from the HtmlParser for the set of checked HTML entity nodes 
	 * defined by the {@link Autolinker.htmlParser.HtmlParser#htmlCharacterEntitiesRegex}.
	 * 
	 * See this class's superclass ({@link Autolinker.htmlParser.HtmlNode}) for more details.
	 */
	Autolinker.htmlParser.EntityNode = Autolinker.Util.extend( Autolinker.htmlParser.HtmlNode, {
		
		/**
		 * Returns a string name for the type of node that this class represents.
		 * 
		 * @return {String}
		 */
		getType : function() {
			return 'entity';
		}
		
	} );
	/*global Autolinker */
	/**
	 * @class Autolinker.htmlParser.TextNode
	 * @extends Autolinker.htmlParser.HtmlNode
	 * 
	 * Represents a text node that has been parsed by the {@link Autolinker.htmlParser.HtmlParser}.
	 * 
	 * See this class's superclass ({@link Autolinker.htmlParser.HtmlNode}) for more details.
	 */
	Autolinker.htmlParser.TextNode = Autolinker.Util.extend( Autolinker.htmlParser.HtmlNode, {
		
		/**
		 * Returns a string name for the type of node that this class represents.
		 * 
		 * @return {String}
		 */
		getType : function() {
			return 'text';
		}
		
	} );
	/*global Autolinker */
	/**
	 * @private
	 * @class Autolinker.matchParser.MatchParser
	 * @extends Object
	 * 
	 * Used by Autolinker to parse {@link #urls URLs}, {@link #emails email addresses}, and {@link #twitter Twitter handles}, 
	 * given an input string of text.
	 * 
	 * The MatchParser is fed a non-HTML string in order to search out URLs, email addresses and Twitter handles. Autolinker
	 * first uses the {@link HtmlParser} to "walk around" HTML tags, and then the text around the HTML tags is passed into
	 * the MatchParser in order to find the actual matches.
	 */
	Autolinker.matchParser.MatchParser = Autolinker.Util.extend( Object, {
		
		/**
		 * @cfg {Boolean} urls
		 * 
		 * `true` if miscellaneous URLs should be automatically linked, `false` if they should not be.
		 */
		urls : true,
		
		/**
		 * @cfg {Boolean} email
		 * 
		 * `true` if email addresses should be automatically linked, `false` if they should not be.
		 */
		email : true,
		
		/**
		 * @cfg {Boolean} twitter
		 * 
		 * `true` if Twitter handles ("@example") should be automatically linked, `false` if they should not be.
		 */
		twitter : true,
		
		/**
		 * @cfg {Boolean} stripPrefix
		 * 
		 * `true` if 'http://' or 'https://' and/or the 'www.' should be stripped from the beginning of URL links' text
		 * in {@link Autolinker.match.Url URL matches}, `false` otherwise.
		 * 
		 * TODO: Handle this before a URL Match object is instantiated.
		 */
		stripPrefix : true,
		
		
		/**
		 * @private
		 * @property {RegExp} matcherRegex
		 * 
		 * The regular expression that matches URLs, email addresses, and Twitter handles.
		 * 
		 * This regular expression has the following capturing groups:
		 * 
		 * 1. Group that is used to determine if there is a Twitter handle match (i.e. \@someTwitterUser). Simply check for its 
		 *    existence to determine if there is a Twitter handle match. The next couple of capturing groups give information 
		 *    about the Twitter handle match.
		 * 2. The whitespace character before the \@sign in a Twitter handle. This is needed because there are no lookbehinds in
		 *    JS regular expressions, and can be used to reconstruct the original string in a replace().
		 * 3. The Twitter handle itself in a Twitter match. If the match is '@someTwitterUser', the handle is 'someTwitterUser'.
		 * 4. Group that matches an email address. Used to determine if the match is an email address, as well as holding the full 
		 *    address. Ex: 'me@my.com'
		 * 5. Group that matches a URL in the input text. Ex: 'http://google.com', 'www.google.com', or just 'google.com'.
		 *    This also includes a path, url parameters, or hash anchors. Ex: google.com/path/to/file?q1=1&q2=2#myAnchor
		 * 6. Group that matches a protocol URL (i.e. 'http://google.com'). This is used to match protocol URLs with just a single
		 *    word, like 'http://localhost', where we won't double check that the domain name has at least one '.' in it.
		 * 7. A protocol-relative ('//') match for the case of a 'www.' prefixed URL. Will be an empty string if it is not a 
		 *    protocol-relative match. We need to know the character before the '//' in order to determine if it is a valid match
		 *    or the // was in a string we don't want to auto-link.
		 * 8. A protocol-relative ('//') match for the case of a known TLD prefixed URL. Will be an empty string if it is not a 
		 *    protocol-relative match. See #6 for more info. 
		 */
		matcherRegex : (function() {
			var twitterRegex = /(^|[^\w])@(\w{1,15})/,              // For matching a twitter handle. Ex: @gregory_jacobs
			    
			    emailRegex = /(?:[\-;:&=\+\$,\w\.]+@)/,             // something@ for email addresses (a.k.a. local-part)
			    
			    protocolRegex = /(?:[A-Za-z][-.+A-Za-z0-9]+:(?![A-Za-z][-.+A-Za-z0-9]+:\/\/)(?!\d+\/?)(?:\/\/)?)/,  // match protocol, allow in format "http://" or "mailto:". However, do not match the first part of something like 'link:http://www.google.com' (i.e. don't match "link:"). Also, make sure we don't interpret 'google.com:8000' as if 'google.com' was a protocol here (i.e. ignore a trailing port number in this regex)
			    wwwRegex = /(?:www\.)/,                             // starting with 'www.'
			    domainNameRegex = /[A-Za-z0-9\.\-]*[A-Za-z0-9\-]/,  // anything looking at all like a domain, non-unicode domains, not ending in a period
			    tldRegex = /\.(?:international|construction|contractors|enterprises|photography|productions|foundation|immobilien|industries|management|properties|technology|christmas|community|directory|education|equipment|institute|marketing|solutions|vacations|bargains|boutique|builders|catering|cleaning|clothing|computer|democrat|diamonds|graphics|holdings|lighting|partners|plumbing|supplies|training|ventures|academy|careers|company|cruises|domains|exposed|flights|florist|gallery|guitars|holiday|kitchen|neustar|okinawa|recipes|rentals|reviews|shiksha|singles|support|systems|agency|berlin|camera|center|coffee|condos|dating|estate|events|expert|futbol|kaufen|luxury|maison|monash|museum|nagoya|photos|repair|report|social|supply|tattoo|tienda|travel|viajes|villas|vision|voting|voyage|actor|build|cards|cheap|codes|dance|email|glass|house|mango|ninja|parts|photo|shoes|solar|today|tokyo|tools|watch|works|aero|arpa|asia|best|bike|blue|buzz|camp|club|cool|coop|farm|fish|gift|guru|info|jobs|kiwi|kred|land|limo|link|menu|mobi|moda|name|pics|pink|post|qpon|rich|ruhr|sexy|tips|vote|voto|wang|wien|wiki|zone|bar|bid|biz|cab|cat|ceo|com|edu|gov|int|kim|mil|net|onl|org|pro|pub|red|tel|uno|wed|xxx|xyz|ac|ad|ae|af|ag|ai|al|am|an|ao|aq|ar|as|at|au|aw|ax|az|ba|bb|bd|be|bf|bg|bh|bi|bj|bm|bn|bo|br|bs|bt|bv|bw|by|bz|ca|cc|cd|cf|cg|ch|ci|ck|cl|cm|cn|co|cr|cu|cv|cw|cx|cy|cz|de|dj|dk|dm|do|dz|ec|ee|eg|er|es|et|eu|fi|fj|fk|fm|fo|fr|ga|gb|gd|ge|gf|gg|gh|gi|gl|gm|gn|gp|gq|gr|gs|gt|gu|gw|gy|hk|hm|hn|hr|ht|hu|id|ie|il|im|in|io|iq|ir|is|it|je|jm|jo|jp|ke|kg|kh|ki|km|kn|kp|kr|kw|ky|kz|la|lb|lc|li|lk|lr|ls|lt|lu|lv|ly|ma|mc|md|me|mg|mh|mk|ml|mm|mn|mo|mp|mq|mr|ms|mt|mu|mv|mw|mx|my|mz|na|nc|ne|nf|ng|ni|nl|no|np|nr|nu|nz|om|pa|pe|pf|pg|ph|pk|pl|pm|pn|pr|ps|pt|pw|py|qa|re|ro|rs|ru|rw|sa|sb|sc|sd|se|sg|sh|si|sj|sk|sl|sm|sn|so|sr|st|su|sv|sx|sy|sz|tc|td|tf|tg|th|tj|tk|tl|tm|tn|to|tp|tr|tt|tv|tw|tz|ua|ug|uk|us|uy|uz|va|vc|ve|vg|vi|vn|vu|wf|ws|ye|yt|za|zm|zw)\b/,   // match our known top level domains (TLDs)
			    
			    // Allow optional path, query string, and hash anchor, not ending in the following characters: "?!:,.;"
			    // http://blog.codinghorror.com/the-problem-with-urls/
			    urlSuffixRegex = /[\-A-Za-z0-9+&@#\/%=~_()|'$*\[\]?!:,.;]*[\-A-Za-z0-9+&@#\/%=~_()|'$*\[\]]/;
			
			return new RegExp( [
				'(',  // *** Capturing group $1, which can be used to check for a twitter handle match. Use group $3 for the actual twitter handle though. $2 may be used to reconstruct the original string in a replace() 
					// *** Capturing group $2, which matches the whitespace character before the '@' sign (needed because of no lookbehinds), and 
					// *** Capturing group $3, which matches the actual twitter handle
					twitterRegex.source,
				')',
				
				'|',
				
				'(',  // *** Capturing group $4, which is used to determine an email match
					emailRegex.source,
					domainNameRegex.source,
					tldRegex.source,
				')',
				
				'|',
				
				'(',  // *** Capturing group $5, which is used to match a URL
					'(?:', // parens to cover match for protocol (optional), and domain
						'(',  // *** Capturing group $6, for a protocol-prefixed url (ex: http://google.com)
							protocolRegex.source,
							domainNameRegex.source,
						')',
						
						'|',
						
						'(?:',  // non-capturing paren for a 'www.' prefixed url (ex: www.google.com)
							'(.?//)?',  // *** Capturing group $7 for an optional protocol-relative URL. Must be at the beginning of the string or start with a non-word character
							wwwRegex.source,
							domainNameRegex.source,
						')',
						
						'|',
						
						'(?:',  // non-capturing paren for known a TLD url (ex: google.com)
							'(.?//)?',  // *** Capturing group $8 for an optional protocol-relative URL. Must be at the beginning of the string or start with a non-word character
							domainNameRegex.source,
							tldRegex.source,
						')',
					')',
					
					'(?:' + urlSuffixRegex.source + ')?',  // match for path, query string, and/or hash anchor - optional
				')'
			].join( "" ), 'gi' );
		} )(),
		
		/**
		 * @private
		 * @property {RegExp} charBeforeProtocolRelMatchRegex
		 * 
		 * The regular expression used to retrieve the character before a protocol-relative URL match.
		 * 
		 * This is used in conjunction with the {@link #matcherRegex}, which needs to grab the character before a protocol-relative
		 * '//' due to the lack of a negative look-behind in JavaScript regular expressions. The character before the match is stripped
		 * from the URL.
		 */
		charBeforeProtocolRelMatchRegex : /^(.)?\/\//,
		
		/**
		 * @private
		 * @property {Autolinker.MatchValidator} matchValidator
		 * 
		 * The MatchValidator object, used to filter out any false positives from the {@link #matcherRegex}. See
		 * {@link Autolinker.MatchValidator} for details.
		 */
		
		
		/**
		 * @constructor
		 * @param {Object} [cfg] The configuration options for the AnchorTagBuilder instance, specified in an Object (map).
		 */
		constructor : function( cfg ) {
			Autolinker.Util.assign( this, cfg );
		
			this.matchValidator = new Autolinker.MatchValidator();
		},
		
		
		/**
		 * Parses the input `text` to search for URLs/emails/Twitter handles, and calls the `replaceFn`
		 * to allow replacements of the matches. Returns the `text` with matches replaced.
		 * 
		 * @param {String} text The text to search and repace matches in.
		 * @param {Function} replaceFn The iterator function to handle the replacements. The function takes a
		 *   single argument, a {@link Autolinker.match.Match} object, and should return the text that should
		 *   make the replacement.
		 * @param {Object} [contextObj=window] The context object ("scope") to run the `replaceFn` in.
		 * @return {String}
		 */
		replace : function( text, replaceFn, contextObj ) {
			var me = this;  // for closure
			
			return text.replace( this.matcherRegex, function( matchStr, $1, $2, $3, $4, $5, $6, $7, $8 ) {
				var matchDescObj = me.processCandidateMatch( matchStr, $1, $2, $3, $4, $5, $6, $7, $8 );  // "match description" object
				
				// Return out with no changes for match types that are disabled (url, email, twitter), or for matches that are 
				// invalid (false positives from the matcherRegex, which can't use look-behinds since they are unavailable in JS).
				if( !matchDescObj ) {
					return matchStr;
					
				} else {
					// Generate replacement text for the match from the `replaceFn`
					var replaceStr = replaceFn.call( contextObj, matchDescObj.match );
					return matchDescObj.prefixStr + replaceStr + matchDescObj.suffixStr;
				}
			} );
		},
		
		
		/**
		 * Processes a candidate match from the {@link #matcherRegex}. 
		 * 
		 * Not all matches found by the regex are actual URL/email/Twitter matches, as determined by the {@link #matchValidator}. In
		 * this case, the method returns `null`. Otherwise, a valid Object with `prefixStr`, `match`, and `suffixStr` is returned.
		 * 
		 * @private
		 * @param {String} matchStr The full match that was found by the {@link #matcherRegex}.
		 * @param {String} twitterMatch The matched text of a Twitter handle, if the match is a Twitter match.
		 * @param {String} twitterHandlePrefixWhitespaceChar The whitespace char before the @ sign in a Twitter handle match. This 
		 *   is needed because of no lookbehinds in JS regexes, and is need to re-include the character for the anchor tag replacement.
		 * @param {String} twitterHandle The actual Twitter user (i.e the word after the @ sign in a Twitter match).
		 * @param {String} emailAddressMatch The matched email address for an email address match.
		 * @param {String} urlMatch The matched URL string for a URL match.
		 * @param {String} protocolUrlMatch The match URL string for a protocol match. Ex: 'http://yahoo.com'. This is used to match
		 *   something like 'http://localhost', where we won't double check that the domain name has at least one '.' in it.
		 * @param {String} wwwProtocolRelativeMatch The '//' for a protocol-relative match from a 'www' url, with the character that 
		 *   comes before the '//'.
		 * @param {String} tldProtocolRelativeMatch The '//' for a protocol-relative match from a TLD (top level domain) match, with 
		 *   the character that comes before the '//'.
		 *   
		 * @return {Object} A "match description object". This will be `null` if the match was invalid, or if a match type is disabled.
		 *   Otherwise, this will be an Object (map) with the following properties:
		 * @return {String} return.prefixStr The char(s) that should be prepended to the replacement string. These are char(s) that
		 *   were needed to be included from the regex match that were ignored by processing code, and should be re-inserted into 
		 *   the replacement stream.
		 * @return {String} return.suffixStr The char(s) that should be appended to the replacement string. These are char(s) that
		 *   were needed to be included from the regex match that were ignored by processing code, and should be re-inserted into 
		 *   the replacement stream.
		 * @return {Autolinker.match.Match} return.match The Match object that represents the match that was found.
		 */
		processCandidateMatch : function( 
			matchStr, twitterMatch, twitterHandlePrefixWhitespaceChar, twitterHandle, 
			emailAddressMatch, urlMatch, protocolUrlMatch, wwwProtocolRelativeMatch, tldProtocolRelativeMatch
		) {
			// Note: The `matchStr` variable wil be fixed up to remove characters that are no longer needed (which will 
			// be added to `prefixStr` and `suffixStr`).
			
			var protocolRelativeMatch = wwwProtocolRelativeMatch || tldProtocolRelativeMatch,
			    match,  // Will be an Autolinker.match.Match object
			    
			    prefixStr = "",       // A string to use to prefix the anchor tag that is created. This is needed for the Twitter handle match
			    suffixStr = "";       // A string to suffix the anchor tag that is created. This is used if there is a trailing parenthesis that should not be auto-linked.
			    
			
			// Return out with `null` for match types that are disabled (url, email, twitter), or for matches that are 
			// invalid (false positives from the matcherRegex, which can't use look-behinds since they are unavailable in JS).
			if(
				( twitterMatch && !this.twitter ) || ( emailAddressMatch && !this.email ) || ( urlMatch && !this.urls ) ||
				!this.matchValidator.isValidMatch( urlMatch, protocolUrlMatch, protocolRelativeMatch ) 
			) {
				return null;
			}
			
			// Handle a closing parenthesis at the end of the match, and exclude it if there is not a matching open parenthesis
			// in the match itself. 
			if( this.matchHasUnbalancedClosingParen( matchStr ) ) {
				matchStr = matchStr.substr( 0, matchStr.length - 1 );  // remove the trailing ")"
				suffixStr = ")";  // this will be added after the generated <a> tag
			}
			
			
			if( emailAddressMatch ) {
				match = new Autolinker.match.Email( { matchedText: matchStr, email: emailAddressMatch } );
				
			} else if( twitterMatch ) {
				// fix up the `matchStr` if there was a preceding whitespace char, which was needed to determine the match 
				// itself (since there are no look-behinds in JS regexes)
				if( twitterHandlePrefixWhitespaceChar ) {
					prefixStr = twitterHandlePrefixWhitespaceChar;
					matchStr = matchStr.slice( 1 );  // remove the prefixed whitespace char from the match
				}
				match = new Autolinker.match.Twitter( { matchedText: matchStr, twitterHandle: twitterHandle } );
				
			} else {  // url match
				// If it's a protocol-relative '//' match, remove the character before the '//' (which the matcherRegex needed
				// to match due to the lack of a negative look-behind in JavaScript regular expressions)
				if( protocolRelativeMatch ) {
					var charBeforeMatch = protocolRelativeMatch.match( this.charBeforeProtocolRelMatchRegex )[ 1 ] || "";
					
					if( charBeforeMatch ) {  // fix up the `matchStr` if there was a preceding char before a protocol-relative match, which was needed to determine the match itself (since there are no look-behinds in JS regexes)
						prefixStr = charBeforeMatch;
						matchStr = matchStr.slice( 1 );  // remove the prefixed char from the match
					}
				}
				
				match = new Autolinker.match.Url( {
					matchedText : matchStr,
					url : matchStr,
					protocolUrlMatch : !!protocolUrlMatch,
					protocolRelativeMatch : !!protocolRelativeMatch,
					stripPrefix : this.stripPrefix
				} );
			}
			
			return {
				prefixStr : prefixStr,
				suffixStr : suffixStr,
				match     : match
			};
		},
		
		
		/**
		 * Determines if a match found has an unmatched closing parenthesis. If so, this parenthesis will be removed
		 * from the match itself, and appended after the generated anchor tag in {@link #processTextNode}.
		 * 
		 * A match may have an extra closing parenthesis at the end of the match because the regular expression must include parenthesis
		 * for URLs such as "wikipedia.com/something_(disambiguation)", which should be auto-linked. 
		 * 
		 * However, an extra parenthesis *will* be included when the URL itself is wrapped in parenthesis, such as in the case of
		 * "(wikipedia.com/something_(disambiguation))". In this case, the last closing parenthesis should *not* be part of the URL 
		 * itself, and this method will return `true`.
		 * 
		 * @private
		 * @param {String} matchStr The full match string from the {@link #matcherRegex}.
		 * @return {Boolean} `true` if there is an unbalanced closing parenthesis at the end of the `matchStr`, `false` otherwise.
		 */
		matchHasUnbalancedClosingParen : function( matchStr ) {
			var lastChar = matchStr.charAt( matchStr.length - 1 );
			
			if( lastChar === ')' ) {
				var openParensMatch = matchStr.match( /\(/g ),
				    closeParensMatch = matchStr.match( /\)/g ),
				    numOpenParens = ( openParensMatch && openParensMatch.length ) || 0,
				    numCloseParens = ( closeParensMatch && closeParensMatch.length ) || 0;
				
				if( numOpenParens < numCloseParens ) {
					return true;
				}
			}
			
			return false;
		}
		
	} );
	/*global Autolinker */
	/*jshint scripturl:true */
	/**
	 * @private
	 * @class Autolinker.MatchValidator
	 * @extends Object
	 * 
	 * Used by Autolinker to filter out false positives from the {@link Autolinker#matcherRegex}.
	 * 
	 * Due to the limitations of regular expressions (including the missing feature of look-behinds in JS regular expressions),
	 * we cannot always determine the validity of a given match. This class applies a bit of additional logic to filter out any
	 * false positives that have been matched by the {@link Autolinker#matcherRegex}.
	 */
	Autolinker.MatchValidator = Autolinker.Util.extend( Object, {
		
		/**
		 * @private
		 * @property {RegExp} invalidProtocolRelMatchRegex
		 * 
		 * The regular expression used to check a potential protocol-relative URL match, coming from the 
		 * {@link Autolinker#matcherRegex}. A protocol-relative URL is, for example, "//yahoo.com"
		 * 
		 * This regular expression checks to see if there is a word character before the '//' match in order to determine if 
		 * we should actually autolink a protocol-relative URL. This is needed because there is no negative look-behind in 
		 * JavaScript regular expressions. 
		 * 
		 * For instance, we want to autolink something like "Go to: //google.com", but we don't want to autolink something 
		 * like "abc//google.com"
		 */
		invalidProtocolRelMatchRegex : /^[\w]\/\//,
		
		/**
		 * Regex to test for a full protocol, with the two trailing slashes. Ex: 'http://'
		 * 
		 * @private
		 * @property {RegExp} hasFullProtocolRegex
		 */
		hasFullProtocolRegex : /^[A-Za-z][-.+A-Za-z0-9]+:\/\//,
		
		/**
		 * Regex to find the URI scheme, such as 'mailto:'.
		 * 
		 * This is used to filter out 'javascript:' and 'vbscript:' schemes.
		 * 
		 * @private
		 * @property {RegExp} uriSchemeRegex
		 */
		uriSchemeRegex : /^[A-Za-z][-.+A-Za-z0-9]+:/,
		
		/**
		 * Regex to determine if at least one word char exists after the protocol (i.e. after the ':')
		 * 
		 * @private
		 * @property {RegExp} hasWordCharAfterProtocolRegex
		 */
		hasWordCharAfterProtocolRegex : /:[^\s]*?[A-Za-z]/,
		
		
		/**
		 * Determines if a given match found by {@link Autolinker#processTextNode} is valid. Will return `false` for:
		 * 
		 * 1) URL matches which do not have at least have one period ('.') in the domain name (effectively skipping over 
		 *    matches like "abc:def"). However, URL matches with a protocol will be allowed (ex: 'http://localhost')
		 * 2) URL matches which do not have at least one word character in the domain name (effectively skipping over
		 *    matches like "git:1.0").
		 * 3) A protocol-relative url match (a URL beginning with '//') whose previous character is a word character 
		 *    (effectively skipping over strings like "abc//google.com")
		 * 
		 * Otherwise, returns `true`.
		 * 
		 * @param {String} urlMatch The matched URL, if there was one. Will be an empty string if the match is not a URL match.
		 * @param {String} protocolUrlMatch The match URL string for a protocol match. Ex: 'http://yahoo.com'. This is used to match
		 *   something like 'http://localhost', where we won't double check that the domain name has at least one '.' in it.
		 * @param {String} protocolRelativeMatch The protocol-relative string for a URL match (i.e. '//'), possibly with a preceding
		 *   character (ex, a space, such as: ' //', or a letter, such as: 'a//'). The match is invalid if there is a word character
		 *   preceding the '//'.
		 * @return {Boolean} `true` if the match given is valid and should be processed, or `false` if the match is invalid and/or 
		 *   should just not be processed.
		 */
		isValidMatch : function( urlMatch, protocolUrlMatch, protocolRelativeMatch ) {
			if(
				( protocolUrlMatch && !this.isValidUriScheme( protocolUrlMatch ) ) ||
				this.urlMatchDoesNotHaveProtocolOrDot( urlMatch, protocolUrlMatch ) ||       // At least one period ('.') must exist in the URL match for us to consider it an actual URL, *unless* it was a full protocol match (like 'http://localhost')
				this.urlMatchDoesNotHaveAtLeastOneWordChar( urlMatch, protocolUrlMatch ) ||  // At least one letter character must exist in the domain name after a protocol match. Ex: skip over something like "git:1.0"
				this.isInvalidProtocolRelativeMatch( protocolRelativeMatch )                 // A protocol-relative match which has a word character in front of it (so we can skip something like "abc//google.com")
			) {
				return false;
			}
			
			return true;
		},
		
		
		/**
		 * Determines if the URI scheme is a valid scheme to be autolinked. Returns `false` if the scheme is 
		 * 'javascript:' or 'vbscript:'
		 * 
		 * @private
		 * @param {String} uriSchemeMatch The match URL string for a full URI scheme match. Ex: 'http://yahoo.com' 
		 *   or 'mailto:a@a.com'.
		 * @return {Boolean} `true` if the scheme is a valid one, `false` otherwise.
		 */
		isValidUriScheme : function( uriSchemeMatch ) {
			var uriScheme = uriSchemeMatch.match( this.uriSchemeRegex )[ 0 ].toLowerCase();
			
			return ( uriScheme !== 'javascript:' && uriScheme !== 'vbscript:' );
		},
		
		
		/**
		 * Determines if a URL match does not have either:
		 * 
		 * a) a full protocol (i.e. 'http://'), or
		 * b) at least one dot ('.') in the domain name (for a non-full-protocol match).
		 * 
		 * Either situation is considered an invalid URL (ex: 'git:d' does not have either the '://' part, or at least one dot
		 * in the domain name. If the match was 'git:abc.com', we would consider this valid.)
		 * 
		 * @private
		 * @param {String} urlMatch The matched URL, if there was one. Will be an empty string if the match is not a URL match.
		 * @param {String} protocolUrlMatch The match URL string for a protocol match. Ex: 'http://yahoo.com'. This is used to match
		 *   something like 'http://localhost', where we won't double check that the domain name has at least one '.' in it.
		 * @return {Boolean} `true` if the URL match does not have a full protocol, or at least one dot ('.') in a non-full-protocol
		 *   match.
		 */
		urlMatchDoesNotHaveProtocolOrDot : function( urlMatch, protocolUrlMatch ) {
			return ( !!urlMatch && ( !protocolUrlMatch || !this.hasFullProtocolRegex.test( protocolUrlMatch ) ) && urlMatch.indexOf( '.' ) === -1 );
		},
		
		
		/**
		 * Determines if a URL match does not have at least one word character after the protocol (i.e. in the domain name).
		 * 
		 * At least one letter character must exist in the domain name after a protocol match. Ex: skip over something 
		 * like "git:1.0"
		 * 
		 * @private
		 * @param {String} urlMatch The matched URL, if there was one. Will be an empty string if the match is not a URL match.
		 * @param {String} protocolUrlMatch The match URL string for a protocol match. Ex: 'http://yahoo.com'. This is used to
		 *   know whether or not we have a protocol in the URL string, in order to check for a word character after the protocol
		 *   separator (':').
		 * @return {Boolean} `true` if the URL match does not have at least one word character in it after the protocol, `false`
		 *   otherwise.
		 */
		urlMatchDoesNotHaveAtLeastOneWordChar : function( urlMatch, protocolUrlMatch ) {
			if( urlMatch && protocolUrlMatch ) {
				return !this.hasWordCharAfterProtocolRegex.test( urlMatch );
			} else {
				return false;
			}
		},
		
		
		/**
		 * Determines if a protocol-relative match is an invalid one. This method returns `true` if there is a `protocolRelativeMatch`,
		 * and that match contains a word character before the '//' (i.e. it must contain whitespace or nothing before the '//' in
		 * order to be considered valid).
		 * 
		 * @private
		 * @param {String} protocolRelativeMatch The protocol-relative string for a URL match (i.e. '//'), possibly with a preceding
		 *   character (ex, a space, such as: ' //', or a letter, such as: 'a//'). The match is invalid if there is a word character
		 *   preceding the '//'.
		 * @return {Boolean} `true` if it is an invalid protocol-relative match, `false` otherwise.
		 */
		isInvalidProtocolRelativeMatch : function( protocolRelativeMatch ) {
			return ( !!protocolRelativeMatch && this.invalidProtocolRelMatchRegex.test( protocolRelativeMatch ) );
		}

	} );
	/*global Autolinker */
	/**
	 * @abstract
	 * @class Autolinker.match.Match
	 * 
	 * Represents a match found in an input string which should be Autolinked. A Match object is what is provided in a 
	 * {@link Autolinker#replaceFn replaceFn}, and may be used to query for details about the match.
	 * 
	 * For example:
	 * 
	 *     var input = "...";  // string with URLs, Email Addresses, and Twitter Handles
	 *     
	 *     var linkedText = Autolinker.link( input, {
	 *         replaceFn : function( autolinker, match ) {
	 *             console.log( "href = ", match.getAnchorHref() );
	 *             console.log( "text = ", match.getAnchorText() );
	 *         
	 *             switch( match.getType() ) {
	 *                 case 'url' : 
	 *                     console.log( "url: ", match.getUrl() );
	 *                     
	 *                 case 'email' :
	 *                     console.log( "email: ", match.getEmail() );
	 *                     
	 *                 case 'twitter' :
	 *                     console.log( "twitter: ", match.getTwitterHandle() );
	 *             }
	 *         }
	 *     } );
	 *     
	 * See the {@link Autolinker} class for more details on using the {@link Autolinker#replaceFn replaceFn}.
	 */
	Autolinker.match.Match = Autolinker.Util.extend( Object, {
		
		/**
		 * @cfg {String} matchedText (required)
		 * 
		 * The original text that was matched.
		 */
		
		
		/**
		 * @constructor
		 * @param {Object} cfg The configuration properties for the Match instance, specified in an Object (map).
		 */
		constructor : function( cfg ) {
			Autolinker.Util.assign( this, cfg );
		},

		
		/**
		 * Returns a string name for the type of match that this class represents.
		 * 
		 * @abstract
		 * @return {String}
		 */
		getType : Autolinker.Util.abstractMethod,
		
		
		/**
		 * Returns the original text that was matched.
		 * 
		 * @return {String}
		 */
		getMatchedText : function() {
			return this.matchedText;
		},
		

		/**
		 * Returns the anchor href that should be generated for the match.
		 * 
		 * @abstract
		 * @return {String}
		 */
		getAnchorHref : Autolinker.Util.abstractMethod,
		
		
		/**
		 * Returns the anchor text that should be generated for the match.
		 * 
		 * @abstract
		 * @return {String}
		 */
		getAnchorText : Autolinker.Util.abstractMethod

	} );
	/*global Autolinker */
	/**
	 * @class Autolinker.match.Email
	 * @extends Autolinker.match.Match
	 * 
	 * Represents a Email match found in an input string which should be Autolinked.
	 * 
	 * See this class's superclass ({@link Autolinker.match.Match}) for more details.
	 */
	Autolinker.match.Email = Autolinker.Util.extend( Autolinker.match.Match, {
		
		/**
		 * @cfg {String} email (required)
		 * 
		 * The email address that was matched.
		 */
		

		/**
		 * Returns a string name for the type of match that this class represents.
		 * 
		 * @return {String}
		 */
		getType : function() {
			return 'email';
		},
		
		
		/**
		 * Returns the email address that was matched.
		 * 
		 * @return {String}
		 */
		getEmail : function() {
			return this.email;
		},
		

		/**
		 * Returns the anchor href that should be generated for the match.
		 * 
		 * @return {String}
		 */
		getAnchorHref : function() {
			return 'mailto:' + this.email;
		},
		
		
		/**
		 * Returns the anchor text that should be generated for the match.
		 * 
		 * @return {String}
		 */
		getAnchorText : function() {
			return this.email;
		}
		
	} );
	/*global Autolinker */
	/**
	 * @class Autolinker.match.Twitter
	 * @extends Autolinker.match.Match
	 * 
	 * Represents a Twitter match found in an input string which should be Autolinked.
	 * 
	 * See this class's superclass ({@link Autolinker.match.Match}) for more details.
	 */
	Autolinker.match.Twitter = Autolinker.Util.extend( Autolinker.match.Match, {
		
		/**
		 * @cfg {String} twitterHandle (required)
		 * 
		 * The Twitter handle that was matched.
		 */
		

		/**
		 * Returns the type of match that this class represents.
		 * 
		 * @return {String}
		 */
		getType : function() {
			return 'twitter';
		},
		
		
		/**
		 * Returns a string name for the type of match that this class represents.
		 * 
		 * @return {String}
		 */
		getTwitterHandle : function() {
			return this.twitterHandle;
		},
		

		/**
		 * Returns the anchor href that should be generated for the match.
		 * 
		 * @return {String}
		 */
		getAnchorHref : function() {
			return 'https://twitter.com/' + this.twitterHandle;
		},
		
		
		/**
		 * Returns the anchor text that should be generated for the match.
		 * 
		 * @return {String}
		 */
		getAnchorText : function() {
			return '@' + this.twitterHandle;
		}
		
	} );
	/*global Autolinker */
	/**
	 * @class Autolinker.match.Url
	 * @extends Autolinker.match.Match
	 * 
	 * Represents a Url match found in an input string which should be Autolinked.
	 * 
	 * See this class's superclass ({@link Autolinker.match.Match}) for more details.
	 */
	Autolinker.match.Url = Autolinker.Util.extend( Autolinker.match.Match, {
		
		/**
		 * @cfg {String} url (required)
		 * 
		 * The url that was matched.
		 */
		
		/**
		 * @cfg {Boolean} protocolUrlMatch (required)
		 * 
		 * `true` if the URL is a match which already has a protocol (i.e. 'http://'), `false` if the match was from a 'www' or
		 * known TLD match.
		 */
		
		/**
		 * @cfg {Boolean} protocolRelativeMatch (required)
		 * 
		 * `true` if the URL is a protocol-relative match. A protocol-relative match is a URL that starts with '//',
		 * and will be either http:// or https:// based on the protocol that the site is loaded under.
		 */
		
		/**
		 * @cfg {Boolean} stripPrefix (required)
		 * @inheritdoc Autolinker#stripPrefix
		 */
		

		/**
		 * @private
		 * @property {RegExp} urlPrefixRegex
		 * 
		 * A regular expression used to remove the 'http://' or 'https://' and/or the 'www.' from URLs.
		 */
		urlPrefixRegex: /^(https?:\/\/)?(www\.)?/i,
		
		/**
		 * @private
		 * @property {RegExp} protocolRelativeRegex
		 * 
		 * The regular expression used to remove the protocol-relative '//' from the {@link #url} string, for purposes
		 * of {@link #getAnchorText}. A protocol-relative URL is, for example, "//yahoo.com"
		 */
		protocolRelativeRegex : /^\/\//,
		
		/**
		 * @private
		 * @property {Boolean} protocolPrepended
		 * 
		 * Will be set to `true` if the 'http://' protocol has been prepended to the {@link #url} (because the
		 * {@link #url} did not have a protocol)
		 */
		protocolPrepended : false,
		

		/**
		 * Returns a string name for the type of match that this class represents.
		 * 
		 * @return {String}
		 */
		getType : function() {
			return 'url';
		},
		
		
		/**
		 * Returns the url that was matched, assuming the protocol to be 'http://' if the original
		 * match was missing a protocol.
		 * 
		 * @return {String}
		 */
		getUrl : function() {
			var url = this.url;
			
			// if the url string doesn't begin with a protocol, assume 'http://'
			if( !this.protocolRelativeMatch && !this.protocolUrlMatch && !this.protocolPrepended ) {
				url = this.url = 'http://' + url;
				
				this.protocolPrepended = true;
			}
			
			return url;
		},
		

		/**
		 * Returns the anchor href that should be generated for the match.
		 * 
		 * @return {String}
		 */
		getAnchorHref : function() {
			var url = this.getUrl();
			
			return url.replace( /&amp;/g, '&' );  // any &amp;'s in the URL should be converted back to '&' if they were displayed as &amp; in the source html 
		},
		
		
		/**
		 * Returns the anchor text that should be generated for the match.
		 * 
		 * @return {String}
		 */
		getAnchorText : function() {
			var anchorText = this.getUrl();
			
			if( this.protocolRelativeMatch ) {
				// Strip off any protocol-relative '//' from the anchor text
				anchorText = this.stripProtocolRelativePrefix( anchorText );
			}
			if( this.stripPrefix ) {
				anchorText = this.stripUrlPrefix( anchorText );
			}
			anchorText = this.removeTrailingSlash( anchorText );  // remove trailing slash, if there is one
			
			return anchorText;
		},
		
		
		// ---------------------------------------
		
		// Utility Functionality
		
		/**
		 * Strips the URL prefix (such as "http://" or "https://") from the given text.
		 * 
		 * @private
		 * @param {String} text The text of the anchor that is being generated, for which to strip off the
		 *   url prefix (such as stripping off "http://")
		 * @return {String} The `anchorText`, with the prefix stripped.
		 */
		stripUrlPrefix : function( text ) {
			return text.replace( this.urlPrefixRegex, '' );
		},
		
		
		/**
		 * Strips any protocol-relative '//' from the anchor text.
		 * 
		 * @private
		 * @param {String} text The text of the anchor that is being generated, for which to strip off the
		 *   protocol-relative prefix (such as stripping off "//")
		 * @return {String} The `anchorText`, with the protocol-relative prefix stripped.
		 */
		stripProtocolRelativePrefix : function( text ) {
			return text.replace( this.protocolRelativeRegex, '' );
		},
		
		
		/**
		 * Removes any trailing slash from the given `anchorText`, in preparation for the text to be displayed.
		 * 
		 * @private
		 * @param {String} anchorText The text of the anchor that is being generated, for which to remove any trailing
		 *   slash ('/') that may exist.
		 * @return {String} The `anchorText`, with the trailing slash removed.
		 */
		removeTrailingSlash : function( anchorText ) {
			if( anchorText.charAt( anchorText.length - 1 ) === '/' ) {
				anchorText = anchorText.slice( 0, -1 );
			}
			return anchorText;
		}
		
	} );
	return Autolinker;

	}));


/***/ },
/* 489 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Local dependencies
	 */

	var Ruler      = __webpack_require__(472);
	var StateBlock = __webpack_require__(490);

	/**
	 * Parser rules
	 */

	var _rules = [
	  [ 'code',       __webpack_require__(491) ],
	  [ 'fences',     __webpack_require__(492),     [ 'paragraph', 'blockquote', 'list' ] ],
	  [ 'blockquote', __webpack_require__(493), [ 'paragraph', 'blockquote', 'list' ] ],
	  [ 'hr',         __webpack_require__(494),         [ 'paragraph', 'blockquote', 'list' ] ],
	  [ 'list',       __webpack_require__(495),       [ 'paragraph', 'blockquote' ] ],
	  [ 'footnote',   __webpack_require__(496),   [ 'paragraph' ] ],
	  [ 'heading',    __webpack_require__(497),    [ 'paragraph', 'blockquote' ] ],
	  [ 'lheading',   __webpack_require__(498) ],
	  [ 'htmlblock',  __webpack_require__(499),  [ 'paragraph', 'blockquote' ] ],
	  [ 'table',      __webpack_require__(501),      [ 'paragraph' ] ],
	  [ 'deflist',    __webpack_require__(502),    [ 'paragraph' ] ],
	  [ 'paragraph',  __webpack_require__(503) ]
	];

	/**
	 * Block Parser class
	 *
	 * @api private
	 */

	function ParserBlock() {
	  this.ruler = new Ruler();
	  for (var i = 0; i < _rules.length; i++) {
	    this.ruler.push(_rules[i][0], _rules[i][1], {
	      alt: (_rules[i][2] || []).slice()
	    });
	  }
	}

	/**
	 * Generate tokens for the given input range.
	 *
	 * @param  {Object} `state` Has properties like `src`, `parser`, `options` etc
	 * @param  {Number} `startLine`
	 * @param  {Number} `endLine`
	 * @api private
	 */

	ParserBlock.prototype.tokenize = function (state, startLine, endLine) {
	  var rules = this.ruler.getRules('');
	  var len = rules.length;
	  var line = startLine;
	  var hasEmptyLines = false;
	  var ok, i;

	  while (line < endLine) {
	    state.line = line = state.skipEmptyLines(line);
	    if (line >= endLine) {
	      break;
	    }

	    // Termination condition for nested calls.
	    // Nested calls currently used for blockquotes & lists
	    if (state.tShift[line] < state.blkIndent) {
	      break;
	    }

	    // Try all possible rules.
	    // On success, rule should:
	    //
	    // - update `state.line`
	    // - update `state.tokens`
	    // - return true

	    for (i = 0; i < len; i++) {
	      ok = rules[i](state, line, endLine, false);
	      if (ok) {
	        break;
	      }
	    }

	    // set state.tight iff we had an empty line before current tag
	    // i.e. latest empty line should not count
	    state.tight = !hasEmptyLines;

	    // paragraph might "eat" one newline after it in nested lists
	    if (state.isEmpty(state.line - 1)) {
	      hasEmptyLines = true;
	    }

	    line = state.line;

	    if (line < endLine && state.isEmpty(line)) {
	      hasEmptyLines = true;
	      line++;

	      // two empty lines should stop the parser in list mode
	      if (line < endLine && state.parentType === 'list' && state.isEmpty(line)) { break; }
	      state.line = line;
	    }
	  }
	};

	var TABS_SCAN_RE = /[\n\t]/g;
	var NEWLINES_RE  = /\r[\n\u0085]|[\u2424\u2028\u0085]/g;
	var SPACES_RE    = /\u00a0/g;

	/**
	 * Tokenize the given `str`.
	 *
	 * @param  {String} `str` Source string
	 * @param  {Object} `options`
	 * @param  {Object} `env`
	 * @param  {Array} `outTokens`
	 * @api private
	 */

	ParserBlock.prototype.parse = function (str, options, env, outTokens) {
	  var state, lineStart = 0, lastTabPos = 0;
	  if (!str) { return []; }

	  // Normalize spaces
	  str = str.replace(SPACES_RE, ' ');

	  // Normalize newlines
	  str = str.replace(NEWLINES_RE, '\n');

	  // Replace tabs with proper number of spaces (1..4)
	  if (str.indexOf('\t') >= 0) {
	    str = str.replace(TABS_SCAN_RE, function (match, offset) {
	      var result;
	      if (str.charCodeAt(offset) === 0x0A) {
	        lineStart = offset + 1;
	        lastTabPos = 0;
	        return match;
	      }
	      result = '    '.slice((offset - lineStart - lastTabPos) % 4);
	      lastTabPos = offset - lineStart + 1;
	      return result;
	    });
	  }

	  state = new StateBlock(str, this, options, env, outTokens);
	  this.tokenize(state, state.line, state.lineMax);
	};

	/**
	 * Expose `ParserBlock`
	 */

	module.exports = ParserBlock;


/***/ },
/* 490 */
/***/ function(module, exports) {

	// Parser state class

	'use strict';


	function StateBlock(src, parser, options, env, tokens) {
	  var ch, s, start, pos, len, indent, indent_found;

	  this.src = src;

	  // Shortcuts to simplify nested calls
	  this.parser = parser;

	  this.options = options;

	  this.env = env;

	  //
	  // Internal state vartiables
	  //

	  this.tokens = tokens;

	  this.bMarks = [];  // line begin offsets for fast jumps
	  this.eMarks = [];  // line end offsets for fast jumps
	  this.tShift = [];  // indent for each line

	  // block parser variables
	  this.blkIndent  = 0; // required block content indent
	                       // (for example, if we are in list)
	  this.line       = 0; // line index in src
	  this.lineMax    = 0; // lines count
	  this.tight      = false;  // loose/tight mode for lists
	  this.parentType = 'root'; // if `list`, block parser stops on two newlines
	  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)

	  this.level = 0;

	  // renderer
	  this.result = '';

	  // Create caches
	  // Generate markers.
	  s = this.src;
	  indent = 0;
	  indent_found = false;

	  for (start = pos = indent = 0, len = s.length; pos < len; pos++) {
	    ch = s.charCodeAt(pos);

	    if (!indent_found) {
	      if (ch === 0x20/* space */) {
	        indent++;
	        continue;
	      } else {
	        indent_found = true;
	      }
	    }

	    if (ch === 0x0A || pos === len - 1) {
	      if (ch !== 0x0A) { pos++; }
	      this.bMarks.push(start);
	      this.eMarks.push(pos);
	      this.tShift.push(indent);

	      indent_found = false;
	      indent = 0;
	      start = pos + 1;
	    }
	  }

	  // Push fake entry to simplify cache bounds checks
	  this.bMarks.push(s.length);
	  this.eMarks.push(s.length);
	  this.tShift.push(0);

	  this.lineMax = this.bMarks.length - 1; // don't count last fake line
	}

	StateBlock.prototype.isEmpty = function isEmpty(line) {
	  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];
	};

	StateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {
	  for (var max = this.lineMax; from < max; from++) {
	    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {
	      break;
	    }
	  }
	  return from;
	};

	// Skip spaces from given position.
	StateBlock.prototype.skipSpaces = function skipSpaces(pos) {
	  for (var max = this.src.length; pos < max; pos++) {
	    if (this.src.charCodeAt(pos) !== 0x20/* space */) { break; }
	  }
	  return pos;
	};

	// Skip char codes from given position
	StateBlock.prototype.skipChars = function skipChars(pos, code) {
	  for (var max = this.src.length; pos < max; pos++) {
	    if (this.src.charCodeAt(pos) !== code) { break; }
	  }
	  return pos;
	};

	// Skip char codes reverse from given position - 1
	StateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {
	  if (pos <= min) { return pos; }

	  while (pos > min) {
	    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }
	  }
	  return pos;
	};

	// cut lines range from source.
	StateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {
	  var i, first, last, queue, shift,
	      line = begin;

	  if (begin >= end) {
	    return '';
	  }

	  // Opt: don't use push queue for single line;
	  if (line + 1 === end) {
	    first = this.bMarks[line] + Math.min(this.tShift[line], indent);
	    last = keepLastLF ? this.bMarks[end] : this.eMarks[end - 1];
	    return this.src.slice(first, last);
	  }

	  queue = new Array(end - begin);

	  for (i = 0; line < end; line++, i++) {
	    shift = this.tShift[line];
	    if (shift > indent) { shift = indent; }
	    if (shift < 0) { shift = 0; }

	    first = this.bMarks[line] + shift;

	    if (line + 1 < end || keepLastLF) {
	      // No need for bounds check because we have fake entry on tail.
	      last = this.eMarks[line] + 1;
	    } else {
	      last = this.eMarks[line];
	    }

	    queue[i] = this.src.slice(first, last);
	  }

	  return queue.join('');
	};


	module.exports = StateBlock;


/***/ },
/* 491 */
/***/ function(module, exports) {

	// Code block (4 spaces padded)

	'use strict';


	module.exports = function code(state, startLine, endLine/*, silent*/) {
	  var nextLine, last;

	  if (state.tShift[startLine] - state.blkIndent < 4) { return false; }

	  last = nextLine = startLine + 1;

	  while (nextLine < endLine) {
	    if (state.isEmpty(nextLine)) {
	      nextLine++;
	      continue;
	    }
	    if (state.tShift[nextLine] - state.blkIndent >= 4) {
	      nextLine++;
	      last = nextLine;
	      continue;
	    }
	    break;
	  }

	  state.line = nextLine;
	  state.tokens.push({
	    type: 'code',
	    content: state.getLines(startLine, last, 4 + state.blkIndent, true),
	    block: true,
	    lines: [ startLine, state.line ],
	    level: state.level
	  });

	  return true;
	};


/***/ },
/* 492 */
/***/ function(module, exports) {

	// fences (``` lang, ~~~ lang)

	'use strict';


	module.exports = function fences(state, startLine, endLine, silent) {
	  var marker, len, params, nextLine, mem,
	      haveEndMarker = false,
	      pos = state.bMarks[startLine] + state.tShift[startLine],
	      max = state.eMarks[startLine];

	  if (pos + 3 > max) { return false; }

	  marker = state.src.charCodeAt(pos);

	  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {
	    return false;
	  }

	  // scan marker length
	  mem = pos;
	  pos = state.skipChars(pos, marker);

	  len = pos - mem;

	  if (len < 3) { return false; }

	  params = state.src.slice(pos, max).trim();

	  if (params.indexOf('`') >= 0) { return false; }

	  // Since start is found, we can report success here in validation mode
	  if (silent) { return true; }

	  // search end of block
	  nextLine = startLine;

	  for (;;) {
	    nextLine++;
	    if (nextLine >= endLine) {
	      // unclosed block should be autoclosed by end of document.
	      // also block seems to be autoclosed by end of parent
	      break;
	    }

	    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];
	    max = state.eMarks[nextLine];

	    if (pos < max && state.tShift[nextLine] < state.blkIndent) {
	      // non-empty line with negative indent should stop the list:
	      // - ```
	      //  test
	      break;
	    }

	    if (state.src.charCodeAt(pos) !== marker) { continue; }

	    if (state.tShift[nextLine] - state.blkIndent >= 4) {
	      // closing fence should be indented less than 4 spaces
	      continue;
	    }

	    pos = state.skipChars(pos, marker);

	    // closing code fence must be at least as long as the opening one
	    if (pos - mem < len) { continue; }

	    // make sure tail has spaces only
	    pos = state.skipSpaces(pos);

	    if (pos < max) { continue; }

	    haveEndMarker = true;
	    // found!
	    break;
	  }

	  // If a fence has heading spaces, they should be removed from its inner block
	  len = state.tShift[startLine];

	  state.line = nextLine + (haveEndMarker ? 1 : 0);
	  state.tokens.push({
	    type: 'fence',
	    params: params,
	    content: state.getLines(startLine + 1, nextLine, len, true),
	    lines: [ startLine, state.line ],
	    level: state.level
	  });

	  return true;
	};


/***/ },
/* 493 */
/***/ function(module, exports) {

	// Block quotes

	'use strict';


	module.exports = function blockquote(state, startLine, endLine, silent) {
	  var nextLine, lastLineEmpty, oldTShift, oldBMarks, oldIndent, oldParentType, lines,
	      terminatorRules,
	      i, l, terminate,
	      pos = state.bMarks[startLine] + state.tShift[startLine],
	      max = state.eMarks[startLine];

	  if (pos > max) { return false; }

	  // check the block quote marker
	  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }

	  if (state.level >= state.options.maxNesting) { return false; }

	  // we know that it's going to be a valid blockquote,
	  // so no point trying to find the end of it in silent mode
	  if (silent) { return true; }

	  // skip one optional space after '>'
	  if (state.src.charCodeAt(pos) === 0x20) { pos++; }

	  oldIndent = state.blkIndent;
	  state.blkIndent = 0;

	  oldBMarks = [ state.bMarks[startLine] ];
	  state.bMarks[startLine] = pos;

	  // check if we have an empty blockquote
	  pos = pos < max ? state.skipSpaces(pos) : pos;
	  lastLineEmpty = pos >= max;

	  oldTShift = [ state.tShift[startLine] ];
	  state.tShift[startLine] = pos - state.bMarks[startLine];

	  terminatorRules = state.parser.ruler.getRules('blockquote');

	  // Search the end of the block
	  //
	  // Block ends with either:
	  //  1. an empty line outside:
	  //     ```
	  //     > test
	  //
	  //     ```
	  //  2. an empty line inside:
	  //     ```
	  //     >
	  //     test
	  //     ```
	  //  3. another tag
	  //     ```
	  //     > test
	  //      - - -
	  //     ```
	  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {
	    pos = state.bMarks[nextLine] + state.tShift[nextLine];
	    max = state.eMarks[nextLine];

	    if (pos >= max) {
	      // Case 1: line is not inside the blockquote, and this line is empty.
	      break;
	    }

	    if (state.src.charCodeAt(pos++) === 0x3E/* > */) {
	      // This line is inside the blockquote.

	      // skip one optional space after '>'
	      if (state.src.charCodeAt(pos) === 0x20) { pos++; }

	      oldBMarks.push(state.bMarks[nextLine]);
	      state.bMarks[nextLine] = pos;

	      pos = pos < max ? state.skipSpaces(pos) : pos;
	      lastLineEmpty = pos >= max;

	      oldTShift.push(state.tShift[nextLine]);
	      state.tShift[nextLine] = pos - state.bMarks[nextLine];
	      continue;
	    }

	    // Case 2: line is not inside the blockquote, and the last line was empty.
	    if (lastLineEmpty) { break; }

	    // Case 3: another tag found.
	    terminate = false;
	    for (i = 0, l = terminatorRules.length; i < l; i++) {
	      if (terminatorRules[i](state, nextLine, endLine, true)) {
	        terminate = true;
	        break;
	      }
	    }
	    if (terminate) { break; }

	    oldBMarks.push(state.bMarks[nextLine]);
	    oldTShift.push(state.tShift[nextLine]);

	    // A negative number means that this is a paragraph continuation;
	    //
	    // Any negative number will do the job here, but it's better for it
	    // to be large enough to make any bugs obvious.
	    state.tShift[nextLine] = -1337;
	  }

	  oldParentType = state.parentType;
	  state.parentType = 'blockquote';
	  state.tokens.push({
	    type: 'blockquote_open',
	    lines: lines = [ startLine, 0 ],
	    level: state.level++
	  });
	  state.parser.tokenize(state, startLine, nextLine);
	  state.tokens.push({
	    type: 'blockquote_close',
	    level: --state.level
	  });
	  state.parentType = oldParentType;
	  lines[1] = state.line;

	  // Restore original tShift; this might not be necessary since the parser
	  // has already been here, but just to make sure we can do that.
	  for (i = 0; i < oldTShift.length; i++) {
	    state.bMarks[i + startLine] = oldBMarks[i];
	    state.tShift[i + startLine] = oldTShift[i];
	  }
	  state.blkIndent = oldIndent;

	  return true;
	};


/***/ },
/* 494 */
/***/ function(module, exports) {

	// Horizontal rule

	'use strict';


	module.exports = function hr(state, startLine, endLine, silent) {
	  var marker, cnt, ch,
	      pos = state.bMarks[startLine],
	      max = state.eMarks[startLine];

	  pos += state.tShift[startLine];

	  if (pos > max) { return false; }

	  marker = state.src.charCodeAt(pos++);

	  // Check hr marker
	  if (marker !== 0x2A/* * */ &&
	      marker !== 0x2D/* - */ &&
	      marker !== 0x5F/* _ */) {
	    return false;
	  }

	  // markers can be mixed with spaces, but there should be at least 3 one

	  cnt = 1;
	  while (pos < max) {
	    ch = state.src.charCodeAt(pos++);
	    if (ch !== marker && ch !== 0x20/* space */) { return false; }
	    if (ch === marker) { cnt++; }
	  }

	  if (cnt < 3) { return false; }

	  if (silent) { return true; }

	  state.line = startLine + 1;
	  state.tokens.push({
	    type: 'hr',
	    lines: [ startLine, state.line ],
	    level: state.level
	  });

	  return true;
	};


/***/ },
/* 495 */
/***/ function(module, exports) {

	// Lists

	'use strict';


	// Search `[-+*][\n ]`, returns next pos arter marker on success
	// or -1 on fail.
	function skipBulletListMarker(state, startLine) {
	  var marker, pos, max;

	  pos = state.bMarks[startLine] + state.tShift[startLine];
	  max = state.eMarks[startLine];

	  if (pos >= max) { return -1; }

	  marker = state.src.charCodeAt(pos++);
	  // Check bullet
	  if (marker !== 0x2A/* * */ &&
	      marker !== 0x2D/* - */ &&
	      marker !== 0x2B/* + */) {
	    return -1;
	  }

	  if (pos < max && state.src.charCodeAt(pos) !== 0x20) {
	    // " 1.test " - is not a list item
	    return -1;
	  }

	  return pos;
	}

	// Search `\d+[.)][\n ]`, returns next pos arter marker on success
	// or -1 on fail.
	function skipOrderedListMarker(state, startLine) {
	  var ch,
	      pos = state.bMarks[startLine] + state.tShift[startLine],
	      max = state.eMarks[startLine];

	  if (pos + 1 >= max) { return -1; }

	  ch = state.src.charCodeAt(pos++);

	  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }

	  for (;;) {
	    // EOL -> fail
	    if (pos >= max) { return -1; }

	    ch = state.src.charCodeAt(pos++);

	    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {
	      continue;
	    }

	    // found valid marker
	    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {
	      break;
	    }

	    return -1;
	  }


	  if (pos < max && state.src.charCodeAt(pos) !== 0x20/* space */) {
	    // " 1.test " - is not a list item
	    return -1;
	  }
	  return pos;
	}

	function markTightParagraphs(state, idx) {
	  var i, l,
	      level = state.level + 2;

	  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {
	    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {
	      state.tokens[i + 2].tight = true;
	      state.tokens[i].tight = true;
	      i += 2;
	    }
	  }
	}


	module.exports = function list(state, startLine, endLine, silent) {
	  var nextLine,
	      indent,
	      oldTShift,
	      oldIndent,
	      oldTight,
	      oldParentType,
	      start,
	      posAfterMarker,
	      max,
	      indentAfterMarker,
	      markerValue,
	      markerCharCode,
	      isOrdered,
	      contentStart,
	      listTokIdx,
	      prevEmptyEnd,
	      listLines,
	      itemLines,
	      tight = true,
	      terminatorRules,
	      i, l, terminate;

	  // Detect list type and position after marker
	  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {
	    isOrdered = true;
	  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {
	    isOrdered = false;
	  } else {
	    return false;
	  }

	  if (state.level >= state.options.maxNesting) { return false; }

	  // We should terminate list on style change. Remember first one to compare.
	  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);

	  // For validation mode we can terminate immediately
	  if (silent) { return true; }

	  // Start list
	  listTokIdx = state.tokens.length;

	  if (isOrdered) {
	    start = state.bMarks[startLine] + state.tShift[startLine];
	    markerValue = Number(state.src.substr(start, posAfterMarker - start - 1));

	    state.tokens.push({
	      type: 'ordered_list_open',
	      order: markerValue,
	      lines: listLines = [ startLine, 0 ],
	      level: state.level++
	    });

	  } else {
	    state.tokens.push({
	      type: 'bullet_list_open',
	      lines: listLines = [ startLine, 0 ],
	      level: state.level++
	    });
	  }

	  //
	  // Iterate list items
	  //

	  nextLine = startLine;
	  prevEmptyEnd = false;
	  terminatorRules = state.parser.ruler.getRules('list');

	  while (nextLine < endLine) {
	    contentStart = state.skipSpaces(posAfterMarker);
	    max = state.eMarks[nextLine];

	    if (contentStart >= max) {
	      // trimming space in "-    \n  3" case, indent is 1 here
	      indentAfterMarker = 1;
	    } else {
	      indentAfterMarker = contentStart - posAfterMarker;
	    }

	    // If we have more than 4 spaces, the indent is 1
	    // (the rest is just indented code block)
	    if (indentAfterMarker > 4) { indentAfterMarker = 1; }

	    // If indent is less than 1, assume that it's one, example:
	    //  "-\n  test"
	    if (indentAfterMarker < 1) { indentAfterMarker = 1; }

	    // "  -  test"
	    //  ^^^^^ - calculating total length of this thing
	    indent = (posAfterMarker - state.bMarks[nextLine]) + indentAfterMarker;

	    // Run subparser & write tokens
	    state.tokens.push({
	      type: 'list_item_open',
	      lines: itemLines = [ startLine, 0 ],
	      level: state.level++
	    });

	    oldIndent = state.blkIndent;
	    oldTight = state.tight;
	    oldTShift = state.tShift[startLine];
	    oldParentType = state.parentType;
	    state.tShift[startLine] = contentStart - state.bMarks[startLine];
	    state.blkIndent = indent;
	    state.tight = true;
	    state.parentType = 'list';

	    state.parser.tokenize(state, startLine, endLine, true);

	    // If any of list item is tight, mark list as tight
	    if (!state.tight || prevEmptyEnd) {
	      tight = false;
	    }
	    // Item become loose if finish with empty line,
	    // but we should filter last element, because it means list finish
	    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);

	    state.blkIndent = oldIndent;
	    state.tShift[startLine] = oldTShift;
	    state.tight = oldTight;
	    state.parentType = oldParentType;

	    state.tokens.push({
	      type: 'list_item_close',
	      level: --state.level
	    });

	    nextLine = startLine = state.line;
	    itemLines[1] = nextLine;
	    contentStart = state.bMarks[startLine];

	    if (nextLine >= endLine) { break; }

	    if (state.isEmpty(nextLine)) {
	      break;
	    }

	    //
	    // Try to check if list is terminated or continued.
	    //
	    if (state.tShift[nextLine] < state.blkIndent) { break; }

	    // fail if terminating block found
	    terminate = false;
	    for (i = 0, l = terminatorRules.length; i < l; i++) {
	      if (terminatorRules[i](state, nextLine, endLine, true)) {
	        terminate = true;
	        break;
	      }
	    }
	    if (terminate) { break; }

	    // fail if list has another type
	    if (isOrdered) {
	      posAfterMarker = skipOrderedListMarker(state, nextLine);
	      if (posAfterMarker < 0) { break; }
	    } else {
	      posAfterMarker = skipBulletListMarker(state, nextLine);
	      if (posAfterMarker < 0) { break; }
	    }

	    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }
	  }

	  // Finilize list
	  state.tokens.push({
	    type: isOrdered ? 'ordered_list_close' : 'bullet_list_close',
	    level: --state.level
	  });
	  listLines[1] = nextLine;

	  state.line = nextLine;

	  // mark paragraphs tight if needed
	  if (tight) {
	    markTightParagraphs(state, listTokIdx);
	  }

	  return true;
	};


/***/ },
/* 496 */
/***/ function(module, exports) {

	// Process footnote reference list

	'use strict';


	module.exports = function footnote(state, startLine, endLine, silent) {
	  var oldBMark, oldTShift, oldParentType, pos, label,
	      start = state.bMarks[startLine] + state.tShift[startLine],
	      max = state.eMarks[startLine];

	  // line should be at least 5 chars - "[^x]:"
	  if (start + 4 > max) { return false; }

	  if (state.src.charCodeAt(start) !== 0x5B/* [ */) { return false; }
	  if (state.src.charCodeAt(start + 1) !== 0x5E/* ^ */) { return false; }
	  if (state.level >= state.options.maxNesting) { return false; }

	  for (pos = start + 2; pos < max; pos++) {
	    if (state.src.charCodeAt(pos) === 0x20) { return false; }
	    if (state.src.charCodeAt(pos) === 0x5D /* ] */) {
	      break;
	    }
	  }

	  if (pos === start + 2) { return false; } // no empty footnote labels
	  if (pos + 1 >= max || state.src.charCodeAt(++pos) !== 0x3A /* : */) { return false; }
	  if (silent) { return true; }
	  pos++;

	  if (!state.env.footnotes) { state.env.footnotes = {}; }
	  if (!state.env.footnotes.refs) { state.env.footnotes.refs = {}; }
	  label = state.src.slice(start + 2, pos - 2);
	  state.env.footnotes.refs[':' + label] = -1;

	  state.tokens.push({
	    type: 'footnote_reference_open',
	    label: label,
	    level: state.level++
	  });

	  oldBMark = state.bMarks[startLine];
	  oldTShift = state.tShift[startLine];
	  oldParentType = state.parentType;
	  state.tShift[startLine] = state.skipSpaces(pos) - pos;
	  state.bMarks[startLine] = pos;
	  state.blkIndent += 4;
	  state.parentType = 'footnote';

	  if (state.tShift[startLine] < state.blkIndent) {
	    state.tShift[startLine] += state.blkIndent;
	    state.bMarks[startLine] -= state.blkIndent;
	  }

	  state.parser.tokenize(state, startLine, endLine, true);

	  state.parentType = oldParentType;
	  state.blkIndent -= 4;
	  state.tShift[startLine] = oldTShift;
	  state.bMarks[startLine] = oldBMark;

	  state.tokens.push({
	    type: 'footnote_reference_close',
	    level: --state.level
	  });

	  return true;
	};


/***/ },
/* 497 */
/***/ function(module, exports) {

	// heading (#, ##, ...)

	'use strict';


	module.exports = function heading(state, startLine, endLine, silent) {
	  var ch, level, tmp,
	      pos = state.bMarks[startLine] + state.tShift[startLine],
	      max = state.eMarks[startLine];

	  if (pos >= max) { return false; }

	  ch  = state.src.charCodeAt(pos);

	  if (ch !== 0x23/* # */ || pos >= max) { return false; }

	  // count heading level
	  level = 1;
	  ch = state.src.charCodeAt(++pos);
	  while (ch === 0x23/* # */ && pos < max && level <= 6) {
	    level++;
	    ch = state.src.charCodeAt(++pos);
	  }

	  if (level > 6 || (pos < max && ch !== 0x20/* space */)) { return false; }

	  if (silent) { return true; }

	  // Let's cut tails like '    ###  ' from the end of string

	  max = state.skipCharsBack(max, 0x20, pos); // space
	  tmp = state.skipCharsBack(max, 0x23, pos); // #
	  if (tmp > pos && state.src.charCodeAt(tmp - 1) === 0x20/* space */) {
	    max = tmp;
	  }

	  state.line = startLine + 1;

	  state.tokens.push({ type: 'heading_open',
	    hLevel: level,
	    lines: [ startLine, state.line ],
	    level: state.level
	  });

	  // only if header is not empty
	  if (pos < max) {
	    state.tokens.push({
	      type: 'inline',
	      content: state.src.slice(pos, max).trim(),
	      level: state.level + 1,
	      lines: [ startLine, state.line ],
	      children: []
	    });
	  }
	  state.tokens.push({ type: 'heading_close', hLevel: level, level: state.level });

	  return true;
	};


/***/ },
/* 498 */
/***/ function(module, exports) {

	// lheading (---, ===)

	'use strict';


	module.exports = function lheading(state, startLine, endLine/*, silent*/) {
	  var marker, pos, max,
	      next = startLine + 1;

	  if (next >= endLine) { return false; }
	  if (state.tShift[next] < state.blkIndent) { return false; }

	  // Scan next line

	  if (state.tShift[next] - state.blkIndent > 3) { return false; }

	  pos = state.bMarks[next] + state.tShift[next];
	  max = state.eMarks[next];

	  if (pos >= max) { return false; }

	  marker = state.src.charCodeAt(pos);

	  if (marker !== 0x2D/* - */ && marker !== 0x3D/* = */) { return false; }

	  pos = state.skipChars(pos, marker);

	  pos = state.skipSpaces(pos);

	  if (pos < max) { return false; }

	  pos = state.bMarks[startLine] + state.tShift[startLine];

	  state.line = next + 1;
	  state.tokens.push({
	    type: 'heading_open',
	    hLevel: marker === 0x3D/* = */ ? 1 : 2,
	    lines: [ startLine, state.line ],
	    level: state.level
	  });
	  state.tokens.push({
	    type: 'inline',
	    content: state.src.slice(pos, state.eMarks[startLine]).trim(),
	    level: state.level + 1,
	    lines: [ startLine, state.line - 1 ],
	    children: []
	  });
	  state.tokens.push({
	    type: 'heading_close',
	    hLevel: marker === 0x3D/* = */ ? 1 : 2,
	    level: state.level
	  });

	  return true;
	};


/***/ },
/* 499 */
/***/ function(module, exports, __webpack_require__) {

	// HTML block

	'use strict';


	var block_names = __webpack_require__(500);


	var HTML_TAG_OPEN_RE = /^<([a-zA-Z]{1,15})[\s\/>]/;
	var HTML_TAG_CLOSE_RE = /^<\/([a-zA-Z]{1,15})[\s>]/;

	function isLetter(ch) {
	  /*eslint no-bitwise:0*/
	  var lc = ch | 0x20; // to lower case
	  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);
	}

	module.exports = function htmlblock(state, startLine, endLine, silent) {
	  var ch, match, nextLine,
	      pos = state.bMarks[startLine],
	      max = state.eMarks[startLine],
	      shift = state.tShift[startLine];

	  pos += shift;

	  if (!state.options.html) { return false; }

	  if (shift > 3 || pos + 2 >= max) { return false; }

	  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }

	  ch = state.src.charCodeAt(pos + 1);

	  if (ch === 0x21/* ! */ || ch === 0x3F/* ? */) {
	    // Directive start / comment start / processing instruction start
	    if (silent) { return true; }

	  } else if (ch === 0x2F/* / */ || isLetter(ch)) {

	    // Probably start or end of tag
	    if (ch === 0x2F/* \ */) {
	      // closing tag
	      match = state.src.slice(pos, max).match(HTML_TAG_CLOSE_RE);
	      if (!match) { return false; }
	    } else {
	      // opening tag
	      match = state.src.slice(pos, max).match(HTML_TAG_OPEN_RE);
	      if (!match) { return false; }
	    }
	    // Make sure tag name is valid
	    if (block_names[match[1].toLowerCase()] !== true) { return false; }
	    if (silent) { return true; }

	  } else {
	    return false;
	  }

	  // If we are here - we detected HTML block.
	  // Let's roll down till empty line (block end).
	  nextLine = startLine + 1;
	  while (nextLine < state.lineMax && !state.isEmpty(nextLine)) {
	    nextLine++;
	  }

	  state.line = nextLine;
	  state.tokens.push({
	    type: 'htmlblock',
	    level: state.level,
	    lines: [ startLine, state.line ],
	    content: state.getLines(startLine, nextLine, 0, true)
	  });

	  return true;
	};


/***/ },
/* 500 */
/***/ function(module, exports) {

	// List of valid html blocks names, accorting to commonmark spec
	// http://jgm.github.io/CommonMark/spec.html#html-blocks

	'use strict';

	var html_blocks = {};

	[
	  'article',
	  'aside',
	  'button',
	  'blockquote',
	  'body',
	  'canvas',
	  'caption',
	  'col',
	  'colgroup',
	  'dd',
	  'div',
	  'dl',
	  'dt',
	  'embed',
	  'fieldset',
	  'figcaption',
	  'figure',
	  'footer',
	  'form',
	  'h1',
	  'h2',
	  'h3',
	  'h4',
	  'h5',
	  'h6',
	  'header',
	  'hgroup',
	  'hr',
	  'iframe',
	  'li',
	  'map',
	  'object',
	  'ol',
	  'output',
	  'p',
	  'pre',
	  'progress',
	  'script',
	  'section',
	  'style',
	  'table',
	  'tbody',
	  'td',
	  'textarea',
	  'tfoot',
	  'th',
	  'tr',
	  'thead',
	  'ul',
	  'video'
	].forEach(function (name) { html_blocks[name] = true; });


	module.exports = html_blocks;


/***/ },
/* 501 */
/***/ function(module, exports) {

	// GFM table, non-standard

	'use strict';


	function getLine(state, line) {
	  var pos = state.bMarks[line] + state.blkIndent,
	      max = state.eMarks[line];

	  return state.src.substr(pos, max - pos);
	}


	module.exports = function table(state, startLine, endLine, silent) {
	  var ch, lineText, pos, i, nextLine, rows,
	      aligns, t, tableLines, tbodyLines;

	  // should have at least three lines
	  if (startLine + 2 > endLine) { return false; }

	  nextLine = startLine + 1;

	  if (state.tShift[nextLine] < state.blkIndent) { return false; }

	  // first character of the second line should be '|' or '-'

	  pos = state.bMarks[nextLine] + state.tShift[nextLine];
	  if (pos >= state.eMarks[nextLine]) { return false; }

	  ch = state.src.charCodeAt(pos);
	  if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */) { return false; }

	  lineText = getLine(state, startLine + 1);
	  if (!/^[-:| ]+$/.test(lineText)) { return false; }

	  rows = lineText.split('|');
	  if (rows <= 2) { return false; }
	  aligns = [];
	  for (i = 0; i < rows.length; i++) {
	    t = rows[i].trim();
	    if (!t) {
	      // allow empty columns before and after table, but not in between columns;
	      // e.g. allow ` |---| `, disallow ` ---||--- `
	      if (i === 0 || i === rows.length - 1) {
	        continue;
	      } else {
	        return false;
	      }
	    }

	    if (!/^:?-+:?$/.test(t)) { return false; }
	    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {
	      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');
	    } else if (t.charCodeAt(0) === 0x3A/* : */) {
	      aligns.push('left');
	    } else {
	      aligns.push('');
	    }
	  }

	  lineText = getLine(state, startLine).trim();
	  if (lineText.indexOf('|') === -1) { return false; }
	  rows = lineText.replace(/^\||\|$/g, '').split('|');
	  if (aligns.length !== rows.length) { return false; }
	  if (silent) { return true; }

	  state.tokens.push({
	    type: 'table_open',
	    lines: tableLines = [ startLine, 0 ],
	    level: state.level++
	  });
	  state.tokens.push({
	    type: 'thead_open',
	    lines: [ startLine, startLine + 1 ],
	    level: state.level++
	  });

	  state.tokens.push({
	    type: 'tr_open',
	    lines: [ startLine, startLine + 1 ],
	    level: state.level++
	  });
	  for (i = 0; i < rows.length; i++) {
	    state.tokens.push({
	      type: 'th_open',
	      align: aligns[i],
	      lines: [ startLine, startLine + 1 ],
	      level: state.level++
	    });
	    state.tokens.push({
	      type: 'inline',
	      content: rows[i].trim(),
	      lines: [ startLine, startLine + 1 ],
	      level: state.level,
	      children: []
	    });
	    state.tokens.push({ type: 'th_close', level: --state.level });
	  }
	  state.tokens.push({ type: 'tr_close', level: --state.level });
	  state.tokens.push({ type: 'thead_close', level: --state.level });

	  state.tokens.push({
	    type: 'tbody_open',
	    lines: tbodyLines = [ startLine + 2, 0 ],
	    level: state.level++
	  });

	  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {
	    if (state.tShift[nextLine] < state.blkIndent) { break; }

	    lineText = getLine(state, nextLine).trim();
	    if (lineText.indexOf('|') === -1) { break; }
	    rows = lineText.replace(/^\||\|$/g, '').split('|');

	    state.tokens.push({ type: 'tr_open', level: state.level++ });
	    for (i = 0; i < rows.length; i++) {
	      state.tokens.push({ type: 'td_open', align: aligns[i], level: state.level++ });
	      state.tokens.push({
	        type: 'inline',
	        content: rows[i].replace(/^\|? *| *\|?$/g, ''),
	        level: state.level,
	        children: []
	      });
	      state.tokens.push({ type: 'td_close', level: --state.level });
	    }
	    state.tokens.push({ type: 'tr_close', level: --state.level });
	  }
	  state.tokens.push({ type: 'tbody_close', level: --state.level });
	  state.tokens.push({ type: 'table_close', level: --state.level });

	  tableLines[1] = tbodyLines[1] = nextLine;
	  state.line = nextLine;
	  return true;
	};


/***/ },
/* 502 */
/***/ function(module, exports) {

	// Definition lists

	'use strict';


	// Search `[:~][\n ]`, returns next pos after marker on success
	// or -1 on fail.
	function skipMarker(state, line) {
	  var pos, marker,
	      start = state.bMarks[line] + state.tShift[line],
	      max = state.eMarks[line];

	  if (start >= max) { return -1; }

	  // Check bullet
	  marker = state.src.charCodeAt(start++);
	  if (marker !== 0x7E/* ~ */ && marker !== 0x3A/* : */) { return -1; }

	  pos = state.skipSpaces(start);

	  // require space after ":"
	  if (start === pos) { return -1; }

	  // no empty definitions, e.g. "  : "
	  if (pos >= max) { return -1; }

	  return pos;
	}

	function markTightParagraphs(state, idx) {
	  var i, l,
	      level = state.level + 2;

	  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {
	    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {
	      state.tokens[i + 2].tight = true;
	      state.tokens[i].tight = true;
	      i += 2;
	    }
	  }
	}

	module.exports = function deflist(state, startLine, endLine, silent) {
	  var contentStart,
	      ddLine,
	      dtLine,
	      itemLines,
	      listLines,
	      listTokIdx,
	      nextLine,
	      oldIndent,
	      oldDDIndent,
	      oldParentType,
	      oldTShift,
	      oldTight,
	      prevEmptyEnd,
	      tight;

	  if (silent) {
	    // quirk: validation mode validates a dd block only, not a whole deflist
	    if (state.ddIndent < 0) { return false; }
	    return skipMarker(state, startLine) >= 0;
	  }

	  nextLine = startLine + 1;
	  if (state.isEmpty(nextLine)) {
	    if (++nextLine > endLine) { return false; }
	  }

	  if (state.tShift[nextLine] < state.blkIndent) { return false; }
	  contentStart = skipMarker(state, nextLine);
	  if (contentStart < 0) { return false; }

	  if (state.level >= state.options.maxNesting) { return false; }

	  // Start list
	  listTokIdx = state.tokens.length;

	  state.tokens.push({
	    type: 'dl_open',
	    lines: listLines = [ startLine, 0 ],
	    level: state.level++
	  });

	  //
	  // Iterate list items
	  //

	  dtLine = startLine;
	  ddLine = nextLine;

	  // One definition list can contain multiple DTs,
	  // and one DT can be followed by multiple DDs.
	  //
	  // Thus, there is two loops here, and label is
	  // needed to break out of the second one
	  //
	  /*eslint no-labels:0,block-scoped-var:0*/
	  OUTER:
	  for (;;) {
	    tight = true;
	    prevEmptyEnd = false;

	    state.tokens.push({
	      type: 'dt_open',
	      lines: [ dtLine, dtLine ],
	      level: state.level++
	    });
	    state.tokens.push({
	      type: 'inline',
	      content: state.getLines(dtLine, dtLine + 1, state.blkIndent, false).trim(),
	      level: state.level + 1,
	      lines: [ dtLine, dtLine ],
	      children: []
	    });
	    state.tokens.push({
	      type: 'dt_close',
	      level: --state.level
	    });

	    for (;;) {
	      state.tokens.push({
	        type: 'dd_open',
	        lines: itemLines = [ nextLine, 0 ],
	        level: state.level++
	      });

	      oldTight = state.tight;
	      oldDDIndent = state.ddIndent;
	      oldIndent = state.blkIndent;
	      oldTShift = state.tShift[ddLine];
	      oldParentType = state.parentType;
	      state.blkIndent = state.ddIndent = state.tShift[ddLine] + 2;
	      state.tShift[ddLine] = contentStart - state.bMarks[ddLine];
	      state.tight = true;
	      state.parentType = 'deflist';

	      state.parser.tokenize(state, ddLine, endLine, true);

	      // If any of list item is tight, mark list as tight
	      if (!state.tight || prevEmptyEnd) {
	        tight = false;
	      }
	      // Item become loose if finish with empty line,
	      // but we should filter last element, because it means list finish
	      prevEmptyEnd = (state.line - ddLine) > 1 && state.isEmpty(state.line - 1);

	      state.tShift[ddLine] = oldTShift;
	      state.tight = oldTight;
	      state.parentType = oldParentType;
	      state.blkIndent = oldIndent;
	      state.ddIndent = oldDDIndent;

	      state.tokens.push({
	        type: 'dd_close',
	        level: --state.level
	      });

	      itemLines[1] = nextLine = state.line;

	      if (nextLine >= endLine) { break OUTER; }

	      if (state.tShift[nextLine] < state.blkIndent) { break OUTER; }
	      contentStart = skipMarker(state, nextLine);
	      if (contentStart < 0) { break; }

	      ddLine = nextLine;

	      // go to the next loop iteration:
	      // insert DD tag and repeat checking
	    }

	    if (nextLine >= endLine) { break; }
	    dtLine = nextLine;

	    if (state.isEmpty(dtLine)) { break; }
	    if (state.tShift[dtLine] < state.blkIndent) { break; }

	    ddLine = dtLine + 1;
	    if (ddLine >= endLine) { break; }
	    if (state.isEmpty(ddLine)) { ddLine++; }
	    if (ddLine >= endLine) { break; }

	    if (state.tShift[ddLine] < state.blkIndent) { break; }
	    contentStart = skipMarker(state, ddLine);
	    if (contentStart < 0) { break; }

	    // go to the next loop iteration:
	    // insert DT and DD tags and repeat checking
	  }

	  // Finilize list
	  state.tokens.push({
	    type: 'dl_close',
	    level: --state.level
	  });
	  listLines[1] = nextLine;

	  state.line = nextLine;

	  // mark paragraphs tight if needed
	  if (tight) {
	    markTightParagraphs(state, listTokIdx);
	  }

	  return true;
	};


/***/ },
/* 503 */
/***/ function(module, exports) {

	// Paragraph

	'use strict';


	module.exports = function paragraph(state, startLine/*, endLine*/) {
	  var endLine, content, terminate, i, l,
	      nextLine = startLine + 1,
	      terminatorRules;

	  endLine = state.lineMax;

	  // jump line-by-line until empty one or EOF
	  if (nextLine < endLine && !state.isEmpty(nextLine)) {
	    terminatorRules = state.parser.ruler.getRules('paragraph');

	    for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {
	      // this would be a code block normally, but after paragraph
	      // it's considered a lazy continuation regardless of what's there
	      if (state.tShift[nextLine] - state.blkIndent > 3) { continue; }

	      // Some tags can terminate paragraph without empty line.
	      terminate = false;
	      for (i = 0, l = terminatorRules.length; i < l; i++) {
	        if (terminatorRules[i](state, nextLine, endLine, true)) {
	          terminate = true;
	          break;
	        }
	      }
	      if (terminate) { break; }
	    }
	  }

	  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();

	  state.line = nextLine;
	  if (content.length) {
	    state.tokens.push({
	      type: 'paragraph_open',
	      tight: false,
	      lines: [ startLine, state.line ],
	      level: state.level
	    });
	    state.tokens.push({
	      type: 'inline',
	      content: content,
	      level: state.level + 1,
	      lines: [ startLine, state.line ],
	      children: []
	    });
	    state.tokens.push({
	      type: 'paragraph_close',
	      tight: false,
	      level: state.level
	    });
	  }

	  return true;
	};


/***/ },
/* 504 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Local dependencies
	 */

	var Ruler       = __webpack_require__(472);
	var StateInline = __webpack_require__(475);
	var utils       = __webpack_require__(467);

	/**
	 * Inline Parser `rules`
	 */

	var _rules = [
	  [ 'text',            __webpack_require__(505) ],
	  [ 'newline',         __webpack_require__(506) ],
	  [ 'escape',          __webpack_require__(507) ],
	  [ 'backticks',       __webpack_require__(508) ],
	  [ 'del',             __webpack_require__(509) ],
	  [ 'ins',             __webpack_require__(510) ],
	  [ 'mark',            __webpack_require__(511) ],
	  [ 'emphasis',        __webpack_require__(512) ],
	  [ 'sub',             __webpack_require__(513) ],
	  [ 'sup',             __webpack_require__(514) ],
	  [ 'links',           __webpack_require__(515) ],
	  [ 'footnote_inline', __webpack_require__(516) ],
	  [ 'footnote_ref',    __webpack_require__(517) ],
	  [ 'autolink',        __webpack_require__(518) ],
	  [ 'htmltag',         __webpack_require__(520) ],
	  [ 'entity',          __webpack_require__(522) ]
	];

	/**
	 * Inline Parser class. Note that link validation is stricter
	 * in Remarkable than what is specified by CommonMark. If you
	 * want to change this you can use a custom validator.
	 *
	 * @api private
	 */

	function ParserInline() {
	  this.ruler = new Ruler();
	  for (var i = 0; i < _rules.length; i++) {
	    this.ruler.push(_rules[i][0], _rules[i][1]);
	  }

	  // Can be overridden with a custom validator
	  this.validateLink = validateLink;
	}

	/**
	 * Skip a single token by running all rules in validation mode.
	 * Returns `true` if any rule reports success.
	 *
	 * @param  {Object} `state`
	 * @api privage
	 */

	ParserInline.prototype.skipToken = function (state) {
	  var rules = this.ruler.getRules('');
	  var len = rules.length;
	  var pos = state.pos;
	  var i, cached_pos;

	  if ((cached_pos = state.cacheGet(pos)) > 0) {
	    state.pos = cached_pos;
	    return;
	  }

	  for (i = 0; i < len; i++) {
	    if (rules[i](state, true)) {
	      state.cacheSet(pos, state.pos);
	      return;
	    }
	  }

	  state.pos++;
	  state.cacheSet(pos, state.pos);
	};

	/**
	 * Generate tokens for the given input range.
	 *
	 * @param  {Object} `state`
	 * @api private
	 */

	ParserInline.prototype.tokenize = function (state) {
	  var rules = this.ruler.getRules('');
	  var len = rules.length;
	  var end = state.posMax;
	  var ok, i;

	  while (state.pos < end) {

	    // Try all possible rules.
	    // On success, the rule should:
	    //
	    // - update `state.pos`
	    // - update `state.tokens`
	    // - return true
	    for (i = 0; i < len; i++) {
	      ok = rules[i](state, false);

	      if (ok) {
	        break;
	      }
	    }

	    if (ok) {
	      if (state.pos >= end) { break; }
	      continue;
	    }

	    state.pending += state.src[state.pos++];
	  }

	  if (state.pending) {
	    state.pushPending();
	  }
	};

	/**
	 * Parse the given input string.
	 *
	 * @param  {String} `str`
	 * @param  {Object} `options`
	 * @param  {Object} `env`
	 * @param  {Array} `outTokens`
	 * @api private
	 */

	ParserInline.prototype.parse = function (str, options, env, outTokens) {
	  var state = new StateInline(str, this, options, env, outTokens);
	  this.tokenize(state);
	};

	/**
	 * Validate the given `url` by checking for bad protocols.
	 *
	 * @param  {String} `url`
	 * @return {Boolean}
	 */

	function validateLink(url) {
	  var BAD_PROTOCOLS = [ 'vbscript', 'javascript', 'file' ];
	  var str = url.trim().toLowerCase();
	  // Care about digital entities "javascript&#x3A;alert(1)"
	  str = utils.replaceEntities(str);
	  if (str.indexOf(':') !== -1 && BAD_PROTOCOLS.indexOf(str.split(':')[0]) !== -1) {
	    return false;
	  }
	  return true;
	}

	/**
	 * Expose `ParserInline`
	 */

	module.exports = ParserInline;


/***/ },
/* 505 */
/***/ function(module, exports) {

	// Skip text characters for text token, place those to pending buffer
	// and increment current pos

	'use strict';


	// Rule to skip pure text
	// '{}$%@~+=:' reserved for extentions

	function isTerminatorChar(ch) {
	  switch (ch) {
	    case 0x0A/* \n */:
	    case 0x5C/* \ */:
	    case 0x60/* ` */:
	    case 0x2A/* * */:
	    case 0x5F/* _ */:
	    case 0x5E/* ^ */:
	    case 0x5B/* [ */:
	    case 0x5D/* ] */:
	    case 0x21/* ! */:
	    case 0x26/* & */:
	    case 0x3C/* < */:
	    case 0x3E/* > */:
	    case 0x7B/* { */:
	    case 0x7D/* } */:
	    case 0x24/* $ */:
	    case 0x25/* % */:
	    case 0x40/* @ */:
	    case 0x7E/* ~ */:
	    case 0x2B/* + */:
	    case 0x3D/* = */:
	    case 0x3A/* : */:
	      return true;
	    default:
	      return false;
	  }
	}

	module.exports = function text(state, silent) {
	  var pos = state.pos;

	  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {
	    pos++;
	  }

	  if (pos === state.pos) { return false; }

	  if (!silent) { state.pending += state.src.slice(state.pos, pos); }

	  state.pos = pos;

	  return true;
	};


/***/ },
/* 506 */
/***/ function(module, exports) {

	// Proceess '\n'

	'use strict';

	module.exports = function newline(state, silent) {
	  var pmax, max, pos = state.pos;

	  if (state.src.charCodeAt(pos) !== 0x0A/* \n */) { return false; }

	  pmax = state.pending.length - 1;
	  max = state.posMax;

	  // '  \n' -> hardbreak
	  // Lookup in pending chars is bad practice! Don't copy to other rules!
	  // Pending string is stored in concat mode, indexed lookups will cause
	  // convertion to flat mode.
	  if (!silent) {
	    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {
	      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {
	        state.pending = state.pending.replace(/ +$/, '');
	        state.push({
	          type: 'hardbreak',
	          level: state.level
	        });
	      } else {
	        state.pending = state.pending.slice(0, -1);
	        state.push({
	          type: 'softbreak',
	          level: state.level
	        });
	      }

	    } else {
	      state.push({
	        type: 'softbreak',
	        level: state.level
	      });
	    }
	  }

	  pos++;

	  // skip heading spaces for next line
	  while (pos < max && state.src.charCodeAt(pos) === 0x20) { pos++; }

	  state.pos = pos;
	  return true;
	};


/***/ },
/* 507 */
/***/ function(module, exports) {

	// Proceess escaped chars and hardbreaks

	'use strict';

	var ESCAPED = [];

	for (var i = 0; i < 256; i++) { ESCAPED.push(0); }

	'\\!"#$%&\'()*+,./:;<=>?@[]^_`{|}~-'
	  .split('').forEach(function(ch) { ESCAPED[ch.charCodeAt(0)] = 1; });


	module.exports = function escape(state, silent) {
	  var ch, pos = state.pos, max = state.posMax;

	  if (state.src.charCodeAt(pos) !== 0x5C/* \ */) { return false; }

	  pos++;

	  if (pos < max) {
	    ch = state.src.charCodeAt(pos);

	    if (ch < 256 && ESCAPED[ch] !== 0) {
	      if (!silent) { state.pending += state.src[pos]; }
	      state.pos += 2;
	      return true;
	    }

	    if (ch === 0x0A) {
	      if (!silent) {
	        state.push({
	          type: 'hardbreak',
	          level: state.level
	        });
	      }

	      pos++;
	      // skip leading whitespaces from next line
	      while (pos < max && state.src.charCodeAt(pos) === 0x20) { pos++; }

	      state.pos = pos;
	      return true;
	    }
	  }

	  if (!silent) { state.pending += '\\'; }
	  state.pos++;
	  return true;
	};


/***/ },
/* 508 */
/***/ function(module, exports) {

	// Parse backticks

	'use strict';

	module.exports = function backticks(state, silent) {
	  var start, max, marker, matchStart, matchEnd,
	      pos = state.pos,
	      ch = state.src.charCodeAt(pos);

	  if (ch !== 0x60/* ` */) { return false; }

	  start = pos;
	  pos++;
	  max = state.posMax;

	  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }

	  marker = state.src.slice(start, pos);

	  matchStart = matchEnd = pos;

	  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {
	    matchEnd = matchStart + 1;

	    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }

	    if (matchEnd - matchStart === marker.length) {
	      if (!silent) {
	        state.push({
	          type: 'code',
	          content: state.src.slice(pos, matchStart)
	                              .replace(/[ \n]+/g, ' ')
	                              .trim(),
	          block: false,
	          level: state.level
	        });
	      }
	      state.pos = matchEnd;
	      return true;
	    }
	  }

	  if (!silent) { state.pending += marker; }
	  state.pos += marker.length;
	  return true;
	};


/***/ },
/* 509 */
/***/ function(module, exports) {

	// Process ~~deleted text~~

	'use strict';

	module.exports = function del(state, silent) {
	  var found,
	      pos,
	      stack,
	      max = state.posMax,
	      start = state.pos,
	      lastChar,
	      nextChar;

	  if (state.src.charCodeAt(start) !== 0x7E/* ~ */) { return false; }
	  if (silent) { return false; } // don't run any pairs in validation mode
	  if (start + 4 >= max) { return false; }
	  if (state.src.charCodeAt(start + 1) !== 0x7E/* ~ */) { return false; }
	  if (state.level >= state.options.maxNesting) { return false; }

	  lastChar = start > 0 ? state.src.charCodeAt(start - 1) : -1;
	  nextChar = state.src.charCodeAt(start + 2);

	  if (lastChar === 0x7E/* ~ */) { return false; }
	  if (nextChar === 0x7E/* ~ */) { return false; }
	  if (nextChar === 0x20 || nextChar === 0x0A) { return false; }

	  pos = start + 2;
	  while (pos < max && state.src.charCodeAt(pos) === 0x7E/* ~ */) { pos++; }
	  if (pos > start + 3) {
	    // sequence of 4+ markers taking as literal, same as in a emphasis
	    state.pos += pos - start;
	    if (!silent) { state.pending += state.src.slice(start, pos); }
	    return true;
	  }

	  state.pos = start + 2;
	  stack = 1;

	  while (state.pos + 1 < max) {
	    if (state.src.charCodeAt(state.pos) === 0x7E/* ~ */) {
	      if (state.src.charCodeAt(state.pos + 1) === 0x7E/* ~ */) {
	        lastChar = state.src.charCodeAt(state.pos - 1);
	        nextChar = state.pos + 2 < max ? state.src.charCodeAt(state.pos + 2) : -1;
	        if (nextChar !== 0x7E/* ~ */ && lastChar !== 0x7E/* ~ */) {
	          if (lastChar !== 0x20 && lastChar !== 0x0A) {
	            // closing '~~'
	            stack--;
	          } else if (nextChar !== 0x20 && nextChar !== 0x0A) {
	            // opening '~~'
	            stack++;
	          } // else {
	            //  // standalone ' ~~ ' indented with spaces
	            // }
	          if (stack <= 0) {
	            found = true;
	            break;
	          }
	        }
	      }
	    }

	    state.parser.skipToken(state);
	  }

	  if (!found) {
	    // parser failed to find ending tag, so it's not valid emphasis
	    state.pos = start;
	    return false;
	  }

	  // found!
	  state.posMax = state.pos;
	  state.pos = start + 2;

	  if (!silent) {
	    state.push({ type: 'del_open', level: state.level++ });
	    state.parser.tokenize(state);
	    state.push({ type: 'del_close', level: --state.level });
	  }

	  state.pos = state.posMax + 2;
	  state.posMax = max;
	  return true;
	};


/***/ },
/* 510 */
/***/ function(module, exports) {

	// Process ++inserted text++

	'use strict';

	module.exports = function ins(state, silent) {
	  var found,
	      pos,
	      stack,
	      max = state.posMax,
	      start = state.pos,
	      lastChar,
	      nextChar;

	  if (state.src.charCodeAt(start) !== 0x2B/* + */) { return false; }
	  if (silent) { return false; } // don't run any pairs in validation mode
	  if (start + 4 >= max) { return false; }
	  if (state.src.charCodeAt(start + 1) !== 0x2B/* + */) { return false; }
	  if (state.level >= state.options.maxNesting) { return false; }

	  lastChar = start > 0 ? state.src.charCodeAt(start - 1) : -1;
	  nextChar = state.src.charCodeAt(start + 2);

	  if (lastChar === 0x2B/* + */) { return false; }
	  if (nextChar === 0x2B/* + */) { return false; }
	  if (nextChar === 0x20 || nextChar === 0x0A) { return false; }

	  pos = start + 2;
	  while (pos < max && state.src.charCodeAt(pos) === 0x2B/* + */) { pos++; }
	  if (pos !== start + 2) {
	    // sequence of 3+ markers taking as literal, same as in a emphasis
	    state.pos += pos - start;
	    if (!silent) { state.pending += state.src.slice(start, pos); }
	    return true;
	  }

	  state.pos = start + 2;
	  stack = 1;

	  while (state.pos + 1 < max) {
	    if (state.src.charCodeAt(state.pos) === 0x2B/* + */) {
	      if (state.src.charCodeAt(state.pos + 1) === 0x2B/* + */) {
	        lastChar = state.src.charCodeAt(state.pos - 1);
	        nextChar = state.pos + 2 < max ? state.src.charCodeAt(state.pos + 2) : -1;
	        if (nextChar !== 0x2B/* + */ && lastChar !== 0x2B/* + */) {
	          if (lastChar !== 0x20 && lastChar !== 0x0A) {
	            // closing '++'
	            stack--;
	          } else if (nextChar !== 0x20 && nextChar !== 0x0A) {
	            // opening '++'
	            stack++;
	          } // else {
	            //  // standalone ' ++ ' indented with spaces
	            // }
	          if (stack <= 0) {
	            found = true;
	            break;
	          }
	        }
	      }
	    }

	    state.parser.skipToken(state);
	  }

	  if (!found) {
	    // parser failed to find ending tag, so it's not valid emphasis
	    state.pos = start;
	    return false;
	  }

	  // found!
	  state.posMax = state.pos;
	  state.pos = start + 2;

	  if (!silent) {
	    state.push({ type: 'ins_open', level: state.level++ });
	    state.parser.tokenize(state);
	    state.push({ type: 'ins_close', level: --state.level });
	  }

	  state.pos = state.posMax + 2;
	  state.posMax = max;
	  return true;
	};


/***/ },
/* 511 */
/***/ function(module, exports) {

	// Process ==highlighted text==

	'use strict';

	module.exports = function del(state, silent) {
	  var found,
	      pos,
	      stack,
	      max = state.posMax,
	      start = state.pos,
	      lastChar,
	      nextChar;

	  if (state.src.charCodeAt(start) !== 0x3D/* = */) { return false; }
	  if (silent) { return false; } // don't run any pairs in validation mode
	  if (start + 4 >= max) { return false; }
	  if (state.src.charCodeAt(start + 1) !== 0x3D/* = */) { return false; }
	  if (state.level >= state.options.maxNesting) { return false; }

	  lastChar = start > 0 ? state.src.charCodeAt(start - 1) : -1;
	  nextChar = state.src.charCodeAt(start + 2);

	  if (lastChar === 0x3D/* = */) { return false; }
	  if (nextChar === 0x3D/* = */) { return false; }
	  if (nextChar === 0x20 || nextChar === 0x0A) { return false; }

	  pos = start + 2;
	  while (pos < max && state.src.charCodeAt(pos) === 0x3D/* = */) { pos++; }
	  if (pos !== start + 2) {
	    // sequence of 3+ markers taking as literal, same as in a emphasis
	    state.pos += pos - start;
	    if (!silent) { state.pending += state.src.slice(start, pos); }
	    return true;
	  }

	  state.pos = start + 2;
	  stack = 1;

	  while (state.pos + 1 < max) {
	    if (state.src.charCodeAt(state.pos) === 0x3D/* = */) {
	      if (state.src.charCodeAt(state.pos + 1) === 0x3D/* = */) {
	        lastChar = state.src.charCodeAt(state.pos - 1);
	        nextChar = state.pos + 2 < max ? state.src.charCodeAt(state.pos + 2) : -1;
	        if (nextChar !== 0x3D/* = */ && lastChar !== 0x3D/* = */) {
	          if (lastChar !== 0x20 && lastChar !== 0x0A) {
	            // closing '=='
	            stack--;
	          } else if (nextChar !== 0x20 && nextChar !== 0x0A) {
	            // opening '=='
	            stack++;
	          } // else {
	            //  // standalone ' == ' indented with spaces
	            // }
	          if (stack <= 0) {
	            found = true;
	            break;
	          }
	        }
	      }
	    }

	    state.parser.skipToken(state);
	  }

	  if (!found) {
	    // parser failed to find ending tag, so it's not valid emphasis
	    state.pos = start;
	    return false;
	  }

	  // found!
	  state.posMax = state.pos;
	  state.pos = start + 2;

	  if (!silent) {
	    state.push({ type: 'mark_open', level: state.level++ });
	    state.parser.tokenize(state);
	    state.push({ type: 'mark_close', level: --state.level });
	  }

	  state.pos = state.posMax + 2;
	  state.posMax = max;
	  return true;
	};


/***/ },
/* 512 */
/***/ function(module, exports) {

	// Process *this* and _that_

	'use strict';


	function isAlphaNum(code) {
	  return (code >= 0x30 /* 0 */ && code <= 0x39 /* 9 */) ||
	         (code >= 0x41 /* A */ && code <= 0x5A /* Z */) ||
	         (code >= 0x61 /* a */ && code <= 0x7A /* z */);
	}

	// parse sequence of emphasis markers,
	// "start" should point at a valid marker
	function scanDelims(state, start) {
	  var pos = start, lastChar, nextChar, count,
	      can_open = true,
	      can_close = true,
	      max = state.posMax,
	      marker = state.src.charCodeAt(start);

	  lastChar = start > 0 ? state.src.charCodeAt(start - 1) : -1;

	  while (pos < max && state.src.charCodeAt(pos) === marker) { pos++; }
	  if (pos >= max) { can_open = false; }
	  count = pos - start;

	  if (count >= 4) {
	    // sequence of four or more unescaped markers can't start/end an emphasis
	    can_open = can_close = false;
	  } else {
	    nextChar = pos < max ? state.src.charCodeAt(pos) : -1;

	    // check whitespace conditions
	    if (nextChar === 0x20 || nextChar === 0x0A) { can_open = false; }
	    if (lastChar === 0x20 || lastChar === 0x0A) { can_close = false; }

	    if (marker === 0x5F /* _ */) {
	      // check if we aren't inside the word
	      if (isAlphaNum(lastChar)) { can_open = false; }
	      if (isAlphaNum(nextChar)) { can_close = false; }
	    }
	  }

	  return {
	    can_open: can_open,
	    can_close: can_close,
	    delims: count
	  };
	}

	module.exports = function emphasis(state, silent) {
	  var startCount,
	      count,
	      found,
	      oldCount,
	      newCount,
	      stack,
	      res,
	      max = state.posMax,
	      start = state.pos,
	      marker = state.src.charCodeAt(start);

	  if (marker !== 0x5F/* _ */ && marker !== 0x2A /* * */) { return false; }
	  if (silent) { return false; } // don't run any pairs in validation mode

	  res = scanDelims(state, start);
	  startCount = res.delims;
	  if (!res.can_open) {
	    state.pos += startCount;
	    if (!silent) { state.pending += state.src.slice(start, state.pos); }
	    return true;
	  }

	  if (state.level >= state.options.maxNesting) { return false; }

	  state.pos = start + startCount;
	  stack = [ startCount ];

	  while (state.pos < max) {
	    if (state.src.charCodeAt(state.pos) === marker) {
	      res = scanDelims(state, state.pos);
	      count = res.delims;
	      if (res.can_close) {
	        oldCount = stack.pop();
	        newCount = count;

	        while (oldCount !== newCount) {
	          if (newCount < oldCount) {
	            stack.push(oldCount - newCount);
	            break;
	          }

	          // assert(newCount > oldCount)
	          newCount -= oldCount;

	          if (stack.length === 0) { break; }
	          state.pos += oldCount;
	          oldCount = stack.pop();
	        }

	        if (stack.length === 0) {
	          startCount = oldCount;
	          found = true;
	          break;
	        }
	        state.pos += count;
	        continue;
	      }

	      if (res.can_open) { stack.push(count); }
	      state.pos += count;
	      continue;
	    }

	    state.parser.skipToken(state);
	  }

	  if (!found) {
	    // parser failed to find ending tag, so it's not valid emphasis
	    state.pos = start;
	    return false;
	  }

	  // found!
	  state.posMax = state.pos;
	  state.pos = start + startCount;

	  if (!silent) {
	    if (startCount === 2 || startCount === 3) {
	      state.push({ type: 'strong_open', level: state.level++ });
	    }
	    if (startCount === 1 || startCount === 3) {
	      state.push({ type: 'em_open', level: state.level++ });
	    }

	    state.parser.tokenize(state);

	    if (startCount === 1 || startCount === 3) {
	      state.push({ type: 'em_close', level: --state.level });
	    }
	    if (startCount === 2 || startCount === 3) {
	      state.push({ type: 'strong_close', level: --state.level });
	    }
	  }

	  state.pos = state.posMax + startCount;
	  state.posMax = max;
	  return true;
	};


/***/ },
/* 513 */
/***/ function(module, exports) {

	// Process ~subscript~

	'use strict';

	// same as UNESCAPE_MD_RE plus a space
	var UNESCAPE_RE = /\\([ \\!"#$%&'()*+,.\/:;<=>?@[\]^_`{|}~-])/g;

	module.exports = function sub(state, silent) {
	  var found,
	      content,
	      max = state.posMax,
	      start = state.pos;

	  if (state.src.charCodeAt(start) !== 0x7E/* ~ */) { return false; }
	  if (silent) { return false; } // don't run any pairs in validation mode
	  if (start + 2 >= max) { return false; }
	  if (state.level >= state.options.maxNesting) { return false; }

	  state.pos = start + 1;

	  while (state.pos < max) {
	    if (state.src.charCodeAt(state.pos) === 0x7E/* ~ */) {
	      found = true;
	      break;
	    }

	    state.parser.skipToken(state);
	  }

	  if (!found || start + 1 === state.pos) {
	    state.pos = start;
	    return false;
	  }

	  content = state.src.slice(start + 1, state.pos);

	  // don't allow unescaped spaces/newlines inside
	  if (content.match(/(^|[^\\])(\\\\)*\s/)) {
	    state.pos = start;
	    return false;
	  }

	  // found!
	  state.posMax = state.pos;
	  state.pos = start + 1;

	  if (!silent) {
	    state.push({
	      type: 'sub',
	      level: state.level,
	      content: content.replace(UNESCAPE_RE, '$1')
	    });
	  }

	  state.pos = state.posMax + 1;
	  state.posMax = max;
	  return true;
	};


/***/ },
/* 514 */
/***/ function(module, exports) {

	// Process ^superscript^

	'use strict';

	// same as UNESCAPE_MD_RE plus a space
	var UNESCAPE_RE = /\\([ \\!"#$%&'()*+,.\/:;<=>?@[\]^_`{|}~-])/g;

	module.exports = function sup(state, silent) {
	  var found,
	      content,
	      max = state.posMax,
	      start = state.pos;

	  if (state.src.charCodeAt(start) !== 0x5E/* ^ */) { return false; }
	  if (silent) { return false; } // don't run any pairs in validation mode
	  if (start + 2 >= max) { return false; }
	  if (state.level >= state.options.maxNesting) { return false; }

	  state.pos = start + 1;

	  while (state.pos < max) {
	    if (state.src.charCodeAt(state.pos) === 0x5E/* ^ */) {
	      found = true;
	      break;
	    }

	    state.parser.skipToken(state);
	  }

	  if (!found || start + 1 === state.pos) {
	    state.pos = start;
	    return false;
	  }

	  content = state.src.slice(start + 1, state.pos);

	  // don't allow unescaped spaces/newlines inside
	  if (content.match(/(^|[^\\])(\\\\)*\s/)) {
	    state.pos = start;
	    return false;
	  }

	  // found!
	  state.posMax = state.pos;
	  state.pos = start + 1;

	  if (!silent) {
	    state.push({
	      type: 'sup',
	      level: state.level,
	      content: content.replace(UNESCAPE_RE, '$1')
	    });
	  }

	  state.pos = state.posMax + 1;
	  state.posMax = max;
	  return true;
	};


/***/ },
/* 515 */
/***/ function(module, exports, __webpack_require__) {

	// Process [links](<to> "stuff")

	'use strict';

	var parseLinkLabel       = __webpack_require__(476);
	var parseLinkDestination = __webpack_require__(478);
	var parseLinkTitle       = __webpack_require__(480);
	var normalizeReference   = __webpack_require__(481);


	module.exports = function links(state, silent) {
	  var labelStart,
	      labelEnd,
	      label,
	      href,
	      title,
	      pos,
	      ref,
	      code,
	      isImage = false,
	      oldPos = state.pos,
	      max = state.posMax,
	      start = state.pos,
	      marker = state.src.charCodeAt(start);

	  if (marker === 0x21/* ! */) {
	    isImage = true;
	    marker = state.src.charCodeAt(++start);
	  }

	  if (marker !== 0x5B/* [ */) { return false; }
	  if (state.level >= state.options.maxNesting) { return false; }

	  labelStart = start + 1;
	  labelEnd = parseLinkLabel(state, start);

	  // parser failed to find ']', so it's not a valid link
	  if (labelEnd < 0) { return false; }

	  pos = labelEnd + 1;
	  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {
	    //
	    // Inline link
	    //

	    // [link](  <href>  "title"  )
	    //        ^^ skipping these spaces
	    pos++;
	    for (; pos < max; pos++) {
	      code = state.src.charCodeAt(pos);
	      if (code !== 0x20 && code !== 0x0A) { break; }
	    }
	    if (pos >= max) { return false; }

	    // [link](  <href>  "title"  )
	    //          ^^^^^^ parsing link destination
	    start = pos;
	    if (parseLinkDestination(state, pos)) {
	      href = state.linkContent;
	      pos = state.pos;
	    } else {
	      href = '';
	    }

	    // [link](  <href>  "title"  )
	    //                ^^ skipping these spaces
	    start = pos;
	    for (; pos < max; pos++) {
	      code = state.src.charCodeAt(pos);
	      if (code !== 0x20 && code !== 0x0A) { break; }
	    }

	    // [link](  <href>  "title"  )
	    //                  ^^^^^^^ parsing link title
	    if (pos < max && start !== pos && parseLinkTitle(state, pos)) {
	      title = state.linkContent;
	      pos = state.pos;

	      // [link](  <href>  "title"  )
	      //                         ^^ skipping these spaces
	      for (; pos < max; pos++) {
	        code = state.src.charCodeAt(pos);
	        if (code !== 0x20 && code !== 0x0A) { break; }
	      }
	    } else {
	      title = '';
	    }

	    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {
	      state.pos = oldPos;
	      return false;
	    }
	    pos++;
	  } else {
	    //
	    // Link reference
	    //

	    // do not allow nested reference links
	    if (state.linkLevel > 0) { return false; }

	    // [foo]  [bar]
	    //      ^^ optional whitespace (can include newlines)
	    for (; pos < max; pos++) {
	      code = state.src.charCodeAt(pos);
	      if (code !== 0x20 && code !== 0x0A) { break; }
	    }

	    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {
	      start = pos + 1;
	      pos = parseLinkLabel(state, pos);
	      if (pos >= 0) {
	        label = state.src.slice(start, pos++);
	      } else {
	        pos = start - 1;
	      }
	    }

	    // covers label === '' and label === undefined
	    // (collapsed reference link and shortcut reference link respectively)
	    if (!label) { label = state.src.slice(labelStart, labelEnd); }

	    ref = state.env.references[normalizeReference(label)];
	    if (!ref) {
	      state.pos = oldPos;
	      return false;
	    }
	    href = ref.href;
	    title = ref.title;
	  }

	  //
	  // We found the end of the link, and know for a fact it's a valid link;
	  // so all that's left to do is to call tokenizer.
	  //
	  if (!silent) {
	    state.pos = labelStart;
	    state.posMax = labelEnd;

	    if (isImage) {
	      state.push({
	        type: 'image',
	        src: href,
	        title: title,
	        alt: state.src.substr(labelStart, labelEnd - labelStart),
	        level: state.level
	      });
	    } else {
	      state.push({
	        type: 'link_open',
	        href: href,
	        title: title,
	        level: state.level++
	      });
	      state.linkLevel++;
	      state.parser.tokenize(state);
	      state.linkLevel--;
	      state.push({ type: 'link_close', level: --state.level });
	    }
	  }

	  state.pos = pos;
	  state.posMax = max;
	  return true;
	};


/***/ },
/* 516 */
/***/ function(module, exports, __webpack_require__) {

	// Process inline footnotes (^[...])

	'use strict';

	var parseLinkLabel = __webpack_require__(476);


	module.exports = function footnote_inline(state, silent) {
	  var labelStart,
	      labelEnd,
	      footnoteId,
	      oldLength,
	      max = state.posMax,
	      start = state.pos;

	  if (start + 2 >= max) { return false; }
	  if (state.src.charCodeAt(start) !== 0x5E/* ^ */) { return false; }
	  if (state.src.charCodeAt(start + 1) !== 0x5B/* [ */) { return false; }
	  if (state.level >= state.options.maxNesting) { return false; }

	  labelStart = start + 2;
	  labelEnd = parseLinkLabel(state, start + 1);

	  // parser failed to find ']', so it's not a valid note
	  if (labelEnd < 0) { return false; }

	  // We found the end of the link, and know for a fact it's a valid link;
	  // so all that's left to do is to call tokenizer.
	  //
	  if (!silent) {
	    if (!state.env.footnotes) { state.env.footnotes = {}; }
	    if (!state.env.footnotes.list) { state.env.footnotes.list = []; }
	    footnoteId = state.env.footnotes.list.length;

	    state.pos = labelStart;
	    state.posMax = labelEnd;

	    state.push({
	      type: 'footnote_ref',
	      id: footnoteId,
	      level: state.level
	    });
	    state.linkLevel++;
	    oldLength = state.tokens.length;
	    state.parser.tokenize(state);
	    state.env.footnotes.list[footnoteId] = { tokens: state.tokens.splice(oldLength) };
	    state.linkLevel--;
	  }

	  state.pos = labelEnd + 1;
	  state.posMax = max;
	  return true;
	};


/***/ },
/* 517 */
/***/ function(module, exports) {

	// Process footnote references ([^...])

	'use strict';


	module.exports = function footnote_ref(state, silent) {
	  var label,
	      pos,
	      footnoteId,
	      footnoteSubId,
	      max = state.posMax,
	      start = state.pos;

	  // should be at least 4 chars - "[^x]"
	  if (start + 3 > max) { return false; }

	  if (!state.env.footnotes || !state.env.footnotes.refs) { return false; }
	  if (state.src.charCodeAt(start) !== 0x5B/* [ */) { return false; }
	  if (state.src.charCodeAt(start + 1) !== 0x5E/* ^ */) { return false; }
	  if (state.level >= state.options.maxNesting) { return false; }

	  for (pos = start + 2; pos < max; pos++) {
	    if (state.src.charCodeAt(pos) === 0x20) { return false; }
	    if (state.src.charCodeAt(pos) === 0x0A) { return false; }
	    if (state.src.charCodeAt(pos) === 0x5D /* ] */) {
	      break;
	    }
	  }

	  if (pos === start + 2) { return false; } // no empty footnote labels
	  if (pos >= max) { return false; }
	  pos++;

	  label = state.src.slice(start + 2, pos - 1);
	  if (typeof state.env.footnotes.refs[':' + label] === 'undefined') { return false; }

	  if (!silent) {
	    if (!state.env.footnotes.list) { state.env.footnotes.list = []; }

	    if (state.env.footnotes.refs[':' + label] < 0) {
	      footnoteId = state.env.footnotes.list.length;
	      state.env.footnotes.list[footnoteId] = { label: label, count: 0 };
	      state.env.footnotes.refs[':' + label] = footnoteId;
	    } else {
	      footnoteId = state.env.footnotes.refs[':' + label];
	    }

	    footnoteSubId = state.env.footnotes.list[footnoteId].count;
	    state.env.footnotes.list[footnoteId].count++;

	    state.push({
	      type: 'footnote_ref',
	      id: footnoteId,
	      subId: footnoteSubId,
	      level: state.level
	    });
	  }

	  state.pos = pos;
	  state.posMax = max;
	  return true;
	};


/***/ },
/* 518 */
/***/ function(module, exports, __webpack_require__) {

	// Process autolinks '<protocol:...>'

	'use strict';

	var url_schemas   = __webpack_require__(519);
	var normalizeLink = __webpack_require__(479);


	/*eslint max-len:0*/
	var EMAIL_RE    = /^<([a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)>/;
	var AUTOLINK_RE = /^<([a-zA-Z.\-]{1,25}):([^<>\x00-\x20]*)>/;


	module.exports = function autolink(state, silent) {
	  var tail, linkMatch, emailMatch, url, fullUrl, pos = state.pos;

	  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }

	  tail = state.src.slice(pos);

	  if (tail.indexOf('>') < 0) { return false; }

	  linkMatch = tail.match(AUTOLINK_RE);

	  if (linkMatch) {
	    if (url_schemas.indexOf(linkMatch[1].toLowerCase()) < 0) { return false; }

	    url = linkMatch[0].slice(1, -1);
	    fullUrl = normalizeLink(url);
	    if (!state.parser.validateLink(url)) { return false; }

	    if (!silent) {
	      state.push({
	        type: 'link_open',
	        href: fullUrl,
	        level: state.level
	      });
	      state.push({
	        type: 'text',
	        content: url,
	        level: state.level + 1
	      });
	      state.push({ type: 'link_close', level: state.level });
	    }

	    state.pos += linkMatch[0].length;
	    return true;
	  }

	  emailMatch = tail.match(EMAIL_RE);

	  if (emailMatch) {

	    url = emailMatch[0].slice(1, -1);

	    fullUrl = normalizeLink('mailto:' + url);
	    if (!state.parser.validateLink(fullUrl)) { return false; }

	    if (!silent) {
	      state.push({
	        type: 'link_open',
	        href: fullUrl,
	        level: state.level
	      });
	      state.push({
	        type: 'text',
	        content: url,
	        level: state.level + 1
	      });
	      state.push({ type: 'link_close', level: state.level });
	    }

	    state.pos += emailMatch[0].length;
	    return true;
	  }

	  return false;
	};


/***/ },
/* 519 */
/***/ function(module, exports) {

	// List of valid url schemas, accorting to commonmark spec
	// http://jgm.github.io/CommonMark/spec.html#autolinks

	'use strict';


	module.exports = [
	  'coap',
	  'doi',
	  'javascript',
	  'aaa',
	  'aaas',
	  'about',
	  'acap',
	  'cap',
	  'cid',
	  'crid',
	  'data',
	  'dav',
	  'dict',
	  'dns',
	  'file',
	  'ftp',
	  'geo',
	  'go',
	  'gopher',
	  'h323',
	  'http',
	  'https',
	  'iax',
	  'icap',
	  'im',
	  'imap',
	  'info',
	  'ipp',
	  'iris',
	  'iris.beep',
	  'iris.xpc',
	  'iris.xpcs',
	  'iris.lwz',
	  'ldap',
	  'mailto',
	  'mid',
	  'msrp',
	  'msrps',
	  'mtqp',
	  'mupdate',
	  'news',
	  'nfs',
	  'ni',
	  'nih',
	  'nntp',
	  'opaquelocktoken',
	  'pop',
	  'pres',
	  'rtsp',
	  'service',
	  'session',
	  'shttp',
	  'sieve',
	  'sip',
	  'sips',
	  'sms',
	  'snmp',
	  'soap.beep',
	  'soap.beeps',
	  'tag',
	  'tel',
	  'telnet',
	  'tftp',
	  'thismessage',
	  'tn3270',
	  'tip',
	  'tv',
	  'urn',
	  'vemmi',
	  'ws',
	  'wss',
	  'xcon',
	  'xcon-userid',
	  'xmlrpc.beep',
	  'xmlrpc.beeps',
	  'xmpp',
	  'z39.50r',
	  'z39.50s',
	  'adiumxtra',
	  'afp',
	  'afs',
	  'aim',
	  'apt',
	  'attachment',
	  'aw',
	  'beshare',
	  'bitcoin',
	  'bolo',
	  'callto',
	  'chrome',
	  'chrome-extension',
	  'com-eventbrite-attendee',
	  'content',
	  'cvs',
	  'dlna-playsingle',
	  'dlna-playcontainer',
	  'dtn',
	  'dvb',
	  'ed2k',
	  'facetime',
	  'feed',
	  'finger',
	  'fish',
	  'gg',
	  'git',
	  'gizmoproject',
	  'gtalk',
	  'hcp',
	  'icon',
	  'ipn',
	  'irc',
	  'irc6',
	  'ircs',
	  'itms',
	  'jar',
	  'jms',
	  'keyparc',
	  'lastfm',
	  'ldaps',
	  'magnet',
	  'maps',
	  'market',
	  'message',
	  'mms',
	  'ms-help',
	  'msnim',
	  'mumble',
	  'mvn',
	  'notes',
	  'oid',
	  'palm',
	  'paparazzi',
	  'platform',
	  'proxy',
	  'psyc',
	  'query',
	  'res',
	  'resource',
	  'rmi',
	  'rsync',
	  'rtmp',
	  'secondlife',
	  'sftp',
	  'sgn',
	  'skype',
	  'smb',
	  'soldat',
	  'spotify',
	  'ssh',
	  'steam',
	  'svn',
	  'teamspeak',
	  'things',
	  'udp',
	  'unreal',
	  'ut2004',
	  'ventrilo',
	  'view-source',
	  'webcal',
	  'wtai',
	  'wyciwyg',
	  'xfire',
	  'xri',
	  'ymsgr'
	];


/***/ },
/* 520 */
/***/ function(module, exports, __webpack_require__) {

	// Process html tags

	'use strict';


	var HTML_TAG_RE = __webpack_require__(521).HTML_TAG_RE;


	function isLetter(ch) {
	  /*eslint no-bitwise:0*/
	  var lc = ch | 0x20; // to lower case
	  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);
	}


	module.exports = function htmltag(state, silent) {
	  var ch, match, max, pos = state.pos;

	  if (!state.options.html) { return false; }

	  // Check start
	  max = state.posMax;
	  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||
	      pos + 2 >= max) {
	    return false;
	  }

	  // Quick fail on second char
	  ch = state.src.charCodeAt(pos + 1);
	  if (ch !== 0x21/* ! */ &&
	      ch !== 0x3F/* ? */ &&
	      ch !== 0x2F/* / */ &&
	      !isLetter(ch)) {
	    return false;
	  }

	  match = state.src.slice(pos).match(HTML_TAG_RE);
	  if (!match) { return false; }

	  if (!silent) {
	    state.push({
	      type: 'htmltag',
	      content: state.src.slice(pos, pos + match[0].length),
	      level: state.level
	    });
	  }
	  state.pos += match[0].length;
	  return true;
	};


/***/ },
/* 521 */
/***/ function(module, exports) {

	// Regexps to match html elements

	'use strict';


	function replace(regex, options) {
	  regex = regex.source;
	  options = options || '';

	  return function self(name, val) {
	    if (!name) {
	      return new RegExp(regex, options);
	    }
	    val = val.source || val;
	    regex = regex.replace(name, val);
	    return self;
	  };
	}


	var attr_name     = /[a-zA-Z_:][a-zA-Z0-9:._-]*/;

	var unquoted      = /[^"'=<>`\x00-\x20]+/;
	var single_quoted = /'[^']*'/;
	var double_quoted = /"[^"]*"/;

	/*eslint no-spaced-func:0*/
	var attr_value  = replace(/(?:unquoted|single_quoted|double_quoted)/)
	                    ('unquoted', unquoted)
	                    ('single_quoted', single_quoted)
	                    ('double_quoted', double_quoted)
	                    ();

	var attribute   = replace(/(?:\s+attr_name(?:\s*=\s*attr_value)?)/)
	                    ('attr_name', attr_name)
	                    ('attr_value', attr_value)
	                    ();

	var open_tag    = replace(/<[A-Za-z][A-Za-z0-9]*attribute*\s*\/?>/)
	                    ('attribute', attribute)
	                    ();

	var close_tag   = /<\/[A-Za-z][A-Za-z0-9]*\s*>/;
	var comment     = /<!--([^-]+|[-][^-]+)*-->/;
	var processing  = /<[?].*?[?]>/;
	var declaration = /<![A-Z]+\s+[^>]*>/;
	var cdata       = /<!\[CDATA\[([^\]]+|\][^\]]|\]\][^>])*\]\]>/;

	var HTML_TAG_RE = replace(/^(?:open_tag|close_tag|comment|processing|declaration|cdata)/)
	  ('open_tag', open_tag)
	  ('close_tag', close_tag)
	  ('comment', comment)
	  ('processing', processing)
	  ('declaration', declaration)
	  ('cdata', cdata)
	  ();


	module.exports.HTML_TAG_RE = HTML_TAG_RE;


/***/ },
/* 522 */
/***/ function(module, exports, __webpack_require__) {

	// Process html entity - &#123;, &#xAF;, &quot;, ...

	'use strict';

	var entities          = __webpack_require__(468);
	var has               = __webpack_require__(467).has;
	var isValidEntityCode = __webpack_require__(467).isValidEntityCode;
	var fromCodePoint     = __webpack_require__(467).fromCodePoint;


	var DIGITAL_RE = /^&#((?:x[a-f0-9]{1,8}|[0-9]{1,8}));/i;
	var NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;


	module.exports = function entity(state, silent) {
	  var ch, code, match, pos = state.pos, max = state.posMax;

	  if (state.src.charCodeAt(pos) !== 0x26/* & */) { return false; }

	  if (pos + 1 < max) {
	    ch = state.src.charCodeAt(pos + 1);

	    if (ch === 0x23 /* # */) {
	      match = state.src.slice(pos).match(DIGITAL_RE);
	      if (match) {
	        if (!silent) {
	          code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);
	          state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);
	        }
	        state.pos += match[0].length;
	        return true;
	      }
	    } else {
	      match = state.src.slice(pos).match(NAMED_RE);
	      if (match) {
	        if (has(entities, match[1])) {
	          if (!silent) { state.pending += entities[match[1]]; }
	          state.pos += match[0].length;
	          return true;
	        }
	      }
	    }
	  }

	  if (!silent) { state.pending += '&'; }
	  state.pos++;
	  return true;
	};


/***/ },
/* 523 */
/***/ function(module, exports) {

	// Remarkable default options

	'use strict';


	module.exports = {
	  options: {
	    html:         false,        // Enable HTML tags in source
	    xhtmlOut:     false,        // Use '/' to close single tags (<br />)
	    breaks:       false,        // Convert '\n' in paragraphs into <br>
	    langPrefix:   'language-',  // CSS language prefix for fenced blocks
	    linkify:      false,        // autoconvert URL-like texts to links

	    // Enable some language-neutral replacements + quotes beautification
	    typographer:  false,

	    // Double + single quotes replacement pairs, when typographer enabled,
	    // and smartquotes on. Set doubles to '«»' for Russian, '„“' for German.
	    quotes: '“”‘’',

	    // Highlighter function. Should return escaped HTML,
	    // or '' if input not changed
	    //
	    // function (/*str, lang*/) { return ''; }
	    //
	    highlight: null,

	    maxNesting:   20            // Internal protection, recursion limit
	  },

	  components: {

	    core: {
	      rules: [
	        'block',
	        'inline',
	        'references',
	        'replacements',
	        'linkify',
	        'smartquotes',
	        'references',
	        'abbr2',
	        'footnote_tail'
	      ]
	    },

	    block: {
	      rules: [
	        'blockquote',
	        'code',
	        'fences',
	        'heading',
	        'hr',
	        'htmlblock',
	        'lheading',
	        'list',
	        'paragraph',
	        'table'
	      ]
	    },

	    inline: {
	      rules: [
	        'autolink',
	        'backticks',
	        'del',
	        'emphasis',
	        'entity',
	        'escape',
	        'footnote_ref',
	        'htmltag',
	        'links',
	        'newline',
	        'text'
	      ]
	    }
	  }
	};


/***/ },
/* 524 */
/***/ function(module, exports) {

	// Remarkable default options

	'use strict';


	module.exports = {
	  options: {
	    html:         false,        // Enable HTML tags in source
	    xhtmlOut:     false,        // Use '/' to close single tags (<br />)
	    breaks:       false,        // Convert '\n' in paragraphs into <br>
	    langPrefix:   'language-',  // CSS language prefix for fenced blocks
	    linkify:      false,        // autoconvert URL-like texts to links

	    // Enable some language-neutral replacements + quotes beautification
	    typographer:  false,

	    // Double + single quotes replacement pairs, when typographer enabled,
	    // and smartquotes on. Set doubles to '«»' for Russian, '„“' for German.
	    quotes:       '“”‘’',

	    // Highlighter function. Should return escaped HTML,
	    // or '' if input not changed
	    //
	    // function (/*str, lang*/) { return ''; }
	    //
	    highlight:     null,

	    maxNesting:    20            // Internal protection, recursion limit
	  },

	  components: {
	    // Don't restrict core/block/inline rules
	    core: {},
	    block: {},
	    inline: {}
	  }
	};


/***/ },
/* 525 */
/***/ function(module, exports) {

	// Commonmark default options

	'use strict';


	module.exports = {
	  options: {
	    html:         true,         // Enable HTML tags in source
	    xhtmlOut:     true,         // Use '/' to close single tags (<br />)
	    breaks:       false,        // Convert '\n' in paragraphs into <br>
	    langPrefix:   'language-',  // CSS language prefix for fenced blocks
	    linkify:      false,        // autoconvert URL-like texts to links

	    // Enable some language-neutral replacements + quotes beautification
	    typographer:  false,

	    // Double + single quotes replacement pairs, when typographer enabled,
	    // and smartquotes on. Set doubles to '«»' for Russian, '„“' for German.
	    quotes: '“”‘’',

	    // Highlighter function. Should return escaped HTML,
	    // or '' if input not changed
	    //
	    // function (/*str, lang*/) { return ''; }
	    //
	    highlight: null,

	    maxNesting:   20            // Internal protection, recursion limit
	  },

	  components: {

	    core: {
	      rules: [
	        'block',
	        'inline',
	        'references',
	        'abbr2'
	      ]
	    },

	    block: {
	      rules: [
	        'blockquote',
	        'code',
	        'fences',
	        'heading',
	        'hr',
	        'htmlblock',
	        'lheading',
	        'list',
	        'paragraph'
	      ]
	    },

	    inline: {
	      rules: [
	        'autolink',
	        'backticks',
	        'emphasis',
	        'entity',
	        'escape',
	        'htmltag',
	        'links',
	        'newline',
	        'text'
	      ]
	    }
	  }
	};


/***/ },
/* 526 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _AuthDashboard = __webpack_require__(247);

	var _SimpleComponentsIcons = __webpack_require__(252);

	var React = __webpack_require__(202);

	var MailInfo = (function (_React$Component) {
	    _inherits(MailInfo, _React$Component);

	    function MailInfo() {
	        var _this = this;

	        _classCallCheck(this, MailInfo);

	        _get(Object.getPrototypeOf(MailInfo.prototype), 'constructor', this).apply(this, arguments);

	        this.render = function () {
	            if (!_this.props.value) return null;
	            return React.createElement(
	                'div',
	                { className: 'box-row-nw  divider' },
	                React.createElement(
	                    'p',
	                    { className: 'padd-icon' },
	                    React.createElement(_SimpleComponentsIcons.Icon, { iconName: 'mail-icon', size: 18, className: 'icon-color' })
	                ),
	                React.createElement(
	                    'p',
	                    { className: 'p-list' },
	                    _this.props.value
	                )
	            );
	        };
	    }

	    return MailInfo;
	})(React.Component);

	var WebInfo = (function (_React$Component2) {
	    _inherits(WebInfo, _React$Component2);

	    function WebInfo() {
	        var _this2 = this;

	        _classCallCheck(this, WebInfo);

	        _get(Object.getPrototypeOf(WebInfo.prototype), 'constructor', this).apply(this, arguments);

	        this.render = function () {
	            if (!_this2.props.value) return null;
	            return React.createElement(
	                'div',
	                { className: 'box-row-nw  divider' },
	                React.createElement(
	                    'p',
	                    { className: 'padd-icon' },
	                    React.createElement(_SimpleComponentsIcons.Icon, { iconName: 'web-icon', size: 18, className: 'icon-color' })
	                ),
	                React.createElement(
	                    'p',
	                    { className: 'p-list' },
	                    _this2.props.value
	                )
	            );
	        };
	    }

	    return WebInfo;
	})(React.Component);

	var PhoneInfo = (function (_React$Component3) {
	    _inherits(PhoneInfo, _React$Component3);

	    function PhoneInfo() {
	        var _this3 = this;

	        _classCallCheck(this, PhoneInfo);

	        _get(Object.getPrototypeOf(PhoneInfo.prototype), 'constructor', this).apply(this, arguments);

	        this.render = function () {
	            if (!_this3.props.value) return null;
	            return React.createElement(
	                'div',
	                { className: 'box-row-nw  divider' },
	                React.createElement(
	                    'p',
	                    { className: 'padd-icon' },
	                    React.createElement(_SimpleComponentsIcons.Icon, { iconName: 'phone-icon', size: 18, className: 'icon-color' })
	                ),
	                React.createElement(
	                    'p',
	                    { className: 'p-list' },
	                    _this3.props.value
	                )
	            );
	        };
	    }

	    return PhoneInfo;
	})(React.Component);

	var WorkHoursInfo = (function (_React$Component4) {
	    _inherits(WorkHoursInfo, _React$Component4);

	    function WorkHoursInfo() {
	        var _this4 = this;

	        _classCallCheck(this, WorkHoursInfo);

	        _get(Object.getPrototypeOf(WorkHoursInfo.prototype), 'constructor', this).apply(this, arguments);

	        this.render = function () {
	            if (!_this4.props.value) return null;
	            return React.createElement(
	                'div',
	                { className: 'box-row-nw  divider' },
	                React.createElement(
	                    'p',
	                    { className: 'padd-icon' },
	                    React.createElement(_SimpleComponentsIcons.Icon, { iconName: 'clock-icon', size: 18, className: 'icon-color' })
	                ),
	                React.createElement(
	                    'p',
	                    { className: 'p-list' },
	                    _this4.props.value
	                )
	            );
	        };
	    }

	    return WorkHoursInfo;
	})(React.Component);

	var AddressInfo = (function (_React$Component5) {
	    _inherits(AddressInfo, _React$Component5);

	    function AddressInfo() {
	        var _this5 = this;

	        _classCallCheck(this, AddressInfo);

	        _get(Object.getPrototypeOf(AddressInfo.prototype), 'constructor', this).apply(this, arguments);

	        this.render = function () {
	            if (!_this5.props.value) return null;
	            return React.createElement(
	                'div',
	                { className: 'box-row-nw  divider' },
	                React.createElement(
	                    'p',
	                    { className: 'p-list' },
	                    'Адрес: ',
	                    _this5.props.value
	                )
	            );
	        };
	    }

	    // deprecated
	    //
	    // class AtiCodeInfo extends React.Component {
	    //     render = ()=> {
	    //         if (!this.props.value) return null;
	    //         return (
	    //             <div className="box-row-nw  divider">
	    //                 <p className="p-list">
	    //                     <p className="text-card">АТИ:&nbsp;</p>
	    //                     {this.props.value}
	    //                 </p>
	    //             </div>
	    //         )
	    //     }
	    // }

	    return AddressInfo;
	})(React.Component);

	var Divider = (function (_React$Component6) {
	    _inherits(Divider, _React$Component6);

	    function Divider() {
	        var _this6 = this;

	        _classCallCheck(this, Divider);

	        _get(Object.getPrototypeOf(Divider.prototype), 'constructor', this).apply(this, arguments);

	        this.render = function () {
	            if (_this6.props.hidden) return null;
	            return React.createElement('div', { className: 'padd-top-card' });
	        };
	    }

	    return Divider;
	})(React.Component);

	var CompanyTags = (function (_React$Component7) {
	    _inherits(CompanyTags, _React$Component7);

	    function CompanyTags() {
	        var _this7 = this;

	        _classCallCheck(this, CompanyTags);

	        _get(Object.getPrototypeOf(CompanyTags.prototype), 'constructor', this).apply(this, arguments);

	        this.render = function () {
	            //console.log("COMP TAGS");
	            //console.log(this.props.value);
	            if (!_this7.props.value) return null;
	            var compTags = _AuthDashboard.AppState.myCompany.getTagNames(_this7.props.value);
	            //console.log(compTags);
	            var Tags = compTags.length > 0 ? compTags.map(function (tag, key) {
	                return React.createElement(
	                    'p',
	                    { key: key, className: 'divider card-disab p-list pagin-pr label-active font600label-active font600' },
	                    tag
	                );
	            }) : null;
	            return React.createElement(
	                'div',
	                null,
	                Tags
	            );
	        };
	    }

	    return CompanyTags;
	})(React.Component);

	var MainInfo = (function (_React$Component8) {
	    _inherits(MainInfo, _React$Component8);

	    function MainInfo() {
	        var _this8 = this;

	        _classCallCheck(this, MainInfo);

	        _get(Object.getPrototypeOf(MainInfo.prototype), 'constructor', this).apply(this, arguments);

	        this.render = function () {
	            if (!_this8.props.company) return null;
	            //console.log("Main Info");
	            //console.log(this.props.company);
	            return React.createElement(
	                'div',
	                { className: 'box-row-nw list-box main-info' },
	                React.createElement(
	                    'div',
	                    { className: 'box-cln-nw panel-md align-center logo-box' },
	                    React.createElement(_SimpleComponentsIcons.Icon, { iconName: 'company-icon', size: 100, className: 'icon-logo-box' })
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'box-cln-nw panel-md' },
	                    React.createElement(
	                        'div',
	                        { className: 'box-row-nw just-btw' },
	                        React.createElement(
	                            'h3',
	                            { className: 'list-h3 divider' },
	                            _this8.props.company.name
	                        )
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'box-row-nw card-sub' },
	                        React.createElement(CompanyTags, { value: _this8.props.company.tags || _this8.props.company.comp_tags })
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'card-sub' },
	                        React.createElement(
	                            'p',
	                            { className: 'divider card-disab p-list' },
	                            'ИНН: ',
	                            _this8.props.company.inn
	                        )
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'box-row-nw divider' },
	                        React.createElement(AddressInfo, { value: _this8.props.company.addr })
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'box-row-nw divider' },
	                        React.createElement(WorkHoursInfo, { value: _this8.props.company.work_hours })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    null,
	                    React.createElement(
	                        'div',
	                        { className: 'box-cln-nw panel-md' },
	                        React.createElement(
	                            'div',
	                            { className: 'box-cln-nw' },
	                            React.createElement(PhoneInfo, { value: _this8.props.company.phone }),
	                            React.createElement(WebInfo, { value: _this8.props.company.web_site }),
	                            React.createElement(MailInfo, { value: _this8.props.company.email })
	                        )
	                    )
	                )
	            );
	        };
	    }

	    return MainInfo;
	})(React.Component);

	exports.MainInfo = MainInfo;

	// <AtiCodeInfo value={this.props.company.ati_code}/>   // deprecated

/***/ },
/* 527 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _AuthDashboard = __webpack_require__(247);

	var _utils = __webpack_require__(2);

	var _Map2 = __webpack_require__(416);

	var _CompanyLogoCompanyLogo = __webpack_require__(528);

	var _ControlsFormsButtonSimple = __webpack_require__(226);

	var _CompanyInfo__Actions_Edit = __webpack_require__(530);

	var _CompanyInfo__Actions_Edit2 = _interopRequireDefault(_CompanyInfo__Actions_Edit);

	var React = __webpack_require__(202);

	var CompanyInfo = (function (_React$Component) {
	    _inherits(CompanyInfo, _React$Component);

	    function CompanyInfo(props) {
	        var _this = this;

	        _classCallCheck(this, CompanyInfo);

	        _get(Object.getPrototypeOf(CompanyInfo.prototype), 'constructor', this).call(this, props);
	        this.state = {
	            perm: _utils.Utils.checkFlags(_AuthDashboard.AppState.user.state.comp_flags, 32)
	        };

	        this.render = function () {
	            var comp = _this.props.company;

	            return React.createElement(
	                'div',
	                { className: 'company-info' },
	                React.createElement(
	                    'div',
	                    { className: 'company-info__map' },
	                    React.createElement(_Map2.Map2, { ref: 'yandexMap', className: 'border', style: {
	                            'width': '100%',
	                            'height': '250px'
	                        }, baloon: { address: comp.addr, name: comp.name }, zoom: 16 })
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'row' },
	                    React.createElement(
	                        'div',
	                        { className: 'col-xs-4' },
	                        React.createElement(
	                            'div',
	                            { className: 'company-mini-card' },
	                            React.createElement(_CompanyLogoCompanyLogo.CompanyLogo, null),
	                            React.createElement(
	                                'div',
	                                { className: 'company-mini-card__info' },
	                                React.createElement(
	                                    'h2',
	                                    null,
	                                    comp.name
	                                ),
	                                React.createElement(
	                                    'p',
	                                    null,
	                                    comp.addr
	                                ),
	                                React.createElement(
	                                    'p',
	                                    null,
	                                    'ИНН: ',
	                                    comp.inn
	                                )
	                            )
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'company-info__contact' },
	                            React.createElement(
	                                'div',
	                                { className: 'company-info-contacts' },
	                                React.createElement(CompanyInfo__Phone, { value: comp.phone }),
	                                React.createElement(CompanyInfo__Web, { value: comp.web_site }),
	                                React.createElement(CompanyInfo__Mail, { value: comp.email }),
	                                React.createElement(CompanyInfo__Hours, { value: comp.work_hours }),
	                                _this.state.perm ? React.createElement(_CompanyInfo__Actions_Edit2['default'], { data: _this.props.company }) : null
	                            )
	                        )
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'col-xs-8' },
	                        React.createElement(
	                            'div',
	                            { className: 'company-info__about' },
	                            React.createElement(
	                                'h3',
	                                null,
	                                'О компании'
	                            ),
	                            React.createElement(
	                                'div',
	                                { className: 'company-info-about' },
	                                comp.info
	                            )
	                        )
	                    )
	                )
	            );
	        };
	    }

	    // <CompanyInfo__AtiCode value={comp.ati_code}/>    // deprecated

	    return CompanyInfo;
	})(React.Component);

	var CompanyInfo__Phone = (function (_React$Component2) {
	    _inherits(CompanyInfo__Phone, _React$Component2);

	    function CompanyInfo__Phone() {
	        var _this2 = this;

	        _classCallCheck(this, CompanyInfo__Phone);

	        _get(Object.getPrototypeOf(CompanyInfo__Phone.prototype), 'constructor', this).apply(this, arguments);

	        this.render = function () {
	            if (!_this2.props.value) return null;
	            return React.createElement(
	                'div',
	                { className: 'company-info-contacts__item' },
	                'Телефон: ',
	                _this2.props.value
	            );
	        };
	    }

	    return CompanyInfo__Phone;
	})(React.Component);

	var CompanyInfo__Web = (function (_React$Component3) {
	    _inherits(CompanyInfo__Web, _React$Component3);

	    function CompanyInfo__Web() {
	        var _this3 = this;

	        _classCallCheck(this, CompanyInfo__Web);

	        _get(Object.getPrototypeOf(CompanyInfo__Web.prototype), 'constructor', this).apply(this, arguments);

	        this.render = function () {
	            if (!_this3.props.value) return null;
	            return React.createElement(
	                'div',
	                { className: 'company-info-contacts__item' },
	                'Сайт компании: ',
	                React.createElement(
	                    'a',
	                    { href: 'http://' + _this3.props.value, target: '_blank' },
	                    'www.' + _this3.props.value
	                )
	            );
	        };
	    }

	    return CompanyInfo__Web;
	})(React.Component);

	var CompanyInfo__Hours = (function (_React$Component4) {
	    _inherits(CompanyInfo__Hours, _React$Component4);

	    function CompanyInfo__Hours() {
	        var _this4 = this;

	        _classCallCheck(this, CompanyInfo__Hours);

	        _get(Object.getPrototypeOf(CompanyInfo__Hours.prototype), 'constructor', this).apply(this, arguments);

	        this.render = function () {
	            if (!_this4.props.value) return null;
	            return React.createElement(
	                'div',
	                { className: 'company-info-contacts__item' },
	                'Время работы: ',
	                _this4.props.value
	            );
	        };
	    }

	    // deprecated
	    //
	    // class CompanyInfo__AtiCode extends React.Component {
	    //     render = ()=> {
	    //         if (!this.props.value) return null;
	    //         return <div className="company-info-contacts__item">АТИ: {this.props.value}</div>
	    //     }
	    // }

	    return CompanyInfo__Hours;
	})(React.Component);

	var CompanyInfo__Mail = (function (_React$Component5) {
	    _inherits(CompanyInfo__Mail, _React$Component5);

	    function CompanyInfo__Mail() {
	        var _this5 = this;

	        _classCallCheck(this, CompanyInfo__Mail);

	        _get(Object.getPrototypeOf(CompanyInfo__Mail.prototype), 'constructor', this).apply(this, arguments);

	        this.render = function () {
	            if (!_this5.props.value) return null;
	            return React.createElement(
	                'div',
	                { className: 'company-info-contacts__item' },
	                'E-mail: ',
	                React.createElement(
	                    'a',
	                    { href: 'mailto:' + _this5.props.value },
	                    _this5.props.value
	                )
	            );
	        };
	    }

	    return CompanyInfo__Mail;
	})(React.Component);

	exports.CompanyInfo = CompanyInfo;

/***/ },
/* 528 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _utils = __webpack_require__(2);

	var _AuthDashboard = __webpack_require__(247);

	var _ControlsIcon = __webpack_require__(232);

	var _ControlsModalWindow = __webpack_require__(233);

	var _CompanyLogo__Actions_Upload = __webpack_require__(529);

	var _CompanyLogo__Actions_Upload2 = _interopRequireDefault(_CompanyLogo__Actions_Upload);

	var React = __webpack_require__(202);

	var CompanyLogo = (function (_React$Component) {
	    _inherits(CompanyLogo, _React$Component);

	    function CompanyLogo(props) {
	        var _this = this;

	        _classCallCheck(this, CompanyLogo);

	        _get(Object.getPrototypeOf(CompanyLogo.prototype), 'constructor', this).call(this, props);
	        this.state = {
	            isModalOpen: false,
	            perm: _utils.Utils.checkFlags(_AuthDashboard.AppState.user.state.comp_flags, 32)
	        };

	        this.closeModal = function () {
	            _this.setState({ isModalOpen: false });
	        };

	        this.openModal = function () {
	            _this.setState({ isModalOpen: true });
	        };

	        this.update = function () {
	            _this.forceUpdate();
	        };

	        this.render = function () {
	            var logo = _AuthDashboard.AppState.myCompany.state.logo ? React.createElement('img', { id: 'company-logo', src: 'http://cargo.chat/' + _AuthDashboard.AppState.myCompany.state.logo, alt: _AuthDashboard.AppState.myCompany.state.name }) : React.createElement('div', { id: 'company-logo-null' }),
	                companyLogoBox = undefined;

	            if (_utils.Utils.checkFlags(_AuthDashboard.AppState.user.state.comp_flags, 32)) {
	                companyLogoBox = React.createElement(
	                    'div',
	                    { className: 'company-logo-box' },
	                    React.createElement(
	                        'div',
	                        { className: 'company-logo-box__edit', onClick: _this.openModal },
	                        logo
	                    ),
	                    React.createElement(
	                        _ControlsModalWindow.ModalWindow,
	                        { isOpen: _this.state.isModalOpen, onClose: _this.closeModal, title: 'Настройка логотипа компании' },
	                        React.createElement(_CompanyLogo__Actions_Upload2['default'], { update: _this.update, onClose: _this.closeModal })
	                    )
	                );
	            } else {
	                companyLogoBox = React.createElement(
	                    'div',
	                    { className: 'company-logo-box' },
	                    logo
	                );
	            }

	            return companyLogoBox;
	        };
	    }

	    return CompanyLogo;
	})(React.Component);

	exports.CompanyLogo = CompanyLogo;

/***/ },
/* 529 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _AuthDashboard = __webpack_require__(247);

	var _Dispatcher = __webpack_require__(4);

	var _api = __webpack_require__(1);

	var _SimpleComponentsIcons = __webpack_require__(252);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	var _SimpleComponentsModalWindow = __webpack_require__(362);

	var _SimpleComponentsTransparentButton = __webpack_require__(264);

	var _SimpleComponentsInputSimple = __webpack_require__(248);

	var _ControlsFormsButtonSimple = __webpack_require__(226);

	var React = __webpack_require__(202);

	var CompanyLogotype = (function (_React$Component) {
	    _inherits(CompanyLogotype, _React$Component);

	    function CompanyLogotype(props) {
	        var _this = this;

	        _classCallCheck(this, CompanyLogotype);

	        _get(Object.getPrototypeOf(CompanyLogotype.prototype), 'constructor', this).call(this, props);
	        this.state = {
	            logo: _AuthDashboard.AppState.myCompany.state.logo,
	            selectedFile: null
	        };

	        this.saveForm = function () {
	            _this.closeModal();
	        };

	        this.openInputUpload = function () {
	            _this.refs['input-upload-ref'].getDOMNode().click();
	        };

	        this.cancelLogoComp = function () {
	            _this.setState({ selectedFile: '' });
	        };

	        this.loadLogoComp = function (image) {
	            if (!image) return;
	            var message = {};

	            if (image.type == 'image/gif' || image.type == 'image/png' || image.type == 'image/jpeg') {
	                if (image.size <= 1024) {
	                    if (image.width <= 100 && image.height <= 100) {
	                        var form = new FormData(document.forms.namedItem('uploadLogoComp'));
	                        _api.Api.req_by_post('comp_logo_upsert', {}, form, true).then(function (res) {
	                            if (res) {
	                                if (res.err) {
	                                    logger.log('error', 'Error while upload logotype company', res.msg);
	                                    message = { message: res.msg, type: "error" };
	                                    return;
	                                }

	                                message = { message: "Логотип загружен.", type: "info" };
	                                _AuthDashboard.AppState.myCompany.state.logo = res.logo;
	                                _this.props.update();
	                                _this.setState({ logo: res.logo, selectedFile: '' });
	                            }
	                        });
	                    } else {
	                        message = { message: "Недопустимое разрешение файла.", type: "error" };
	                    }
	                } else {
	                    message = { message: "Размер загружаемого файла: " + image.size + "кб. \n Максимальный размер файла: 1024кб.", type: "error" };
	                }
	            } else {
	                message = { message: "Недопустимое формат файла. \n Допустимые форматы: jpeg, gif, png", type: "error" };
	            }

	            _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, message);
	        };

	        this.onHandleFile = function (e) {
	            var file = e.target.files[0],
	                image = new Image(),
	                reader = new FileReader();

	            reader.readAsDataURL(file);
	            reader.onload = function (upload) {
	                image.src = upload.target.result;
	                image.onload = function (_file) {
	                    _this.loadLogoComp({
	                        type: file.type,
	                        size: (file.size / 1000).toFixed(0),
	                        width: _file.path[0].width,
	                        height: _file.path[0].height
	                    });
	                };
	            };
	        };

	        this.deleteLogoComp = function () {
	            _api.Api.justDoRequest('comp_logo_delete').then(function (res) {
	                var message = {};
	                if (res) {
	                    if (res.err) {
	                        logger.log('error', 'Error while deleting the logotype company', res.msg);
	                        message = { message: res.msg, type: "error" };
	                        return;
	                    }

	                    message = { message: "Логотип удален.", type: "info" };
	                    _AuthDashboard.AppState.myCompany.state.logo = null;
	                    _this.setState({ logo: null });
	                    _this.props.update();
	                }
	                _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, message);
	            });
	        };

	        this.render = function () {
	            return React.createElement(
	                'div',
	                { className: 'modal-container__body' },
	                React.createElement(
	                    _SimpleComponentsFlexBox.FlexBox,
	                    { direction: 'row', justify: 'center', className: 'panel-sm' },
	                    React.createElement(
	                        'div',
	                        { className: 'company-logo' },
	                        _this.state.logo ? React.createElement(
	                            'div',
	                            { id: 'company-logo' },
	                            React.createElement('img', { src: 'http://cargo.chat/' + _this.state.logo })
	                        ) : React.createElement('div', { id: 'company-logo-null' })
	                    ),
	                    React.createElement(
	                        'div',
	                        { style: {
	                                'display': 'none'
	                            } },
	                        React.createElement(
	                            'form',
	                            { id: 'uploadLogoComp', encType: 'multipart/form-data', method: 'post' },
	                            React.createElement('input', { name: 'compLogoImage', type: 'file', ref: 'input-upload-ref', onChange: _this.onHandleFile })
	                        )
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'modal-container__info well well-small' },
	                    React.createElement(
	                        'div',
	                        null,
	                        'Допустимые форматы: jpeg, gif, png'
	                    ),
	                    React.createElement(
	                        'div',
	                        null,
	                        'Максимальное разрешение: 100x100'
	                    ),
	                    React.createElement(
	                        'div',
	                        null,
	                        'Максимальный размер: 1мб'
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'modal-container__footer' },
	                    React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.openInputUpload, caption: 'Выбрать', type: 'success', disabled: _this.state.logo }),
	                    React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.deleteLogoComp, caption: 'Удалить', type: 'danger', disabled: !_this.state.logo })
	                )
	            );
	        };
	    }

	    return CompanyLogotype;
	})(React.Component);

	exports['default'] = CompanyLogotype;
	module.exports = exports['default'];

/***/ },
/* 530 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _AuthDashboard = __webpack_require__(247);

	var _Validation = __webpack_require__(223);

	var _Dispatcher = __webpack_require__(4);

	var _ControlsModalWindow = __webpack_require__(233);

	var _ControlsFormsInputSimple = __webpack_require__(225);

	var _ControlsFormsFormGroup = __webpack_require__(224);

	var _ControlsFormsButtonSimple = __webpack_require__(226);

	var _ClassesLogger = __webpack_require__(3);

	var React = __webpack_require__(202);

	var CompanyInfo__Actions_Edit = (function (_React$Component) {
	    _inherits(CompanyInfo__Actions_Edit, _React$Component);

	    function CompanyInfo__Actions_Edit(props) {
	        var _this = this;

	        _classCallCheck(this, CompanyInfo__Actions_Edit);

	        _get(Object.getPrototypeOf(CompanyInfo__Actions_Edit.prototype), 'constructor', this).call(this, props);
	        this.state = {
	            isModalOpen: false,
	            name: this.props.data.name,
	            email: this.props.data.email,
	            web_site: this.props.data.web_site,
	            // ati_code: this.props.data.ati_code,  // deprecated
	            work_hours: this.props.data.work_hours,
	            info: this.props.data.info
	        };
	        this.validateFields = {
	            fields: [{ name: "name", value: false }]
	        };

	        this.validateForm = function () {
	            _this.validateFields.fields.forEach(function (field) {
	                if (_this.state[field.name] && _this.state[field.name].length) {
	                    field.value = true;
	                } else {
	                    field.value = false;
	                }
	            });
	            _this.setState({ isValidated: _this.isValidated() });
	        };

	        this.isValidated = function () {
	            return _this.validateFields.fields.every(function (field) {
	                return field.value === true;
	            });
	        };

	        this.closeModal = function () {
	            _this.setState({ isModalOpen: false });
	        };

	        this.openModal = function () {
	            _this.setState({ isModalOpen: true });
	        };

	        this.onChangeHandler = function (obj) {
	            _this.setState(obj);
	            _this.validateForm();
	        };

	        this.saveForm = function () {
	            // deprecated ati
	            //
	            // let params = {  name: this.state.name, email: this.state.email, web_site: this.state.web_site, ati_code: this.state.ati_code,
	            //                 work_hours: this.state.work_hours, info: this.state.info };

	            var params = { name: _this.state.name, email: _this.state.email, web_site: _this.state.web_site,
	                work_hours: _this.state.work_hours, info: _this.state.info };

	            _AuthDashboard.AppState.myCompany.updateCompanyRequest(params);
	            _this.closeModal();
	        };

	        this.render = function () {
	            var comp = _this.state.comp;

	            return React.createElement(
	                'div',
	                { className: 'box-row-nw' },
	                React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { caption: 'Изменить данные', onClick: _this.openModal, type: 'primary' }),
	                React.createElement(
	                    _ControlsModalWindow.ModalWindow,
	                    { isOpen: _this.state.isModalOpen, onClose: _this.closeModal, title: 'Изменить данные компании' },
	                    React.createElement(
	                        'div',
	                        { className: 'modal-container__body' },
	                        React.createElement(
	                            _ControlsFormsFormGroup.FormGroup,
	                            { name: 'E-mail', from: 'email' },
	                            React.createElement(_ControlsFormsInputSimple.InputSimple, { value: _this.state.email, name: 'email', onChange: _this.onChangeHandler })
	                        ),
	                        React.createElement(
	                            _ControlsFormsFormGroup.FormGroup,
	                            { name: 'Сайт', from: 'web_site' },
	                            React.createElement(_ControlsFormsInputSimple.InputSimple, { value: _this.state.web_site, name: 'web_site', onChange: _this.onChangeHandler })
	                        ),
	                        React.createElement(
	                            _ControlsFormsFormGroup.FormGroup,
	                            { name: 'Время работы', from: 'work_hours' },
	                            React.createElement(_ControlsFormsInputSimple.InputSimple, { value: _this.state.work_hours, name: 'work_hours', onChange: _this.onChangeHandler })
	                        ),
	                        React.createElement(
	                            _ControlsFormsFormGroup.FormGroup,
	                            { name: 'Описание компании', from: 'info' },
	                            React.createElement(_ControlsFormsInputSimple.InputSimple, { value: _this.state.info, name: 'info', onChange: _this.onChangeHandler })
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'modal-container__footer' },
	                            React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.saveForm, disabled: !_this.state.isValidated, type: 'success', caption: 'Изменить' })
	                        )
	                    )
	                )
	            );
	        };
	    }

	    // deprecated
	    //
	    // <FormGroup name="АТИ код" from="ati_code">
	    //                             <InputSimple value={this.state.ati_code} name="ati_code" onChange={this.onChangeHandler}/>
	    //                         </FormGroup>
	    return CompanyInfo__Actions_Edit;
	})(React.Component);

	exports['default'] = CompanyInfo__Actions_Edit;
	module.exports = exports['default'];

/***/ },
/* 531 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x2, _x3, _x4) { var _again = true; _function: while (_again) { var object = _x2, property = _x3, receiver = _x4; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x2 = parent; _x3 = property; _x4 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _api = __webpack_require__(1);

	var _ClassesLogger = __webpack_require__(3);

	var _Dashboard = __webpack_require__(247);

	//import {OtherCompanyFooter} from '../CompanyDetails/OtherCompanyFooter';

	var _Dispatcher = __webpack_require__(4);

	var _ControlsNavTabs = __webpack_require__(405);

	var _ControlsIcon = __webpack_require__(232);

	var _ControlsFormsButtonSimple = __webpack_require__(226);

	var _ControlsModalWindow = __webpack_require__(233);

	var _CompanyDetailsCompRelationCreateDialog = __webpack_require__(532);

	var React = __webpack_require__(202);
	var Router = __webpack_require__(7);
	var RouteHandler = Router.RouteHandler;

	var Comp = (function (_React$Component) {
	    _inherits(Comp, _React$Component);

	    function Comp(props) {
	        var _this = this;

	        _classCallCheck(this, Comp);

	        _get(Object.getPrototypeOf(Comp.prototype), 'constructor', this).call(this, props);
	        this.state = {
	            data: null,
	            isRelDialog: false
	        };

	        this.componentWillMount = function () {
	            _this.loadCompany();
	        };

	        this.loadCompany = function () {
	            var id = arguments.length <= 0 || arguments[0] === undefined ? _this.props.params.id : arguments[0];

	            _api.Api.companyStateRequestById(id).then(function (res) {
	                if (res.err) {
	                    _ClassesLogger.logger.log(_this, 'load company', res.msg, 'error');
	                    return;
	                }

	                _this.setState({ data: res });
	            });
	        };

	        this.linkRequest = function (from, to, type) {
	            if (!from || !to || !type) return;

	            _api.Api.linkCreateRequest({ comp_from: from, comp_to: to, relation_type: type }).then(function (res) {
	                if (res.err) {
	                    _ClassesLogger.logger.log(_this, 'linq request', res.msg, 'error');
	                    message = { message: res.msg, type: 'error' };
	                    return;
	                }

	                var message = undefined;

	                if (type == "social") message = { message: 'Компания ' + _this.state.data.name + ' добавлена в закладки', type: 'info' };
	                if (type == "blacklist") message = { message: 'Компания ' + _this.state.data.name + ' добавлена в черный список', type: 'info' };

	                _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, message);
	            });
	        };

	        this.relDialogClose = function () {
	            _this.setState({ isRelDialog: false });
	        };

	        this.relDialogOpen = function () {
	            _this.setState({ isRelDialog: true });
	        };

	        this.addToBookmarks = function () {
	            _this.linkRequest(_Dashboard.AppState.myCompany.id, _this.state.data.id, 'social');
	        };

	        this.addToBlackmarks = function () {
	            _this.linkRequest(_Dashboard.AppState.myCompany.id, _this.state.data.id, "blacklist");
	        };

	        this.render = function () {
	            var tabs = [{ name: 'О компании' }, { name: 'Выписка', href: '/info', hash: 'info' }, { name: 'Контакты', href: '/contacts', hash: 'contacts' }, { name: 'Партнеры', href: '/relations', hash: 'relations' }, { name: 'Транспортные средства', href: '/vehicles', hash: 'vehicles' }];

	            if (_this.state.data) {
	                var tags = _Dashboard.AppState.myCompany.getTagNames(_this.state.data.tags);
	                // {tags.length ? tags.map((tag, i)=>{
	                //     return <span className="label label-primary" key={i}>{tag}</span>
	                // }) : null}

	                return React.createElement(
	                    'div',
	                    { className: 'panel' },
	                    React.createElement(
	                        'div',
	                        { className: 'panel__header row row-no-padding' },
	                        React.createElement(
	                            'h1',
	                            { className: 'panel__title' },
	                            _this.state.data.name
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'panel__actions' },
	                            React.createElement(
	                                _ControlsModalWindow.ModalWindow,
	                                { isOpen: _this.state.isRelDialog, onClose: _this.relDialogClose, title: 'Выберите тип связи' },
	                                React.createElement(_CompanyDetailsCompRelationCreateDialog.CompRelationCreateDialog, { company: _this.state.data, onClose: _this.relDialogClose })
	                            ),
	                            React.createElement(
	                                'div',
	                                { 'data-tooltip': 'Добавить в закладки' },
	                                React.createElement(_ControlsIcon.Icon, { name: 'star-border', onClick: _this.addToBookmarks })
	                            ),
	                            React.createElement(
	                                'div',
	                                { 'data-tooltip': 'Создать связь' },
	                                React.createElement(_ControlsIcon.Icon, { name: 'add-circle-outline', onClick: _this.relDialogOpen })
	                            ),
	                            React.createElement(
	                                'div',
	                                { 'data-tooltip': 'Добавить в черный лист' },
	                                React.createElement(_ControlsIcon.Icon, { name: 'remove-circle-outline', onClick: _this.addToBlackmarks })
	                            )
	                        )
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'panel__nav-tabs' },
	                        React.createElement(_ControlsNavTabs.NavTabs, { baseHref: '#/dashboard/comp/' + _this.props.params.id, data: tabs, nHash: 4 })
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'panel__body' },
	                        React.createElement(RouteHandler, { company: _this.state.data })
	                    )
	                );
	            } else {
	                return React.createElement(
	                    'div',
	                    { className: 'panel' },
	                    'Загрузка ...'
	                );
	            }
	        };
	    }

	    // <div data-tooltip="Отправить сообщение"><Icon name="message"/></div>

	    // state = {};
	    // comp_loader = null;
	    // comp_data = null;
	    // focus = null;
	    // comp_id = null;

	    // componentWillMount=()=>{
	    //     //logger.log(this, 'mount');
	    // }

	    // componentWillUnmount=()=> {
	    //     //logger.log(this, 'unmount');
	    //     this.compLoaderStop();
	    // }

	    // componentWillReceiveProps=(p)=>{
	    //     //logger.log(this, 'props');
	    //     //console.debug(this.props);
	    //     //console.debug(p);
	    //     if (p.query['id'] != this.comp_id) {
	    //         // id поменялся, значит ребутим
	    //         this.comp_data = null;
	    //         this.compLoaderStop();
	    //         this.forceUpdate();
	    //     }
	    // }

	    // render=()=>{
	    //     //logger.log(this, 'render');
	    //     //console.debug(this.comp_data);

	    //     let cfg = {
	    //         about:      {title: 'О компании',            first: true},
	    //         info:       {title: 'Выписка'},
	    //         contacts:   {title: 'Контакты'},
	    //         relations:  {title: 'Связи'},
	    //         orders:     {title: 'Заявки'},
	    //         vehicles:   {title: 'Транспортные средства', last: true}
	    //     };

	    //     let m = window.location.hash.match(/\/comp\/([^\/\?]+)/i);
	    //     //console.debug(m);

	    //     if (!m || m.length < 2) return (<div>invalid path</div>);
	    //     this.focus = m[1];
	    //     if (this.focus == 'notfound') return (<RouteHandler />);
	    //     if (!(this.focus in cfg)) return (<div>invalid path</div>);
	    //     this.comp_id = this.props.query['id'];

	    //     if (this.comp_data == null) {  // еще не загружено
	    //         if (this.comp_loader == null) {  // загрузчика еще нет
	    //             this.comp_loader = new xreq('comp_state', {comp_id: this.comp_id}, this.compLoaderHandler);  // загружаем
	    //         }
	    //         return (<div>Загрузка...</div>);  // ждем загрузки
	    //     }

	    //     if ('err' in this.comp_data) return (<div><p>Ошибка:</p><pre>{JSON.stringify(this.comp_data, null, ' ')}</pre></div>);  // загружено с ошибкой

	    //     // готовим меню
	    //     var menu_list = [];
	    //     for (var k in cfg) {
	    //         let o = cfg[k];
	    //         let href = '#/dashboard/comp/' + k + '?id=' + this.comp_id;
	    //         let cl = (k === this.focus) ? 'sm-header-a active-item' : 'sm-header-a';
	    //         let wrpcl = o.first ? 'table-pr sm-header-bord' : o.last ? 'table-pl' : 'table-pr table-pl sm-header-bord';
	    //         menu_list.push(
	    //             <div key={k} className={wrpcl}>
	    //                 <a href={href} className={cl}>
	    //                     <div className='box-row-nw'>
	    //                         <span className='font600 font-sec marg-tags'>{o.title}</span>
	    //                     </div>
	    //                 </a>
	    //             </div>
	    //         );
	    //     }

	    //     return (
	    //         <FlexBox direction="column">
	    //             <SmallPanel styles={{smallPanel:{width:"100%", position:"relative", height:"230px" }}}>
	    //                 <div className="box-cln-nw" style={{display:"inline-block", width:"700px",height:"230px" }}>
	    //                     <MainInfo company={this.comp_data}/>
	    //                     <OtherCompanyFooter otherCompany={this.comp_data} />
	    //                 </div>
	    //                 <Map2 ref='yandexMap' className='' style={{display:"inline-block", position:"absolute", width:"350px",top:"0px", right:"0px", height:'230px'}} baloon={{address: this.comp_data.addr, name: this.comp_data.name}} />
	    //             </SmallPanel>
	    //             <div className='box-row-nw align-center sm-header panel panel-default'>
	    //                 {menu_list}
	    //             </div>
	    //             <RouteHandler company={this.comp_data}/>
	    //         </FlexBox>
	    //     )
	    // }

	    // compLoaderStop=()=>{  // выключаем api
	    //     if (this.comp_loader) { this.comp_loader.cancel(); this.comp_loader = null; }
	    // }

	    // compLoaderHandler=(xr)=>{  // загрузка данных компании
	    //     //logger.log(this, 'compLoaderHandler');
	    //     this.compLoaderStop();
	    //     this.comp_data = xr.res;
	    //     this.forceUpdate();
	    // }
	    return Comp;
	})(React.Component);

	exports.Comp = Comp;

/***/ },
/* 532 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _SimpleComponentsTransparentButton = __webpack_require__(264);

	var _SimpleComponentsInputSimple = __webpack_require__(248);

	var _api = __webpack_require__(1);

	var _utils = __webpack_require__(2);

	var _ClassesLogger = __webpack_require__(3);

	var _Dashboard = __webpack_require__(247);

	var _Dispatcher = __webpack_require__(4);

	var _ControlsFormsButtonSimple = __webpack_require__(226);

	var _ControlsFormsFormGroup = __webpack_require__(224);

	var React = __webpack_require__(202);

	var CompRelationCreateDialog = (function (_React$Component) {
	    _inherits(CompRelationCreateDialog, _React$Component);

	    function CompRelationCreateDialog() {
	        var _this = this;

	        _classCallCheck(this, CompRelationCreateDialog);

	        _get(Object.getPrototypeOf(CompRelationCreateDialog.prototype), 'constructor', this).apply(this, arguments);

	        this.state = {};
	        this.myComp = null;
	        this.oppComp = null;
	        this.availableRelations = {};
	        this.focusedRelation = null;
	        this.inviteDataStorage = {};
	        this.apireq = null;

	        this.apistop = function () {
	            // выключаем api
	            if (_this.apireq) {
	                _this.apireq.cancel();_this.apireq = null;
	            }
	        };

	        this.componentWillUnmount = function () {
	            //logger.log(this, 'unmount');
	            _this.apistop();
	        };

	        this.componentWillMount = function () {
	            //logger.log(this, 'mount');

	            _this.myComp = _Dashboard.AppState.myCompany.state;
	            _this.oppComp = _this.props.company;

	            // описание связей см https://github.com/Rusya13/AllshippersDocs/blob/master/docs/concept.md#Типы-связей

	            if (_utils.Utils.isElementInArray('shipper', _this.myComp.tags)) {
	                // грузовладелец может делать связи expedition
	                _this.availableRelations['expeditor_for_shipper'] = {
	                    title: 'Это мой экспедитор (я грузовладелец)',
	                    rel_mode: 'any',
	                    req: { relation_type: 'expedition', comp_from: _this.oppComp.id, comp_to: _this.myComp.id }
	                };
	            } else if (_this.oppComp.rel_transport_from != 'none') {
	                // связь transport не запрещена у контрагента
	                _this.availableRelations['carrier_for_expeditor'] = {
	                    title: 'Это мой экспедитор (я перевозчик)',
	                    rel_mode: _this.oppComp.rel_transport_from,
	                    req: { relation_type: 'transport', comp_from: _this.myComp.id, comp_to: _this.oppComp.id }
	                };
	            }
	            if (_this.oppComp.rel_transport_to != 'none') {
	                // связь transport не запрещена у контрагента
	                _this.availableRelations['expeditor_for_carrier'] = {
	                    title: 'Это мой перевозчик (я экспедитор)',
	                    rel_mode: _this.oppComp.rel_transport_from,
	                    req: { relation_type: 'transport', comp_from: _this.oppComp.id, comp_to: _this.myComp.id }
	                };
	            }
	        };

	        this.componentWillReceiveProps = function () {
	            _this.focusedRelation = null;
	        };

	        this.render = function () {
	            //logger.log(this, 'render');
	            //console.debug(this.state, this.myComp, this.oppComp);

	            var items = []; // список элементов для выбора связи
	            for (var k in _this.availableRelations) {
	                // перебор всех возможных связей
	                var o = _this.availableRelations[k]; // возможная связь
	                var invite = null;
	                if (_this.isInviteRequired(o)) {
	                    // компания безхозная и для связи требуется запрос
	                    // значит нужно заполнить приглашение owner_invite
	                    invite = React.createElement(
	                        'div',
	                        null,
	                        React.createElement(
	                            'h3',
	                            null,
	                            'Отправьте приглашение владельцу компании'
	                        ),
	                        React.createElement(
	                            'table',
	                            null,
	                            React.createElement(
	                                'tr',
	                                null,
	                                React.createElement(
	                                    'td',
	                                    { style: {
	                                            'width': '100px'
	                                        } },
	                                    'email'
	                                ),
	                                React.createElement(
	                                    'td',
	                                    null,
	                                    React.createElement(_SimpleComponentsInputSimple.InputSimple, { defaultValue: _this.inviteDataStorage['email'] || '', name: 'email', onChange: _this.inviteDataHandler })
	                                )
	                            ),
	                            React.createElement(
	                                'tr',
	                                null,
	                                React.createElement(
	                                    'td',
	                                    null,
	                                    'Телефон'
	                                ),
	                                React.createElement(
	                                    'td',
	                                    null,
	                                    React.createElement(_SimpleComponentsInputSimple.InputSimple, { defaultValue: _this.inviteDataStorage['phone'] || '', name: 'phone', onChange: _this.inviteDataHandler })
	                                )
	                            ),
	                            React.createElement(
	                                'tr',
	                                null,
	                                React.createElement(
	                                    'td',
	                                    null,
	                                    'ФИО'
	                                ),
	                                React.createElement(
	                                    'td',
	                                    null,
	                                    React.createElement(_SimpleComponentsInputSimple.InputSimple, { defaultValue: _this.inviteDataStorage['fio'] || '', name: 'fio', onChange: _this.inviteDataHandler })
	                                )
	                            )
	                        )
	                    );
	                }
	                items.push( // создаем элемент
	                React.createElement(
	                    'div',
	                    { className: _this.itemStyle(o), onClick: _this.chooseItemHandler.bind(null, o) },
	                    React.createElement(
	                        'p',
	                        { className: 'settings-p' },
	                        o.title
	                    ),
	                    invite
	                ));
	            }

	            return React.createElement(
	                'div',
	                { className: 'modal-container__body' },
	                React.createElement(
	                    'div',
	                    { className: 'panel-md' },
	                    items
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'modal-container__footer' },
	                    React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { type: 'success', caption: 'Создать', disabled: !_this.focusedRelation, onClick: _this.createHandler })
	                )
	            );

	            // OLD
	            // var create = this.focusedRelation ? <ButtonSimple type="success" caption="Создать" onClick={this.createHandler}/> : null;
	            // return (
	            //     <div className="modal-container__body">
	            //         <div className="panel-md">
	            //             {items}
	            //         </div>
	            //         <div className="modal-container__footer">
	            //             {create}
	            //             <ButtonSimple caption="Отменить" type="warning" onClick={this.closeHandler}/>
	            //         </div>
	            //     </div>
	            // )
	        };

	        this.isInviteRequired = function (o) {
	            // при создании связи требуется указать инват если у компании нет хозяина и связь требует подтверждения
	            return _this.focusedRelation == o && _this.oppComp.state == 'new' && o.rel_mode == 'request';
	        };

	        this.itemStyle = function (o) {
	            // генератор стиля для элемента выбора связи
	            return _this.focusedRelation == o ? 'relation__new-link relation__new-link--selected' : 'relation__new-link';
	        };

	        this.chooseItemHandler = function (o) {
	            // обработчик выбора связи
	            // logger.log(this, 'chooseItemHandler');
	            _this.focusedRelation = o; // делаем фокусе на выбранной связи
	            _this.forceUpdate(); // передергиваем компонент
	        };

	        this.inviteDataHandler = function (o) {
	            //logger.log(this, 'inviteDataHandler');
	            //console.debug(o)
	            for (var k in o) _this.inviteDataStorage[k] = o[k]; // мержим в inviteDataStorage
	        };

	        this.createHandler = function () {
	            // обработчик создания связи
	            _ClassesLogger.logger.log(_this, 'createHandler');

	            if (_this.isInviteRequired(_this.focusedRelation)) {

	                // проеряем мыло
	                if (!_utils.Utils.isEmailValid(_this.inviteDataStorage['email'])) return _Dispatcher.Events.runError('Введите email');

	                // проверяем телефон
	                var phone = _utils.Utils.extract_phone_number(_this.inviteDataStorage['phone']);
	                if (phone == null) return _Dispatcher.Events.runError('Введите телефон');

	                // проверяем ФИО
	                if ((_this.inviteDataStorage['fio'] || '') == '') return _Dispatcher.Events.runError('Введите ФИО');

	                // дополняем выбранный запрос
	                _this.focusedRelation.req.owner_invite = {
	                    fio: _this.inviteDataStorage['fio'],
	                    email: _this.inviteDataStorage['email'],
	                    phone: _utils.Utils.extract_phone_number(_this.inviteDataStorage['phone'])
	                };
	            }
	            if (_this.apireq) return; // предыдущий запрс не завершен
	            _this.apireq = new _api.xreq('comp_relation_create', _this.focusedRelation.req, _this.xreqHandler);
	        };

	        this.xreqHandler = function (req) {
	            //logger.log(this, 'xreqHandler');
	            //console.debug(req);
	            _this.apistop();
	            if (req.res.err) return;
	            if (req.res['relation_id']) _Dispatcher.Events.runInfo('Создана связь #' + req.res['relation_id']);
	            if (req.res['request_id']) _Dispatcher.Events.runInfo('Создан запрос #' + req.res['request_id']);
	            if (req.res['invite_id']) _Dispatcher.Events.runInfo('Создано приглашение #' + req.res['invite_id']);
	            _this.closeHandler();
	        };

	        this.closeHandler = function () {
	            _utils.Utils.run(_this.props.onClose);
	        };
	    }

	    return CompRelationCreateDialog;
	})(React.Component);

	exports.CompRelationCreateDialog = CompRelationCreateDialog;
	// моя компания
	// компания оппонента
	// возможные связи
	// выбранная связь
	// данные для приглашения
	// api.xreq

/***/ },
/* 533 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(202);

	var CompNotFound = (function (_React$Component) {
	    _inherits(CompNotFound, _React$Component);

	    function CompNotFound() {
	        _classCallCheck(this, CompNotFound);

	        _get(Object.getPrototypeOf(CompNotFound.prototype), "constructor", this).apply(this, arguments);

	        this.render = function () {
	            return React.createElement(
	                "div",
	                { className: "box-row-nw col-large" },
	                "Компания не найдена ..."
	            );
	        };
	    }

	    return CompNotFound;
	})(React.Component);

	exports.CompNotFound = CompNotFound;

/***/ },
/* 534 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _Map2 = __webpack_require__(416);

	var React = __webpack_require__(202);

	var CompAbout = (function (_React$Component) {
	    _inherits(CompAbout, _React$Component);

	    function CompAbout(props) {
	        var _this = this;

	        _classCallCheck(this, CompAbout);

	        _get(Object.getPrototypeOf(CompAbout.prototype), 'constructor', this).call(this, props);

	        this.render = function () {
	            var comp = _this.props.company;

	            return React.createElement(
	                'div',
	                { className: 'company-info' },
	                React.createElement(
	                    'div',
	                    { className: 'company-info__map' },
	                    React.createElement(_Map2.Map2, { ref: 'yandexMap', className: 'border', style: {
	                            'width': '100%',
	                            'height': '250px'
	                        }, baloon: { address: comp.addr, name: comp.name }, zoom: 16 })
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'row' },
	                    React.createElement(
	                        'div',
	                        { className: 'col-xs-4' },
	                        React.createElement(
	                            'div',
	                            { className: 'company-mini-card' },
	                            React.createElement(
	                                'div',
	                                { className: 'company-logo-box' },
	                                comp.logo ? React.createElement('img', { id: 'company-logo', src: 'http://cargo.chat/' + comp.logo, alt: comp.name }) : React.createElement('div', { id: 'company-logo-null' })
	                            ),
	                            React.createElement(
	                                'div',
	                                { className: 'company-mini-card__info' },
	                                React.createElement(
	                                    'h2',
	                                    null,
	                                    comp.name
	                                ),
	                                React.createElement(
	                                    'p',
	                                    null,
	                                    comp.addr
	                                ),
	                                React.createElement(
	                                    'p',
	                                    null,
	                                    'ИНН: ',
	                                    comp.inn
	                                )
	                            )
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'company-info__contact' },
	                            React.createElement(
	                                'div',
	                                { className: 'company-info-contacts' },
	                                React.createElement(CompanyInfo__Phone, { value: comp.phone }),
	                                React.createElement(CompanyInfo__Web, { value: comp.web_site }),
	                                React.createElement(CompanyInfo__Mail, { value: comp.email }),
	                                React.createElement(CompanyInfo__Hours, { value: comp.work_hours })
	                            )
	                        )
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'col-xs-8' },
	                        React.createElement(
	                            'div',
	                            { className: 'company-info__about' },
	                            React.createElement(
	                                'h3',
	                                null,
	                                'О компании'
	                            ),
	                            React.createElement(
	                                'div',
	                                { className: 'company-info-about' },
	                                comp.info
	                            )
	                        )
	                    )
	                )
	            );
	        };
	    }

	    // <CompanyInfo__AtiCode value={comp.ati_code}/>    // deprecated

	    return CompAbout;
	})(React.Component);

	exports.CompAbout = CompAbout;

	var CompanyInfo__Phone = (function (_React$Component2) {
	    _inherits(CompanyInfo__Phone, _React$Component2);

	    function CompanyInfo__Phone() {
	        var _this2 = this;

	        _classCallCheck(this, CompanyInfo__Phone);

	        _get(Object.getPrototypeOf(CompanyInfo__Phone.prototype), 'constructor', this).apply(this, arguments);

	        this.render = function () {
	            if (!_this2.props.value) return null;
	            return React.createElement(
	                'div',
	                { className: 'company-info-contacts__item' },
	                'Телефон: ',
	                _this2.props.value
	            );
	        };
	    }

	    return CompanyInfo__Phone;
	})(React.Component);

	var CompanyInfo__Web = (function (_React$Component3) {
	    _inherits(CompanyInfo__Web, _React$Component3);

	    function CompanyInfo__Web() {
	        var _this3 = this;

	        _classCallCheck(this, CompanyInfo__Web);

	        _get(Object.getPrototypeOf(CompanyInfo__Web.prototype), 'constructor', this).apply(this, arguments);

	        this.render = function () {
	            if (!_this3.props.value) return null;
	            return React.createElement(
	                'div',
	                { className: 'company-info-contacts__item' },
	                'Сайт компании: ',
	                React.createElement(
	                    'a',
	                    { href: 'http://' + _this3.props.value, target: '_blank' },
	                    'www.' + _this3.props.value
	                )
	            );
	        };
	    }

	    return CompanyInfo__Web;
	})(React.Component);

	var CompanyInfo__Hours = (function (_React$Component4) {
	    _inherits(CompanyInfo__Hours, _React$Component4);

	    function CompanyInfo__Hours() {
	        var _this4 = this;

	        _classCallCheck(this, CompanyInfo__Hours);

	        _get(Object.getPrototypeOf(CompanyInfo__Hours.prototype), 'constructor', this).apply(this, arguments);

	        this.render = function () {
	            if (!_this4.props.value) return null;
	            return React.createElement(
	                'div',
	                { className: 'company-info-contacts__item' },
	                'Время работы: ',
	                _this4.props.value
	            );
	        };
	    }

	    // deprecated
	    //
	    // class CompanyInfo__AtiCode extends React.Component {
	    //     render = ()=> {
	    //         if (!this.props.value) return null;
	    //         return <div className="company-info-contacts__item">АТИ: {this.props.value}</div>
	    //     }
	    // }

	    return CompanyInfo__Hours;
	})(React.Component);

	var CompanyInfo__Mail = (function (_React$Component5) {
	    _inherits(CompanyInfo__Mail, _React$Component5);

	    function CompanyInfo__Mail() {
	        var _this5 = this;

	        _classCallCheck(this, CompanyInfo__Mail);

	        _get(Object.getPrototypeOf(CompanyInfo__Mail.prototype), 'constructor', this).apply(this, arguments);

	        this.render = function () {
	            if (!_this5.props.value) return null;
	            return React.createElement(
	                'div',
	                { className: 'company-info-contacts__item' },
	                'E-mail: ',
	                React.createElement(
	                    'a',
	                    { href: 'mailto:' + _this5.props.value },
	                    _this5.props.value
	                )
	            );
	        };
	    }

	    return CompanyInfo__Mail;
	})(React.Component);

/***/ },
/* 535 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _SimpleComponentsTableForm = __webpack_require__(446);

	var _SimpleComponentsSmallPanel = __webpack_require__(407);

	var _AuthDashboard = __webpack_require__(247);

	var _ClassesLogger = __webpack_require__(3);

	var React = __webpack_require__(202);

	var CompInfo = (function (_React$Component) {
	    _inherits(CompInfo, _React$Component);

	    function CompInfo() {
	        var _this = this;

	        _classCallCheck(this, CompInfo);

	        _get(Object.getPrototypeOf(CompInfo.prototype), 'constructor', this).apply(this, arguments);

	        this.render = function () {
	            //logger.log(this, 'render');
	            //console.debug(this.props);

	            if (!_this.props.company) return React.createElement(
	                'div',
	                null,
	                'CompInfo: this.props.company is null'
	            );

	            // этот компонент используется для вывода данных и на странице /dashboard/comp/register,
	            // и на /dashboard/company/register-info, поэтому показываем данные из разных источников
	            var comp = _this.props.company.id == _AuthDashboard.AppState.myCompany.state.id ? _AuthDashboard.AppState.myCompany.state : _this.props.company;

	            var compTags = comp.tags ? _AuthDashboard.AppState.myCompany.getTagNames(comp.tags) : [];
	            var Tags = compTags.length > 0 ? compTags.map(function (tag) {
	                return React.createElement(
	                    'p',
	                    { className: 'divider card-disab p-list pagin-pr label-active font600label-active font600' },
	                    tag
	                );
	            }) : null;
	            //console.log("TAGS");
	            //console.log(compTags);
	            var mainInfo = {};
	            mainInfo.type = comp.dadata.data.type;
	            mainInfo.name = comp.name;
	            mainInfo.addr = comp.addr;
	            mainInfo.inn = comp.inn;
	            mainInfo.kpp = comp.kpp;
	            mainInfo.ogrn = comp.ogrn;
	            mainInfo.post = comp.dadata.data.type === "LEGAL" && comp.dadata.data.management ? comp.dadata.data.management.post : null;
	            mainInfo.headName = comp.dadata.data.type === "LEGAL" && comp.dadata.data.management ? comp.dadata.data.management.name : null;
	            mainInfo.full = comp.dadata.data.type === "LEGAL" ? comp.dadata.data.name.full_with_opf : null;
	            var regDate = new Date(comp.dadata.data.state.registration_date);
	            mainInfo.regDate = regDate.getDate() + "." + regDate.getMonth() + "." + regDate.getFullYear();
	            var actDate = new Date(comp.dadata.data.state.actuality_date);
	            mainInfo.actDate = actDate.getDate() + "." + actDate.getMonth() + "." + actDate.getFullYear();
	            mainInfo.status = comp.dadata.data.state.status;
	            mainInfo.taxation = comp.taxation ? _AuthDashboard.AppState.myCompany.getCompanyTaxation(comp.taxation) : 'не указана';

	            var bodyForMain = [{ fieldName: "Полное наименование", value: mainInfo.full }, { fieldName: "ИНН", value: mainInfo.inn }, { fieldName: "КПП", value: mainInfo.kpp }, { fieldName: "ОГРН", value: mainInfo.ogrn }, { fieldName: mainInfo.post, value: mainInfo.headName }, { fieldName: "Дата регистрации", value: mainInfo.regDate }, { fieldName: "Статус", value: mainInfo.status }, { fieldName: "Система налогообложения", value: mainInfo.taxation }, { fieldName: "Сведения актуальны на", value: mainInfo.actDate }];

	            return React.createElement(
	                'div',
	                { className: 'row' },
	                React.createElement(
	                    'div',
	                    { className: 'col-xs-12' },
	                    React.createElement(_SimpleComponentsTableForm.TableForm, { body: bodyForMain })
	                )
	            );
	        };
	    }

	    return CompInfo;
	})(React.Component);

	exports.CompInfo = CompInfo;

/***/ },
/* 536 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _SimpleComponentsSimpleTable2 = __webpack_require__(399);

	var _api = __webpack_require__(1);

	var _SimpleComponentsIcons = __webpack_require__(252);

	var _AuthDashboard = __webpack_require__(247);

	var _ClassesLogger = __webpack_require__(3);

	var React = __webpack_require__(202);

	var TblCellCompUserActions = (function (_React$Component) {
	    _inherits(TblCellCompUserActions, _React$Component);

	    function TblCellCompUserActions() {
	        var _this = this;

	        _classCallCheck(this, TblCellCompUserActions);

	        _get(Object.getPrototypeOf(TblCellCompUserActions.prototype), 'constructor', this).apply(this, arguments);

	        this.componentWillReceiveProps = function () {
	            _this.forceUpdate();
	        };

	        this.addUser = function () {
	            // logger.log(this, 'addUserHr', this.props.obj);
	            _AuthDashboard.AppState.myContacts.addContact(_this.props.obj.uid);
	        };

	        this.render = function () {
	            return React.createElement(
	                'div',
	                { className: 'row row-space-children' },
	                !_AuthDashboard.AppState.myContacts.isContactExists(_this.props.obj.uid) ? React.createElement(
	                    'div',
	                    { 'data-tooltip': 'Добавить в контакты', onClick: _this.addUser },
	                    React.createElement(_SimpleComponentsIcons.Icon, { iconName: 'user-plus-icon', size: 20 })
	                ) : null,
	                React.createElement(
	                    'div',
	                    { 'data-tooltip': 'Написать сообщение' },
	                    React.createElement(_SimpleComponentsIcons.Icon, { iconName: 'mail-icon', size: 20 })
	                )
	            );
	        };
	    }

	    return TblCellCompUserActions;
	})(React.Component);

	var CompContacts = (function (_React$Component2) {
	    _inherits(CompContacts, _React$Component2);

	    function CompContacts() {
	        var _this2 = this;

	        _classCallCheck(this, CompContacts);

	        _get(Object.getPrototypeOf(CompContacts.prototype), 'constructor', this).apply(this, arguments);

	        this.loader = null;
	        this.data = null;

	        this.componentWillUnmount = function () {
	            //logger.log(this, 'unmount');
	            _this2.loaderStop();
	        };

	        this.render = function () {
	            //logger.log(this, 'render');

	            if (_this2.data == null) {
	                // не загружено
	                if (_this2.loader == null) {
	                    // загрузчика нет
	                    _this2.loader = new _api.xreq( // начинаем загрузку
	                    'users_list', { fields: ['uid', 'ln', 'fn', 'pn', 'phone', 'email', 'icq', 'skype'],
	                        filters: [['cid', 'eq', _this2.props.params.id]],
	                        limit: 500 }, _this2.loaderHr);
	                }
	                return React.createElement(
	                    'div',
	                    null,
	                    'Загрузка...'
	                ); // ждем окончания загрузки
	            }

	            if ('err' in _this2.data) return React.createElement(
	                'div',
	                null,
	                React.createElement(
	                    'p',
	                    null,
	                    'Ошибка:'
	                ),
	                React.createElement(
	                    'pre',
	                    null,
	                    JSON.stringify(_this2.comp_data, null, ' ')
	                )
	            ); // загружено с ошибкой

	            _this2.opt = {
	                className: "panel panel-default max-size",
	                headerClass: _SimpleComponentsSimpleTable2.TblHead,
	                headData: [{ id: 'ln', title: 'Фамилия' }, { id: 'fn', title: 'Имя' }, { id: 'pn', title: 'Отчество' }, { id: 'mobile', title: 'Моб.телефон' }, { id: 'email', title: 'Email' }, { id: 'icq', title: 'ICQ' }, { id: 'skype', title: 'Skype' }, { id: 'uid', title: 'Действия', cellClass: TblCellCompUserActions }],
	                bodyClass: _SimpleComponentsSimpleTable2.TblBody, bodyData: _this2.data.data };

	            // контент
	            return React.createElement(
	                'div',
	                { className: 'row' },
	                React.createElement(
	                    'div',
	                    { className: 'col-xs-12' },
	                    React.createElement(_SimpleComponentsSimpleTable2.SimpleTable2, { opt: _this2.opt })
	                )
	            );
	        };

	        this.loaderStop = function () {
	            // выключаем api
	            if (_this2.loader) {
	                _this2.loader.cancel();_this2.loader = null;
	            }
	        };

	        this.loaderHr = function (xr) {
	            //logger.log(this, 'loaderHr');
	            _this2.loaderStop();
	            _this2.data = xr.res;
	            _this2.forceUpdate();
	        };
	    }

	    return CompContacts;
	})(React.Component);

	exports.CompContacts = CompContacts;
	// загрузчик
	// данные

/***/ },
/* 537 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _ClassesLogger = __webpack_require__(3);

	var _ControlsNavTabs = __webpack_require__(405);

	var React = __webpack_require__(202);
	var Router = __webpack_require__(7);
	var RouteHandler = Router.RouteHandler;

	var CompRelations = (function (_React$Component) {
	    _inherits(CompRelations, _React$Component);

	    function CompRelations() {
	        var _this = this;

	        _classCallCheck(this, CompRelations);

	        _get(Object.getPrototypeOf(CompRelations.prototype), 'constructor', this).apply(this, arguments);

	        this.render = function () {
	            //logger.log(this, 'render');

	            var cfg = {
	                carriers: { title: 'Перевозчики', relation: 'carriers', first: true },
	                shippers: { title: 'Заказчики перевозок', relation: 'shippers', last: true }
	            };

	            var comp_id = _this.props.query['id'];
	            var h = window.location.hash;
	            var m = h.match(/dashboard\/comp\/relations(?:\/([^\/\?]{0,})){0,1}/i);
	            //console.debug(window.location.hash, m);

	            // if (!m) return (<div>invalid path</div>);
	            // let focus = m.length == 2 ? m[1] : null;
	            //console.debug(focus);

	            // let menu_list = [];
	            // for (var k in cfg) {
	            //     let o = cfg[k];
	            //     let href = '#/dashboard/comp/relations/' + k + '?id=' + comp_id;
	            //     let acl = (k === focus) ? 'sm-header-a active-item' : 'sm-header-a';
	            //     let wcl = o.first ? 'table-pr sm-header-bord' : o.last ? 'table-pl' : 'table-pr table-pl sm-header-bord';
	            //     menu_list.push(
	            //         <div key={k} className={wcl}>
	            //             <a href={href} className={acl}>
	            //                 <div className='box-row-nw'>
	            //                     <span className='font600 font-sec marg-tags'>{o.title}</span>
	            //                 </div>
	            //             </a>
	            //         </div>
	            //     );
	            // }

	            // let dir = cfg[focus];
	            // let rou = dir ? <RouteHandler relation={dir.relation} comp_id={comp_id} /> : null;

	            var tabs = [{ name: "Перевозчики" }, { name: "Экспедиторы", href: "/expeditors", hash: "expeditors" }, { name: "Грузовладельцы", href: "/shippers", hash: "shippers" }];

	            var relation = location.hash.split('/')[5] ? location.hash.split('/')[5] : "carriers";

	            return React.createElement(
	                'div',
	                null,
	                React.createElement(
	                    'div',
	                    { className: 'panel__nav-tabs' },
	                    React.createElement(_ControlsNavTabs.NavTabs, { baseHref: '#/dashboard/comp/' + _this.props.params.id + '/relations', data: tabs, nHash: 5, className: 'nav-tabs nav-tabs--lower' })
	                ),
	                React.createElement(RouteHandler, { relation: relation, comp_id: _this.props.company.id })
	            );
	        };
	    }

	    return CompRelations;
	})(React.Component);

	exports.CompRelations = CompRelations;

	/*
	state = {};

	componentWillMount=()=> {
	    logger.log(this, 'mount');
	}

	componentWillUnmount=()=>{
	    logger.log(this, 'unmount');
	}
	*/

/***/ },
/* 538 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(202);

	var CompOrders = (function (_React$Component) {
	    _inherits(CompOrders, _React$Component);

	    function CompOrders() {
	        _classCallCheck(this, CompOrders);

	        _get(Object.getPrototypeOf(CompOrders.prototype), "constructor", this).apply(this, arguments);

	        this.render = function () {
	            return React.createElement(
	                "div",
	                { className: "box-row-nw col-large" },
	                "CompOrders"
	            );
	        };
	    }

	    return CompOrders;
	})(React.Component);

	exports.CompOrders = CompOrders;

/***/ },
/* 539 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _api = __webpack_require__(1);

	var _AuthDashboard = __webpack_require__(247);

	var _SimpleComponentsSimpleTable2 = __webpack_require__(399);

	var _SimpleComponentsTableCells = __webpack_require__(402);

	var _TransportTransportController = __webpack_require__(540);

	var _TransportTransportController2 = _interopRequireDefault(_TransportTransportController);

	var _TransportTransportList__Cell_Type = __webpack_require__(541);

	var _TransportTransportList__Cell_ImageHint = __webpack_require__(542);

	var _ClassesLogger = __webpack_require__(3);

	var React = __webpack_require__(202);

	var CompVehicles = (function (_React$Component) {
	    _inherits(CompVehicles, _React$Component);

	    function CompVehicles() {
	        var _this = this;

	        _classCallCheck(this, CompVehicles);

	        _get(Object.getPrototypeOf(CompVehicles.prototype), 'constructor', this).apply(this, arguments);

	        this.loader = null;
	        this.data = null;

	        this.componentWillUnmount = function () {
	            //logger.log(this, 'unmount');
	            _this.loaderStop();
	        };

	        this.render = function () {

	            if (_AuthDashboard.AppState.Transport == null) _AuthDashboard.AppState.Transport = new _TransportTransportController2['default'](); // это зачем то нужно рендерерам ячеек

	            if (_this.data == null) {
	                // не загружено
	                if (_this.loader == null) {
	                    // загрузчика нет
	                    _this.loader = new _api.xreq( // начинаем загрузку
	                    'vehicles_list', { comp_id: _this.props.company.id, fields: ['id', 'model', 'num', 'type', 'sts', 'sts_name', 'sts_size', 'sts_token', 'pts', 'pts_name', 'pts_size', 'pts_token'] }, _this.loaderHr);
	                }
	                return React.createElement(
	                    'div',
	                    null,
	                    'Загрузка...'
	                ); // ждем окончания загрузки
	            }

	            if ('err' in _this.data) return React.createElement(
	                'div',
	                null,
	                React.createElement(
	                    'p',
	                    null,
	                    'Ошибка:'
	                ),
	                React.createElement(
	                    'pre',
	                    null,
	                    JSON.stringify(_this.comp_data, null, ' ')
	                )
	            ); // загружено с ошибкой

	            _this.opt = {
	                className: 'panel panel-default max-size',
	                headerClass: _SimpleComponentsSimpleTable2.TblHead, headData: [{ id: 'model', title: 'Модель' }, { id: 'num', title: 'Номер' }, { id: 'type', title: 'Тип ТС', cellClass: _TransportTransportList__Cell_Type.TransportList__Cell_Type }, { id: 'sts', title: 'СТС', cellClass: _TransportTransportList__Cell_ImageHint.TransportList__Cell_ImageHint, cellOpt: { type: 'sts' } }, { id: 'pts', title: 'ПТС', cellClass: _TransportTransportList__Cell_ImageHint.TransportList__Cell_ImageHint, cellOpt: { type: 'pts' } }],
	                bodyClass: _SimpleComponentsSimpleTable2.TblBody, bodyData: _this.data.data, // контент
	                pagesClass: _SimpleComponentsSimpleTable2.TblPages, pagesConf: { availableCapacity: [5, 10], currentCapacity: 5, currentPage: 1 } // пагенатор
	            };

	            return React.createElement(
	                'div',
	                { className: 'row' },
	                React.createElement(
	                    'div',
	                    { className: 'col-xs-12' },
	                    React.createElement(_SimpleComponentsSimpleTable2.SimpleTable2, { opt: _this.opt })
	                )
	            );
	        };

	        this.loaderStop = function () {
	            // выключаем api
	            if (_this.loader) {
	                _this.loader.cancel();_this.loader = null;
	            }
	        };

	        this.loaderHr = function (xr) {
	            _this.loaderStop();
	            _this.data = xr.res;
	            _this.forceUpdate();
	        };
	    }

	    return CompVehicles;
	})(React.Component);

	exports.CompVehicles = CompVehicles;
	// загрузчик
	// данные

/***/ },
/* 540 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x2, _x3, _x4) { var _again = true; _function: while (_again) { var object = _x2, property = _x3, receiver = _x4; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x2 = parent; _x3 = property; _x4 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _api = __webpack_require__(1);

	var _AuthDashboard = __webpack_require__(247);

	var _Dispatcher = __webpack_require__(4);

	var _ClassesController = __webpack_require__(6);

	var _ClassesController2 = _interopRequireDefault(_ClassesController);

	var _ClassesLogger = __webpack_require__(3);

	var TransportController = (function (_Controller) {
	    _inherits(TransportController, _Controller);

	    function TransportController(props) {
	        var _this = this;

	        _classCallCheck(this, TransportController);

	        _get(Object.getPrototypeOf(TransportController.prototype), 'constructor', this).call(this, props);
	        this.typesList = [{ id: 1, tag: "truck", value: 'Тягач' }, { id: 2, tag: "lorry", value: 'Грузовик' }, { id: 3, tag: "trailer", value: 'Прицеп' }, { id: 4, tag: "semitrailer", value: 'Полуприцеп' }];

	        this.getVehicleType = function (typeTag) {
	            var typeName = _this.typesList.filter(function (type) {
	                return type.tag == typeTag;
	            });
	            return (typeName || []).length ? typeName[0].value : null;
	        };

	        this.vehiclesList = [];
	    }

	    // фильтры getVehiclesList
	    // тут формат фильтров упращен
	    // вместо "списка объектов с клчами col, op, val" - тут "список списков из трех элементов col, op, val"
	    // пример:
	    // вместо [{"col":"x","op":"lt","val":30},{"col":"x","op":"gt","val":10}]
	    // тут просто [["id","lt",30],["id","gt",10]]

	    _createClass(TransportController, [{
	        key: 'updateData',
	        value: function updateData() {
	            this.vehiclesList = this.getVehiclesList();
	        }
	    }, {
	        key: 'createVehicle',
	        value: function createVehicle(params) {
	            this.updateVehicle(params, 'create');
	        }
	    }, {
	        key: 'updateVehicle',

	        // при передаче в params vehicle_id будет update, иначе create
	        value: function updateVehicle(params) {
	            var _this2 = this;

	            var type = arguments.length <= 1 || arguments[1] === undefined ? 'update' : arguments[1];

	            var message = {};
	            if (params) {
	                _ClassesLogger.logger.log('Updating vehicle...', params);
	                _api.Api.vehicle_upsert(params).then(function (res) {
	                    if (res.err) {
	                        _ClassesLogger.logger.log('error', type == 'update' ? "Error while updating vehicle" : "Error while creating new vehicle", res.msg);
	                        message = { message: res.msg, type: "error" };
	                    } else {
	                        message = { message: type == 'update' ? "Данные по ТС обновлены" : "Новое ТС создано", type: "info" };
	                    }
	                    //this.run("Transport_updated", this);
	                    _this2.getVehiclesList();
	                    _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, message);
	                    //window.location.hash = 'dashboard/company/transport';
	                });
	            } else {
	                    message = { message: "Ошибка при обновлении ТС: invalid data", type: "error" };
	                    _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, message);
	                }
	        }
	    }, {
	        key: 'deleteVehicle',
	        value: function deleteVehicle(id) {
	            var _this3 = this;

	            var message = {};
	            if (id) {
	                _ClassesLogger.logger.log('Deleting the vehicle from DB...', id);
	                _api.Api.vehicle_delete(id).then(function (res) {
	                    if (res.err) {
	                        _ClassesLogger.logger.log('error', 'Error while deleting the vehicle', res.msg);
	                        message = { message: res.msg, type: "error" };
	                    } else {
	                        message = { message: "ТС успешно удалено.", type: "info" };
	                    }
	                    _this3.getVehiclesList();
	                    _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, message);
	                    //this.run("Transport_updated", this);
	                });
	            } else {
	                    message = { message: "Ошибка при удалении ТС: не найден ID.", type: "error" };
	                    _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, message);
	                }
	        }
	    }, {
	        key: 'getVehiclesList',
	        value: function getVehiclesList() {
	            var _this4 = this;

	            var message = {};
	            var params = {
	                comp_id: _AuthDashboard.AppState.myCompany.id,
	                fields: ["id", "model", "num", "type", "sts", "sts_name", "sts_size", "sts_token", "pts", "pts_name", "pts_size", "pts_token"]
	            };
	            _ClassesLogger.logger.log('Geting vehicles list...');
	            _api.Api.vehicles_list(params).then(function (res) {
	                if (res.err) {
	                    _ClassesLogger.logger.log('Error while getting vehicles list', res.msg);
	                    message = { message: res.msg, type: "error" };
	                    _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, message);
	                    return null;
	                } else {
	                    _ClassesLogger.logger.log("res tr=", res);
	                    _this4.vehiclesList = res.data;
	                    _this4.run("Transport_vehicleslist_complete", res.data);
	                }
	            });
	        }
	    }, {
	        key: 'countVehicles',
	        value: function countVehicles() {
	            return this.vehiclesList.length;
	        }
	    }]);

	    return TransportController;
	})(_ClassesController2['default']);

	exports['default'] = TransportController;
	module.exports = exports['default'];

/***/ },
/* 541 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _Dispatcher = __webpack_require__(4);

	var _AuthDashboard = __webpack_require__(247);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	var _ClassesLogger = __webpack_require__(3);

	var React = __webpack_require__(202);

	var TransportList__Cell_Type = (function (_React$Component) {
	    _inherits(TransportList__Cell_Type, _React$Component);

	    function TransportList__Cell_Type(props) {
	        var _this = this;

	        _classCallCheck(this, TransportList__Cell_Type);

	        _get(Object.getPrototypeOf(TransportList__Cell_Type.prototype), 'constructor', this).call(this, props);

	        this.render = function () {

	            return React.createElement(
	                'div',
	                null,
	                _AuthDashboard.AppState.Transport.getVehicleType(_this.props.obj.type)
	            );
	        };
	    }

	    return TransportList__Cell_Type;
	})(React.Component);

	exports.TransportList__Cell_Type = TransportList__Cell_Type;

/***/ },
/* 542 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _Dispatcher = __webpack_require__(4);

	var _AuthDashboard = __webpack_require__(247);

	var _ClassesLogger = __webpack_require__(3);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	var _SimpleComponentsTransparentButton = __webpack_require__(264);

	var _SimpleComponentsLoading = __webpack_require__(361);

	var _SimpleComponentsIcons = __webpack_require__(252);

	// import {ImageHint} from './TransportEditForm';

	var _ControlsImageHint = __webpack_require__(543);

	var React = __webpack_require__(202);

	var TransportList__Cell_ImageHint = (function (_React$Component) {
	    _inherits(TransportList__Cell_ImageHint, _React$Component);

	    function TransportList__Cell_ImageHint(props) {
	        var _this = this;

	        _classCallCheck(this, TransportList__Cell_ImageHint);

	        _get(Object.getPrototypeOf(TransportList__Cell_ImageHint.prototype), 'constructor', this).call(this, props);

	        this.render = function () {
	            var img = "http://cargo.chat/file/";
	            img += _this.props.cellOpt && _this.props.cellOpt.type == "sts" ? _this.props.obj.sts_token : _this.props.obj.pts_token;
	            return React.createElement(_ControlsImageHint.ImageHint, { src: img });
	        };
	    }

	    return TransportList__Cell_ImageHint;
	})(React.Component);

	exports.TransportList__Cell_ImageHint = TransportList__Cell_ImageHint;

/***/ },
/* 543 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _Icon = __webpack_require__(232);

	var React = __webpack_require__(202);

	var ImageHint = (function (_React$Component) {
	    _inherits(ImageHint, _React$Component);

	    function ImageHint(props) {
	        var _this = this;

	        _classCallCheck(this, ImageHint);

	        _get(Object.getPrototypeOf(ImageHint.prototype), 'constructor', this).call(this, props);
	        this.state = {
	            isNote: false
	        };

	        this.mouseLeave = function () {
	            _this.setState({ isNote: false });
	        };

	        this.mouseEnter = function () {
	            _this.setState({ isNote: true });
	        };

	        this.render = function () {
	            var image = _this.state.isNote ? React.createElement(
	                'div',
	                { className: 'image-hint__box' },
	                React.createElement('img', { src: _this.props.src })
	            ) : null;
	            return React.createElement(
	                'div',
	                { className: 'image-hint', onMouseEnter: _this.mouseEnter, onMouseLeave: _this.mouseLeave },
	                image,
	                React.createElement(_Icon.Icon, { name: 'image' })
	            );
	        };
	    }

	    _createClass(ImageHint, null, [{
	        key: 'propTypes',
	        value: {
	            src: React.PropTypes.string.isRequired
	        },
	        enumerable: true
	    }]);

	    return ImageHint;
	})(React.Component);

	exports.ImageHint = ImageHint;

/***/ },
/* 544 */
/***/ function(module, exports, __webpack_require__) {

	
	// это своя компания

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _ControlsNavTabs = __webpack_require__(405);

	var React = __webpack_require__(202);
	var Router = __webpack_require__(7);
	var RouteHandler = Router.RouteHandler;

	var CompanyDetails = React.createClass({
	    displayName: 'CompanyDetails',

	    propTypes: {
	        company: React.PropTypes.object.isRequired
	    },

	    componentWillReceiveProps: function componentWillReceiveProps() {
	        this.forceUpdate();
	    },

	    getInitialState: function getInitialState() {
	        return {
	            company: this.props.company,
	            dataRecieved: false,
	            selectedMenuItem: ''
	        };
	    },

	    render: function render() {
	        var tabs = [{ name: "О компании" }, { name: "Выписка", href: "/register-info", hash: "register-info" }, { name: "Сотрудники", href: "/staff", hash: "staff" }, { name: "Транспортные средства", href: "/transport", hash: "transport" }, { name: "Настройки", href: "/settings", hash: "settings" }];

	        return React.createElement(
	            'div',
	            { className: 'panel' },
	            React.createElement(
	                'div',
	                { className: 'panel__header' },
	                React.createElement(
	                    'h1',
	                    { className: 'panel__title' },
	                    'Компания'
	                )
	            ),
	            React.createElement(
	                'div',
	                { className: 'panel__nav-tabs' },
	                React.createElement(_ControlsNavTabs.NavTabs, { baseHref: '#/dashboard/company', data: tabs })
	            ),
	            React.createElement(
	                'div',
	                { className: 'panel__body' },
	                React.createElement(RouteHandler, { user: this.props.user, company: this.props.company, users: this.state.users })
	            )
	        );
	    }
	});

	exports.CompanyDetails = CompanyDetails;

/***/ },
/* 545 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _SimpleComponentsSmallPanelTest = __webpack_require__(430);

	var _SimpleComponentsInputText = __webpack_require__(408);

	var _SimpleComponentsTransparentButton = __webpack_require__(264);

	var _SimpleComponentsLoading = __webpack_require__(361);

	var _TenderForm = __webpack_require__(431);

	var _Dispatcher = __webpack_require__(4);

	var _SimpleComponentsCard = __webpack_require__(418);

	var _SimpleComponentsCard2 = _interopRequireDefault(_SimpleComponentsCard);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	var _CreateTender = __webpack_require__(433);

	var _utils = __webpack_require__(2);

	var _api = __webpack_require__(1);

	var React = __webpack_require__(202);

	var CardFooterOwner = React.createClass({
	    displayName: 'CardFooterOwner',

	    propTypes: {
	        footerProps: React.PropTypes.any

	    },
	    deleteTender: function deleteTender() {
	        var _this = this;

	        //Actions.deleteTender(this.props.footerProps.id)
	        _api.Api.deleteTender(this.props.footerProps.id).then(function (res) {
	            if (res.err) {
	                console.log(res.msg);
	            } else {
	                console.log(res);
	                _this.props.footerProps.update();
	            }
	        });
	    },
	    edit: function edit() {
	        this.props.footerProps.triggerEdit(this.props.footerProps.idInStore);
	    },
	    render: function render() {
	        return React.createElement(
	            'div',
	            { className: 'box-row-nw just-end table-footer table-pr' },
	            React.createElement(
	                'a',
	                { target: '_blank', href: this.props.footerProps.link },
	                React.createElement(_SimpleComponentsTransparentButton.TransparentButton, { caption: 'Подробнее' })
	            ),
	            React.createElement(_SimpleComponentsTransparentButton.TransparentButton, { caption: 'Редактировать' })
	        );
	    }

	});

	var CompanyTenders = React.createClass({
	    displayName: 'CompanyTenders',

	    getTenders: function getTenders() {
	        var _this2 = this;

	        _api.Api.req('graph', {
	            query: {
	                comps: {
	                    filters: [["id", "eq", this.props.company.id]],
	                    sub: {
	                        tenders: {},
	                        owned_tenders: {
	                            src: "tenders",
	                            relation: "comp_owner_of_tender"
	                        }
	                    }
	                }
	            }
	        }, false).then(function (res) {
	            //console.log("GOT tenders");
	            //console.log(res);
	            var tenders = res.comps.data[0].tenders.data;
	            var owned_tenders = res.comps.data[0].owned_tenders.data;
	            _this2.setState({ tenders: tenders, owned_tenders: owned_tenders });
	        });
	    },

	    componentWillMount: function componentWillMount() {
	        this.getTenders();
	    },

	    getInitialState: function getInitialState() {
	        return {
	            company: this.props.company,
	            selectedTender: null,
	            tenders: [],
	            owned_tenders: []
	        };
	    },

	    render: function render() {
	        var _this3 = this;

	        //console.log("Tenders State");
	        //console.log(this.state);
	        var tenders = this.state.owned_tenders;
	        //console.log(tenders);
	        var Tenders = tenders.map(function (tender, id) {

	            var startDate = new _utils.DateTime(tender.stime);
	            var endDate = new _utils.DateTime(tender.etime);
	            var publicDate = new _utils.DateTime(tender.ctime);

	            return React.createElement(
	                _SimpleComponentsCard2['default'],
	                { key: id,
	                    title: tender.name,
	                    subTitle: tender.organizer,
	                    footer: CardFooterOwner,
	                    footerProps: {
	                        id: tender.id,
	                        link: tender.organizer,
	                        triggerEdit: _this3.editTender,
	                        idInStore: id,
	                        update: _this3.getTenders

	                    }
	                },
	                React.createElement(
	                    'div',
	                    { className: 'box-row-nw just-btw' },
	                    React.createElement(
	                        'div',
	                        { className: 'card-p' },
	                        React.createElement(
	                            'p',
	                            { className: 'font-bold' },
	                            'Начало:'
	                        ),
	                        React.createElement(
	                            'p',
	                            null,
	                            startDate.getFullMonthDate()
	                        )
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'card-p' },
	                        React.createElement(
	                            'p',
	                            { className: 'font-bold' },
	                            'Окончание:'
	                        ),
	                        React.createElement(
	                            'p',
	                            null,
	                            endDate.getFullMonthDate()
	                        )
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'card-p card-disab' },
	                        React.createElement(
	                            'p',
	                            { className: 'font-bold' },
	                            'Дата публикации:'
	                        ),
	                        React.createElement(
	                            'p',
	                            null,
	                            publicDate.getFullMonthDate()
	                        ),
	                        React.createElement(
	                            'p',
	                            null,
	                            publicDate.getTime()
	                        )
	                    )
	                )
	            );
	        });
	        return React.createElement(
	            'div',
	            null,
	            React.createElement(
	                _SimpleComponentsFlexBox.FlexBox,
	                { direction: 'row' },
	                React.createElement(
	                    'div',
	                    { className: 'box-row-nw align-center conn-header panel panel-default' },
	                    React.createElement(
	                        'div',
	                        { className: 'table-pr sm-header-bord' },
	                        React.createElement(
	                            'a',
	                            { href: '', className: 'sm-header-a font-sec font600 text-under' },
	                            'Наши тендеры'
	                        )
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'table-pr table-pl sm-header-bord' },
	                        React.createElement(
	                            'a',
	                            { href: '', className: 'sm-header-a font-sec font600 text-under' },
	                            'Закладки'
	                        )
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'table-pl' },
	                        React.createElement(
	                            'a',
	                            { href: '', className: 'sm-header-a font-sec font600 text-under' },
	                            'Приглашения'
	                        )
	                    )
	                )
	            ),
	            React.createElement(
	                'div',
	                { className: 'box-row-nw col-large' },
	                React.createElement(
	                    'div',
	                    { className: 'test-animate' },
	                    Tenders
	                )
	            )
	        );
	    }
	});

	exports.CompanyTenders = CompanyTenders;

/***/ },
/* 546 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _SimpleComponentsSmallPanelTest = __webpack_require__(430);

	var _SimpleComponentsInputText = __webpack_require__(408);

	var _SimpleComponentsTransparentButton = __webpack_require__(264);

	var _SimpleComponentsLoading = __webpack_require__(361);

	var _TenderForm = __webpack_require__(431);

	var _Dispatcher = __webpack_require__(4);

	var _SimpleComponentsCard = __webpack_require__(418);

	var _SimpleComponentsCard2 = _interopRequireDefault(_SimpleComponentsCard);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	var _CreateTender = __webpack_require__(433);

	var _utils = __webpack_require__(2);

	var _api = __webpack_require__(1);

	var React = __webpack_require__(202);

	var CompanyVacancies = (function (_React$Component) {
	    _inherits(CompanyVacancies, _React$Component);

	    function CompanyVacancies() {
	        _classCallCheck(this, CompanyVacancies);

	        _get(Object.getPrototypeOf(CompanyVacancies.prototype), 'constructor', this).apply(this, arguments);

	        this.render = function () {
	            return React.createElement(
	                'div',
	                null,
	                'Вакансии'
	            );
	        };
	    }

	    return CompanyVacancies;
	})(React.Component);

	exports.CompanyVacancies = CompanyVacancies;

/***/ },
/* 547 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _Dispatcher = __webpack_require__(4);

	var _api = __webpack_require__(1);

	var _AuthDashboard = __webpack_require__(247);

	var _ClassesLogger = __webpack_require__(3);

	var _ClassesLogger2 = _interopRequireDefault(_ClassesLogger);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	var _SimpleComponentsTransparentButton = __webpack_require__(264);

	var _SimpleComponentsLoading = __webpack_require__(361);

	var _SimpleComponentsIcons = __webpack_require__(252);

	var _ControlsModalWindow = __webpack_require__(233);

	var _ControlsNavTabs = __webpack_require__(405);

	var _PriceRequestsController = __webpack_require__(394);

	var _PriceRequestsController2 = _interopRequireDefault(_PriceRequestsController);

	var _PriceRequestsNewForm = __webpack_require__(548);

	var React = __webpack_require__(202);
	var Router = __webpack_require__(7);
	var RouteHandler = Router.RouteHandler;

	var PriceRequests = (function (_React$Component) {
	    _inherits(PriceRequests, _React$Component);

	    function PriceRequests(props) {
	        var _this = this;

	        _classCallCheck(this, PriceRequests);

	        _get(Object.getPrototypeOf(PriceRequests.prototype), 'constructor', this).call(this, props);
	        this.state = {
	            isModalOpen: false,
	            selectedMenuItem: null,
	            countPriceRequestsCreated: 0,
	            countPriceRequestsReceived: 0,
	            countPriceRequestBookmarks: 0
	        };

	        this.componentWillMount = function () {
	            // AppState.PriceRequests.on("PriceRequests_updated", AppState.myCompany.update);
	            _AuthDashboard.AppState.PriceRequests = new _PriceRequestsController2['default']();
	            _AuthDashboard.AppState.PriceRequests.updateData();
	            _AuthDashboard.AppState.PriceRequests.on("PriceRequests_updated", _this.countPriceRequests);
	        };

	        this.componentWillUnmount = function () {
	            // AppState.PriceRequests.rem("PriceRequests_updated", AppState.myCompany.update);
	        };

	        this.componentDidMount = function () {
	            _ClassesLogger2['default'].debug(_this, 'Mount PriceRequests');
	            _this.getParams();
	            _this.select(_this.path);
	        };

	        this.countPriceRequests = function () {
	            _this.setState({
	                countPriceRequestsCreated: _AuthDashboard.AppState.PriceRequests.countPriceRequestsCreated(),
	                countPriceRequestsReceived: _AuthDashboard.AppState.PriceRequests.countPriceRequestsReceived(),
	                countPriceRequestBookmarks: _AuthDashboard.AppState.PriceRequests.countPriceRequestBookmarks()
	            });
	        };

	        this.clickToSelect = function (e) {
	            var hash = e.target.dataset.hash;
	            _this.select(hash);
	        };

	        this.select = function (activeItem) {
	            _this.setState({ selectedMenuItem: activeItem });
	        };

	        this.openModal = function () {
	            _this.setState({ isModalOpen: true });
	        };

	        this.closeModal = function () {
	            _ClassesLogger2['default'].debug(_this, 'closeModal');
	            _this.setState({ isModalOpen: false });
	        };

	        this.render = function () {

	            var tabs = [],
	                newPriceRequestProps = {
	                title: "Новый запрос ставки",
	                width: 400,
	                height: 200
	            };

	            // доступные пункты меню в зависимости от тэга компании:
	            // экспедитор = expeditor = видит все
	            // перевозчик = carrier =поиск + входящие + закладки
	            // грузовладелец = shipper = мои + создать запрос

	            if (true) {
	                tabs.push({
	                    name: "Мои запросы",
	                    count: _this.state.countPriceRequestsCreated
	                });
	            }
	            if (true) {
	                tabs.push({
	                    name: "Поиск запросов",
	                    href: "/search",
	                    hash: "search"
	                }, {
	                    name: "Входящие запросы",
	                    href: "/received",
	                    hash: "received",
	                    count: _this.state.countPriceRequestsReceived
	                }, {
	                    name: "Закладки",
	                    href: "/bookmarks",
	                    hash: "bookmarks",
	                    count: _this.state.countPriceRequestBookmarks,
	                    countType: "danger"
	                });
	            }

	            if (true) {
	                tabs.push({
	                    name: "Создать запрос",
	                    onClick: _this.openModal
	                });
	            }

	            return React.createElement(
	                'div',
	                { className: 'panel' },
	                React.createElement(
	                    'div',
	                    { className: 'panel__header' },
	                    React.createElement(
	                        'h1',
	                        { className: 'panel__title' },
	                        'Запросы ставок'
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'panel__nav-tabs' },
	                    React.createElement(_ControlsNavTabs.NavTabs, { baseHref: '#/dashboard/price-requests', data: tabs }),
	                    React.createElement(
	                        _ControlsModalWindow.ModalWindow,
	                        { isOpen: _this.state.isModalOpen, onClose: _this.closeModal, title: newPriceRequestProps.title },
	                        React.createElement(_PriceRequestsNewForm.PriceRequestsNewForm, { onClose: _this.closeModal })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'panel__body' },
	                    React.createElement(RouteHandler, null)
	                )
	            );
	        };

	        this.query = [];
	        this.path = 'created';
	    }

	    _createClass(PriceRequests, [{
	        key: 'getParams',
	        value: function getParams() {
	            var path = Router.HashLocation.getCurrentPath();
	            // trim the leading and trailing /
	            path = path.replace(/^\/+/, '');
	            path = path.replace(/\/+$/, '');
	            var pathArr = path.split('/');
	            if (pathArr.length == 3) this.path = pathArr[pathArr.length - 1];
	        }
	    }]);

	    return PriceRequests;
	})(React.Component);

	// render
	exports.PriceRequests = PriceRequests;

/***/ },
/* 548 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _Dispatcher = __webpack_require__(4);

	var _api = __webpack_require__(1);

	var _AuthDashboard = __webpack_require__(247);

	var _Validation = __webpack_require__(223);

	// import {InputSimple} from '../../SimpleComponents/InputSimple';

	var _SimpleComponentsInputCheckBox2 = __webpack_require__(400);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	var _SimpleComponentsTransparentButton = __webpack_require__(264);

	var _SimpleComponentsLoading = __webpack_require__(361);

	var _SimpleComponentsIcons = __webpack_require__(252);

	var _ClassesLogger = __webpack_require__(3);

	var _ClassesLogger2 = _interopRequireDefault(_ClassesLogger);

	var _ControlsFormsInputAddress = __webpack_require__(549);

	var _ControlsFormsInputSimple = __webpack_require__(225);

	var _ControlsFormsButtonSimple = __webpack_require__(226);

	var _ControlsFormsFormGroup = __webpack_require__(224);

	var _ControlsFormsInputCheckbox = __webpack_require__(227);

	var React = __webpack_require__(202);

	var PriceRequestsNewForm = (function (_React$Component) {
	    _inherits(PriceRequestsNewForm, _React$Component);

	    function PriceRequestsNewForm(props) {
	        var _this = this;

	        _classCallCheck(this, PriceRequestsNewForm);

	        _get(Object.getPrototypeOf(PriceRequestsNewForm.prototype), 'constructor', this).call(this, props);
	        this.state = {
	            "flags": 0,
	            "isValidated": false
	        };
	        this.validateFields = {
	            fields: [{ name: "shipment_time", value: false }, { name: "from_addr", value: false }, { name: "to_addr", value: false }, { name: "cargo_name", value: false }, { name: "volume", value: false }, { name: "mass", value: false }, { name: "unit", value: false }]
	        };

	        this.onChangeHandler = function (obj) {
	            _ClassesLogger2['default'].debug(_this, 'Change', obj);
	            _this.setState(obj);
	            _this.validateForm();
	        };

	        this.onCheckHandler = function (obj) {
	            _this.setState({ "flags": obj.flagOnlymine ? 1 : 0 });
	        };

	        this.saveForm = function () {
	            _AuthDashboard.AppState.PriceRequests.createPriceRequest(_this.state);
	            var c = _this.props.onClose;
	            if (c) c();
	        };

	        this.validateForm = function () {
	            _ClassesLogger2['default'].debug(_this, 'validate', _this.validateFields.fields);
	            _this.validateFields.fields.forEach(function (field) {
	                if (_this.state[field.name] && _this.state[field.name].length) {
	                    field.value = true;
	                }
	            });
	            _ClassesLogger2['default'].debug(_this, 'validate form? = ', _this.isValidated());
	            _this.setState({ isValidated: _this.isValidated() });
	        };

	        this.isValidated = function () {
	            return _this.validateFields.fields.every(function (field) {
	                return field.value === true;
	            });
	        };

	        this.closeForm = function () {
	            _ClassesLogger2['default'].debug(_this, 'Close new price request form');
	            var c = _this.props.onClose;
	            if (c) c();
	        };

	        this.onSelectFromAddress = function (addr, obj, posX, posY) {
	            _ClassesLogger2['default'].debug(_this, 'Select from address', addr + ", " + obj.name + ", " + posX + ", " + posY);
	            _this.setState({
	                "from_addr": addr,
	                "from_x": posX,
	                "from_y": posY
	            });
	            _this.validateForm();
	        };

	        this.onSelectToAddress = function (addr, obj, posX, posY) {
	            _ClassesLogger2['default'].debug(_this, 'Select to address', addr + ", " + obj.name + ", " + posX + ", " + posY);
	            _this.setState({
	                "to_addr": addr,
	                "to_x": posX,
	                "to_y": posY
	            });
	            _this.validateForm();
	        };

	        this.render = function () {
	            return React.createElement(
	                'div',
	                { className: 'modal-container__body' },
	                React.createElement(
	                    _ControlsFormsFormGroup.FormGroup,
	                    { name: 'Дата отгрузки', from: 'shipment_time' },
	                    React.createElement(_ControlsFormsInputSimple.InputSimple, { placeholder: '(В свободной форме)', name: 'shipment_time', onChange: _this.onChangeHandler })
	                ),
	                React.createElement(
	                    _ControlsFormsFormGroup.FormGroup,
	                    { name: 'Название', from: 'cargo_name' },
	                    React.createElement(_ControlsFormsInputSimple.InputSimple, { name: 'cargo_name', placeholder: 'Например: бумага', onChange: _this.onChangeHandler })
	                ),
	                React.createElement(
	                    _ControlsFormsFormGroup.FormGroup,
	                    { name: 'Откуда', from: 'from_addr' },
	                    React.createElement(_ControlsFormsInputAddress.InputAddress, { name: 'from_addr', onSelect: _this.onSelectFromAddress, onChange: _this.onChangeHandler, active: true })
	                ),
	                React.createElement(
	                    _ControlsFormsFormGroup.FormGroup,
	                    { name: 'Куда', from: 'to_addr' },
	                    React.createElement(_ControlsFormsInputAddress.InputAddress, { name: 'to_addr', onSelect: _this.onSelectToAddress, onChange: _this.onChangeHandler, active: true })
	                ),
	                React.createElement(
	                    _ControlsFormsFormGroup.FormGroup,
	                    { name: 'Объем, куб.м.', from: 'volume' },
	                    React.createElement(_ControlsFormsInputSimple.InputSimple, { name: 'volume', placeholder: '', onChange: _this.onChangeHandler, validation: { typing: _Validation.Validation.typingFloat } })
	                ),
	                React.createElement(
	                    _ControlsFormsFormGroup.FormGroup,
	                    { name: 'Масса, тонн', from: 'mass' },
	                    React.createElement(_ControlsFormsInputSimple.InputSimple, { name: 'mass', placeholder: '', onChange: _this.onChangeHandler, validation: { typing: _Validation.Validation.typingFloat } })
	                ),
	                React.createElement(
	                    _ControlsFormsFormGroup.FormGroup,
	                    { name: 'Единица ставки', from: 'unit' },
	                    React.createElement(_ControlsFormsInputSimple.InputSimple, { name: 'unit', placeholder: 'Например: руб за тонну', onChange: _this.onChangeHandler })
	                ),
	                React.createElement(
	                    _ControlsFormsFormGroup.FormGroup,
	                    { name: 'Примечание', from: 'note' },
	                    React.createElement(_ControlsFormsInputSimple.InputSimple, { name: 'note', placeholder: '', onChange: _this.onChangeHandler })
	                ),
	                React.createElement(
	                    _ControlsFormsFormGroup.FormGroup,
	                    { name: 'Видимость', from: 'flagOnlymine' },
	                    React.createElement(_ControlsFormsInputCheckbox.InputCheckbox, { name: 'flagOnlymine', onChange: _this.onCheckHandler, caption: 'Только для перевозчиков моей компании' })
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'modal-container__footer' },
	                    React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.saveForm, disabled: !_this.state.isValidated, type: 'success', caption: 'Опубликовать' })
	                )
	            );
	        };
	    }

	    _createClass(PriceRequestsNewForm, null, [{
	        key: 'propTypes',
	        value: {},
	        enumerable: true
	    }]);

	    return PriceRequestsNewForm;
	})(React.Component);

	exports.PriceRequestsNewForm = PriceRequestsNewForm;
	// render

/***/ },
/* 549 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _utils = __webpack_require__(2);

	var _ClassesLogger = __webpack_require__(3);

	var _ClassesLogger2 = _interopRequireDefault(_ClassesLogger);

	var React = __webpack_require__(202);

	var PureRenderMixin = React.PureRenderMixin;

	var InputAddress = React.createClass({
	    displayName: 'InputAddress',

	    mixins: [PureRenderMixin],

	    propTypes: {
	        labelWidth: React.PropTypes.number,
	        value: React.PropTypes.string
	    },
	    getDefaultProps: function getDefaultProps() {
	        return {
	            labelWidth: 114,
	            results: 5
	        };
	    },

	    //getInitialState () {
	    //  return({})
	    //},

	    focus: function focus() {
	        this.isFocus = true;
	        this.expanded = true;
	        this.setState({});
	    },

	    blur: function blur() {
	        this.isFocus = false;
	        this.expanded = false;
	        this.setState({});
	    },

	    change: function change(e) {
	        //console.debug('[InputAddress] change ' + e.target.value)
	        this.addr = e.target.value;
	        if (this.tid) {
	            clearTimeout(this.tid);
	            this.tid = null;
	        }
	        this.tid = setTimeout(this.addrTimerHr, 1000);
	        if (this.props.onChange) {
	            var obj;
	            if (this.props.name) {
	                obj = {};
	                obj[this.props.name] = e.target.value;
	            } else {
	                obj = e.target.value;
	            }
	            this.props.onChange(obj);
	        }
	    },

	    addrTimerHr: function addrTimerHr() {
	        var _this = this;

	        console.log('[InputAddress] addrTimerHr');
	        if (!ymaps) {
	            console.error('ymaps not avaliable now');
	            return;
	        }
	        this.selectedAddrObj = null;
	        var myGeocoder = ymaps.geocode(this.addr, { json: true, results: this.props.results });
	        myGeocoder.then(function (res) {
	            _this.sugg = res.GeoObjectCollection.featureMember;
	            //console.debug(this.sugg)
	            _this.expanded = true;
	            _this.forceUpdate();
	        }, function (err) {
	            console.error('ymaps.geocode failed: ' + err);
	        });
	    },

	    addrSelect: function addrSelect(o) {
	        //console.log('[InputAddress] addrSelect');
	        //console.debug(o);
	        this.addr = o.metaDataProperty.GeocoderMetaData.text;
	        var pos = _utils.Utils.extract_longlat(o.Point.pos) || { x: null, y: null };
	        this.refs['input'].getDOMNode().value = this.addr;
	        this.expanded = false;
	        this.setState({});
	        if (this.props.onSelect) this.props.onSelect(this.addr, o, pos.x, pos.y);
	    },

	    render: function render() {
	        var _this2 = this;

	        //console.log('[InputAddress] render');

	        var suggest = undefined;

	        if (this.expanded && this.sugg && this.sugg.length > 0) {
	            suggest = React.createElement(
	                'div',
	                { className: 'address-form-control-list' },
	                this.sugg.map(function (o, i) {
	                    return React.createElement(
	                        'div',
	                        { key: i, className: 'address-form-control-list__item',
	                            onMouseDown: _this2.addrSelect.bind(null, o.GeoObject) },
	                        o.GeoObject.metaDataProperty.GeocoderMetaData.text
	                    );
	                })
	            );
	        }

	        return React.createElement(
	            'div',
	            { className: 'address-form-control' },
	            React.createElement('input', { type: 'text', ref: 'input', className: 'form-control', disabled: !this.props.active, defaultValue: this.props.value, onFocus: this.focus, onBlur: this.blur, onChange: this.change }),
	            suggest
	        );
	    }

	});

	exports.InputAddress = InputAddress;

/***/ },
/* 550 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _Dispatcher = __webpack_require__(4);

	var _api = __webpack_require__(1);

	var _AuthDashboard = __webpack_require__(247);

	var _ClassesLogger = __webpack_require__(3);

	var _ClassesLogger2 = _interopRequireDefault(_ClassesLogger);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	var _SimpleComponentsLoading = __webpack_require__(361);

	var _PriceRequestsDataTable = __webpack_require__(551);

	var React = __webpack_require__(202);

	var PriceRequestsCreated = (function (_React$Component) {
	    _inherits(PriceRequestsCreated, _React$Component);

	    function PriceRequestsCreated() {
	        _classCallCheck(this, PriceRequestsCreated);

	        _get(Object.getPrototypeOf(PriceRequestsCreated.prototype), 'constructor', this).apply(this, arguments);

	        this.state = {};

	        this.componentWillMount = function () {};

	        this.render = function () {

	            var priceRequestsCreated = _AuthDashboard.AppState.PriceRequests.getPriceRequestsCreated();

	            return React.createElement(
	                'div',
	                null,
	                React.createElement(
	                    _SimpleComponentsLoading.Loading,
	                    { dontShow: true, dataRecived: priceRequestsCreated },
	                    React.createElement(_PriceRequestsDataTable.PriceRequestsDataTable, {
	                        type: 'created',
	                        priceRequests: priceRequestsCreated ? priceRequestsCreated : null })
	                )
	            );
	        };
	    }

	    return PriceRequestsCreated;
	})(React.Component);

	// render

	exports.PriceRequestsCreated = PriceRequestsCreated;

/***/ },
/* 551 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _AuthDashboard = __webpack_require__(247);

	var _ClassesLogger = __webpack_require__(3);

	var _SimpleComponentsSimpleTable2 = __webpack_require__(399);

	var _SimpleComponentsLoading = __webpack_require__(361);

	var _PriceRequests__Card = __webpack_require__(552);

	var React = __webpack_require__(202);

	var PriceRequestsDataTable = (function (_React$Component) {
	    _inherits(PriceRequestsDataTable, _React$Component);

	    function PriceRequestsDataTable() {
	        _classCallCheck(this, PriceRequestsDataTable);

	        _get(Object.getPrototypeOf(PriceRequestsDataTable.prototype), 'constructor', this).apply(this, arguments);
	    }

	    _createClass(PriceRequestsDataTable, [{
	        key: 'render',
	        value: function render() {

	            this.opt = {
	                // title
	                headerClass: _SimpleComponentsSimpleTable2.TblHead,
	                className: "panel panel-default max-size",
	                headData: [{ id: 'context', title: 'Запросы ставок', cellClass: _PriceRequests__Card.PriceRequests__Card }],
	                // body + data
	                bodyClass: _SimpleComponentsSimpleTable2.TblBody,
	                bodyData: this.props.priceRequests,
	                // paginator
	                pagesClass: _SimpleComponentsSimpleTable2.TblPages,
	                pagesConf: {
	                    availableCapacity: [2, 5, 10],
	                    currentCapacity: 10,
	                    currentPage: 1
	                },
	                //title: 'Запрос ставок',
	                selectionKey: 'sKey',
	                selectable: false,
	                multiselect: true,
	                // custom parameters
	                type: this.props.type
	            };

	            // return (
	            //     <Loading dontShow={true} dataRecived={this.props.priceRequests.length}>
	            //         <div className='box-row-wr align-s-start'>
	            //                 <SimpleTable2 opt={this.opt}/>
	            //             </div>
	            //     </Loading>
	            // )

	            _ClassesLogger.logger.log(this.props.priceRequests);

	            if (_AuthDashboard.AppState.PriceRequests.isUpdating) {
	                return React.createElement(
	                    'div',
	                    null,
	                    'Загрузка...'
	                );
	            } else {
	                if (this.props.priceRequests.length) {
	                    return React.createElement(
	                        'div',
	                        { className: 'row' },
	                        React.createElement(
	                            'div',
	                            { className: 'col-xs-12' },
	                            React.createElement(_SimpleComponentsSimpleTable2.SimpleTable2, { opt: this.opt })
	                        )
	                    );
	                }
	                return React.createElement(
	                    'div',
	                    null,
	                    'Запросов ставок не найдено.'
	                );
	            }
	        }
	        // render
	    }]);

	    return PriceRequestsDataTable;
	})(React.Component);

	exports.PriceRequestsDataTable = PriceRequestsDataTable;

/***/ },
/* 552 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _Dispatcher = __webpack_require__(4);

	var _api = __webpack_require__(1);

	var _AuthDashboard = __webpack_require__(247);

	var _ClassesLogger = __webpack_require__(3);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	var _SimpleComponentsIcons = __webpack_require__(252);

	var _SimpleComponentsHint = __webpack_require__(363);

	var _SimpleComponentsHint2 = _interopRequireDefault(_SimpleComponentsHint);

	var _SimpleComponentsTableCells = __webpack_require__(402);

	var _PriceRequests__Card_Actions_Created = __webpack_require__(553);

	var _PriceRequests__Card_Actions_CreateBet = __webpack_require__(554);

	var _PriceRequests__Card_Actions_DeleteReceivedRequest = __webpack_require__(556);

	var _PriceRequests__Card_Actions_CreateBookmark = __webpack_require__(557);

	var _PriceRequests__Card_Actions_DeleteBookmark = __webpack_require__(558);

	var _PriceRequests__Card_Actions_Search = __webpack_require__(559);

	var React = __webpack_require__(202);

	var PriceRequests__Card = (function (_React$Component) {
	    _inherits(PriceRequests__Card, _React$Component);

	    function PriceRequests__Card(props) {
	        var _this = this;

	        _classCallCheck(this, PriceRequests__Card);

	        _get(Object.getPrototypeOf(PriceRequests__Card.prototype), 'constructor', this).call(this, props);

	        this.render = function () {

	            //logger.debug(this,'opt=',this.props.opt);

	            // // формируем поля таблицы в зависимости от типа вывода запросов: созданные, входящие, закладки
	            // let headData = [];
	            // switch( this.props.type ) {
	            //     case "created":
	            //         headData = [
	            //             {id: 'context', title: 'Запросы ставок', cellClass: PriceRequests__Card},
	            //         ];
	            //     break;

	            //     case "__created":
	            //         headData = [
	            //             {id: 'id', title: '№'},
	            //             {id: 'ctime', title: 'Дата запроса', cellClass: TblDateUTCCls},
	            //             {id: 'shipment_time', title: 'Отгрузка'},
	            //             {id: 'from_addr', title: 'Откуда'},
	            //             {id: 'to_addr', title: 'Куда'},
	            //             {id: 'cargo_name', title: 'Груз'},
	            //             {id: 'volume', title: 'm3'},
	            //             {id: 'mass', title: 'тонн'},
	            //             {id: 'bets', title: 'Предложений'},
	            //             {id: 'note', title: 'Примечание'},
	            //             {id: 'actions', title: 'Действия', cellClass: PriceRequests__Card_Actions_Created}
	            //         ];
	            //     break;

	            //     case "received":
	            //         headData = [
	            //             {id: 'id', title: '№'},
	            //             {id: 'ctime', title: 'Дата публикации', cellClass: TblDateUTCCls},
	            //             {id: 'shipment_time', title: 'Отгрузка'},
	            //             {id: 'comp_name', title: 'Компания'},
	            //             {id: 'from_addr', title: 'Откуда'},
	            //             {id: 'to_addr', title: 'Куда'},
	            //             {id: 'cargo_name', title: 'Груз'},
	            //             {id: 'volume', title: 'm3'},
	            //             {id: 'mass', title: 'тонн'},
	            //             {id: 'unit', title: 'Ед изм'},
	            //             {id: 'bet', title: 'Моя ставка', cellClass: PriceRequests__Card_Actions_CreateBet},
	            //             {id: 'actions', title: 'Действия', cellClass: PriceRequests__Card_Actions_Received}
	            //         ];
	            //     break;

	            //     case "bookmarks":
	            //         headData = [
	            //             {id: 'id', title: '№'},
	            //             {id: 'ctime', title: 'Дата публикации', cellClass: TblDateUTCCls},
	            //             {id: 'shipment_time', title: 'Отгрузка'},
	            //             {id: 'comp_name', title: 'Компания'},
	            //             {id: 'from_addr', title: 'Откуда'},
	            //             {id: 'to_addr', title: 'Куда'},
	            //             {id: 'cargo_name', title: 'Груз'},
	            //             {id: 'volume', title: 'm3'},
	            //             {id: 'mass', title: 'тонн'},
	            //             {id: 'unit', title: 'Ед изм'},
	            //             {id: 'actions', title: 'Действия', cellClass: PriceRequests__Card_Actions_Bookmarks}
	            //         ];
	            //     break;
	            // }

	            // формируем активные кнопки в зависимости от типа запросов: созданные, входящие, закладки
	            var actions = null;
	            // количество предложений
	            var countBadge = null;
	            // let createBet = null;

	            switch (_this.props.opt.type) {
	                case "created":
	                    actions = React.createElement(_PriceRequests__Card_Actions_Created.PriceRequests__Card_Actions_Created, { obj: _this.props.obj });
	                    countBadge = _this.props.obj.bets ? React.createElement(
	                        'div',
	                        { className: 'PriceRequests__Card_bets' },
	                        React.createElement(
	                            'span',
	                            { 'data-tooltip': 'Количество предложений', className: 'font14 font600 accent-pad' },
	                            _this.props.obj.bets
	                        )
	                    ) : React.createElement(
	                        'div',
	                        { className: 'PriceRequests__Card_bets_zero' },
	                        React.createElement(
	                            'span',
	                            { 'data-tooltip': 'Количество предложений', className: 'font14 accent-pad' },
	                            '0'
	                        )
	                    );
	                    break;

	                case "received":
	                    actions = React.createElement(
	                        _SimpleComponentsFlexBox.FlexBox,
	                        { direction: 'row', alignItems: 'center' },
	                        React.createElement(_PriceRequests__Card_Actions_CreateBet.PriceRequests__Card_Actions_CreateBet, { obj: _this.props.obj, type: 'received' }),
	                        React.createElement(_PriceRequests__Card_Actions_CreateBookmark.PriceRequests__Card_Actions_CreateBookmark, { obj: _this.props.obj }),
	                        React.createElement(_PriceRequests__Card_Actions_DeleteReceivedRequest.PriceRequests__Card_Actions_DeleteReceivedRequest, { obj: _this.props.obj })
	                    );
	                    // createBet = (
	                    //     <div>
	                    //         <PriceRequests__Card_Actions_CreateBet obj={this.props.obj}/>
	                    //     </div>
	                    //     );
	                    break;

	                case "bookmarks":
	                    actions = React.createElement(
	                        _SimpleComponentsFlexBox.FlexBox,
	                        { direction: 'row', alignItems: 'center' },
	                        React.createElement(_PriceRequests__Card_Actions_CreateBet.PriceRequests__Card_Actions_CreateBet, { obj: _this.props.obj, type: 'bookmarks' }),
	                        React.createElement(_PriceRequests__Card_Actions_DeleteBookmark.PriceRequests__Card_Actions_DeleteBookmark, { obj: _this.props.obj })
	                    );
	                    break;

	                case "search":
	                    actions = React.createElement(
	                        _SimpleComponentsFlexBox.FlexBox,
	                        { direction: 'row', alignItems: 'center' },
	                        React.createElement(_PriceRequests__Card_Actions_CreateBet.PriceRequests__Card_Actions_CreateBet, { obj: _this.props.obj, type: 'search' }),
	                        React.createElement(_PriceRequests__Card_Actions_CreateBookmark.PriceRequests__Card_Actions_CreateBookmark, { obj: _this.props.obj })
	                    );
	                    break;
	            }

	            //  формируем короткий адрес откуда и куда
	            //  для грузовладельца формируем линк для перехода на подробную карточку
	            var fromAddrShort = _this.props.obj.from_addr.substr(_this.props.obj.from_addr.lastIndexOf(',') + 1);
	            var toAddrShort = _this.props.obj.to_addr.substr(_this.props.obj.to_addr.lastIndexOf(',') + 1);
	            var viewHref = "/#/dashboard/price-requests/view/" + _this.props.obj.price_request_id;
	            var title = _this.props.opt.type == "created" ? React.createElement(
	                'a',
	                { target: '_blank', href: viewHref },
	                React.createElement(
	                    'span',
	                    { className: 'PriceRequests__Card_title' },
	                    fromAddrShort,
	                    ' → ',
	                    toAddrShort
	                )
	            ) : React.createElement(
	                'span',
	                { className: 'PriceRequests__Card_title' },
	                fromAddrShort,
	                ' → ',
	                toAddrShort
	            );
	            var classPriceRequestAddress = _this.props.opt.type == "created" ? "PriceRequests__Card_address-created" : "PriceRequests__Card_address";
	            var classPriceRequestFooter = _this.props.opt.type == "created" ? "PriceRequests__Card_footer-created" : "PriceRequests__Card_footer";

	            return React.createElement(
	                'div',
	                { className: 'PriceRequests__Card' },
	                React.createElement(
	                    _SimpleComponentsFlexBox.FlexBox,
	                    { direction: 'row', justify: 'between', alignItems: 'center' },
	                    React.createElement(
	                        'div',
	                        { className: 'PriceRequests__Card_header' },
	                        React.createElement(
	                            'span',
	                            null,
	                            countBadge
	                        ),
	                        React.createElement(
	                            'span',
	                            null,
	                            title
	                        ),
	                        ' '
	                    ),
	                    actions
	                ),
	                React.createElement(
	                    _SimpleComponentsFlexBox.FlexBox,
	                    { direction: 'row', justify: 'between', alignItems: 'start' },
	                    React.createElement(
	                        'div',
	                        { className: classPriceRequestAddress },
	                        _this.props.obj.from_addr,
	                        ' → ',
	                        _this.props.obj.to_addr,
	                        React.createElement(
	                            'div',
	                            { className: 'padd-top' },
	                            React.createElement(
	                                'a',
	                                { target: '_blank', href: '#/dashboard/comp/' + _this.props.obj.comp_id },
	                                _this.props.obj.name
	                            ),
	                            React.createElement('br', null),
	                            React.createElement(
	                                'strong',
	                                null,
	                                'ИНН:'
	                            ),
	                            ' ',
	                            _this.props.obj.inn,
	                            React.createElement('br', null),
	                            React.createElement(
	                                'strong',
	                                null,
	                                'Адрес:'
	                            ),
	                            ' ',
	                            _this.props.obj.addr
	                        )
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: classPriceRequestFooter },
	                        _this.props.obj.unit,
	                        ' ',
	                        React.createElement(_SimpleComponentsIcons.Icon, { iconName: 'pay-icon', size: 18, className: 'icon-color marg-icon' })
	                    )
	                ),
	                React.createElement(
	                    _SimpleComponentsFlexBox.FlexBox,
	                    { direction: 'row', justify: 'between', alignItems: 'start' },
	                    React.createElement(
	                        _SimpleComponentsFlexBox.FlexBox,
	                        { direction: 'row', alignItems: 'start' },
	                        React.createElement(
	                            'div',
	                            { className: classPriceRequestFooter },
	                            React.createElement(_SimpleComponentsIcons.Icon, { iconName: 'clock-icon', size: 18, className: 'icon-color marg-icon' }),
	                            _this.props.obj.shipment_time
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: classPriceRequestFooter },
	                            React.createElement(_SimpleComponentsIcons.Icon, { iconName: 'cargo-icon', size: 18, className: 'icon-color marg-icon' }),
	                            React.createElement(
	                                'span',
	                                { className: 'PriceRequests__Card_cargo' },
	                                _this.props.obj.cargo_name
	                            ),
	                            ': ',
	                            React.createElement(
	                                'span',
	                                { className: 'PriceRequests__Card_cargo' },
	                                _this.props.obj.volume,
	                                ' '
	                            ),
	                            'м',
	                            React.createElement(
	                                'sup',
	                                null,
	                                '3'
	                            ),
	                            ', ',
	                            React.createElement(
	                                'span',
	                                { className: 'PriceRequests__Card_cargo' },
	                                _this.props.obj.mass
	                            ),
	                            ' т.'
	                        ),
	                        _this.props.obj.note ? React.createElement(
	                            'div',
	                            { className: classPriceRequestFooter },
	                            React.createElement(_SimpleComponentsIcons.Icon, { iconName: 'comment-icon', size: 18, className: 'icon-color marg-icon' }),
	                            _this.props.obj.note
	                        ) : null
	                    ),
	                    React.createElement(
	                        _SimpleComponentsFlexBox.FlexBox,
	                        { direction: 'row', alignItems: 'start' },
	                        React.createElement(
	                            'div',
	                            { className: 'PriceRequests__Card_ctime' },
	                            React.createElement(_SimpleComponentsTableCells.TblDateUTCCls, { value: _this.props.obj.ctime })
	                        )
	                    )
	                )
	            );
	        };
	    }

	    return PriceRequests__Card;
	})(React.Component);

	exports.PriceRequests__Card = PriceRequests__Card;

	// {(this.props.opt.type == "created") ? (<div>Created</div>) : null}

/***/ },
/* 553 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _Dispatcher = __webpack_require__(4);

	var _api = __webpack_require__(1);

	var _AuthDashboard = __webpack_require__(247);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	var _SimpleComponentsTransparentButton = __webpack_require__(264);

	var _SimpleComponentsLoading = __webpack_require__(361);

	var _SimpleComponentsIcons = __webpack_require__(252);

	var _ControlsModalWindow = __webpack_require__(233);

	var _SimpleComponentsHint = __webpack_require__(363);

	var _SimpleComponentsHint2 = _interopRequireDefault(_SimpleComponentsHint);

	var _ClassesLogger = __webpack_require__(3);

	var _ClassesLogger2 = _interopRequireDefault(_ClassesLogger);

	var React = __webpack_require__(202);

	var PriceRequests__Card_Actions_Created = (function (_React$Component) {
	    _inherits(PriceRequests__Card_Actions_Created, _React$Component);

	    function PriceRequests__Card_Actions_Created(props) {
	        var _this = this;

	        _classCallCheck(this, PriceRequests__Card_Actions_Created);

	        _get(Object.getPrototypeOf(PriceRequests__Card_Actions_Created.prototype), 'constructor', this).call(this, props);
	        this.state = {
	            isModalOpen: false
	        };

	        this.deletePriceRequest = function () {
	            _AuthDashboard.AppState.PriceRequests.deletePriceRequest(_this.props.obj.price_request_id);
	            _this.closeModal();
	        };

	        this.closeModal = function () {
	            _ClassesLogger2['default'].debug(_this, 'closeModalConfirm');
	            _this.setState({ isModalOpen: false });
	        };

	        this.openModal = function () {
	            _ClassesLogger2['default'].debug(_this, 'openModalConfirm');
	            _this.setState({ isModalOpen: true });
	        };

	        this.render = function () {

	            var modalWindowProps = {
	                title: "Удаление",
	                width: 300,
	                height: 100
	            };

	            var viewHref = "/#/dashboard/price-requests/view/" + _this.props.obj.price_request_id;

	            // <Hint text="Удалить запрос">
	            //     <div className="pagin-pls" onClick={this.openModal}>
	            //         <Icon iconName="delete-icon" size={20}/>
	            //     </div>
	            // </Hint>

	            return React.createElement(
	                'div',
	                { className: 'PriceRequests__Card_actions' },
	                React.createElement(
	                    'div',
	                    { className: '', 'data-tooltip': 'Посмотреть детали запроса' },
	                    React.createElement(
	                        'a',
	                        { target: '_blank', href: viewHref },
	                        React.createElement(_SimpleComponentsIcons.Icon, { iconName: 'details-icon', size: 20 })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'pagin-pls', 'data-tooltip': 'Удалить запрос', onClick: _this.openModal },
	                    React.createElement(_SimpleComponentsIcons.Icon, { iconName: 'delete-icon', size: 20 })
	                ),
	                React.createElement(
	                    _ControlsModalWindow.ModalWindow,
	                    { isOpen: _this.state.isModalOpen, onClose: _this.closeModal, width: modalWindowProps.width, height: 300, title: 'Удаление' },
	                    React.createElement(
	                        'div',
	                        null,
	                        'Вы действительно хотите удалить этот запрос?'
	                    ),
	                    React.createElement('br', null),
	                    React.createElement(
	                        'div',
	                        null,
	                        React.createElement(
	                            'i',
	                            null,
	                            _this.props.obj.shipment_time
	                        )
	                    ),
	                    React.createElement(
	                        'div',
	                        null,
	                        _this.props.obj.from_addr,
	                        ' ==>  ',
	                        _this.props.obj.to_addr
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'box-row-nw just-end marg-t' },
	                        React.createElement(_SimpleComponentsTransparentButton.TransparentButton, { onClick: _this.deletePriceRequest, caption: 'Удалить' }),
	                        React.createElement(_SimpleComponentsTransparentButton.TransparentButton, { onClick: _this.closeModal, caption: 'Отменить' })
	                    )
	                )
	            );
	        };
	    }

	    _createClass(PriceRequests__Card_Actions_Created, null, [{
	        key: 'defaultProps',
	        value: {
	            isModalOpen: false
	        },
	        enumerable: true
	    }]);

	    return PriceRequests__Card_Actions_Created;
	})(React.Component);

	// render
	exports.PriceRequests__Card_Actions_Created = PriceRequests__Card_Actions_Created;

/***/ },
/* 554 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _Dispatcher = __webpack_require__(4);

	var _api = __webpack_require__(1);

	var _AuthDashboard = __webpack_require__(247);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	// import {TransparentButton} from '../../SimpleComponents/TransparentButton';

	var _SimpleComponentsLoading = __webpack_require__(361);

	var _SimpleComponentsIcons = __webpack_require__(252);

	var _ControlsModalWindow = __webpack_require__(233);

	//import Hint from '../../SimpleComponents/Hint';

	var _ClassesLogger = __webpack_require__(3);

	var _ControlsFormsButtonSimple = __webpack_require__(226);

	var _PriceRequestsNewBet = __webpack_require__(555);

	var React = __webpack_require__(202);

	var PriceRequests__Card_Actions_CreateBet = (function (_React$Component) {
	    _inherits(PriceRequests__Card_Actions_CreateBet, _React$Component);

	    function PriceRequests__Card_Actions_CreateBet(props) {
	        var _this = this;

	        _classCallCheck(this, PriceRequests__Card_Actions_CreateBet);

	        _get(Object.getPrototypeOf(PriceRequests__Card_Actions_CreateBet.prototype), 'constructor', this).call(this, props);
	        this.state = {
	            isModalOpen: false
	        };

	        this.closeModal = function () {
	            _this.setState({ isModalOpen: false });
	        };

	        this.openModal = function () {
	            _this.setState({ isModalOpen: true });
	        };

	        this.render = function () {

	            // logger.log('create BET btn', this, AppState.myCompany, this.props.obj);

	            // don't show 'set bet' button if the company is a shipper only
	            if (_AuthDashboard.AppState.myCompany.isShipper() && !_AuthDashboard.AppState.myCompany.isExpeditor() && !_AuthDashboard.AppState.myCompany.isCarrier()) return null;

	            // don't show 'set bet' button for myself
	            if (_AuthDashboard.AppState.myCompany.id == _this.props.obj.comp_id) return null;

	            var vat = _this.props.obj.bet_flags ? "с НДС" : "без НДС";

	            if (_this.props.obj.bet) {
	                return React.createElement(
	                    'div',
	                    { className: 'PriceRequests__Card_bet' },
	                    _this.props.obj.bet,
	                    ' ',
	                    React.createElement(
	                        'span',
	                        null,
	                        vat
	                    )
	                );
	            } else {
	                return React.createElement(
	                    'div',
	                    { className: 'box-row-nw padd-right' },
	                    React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.openModal, type: 'success', size: 'small', caption: 'Указать ставку' }),
	                    React.createElement(
	                        _ControlsModalWindow.ModalWindow,
	                        { isOpen: _this.state.isModalOpen, onClose: _this.closeModal, width: 350, title: 'Указать ставку' },
	                        React.createElement(_PriceRequestsNewBet.PriceRequestsNewBet, { obj: _this.props.obj, type: _this.props.type, onClose: _this.closeModal })
	                    )
	                );
	            }
	        };
	    }

	    _createClass(PriceRequests__Card_Actions_CreateBet, null, [{
	        key: 'defaultProps',
	        value: {
	            isModalOpen: false
	        },
	        enumerable: true
	    }]);

	    return PriceRequests__Card_Actions_CreateBet;
	})(React.Component);

	// render
	exports.PriceRequests__Card_Actions_CreateBet = PriceRequests__Card_Actions_CreateBet;

	// <TransparentButton onClick={this.openModal} caption="Указать ставку" className="PriceRequests__Card_Button_CreateBet"/>

/***/ },
/* 555 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _Dispatcher = __webpack_require__(4);

	var _api = __webpack_require__(1);

	var _AuthDashboard = __webpack_require__(247);

	var _Validation = __webpack_require__(223);

	// import {InputText} from '../../SimpleComponents/InputText';
	// import {InputSimple} from '../../SimpleComponents/InputSimple';
	// import {InputCheckBox2} from '../../SimpleComponents/InputCheckBox2';

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	// import {TransparentButton} from '../../SimpleComponents/TransparentButton';

	var _SimpleComponentsLoading = __webpack_require__(361);

	var _SimpleComponentsIcons = __webpack_require__(252);

	var _ControlsFormsInputSimple = __webpack_require__(225);

	var _ControlsFormsButtonSimple = __webpack_require__(226);

	var _ControlsFormsFormGroup = __webpack_require__(224);

	var _ControlsFormsInputCheckbox = __webpack_require__(227);

	var _ClassesLogger = __webpack_require__(3);

	var React = __webpack_require__(202);

	var PriceRequestsNewBet = (function (_React$Component) {
	    _inherits(PriceRequestsNewBet, _React$Component);

	    function PriceRequestsNewBet(props) {
	        var _this = this;

	        _classCallCheck(this, PriceRequestsNewBet);

	        _get(Object.getPrototypeOf(PriceRequestsNewBet.prototype), 'constructor', this).call(this, props);
	        this.state = {
	            "flags": 0
	        };

	        this.componentWillMount = function () {
	            _this.setState({
	                "price_request_id": _this.props.obj.price_request_id
	            });
	        };

	        this.onChangeHandler = function (obj) {
	            _this.setState(obj);
	        };

	        this.onCheckHandler = function (obj) {
	            _this.setState({ "flags": obj.flagVAT ? 1 : 0 });
	        };

	        this.saveForm = function () {
	            _ClassesLogger.logger.log(_this, 'Create Bet, params = ', _this.state);
	            _AuthDashboard.AppState.PriceRequests.createPriceRequestBet(_this.state, _this.props.type);
	            var c = _this.props.onClose;
	            if (c) c();
	        };

	        this.closeForm = function () {
	            var c = _this.props.onClose;
	            if (c) c();
	        };

	        this.render = function () {

	            var formProps = {
	                labelWidth: 88
	            };

	            return React.createElement(
	                'div',
	                { className: 'modal-container__body' },
	                React.createElement(
	                    _ControlsFormsFormGroup.FormGroup,
	                    { name: 'Единица ставки', from: 'title' },
	                    ': ',
	                    _this.props.obj.unit
	                ),
	                React.createElement(
	                    _ControlsFormsFormGroup.FormGroup,
	                    { name: 'Ставка', from: 'title' },
	                    React.createElement(_ControlsFormsInputSimple.InputSimple, { name: 'bet', placeholder: '', onChange: _this.onChangeHandler, validation: { typing: _Validation.Validation.typingFloat } })
	                ),
	                React.createElement(
	                    _ControlsFormsFormGroup.FormGroup,
	                    { name: 'Включая НДС', from: 'flagOnlymine' },
	                    React.createElement(_ControlsFormsInputCheckbox.InputCheckbox, { name: 'flagVAT', onChange: _this.onCheckHandler, caption: 'НДС' })
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'modal-container__footer' },
	                    React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.saveForm, type: 'success', caption: 'Опубликовать' })
	                )
	            );
	        };
	    }

	    _createClass(PriceRequestsNewBet, null, [{
	        key: 'propTypes',
	        value: {},
	        enumerable: true
	    }]);

	    return PriceRequestsNewBet;
	})(React.Component);

	// render
	exports.PriceRequestsNewBet = PriceRequestsNewBet;

	// <ButtonSimple onClick={this.closeForm} type="warning" caption="Отменить"/>

	// <div>
	// <FlexBox direction="row" alignItems="center">
	//     <label className="label label-width-md">Единица ставки: {this.props.obj.unit}</label>
	// </FlexBox>
	// <FlexBox direction="row" alignItems="center">
	//     <label className="label label-width-md">Ставка</label>
	//     <InputSimple name="bet" placeholder="" onChange={this.onChangeHandler} validation={{typing:Validation.typingFloat}}/>
	// </FlexBox>
	// <FlexBox direction="row" alignItems="center">
	// <label className="label label-width-md">НДС</label>
	//     <label className="label-checkbox main-text">
	//         <InputCheckBox2
	//             inputName="flagVAT"
	//             checked={false}
	//             onChanged={this.onCheckHandler}
	//             returnValue={this.onCheckHandler}
	//             />
	//         </label>
	//         <label className="label padd-top">с НДС</label>
	// </FlexBox>
	// <div className="box-row-nw just-end marg-t">
	//     <TransparentButton onClick={this.saveForm} caption="Опубликовать"/>
	//     <TransparentButton onClick={this.closeForm} caption="Отменить"/>
	// </div>
	// </div>

/***/ },
/* 556 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _Dispatcher = __webpack_require__(4);

	var _api = __webpack_require__(1);

	var _AuthDashboard = __webpack_require__(247);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	// import {TransparentButton} from '../../SimpleComponents/TransparentButton';

	var _SimpleComponentsIcons = __webpack_require__(252);

	var _ControlsModalWindow = __webpack_require__(233);

	var _SimpleComponentsHint = __webpack_require__(363);

	var _SimpleComponentsHint2 = _interopRequireDefault(_SimpleComponentsHint);

	var _ClassesLogger = __webpack_require__(3);

	var _ClassesLogger2 = _interopRequireDefault(_ClassesLogger);

	var _ControlsFormsButtonSimple = __webpack_require__(226);

	var _ControlsFormsFormGroup = __webpack_require__(224);

	var React = __webpack_require__(202);

	var PriceRequests__Card_Actions_DeleteReceivedRequest = (function (_React$Component) {
	    _inherits(PriceRequests__Card_Actions_DeleteReceivedRequest, _React$Component);

	    function PriceRequests__Card_Actions_DeleteReceivedRequest() {
	        var _this = this;

	        _classCallCheck(this, PriceRequests__Card_Actions_DeleteReceivedRequest);

	        _get(Object.getPrototypeOf(PriceRequests__Card_Actions_DeleteReceivedRequest.prototype), 'constructor', this).apply(this, arguments);

	        this.state = {
	            isModalOpen: false
	        };

	        this.deletePriceRequestReceived = function () {
	            _AuthDashboard.AppState.PriceRequests.deletePriceRequestReceived(_this.props.obj.price_request_id);
	            _this.closeModal();
	        };

	        this.closeModal = function () {
	            _ClassesLogger2['default'].debug(_this, 'closeModalConfirm');
	            _this.setState({ isModalOpen: false });
	        };

	        this.openModal = function () {
	            _ClassesLogger2['default'].debug(_this, 'openModalConfirm');
	            _this.setState({ isModalOpen: true });
	        };

	        this.render = function () {
	            return React.createElement(
	                'div',
	                { className: 'box-row-nw' },
	                React.createElement(
	                    'div',
	                    { 'data-tooltip': 'Удалить входящий запрос', className: 'pagin-pls', onClick: _this.openModal },
	                    React.createElement(_SimpleComponentsIcons.Icon, { iconName: 'delete-icon', size: 20 })
	                ),
	                React.createElement(
	                    _ControlsModalWindow.ModalWindow,
	                    { isOpen: _this.state.isModalOpen, onClose: _this.closeModal, width: 300, title: 'Удаление' },
	                    React.createElement(
	                        'div',
	                        { className: 'modal-container__body' },
	                        React.createElement(
	                            _ControlsFormsFormGroup.FormGroup,
	                            { name: ' ', from: 'title' },
	                            React.createElement(
	                                'div',
	                                null,
	                                'Вы действительно хотите удалить этот входящий запрос?'
	                            ),
	                            React.createElement('br', null),
	                            React.createElement(
	                                'div',
	                                null,
	                                React.createElement(
	                                    'i',
	                                    null,
	                                    _this.props.obj.shipment_time
	                                )
	                            ),
	                            React.createElement(
	                                'div',
	                                null,
	                                _this.props.obj.from_addr,
	                                ' ==>  ',
	                                _this.props.obj.to_addr
	                            )
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'modal-container__footer' },
	                            React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.deletePriceRequestReceived, type: 'danger', caption: 'Удалить' })
	                        )
	                    )
	                )
	            );
	        };
	    }

	    return PriceRequests__Card_Actions_DeleteReceivedRequest;
	})(React.Component);

	// render
	exports.PriceRequests__Card_Actions_DeleteReceivedRequest = PriceRequests__Card_Actions_DeleteReceivedRequest;

	// <div className="box-row-nw">
	//                    <div data-tooltip="Удалить входящий запрос" className="pagin-pls" onClick={this.openModal}>
	//                        <Icon iconName="delete-icon" size={20}/>
	//                    </div>
	//                <ModalWindow isOpen={this.state.isModalOpen} onClose={this.closeModal} width={300} title="Удаление">
	//                        <div>Вы действительно хотите удалить этот входящий запрос?</div>
	//                        <br/>
	//                        <div><i>{this.props.obj.shipment_time}</i></div>
	//                        <div>{this.props.obj.from_addr} ==>  {this.props.obj.to_addr}</div>
	//                        <div className="box-row-nw just-end marg-t">
	//                            <TransparentButton onClick={this.deletePriceRequestReceived} caption="Удалить"/>
	//                            <TransparentButton onClick={this.closeModal} caption="Отменить"/>
	//                        </div>
	//                </ModalWindow>
	//            </div>

/***/ },
/* 557 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _Dispatcher = __webpack_require__(4);

	var _api = __webpack_require__(1);

	var _AuthDashboard = __webpack_require__(247);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	var _SimpleComponentsIcons = __webpack_require__(252);

	var _SimpleComponentsHint = __webpack_require__(363);

	var _SimpleComponentsHint2 = _interopRequireDefault(_SimpleComponentsHint);

	var _ClassesLogger = __webpack_require__(3);

	var _ClassesLogger2 = _interopRequireDefault(_ClassesLogger);

	var React = __webpack_require__(202);

	var PriceRequests__Card_Actions_CreateBookmark = (function (_React$Component) {
	    _inherits(PriceRequests__Card_Actions_CreateBookmark, _React$Component);

	    function PriceRequests__Card_Actions_CreateBookmark() {
	        var _this = this;

	        _classCallCheck(this, PriceRequests__Card_Actions_CreateBookmark);

	        _get(Object.getPrototypeOf(PriceRequests__Card_Actions_CreateBookmark.prototype), 'constructor', this).apply(this, arguments);

	        this.state = {};

	        this.createBookmark = function () {
	            _AuthDashboard.AppState.PriceRequests.createBookmark(_this.props.obj.price_request_id);
	        };

	        this.render = function () {

	            if (_AuthDashboard.AppState.PriceRequests.isBookmarkExists(_this.props.obj.price_request_id)) {
	                return React.createElement(
	                    'div',
	                    { 'data-tooltip': 'Уже в закладках', className: 'pagin-pls' },
	                    React.createElement(_SimpleComponentsIcons.Icon, { iconName: 'check-circle-icon', size: 20 })
	                );
	            } else {
	                return React.createElement(
	                    'div',
	                    { 'data-tooltip': 'Добавить в закладки', className: 'pagin-pls', onClick: _this.createBookmark },
	                    React.createElement(_SimpleComponentsIcons.Icon, { iconName: 'bookmark-icon', size: 20 })
	                );
	            }
	        };
	    }

	    return PriceRequests__Card_Actions_CreateBookmark;
	})(React.Component);

	// render
	exports.PriceRequests__Card_Actions_CreateBookmark = PriceRequests__Card_Actions_CreateBookmark;

/***/ },
/* 558 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _Dispatcher = __webpack_require__(4);

	var _api = __webpack_require__(1);

	var _AuthDashboard = __webpack_require__(247);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	var _SimpleComponentsIcons = __webpack_require__(252);

	var _SimpleComponentsHint = __webpack_require__(363);

	var _SimpleComponentsHint2 = _interopRequireDefault(_SimpleComponentsHint);

	var _ClassesLogger = __webpack_require__(3);

	var _ClassesLogger2 = _interopRequireDefault(_ClassesLogger);

	var React = __webpack_require__(202);

	var PriceRequests__Card_Actions_DeleteBookmark = (function (_React$Component) {
	    _inherits(PriceRequests__Card_Actions_DeleteBookmark, _React$Component);

	    function PriceRequests__Card_Actions_DeleteBookmark(props) {
	        var _this = this;

	        _classCallCheck(this, PriceRequests__Card_Actions_DeleteBookmark);

	        _get(Object.getPrototypeOf(PriceRequests__Card_Actions_DeleteBookmark.prototype), 'constructor', this).call(this, props);
	        this.state = {};

	        this.deleteBookmark = function () {
	            _AuthDashboard.AppState.PriceRequests.deleteBookmark(_this.props.obj.price_request_id);
	        };

	        this.render = function () {

	            var modalWindowProps = {
	                title: "Удаление",
	                width: 300,
	                height: 100
	            };

	            return React.createElement(
	                'div',
	                { 'data-tooltip': 'Удалить из закладок', className: 'pagin-pls', onClick: _this.deleteBookmark },
	                React.createElement(_SimpleComponentsIcons.Icon, { iconName: 'delete-icon', size: 20 })
	            );
	        };
	    }

	    _createClass(PriceRequests__Card_Actions_DeleteBookmark, null, [{
	        key: 'defaultProps',
	        value: {},
	        enumerable: true
	    }]);

	    return PriceRequests__Card_Actions_DeleteBookmark;
	})(React.Component);

	// render
	exports.PriceRequests__Card_Actions_DeleteBookmark = PriceRequests__Card_Actions_DeleteBookmark;

/***/ },
/* 559 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _Dispatcher = __webpack_require__(4);

	var _api = __webpack_require__(1);

	var _AuthDashboard = __webpack_require__(247);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	var _SimpleComponentsTransparentButton = __webpack_require__(264);

	var _SimpleComponentsLoading = __webpack_require__(361);

	var _SimpleComponentsIcons = __webpack_require__(252);

	var _SimpleComponentsModalWindow = __webpack_require__(362);

	var _SimpleComponentsHint = __webpack_require__(363);

	var _SimpleComponentsHint2 = _interopRequireDefault(_SimpleComponentsHint);

	var _ClassesLogger = __webpack_require__(3);

	var _ClassesLogger2 = _interopRequireDefault(_ClassesLogger);

	var React = __webpack_require__(202);

	var PriceRequests__Card_Actions_Search = (function (_React$Component) {
	    _inherits(PriceRequests__Card_Actions_Search, _React$Component);

	    function PriceRequests__Card_Actions_Search(props) {
	        var _this = this;

	        _classCallCheck(this, PriceRequests__Card_Actions_Search);

	        _get(Object.getPrototypeOf(PriceRequests__Card_Actions_Search.prototype), 'constructor', this).call(this, props);
	        this.state = {};

	        this.createBookmark = function () {
	            _AuthDashboard.AppState.PriceRequests.createBookmark(_this.props.obj.price_request_id);
	        };

	        this.render = function () {
	            return React.createElement(
	                'div',
	                { className: 'box-row-nw' },
	                React.createElement(
	                    'div',
	                    { 'data-tooltip': 'Добавить в закладки', className: 'pagin-pls', onClick: _this.createBookmark },
	                    React.createElement(_SimpleComponentsIcons.Icon, { iconName: 'bookmark-icon', size: 20 })
	                )
	            );
	        };
	    }

	    _createClass(PriceRequests__Card_Actions_Search, null, [{
	        key: 'defaultProps',
	        value: {},
	        enumerable: true
	    }]);

	    return PriceRequests__Card_Actions_Search;
	})(React.Component);

	// render
	exports.PriceRequests__Card_Actions_Search = PriceRequests__Card_Actions_Search;

/***/ },
/* 560 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _Dispatcher = __webpack_require__(4);

	var _api = __webpack_require__(1);

	var _AuthDashboard = __webpack_require__(247);

	var _ClassesLogger = __webpack_require__(3);

	var _ClassesLogger2 = _interopRequireDefault(_ClassesLogger);

	var _SimpleComponentsLoading = __webpack_require__(361);

	var _PriceRequestsDataTable = __webpack_require__(551);

	var React = __webpack_require__(202);

	var PriceRequestsReceived = (function (_React$Component) {
	    _inherits(PriceRequestsReceived, _React$Component);

	    function PriceRequestsReceived() {
	        _classCallCheck(this, PriceRequestsReceived);

	        _get(Object.getPrototypeOf(PriceRequestsReceived.prototype), 'constructor', this).apply(this, arguments);

	        this.state = {};

	        this.componentWillMount = function () {};

	        this.render = function () {

	            var priceRequestsReceived = _AuthDashboard.AppState.PriceRequests.getPriceRequestsReceived();
	            return React.createElement(
	                'div',
	                null,
	                React.createElement(
	                    _SimpleComponentsLoading.Loading,
	                    { dontShow: true, dataRecived: priceRequestsReceived },
	                    React.createElement(_PriceRequestsDataTable.PriceRequestsDataTable, {
	                        type: 'received',
	                        priceRequests: priceRequestsReceived ? priceRequestsReceived : null })
	                )
	            );
	        };
	    }

	    return PriceRequestsReceived;
	})(React.Component);

	// render

	exports.PriceRequestsReceived = PriceRequestsReceived;

/***/ },
/* 561 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _Dispatcher = __webpack_require__(4);

	var _api = __webpack_require__(1);

	var _AuthDashboard = __webpack_require__(247);

	var _ClassesLogger = __webpack_require__(3);

	var _utils = __webpack_require__(2);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	var _SimpleComponentsTransparentButton = __webpack_require__(264);

	var _SimpleComponentsLoading = __webpack_require__(361);

	var _SimpleComponentsIcons = __webpack_require__(252);

	var _SimpleComponentsModalWindow = __webpack_require__(362);

	var _ControlsFormsFormGroup = __webpack_require__(224);

	var _ControlsFormsButtonSimple = __webpack_require__(226);

	var _Validation = __webpack_require__(223);

	var _ControlsFormsInputSimple = __webpack_require__(225);

	var _ControlsFormsInputAddress = __webpack_require__(549);

	var _SimpleComponentsInputCheckBox2 = __webpack_require__(400);

	var _ControlsFormsInputDate = __webpack_require__(265);

	var _SimpleComponentsSimpleTable2 = __webpack_require__(399);

	var _SimpleComponentsTableCells = __webpack_require__(402);

	var _PriceRequestsDataTable = __webpack_require__(551);

	var _PriceRequests__Card = __webpack_require__(552);

	var React = __webpack_require__(202);

	var PriceRequestsSearch = (function (_React$Component) {
	    _inherits(PriceRequestsSearch, _React$Component);

	    function PriceRequestsSearch(props) {
	        var _this = this;

	        _classCallCheck(this, PriceRequestsSearch);

	        _get(Object.getPrototypeOf(PriceRequestsSearch.prototype), 'constructor', this).call(this, props);
	        this.state = {
	            searchResults: [],
	            isSearchNotPerfomed: true,
	            isNewSearch: false,
	            isSearching: false
	        };
	        this.paginator = {};

	        this.componentWillMount = function () {
	            _this.setPaginator(5, 1);
	            _AuthDashboard.AppState.PriceRequests.on("PriceRequests_search_complete", _this.showResults);
	        };

	        this.componentWillUnmount = function () {
	            _AuthDashboard.AppState.PriceRequests.rem("PriceRequests_search_complete", _this.showResults);
	        };

	        this.onChangeHandler = function (obj) {
	            _this.setState(obj);
	        };

	        this.onSelectFromAddress = function (addr, obj, posX, posY) {
	            _ClassesLogger.logger.log(_this, 'Select from address', addr + ", " + obj.name + ", " + posX + ", " + posY);
	            _this.setState({
	                "from_addr": addr,
	                "from_x": posX,
	                "from_y": posY
	            });
	        };

	        this.onSelectToAddress = function (addr, obj, posX, posY) {
	            _ClassesLogger.logger.log(_this, 'Select to address', addr + ", " + obj.name + ", " + posX + ", " + posY);
	            _this.setState({
	                "to_addr": addr,
	                "to_x": posX,
	                "to_y": posY
	            });
	        };

	        this.showResults = function (result) {
	            _ClassesLogger.logger.log(_this, 'showResults found = ', result.length);
	            _this.setState({ searchResults: result, isSearchNotPerfomed: false, isNewSearch: false, isSearching: false });
	        };

	        this.searchPriceRequest = function () {

	            // build params for searching
	            var params = {
	                "filters": [],
	                "fields": ["price_request_id", "cargo_name", "from_addr", "from_x", "from_y", "to_addr", "to_x", "to_y", "volume", "mass", "unit", "ctime", "shipment_time",
	                // "comp_name",
	                "bets", "bet", "bet_flags", "comp_id", "name", "inn", "addr", "note", "flags"]
	            };

	            params.type = "regular";

	            //
	            // search filters
	            //

	            // volume
	            if (_this.state.volume && _this.state.volume.length) {
	                params.filters.push(["volume", "eq", _this.state.volume]);
	            }
	            // mass
	            if (_this.state.mass && _this.state.mass.length) {
	                params.filters.push(["mass", "eq", _this.state.mass]);
	            }
	            // from_addr
	            if (_this.state.from_addr && _this.state.from_addr.length) {
	                params.filters.push(["from_addr", "eq", _this.state.from_addr], ["from_x", "eq", _this.state.from_x], ["from_y", "eq", _this.state.from_y]);
	            }
	            // to_addr
	            if (_this.state.to_addr && _this.state.to_addr.length) {
	                params.filters.push(["to_addr", "eq", _this.state.to_addr], ["to_x", "eq", _this.state.to_x], ["to_y", "eq", _this.state.to_y]);
	            }
	            // from date
	            if (_this.state.from_date) {
	                if (_utils.Utils.is_valid_yyyymmdd(_this.state.from_date)) {
	                    var from_ctime = Date.parse(_this.state.from_date) / 1000;
	                    params.filters.push(["ctime", "gt", from_ctime]);
	                }
	            }
	            // to date
	            if (_this.state.to_date) {
	                if (_utils.Utils.is_valid_yyyymmdd(_this.state.to_date)) {
	                    var to_ctime = Date.parse(_this.state.to_date) / 1000;
	                    params.filters.push(["ctime", "lt", to_ctime]);
	                }
	            }

	            //logger.log(this,'Search params = ',params);

	            // reset paginator to the 1st page
	            _this.setPaginator(_this.paginator.currentCapacity, 1);

	            _this.setState({ isSearching: true });
	            _AuthDashboard.AppState.PriceRequests.searchPriceRequests(params);
	        };

	        this.searchPriceRequestNew = function () {
	            _this.setState({ isNewSearch: true });
	        };

	        this.onPaginatorChange = function (paginator) {
	            _this.setPaginator(paginator.props.opt.pagesConf.currentCapacity, paginator.props.opt.pagesConf.currentPage);
	        };

	        this.render = function () {

	            var formProps = {
	                labelWidth: 60
	            };

	            // let headData = [
	            //     {id: 'id', title: '№'},
	            //     {id: 'ctime', title: 'Дата публикации', cellClass: TblDateUTCCls},
	            //     {id: 'shipment_time', title: 'Отгрузка'},
	            //     {id: 'comp_name', title: 'Компания'},
	            //     {id: 'from_addr', title: 'Откуда'},
	            //     {id: 'to_addr', title: 'Куда'},
	            //     {id: 'cargo_name', title: 'Груз'},
	            //     {id: 'volume', title: 'm3'},
	            //     {id: 'mass', title: 'тонн'},
	            //     {id: 'unit', title: 'Ед изм'},
	            //     {id: 'actions', title: 'Действия', cellClass: PriceRequests__Card_Actions_Search}
	            // ];

	            _this.opt = {
	                // title
	                headerClass: _SimpleComponentsSimpleTable2.TblHead,
	                className: "panel panel-default max-size",
	                //headData: headData,
	                headData: [{ id: 'context', title: 'Запросы ставок', cellClass: _PriceRequests__Card.PriceRequests__Card }],
	                // body + data
	                bodyClass: _SimpleComponentsSimpleTable2.TblBody,
	                bodyData: _this.state.searchResults,
	                // paginator
	                pagesClass: _SimpleComponentsSimpleTable2.TblPages,
	                pagesConf: {
	                    availableCapacity: [2, 5, 10],
	                    currentCapacity: _this.paginator.currentCapacity,
	                    currentPage: _this.paginator.currentPage,
	                    onChanged: _this.onPaginatorChange
	                },
	                selectionKey: 'sKey',
	                selectable: false,
	                multiselect: true,
	                // custom parameters
	                type: "search"
	            };

	            // таблица результатов поиска
	            var searchResults = function searchResults(state) {
	                if (state.isSearchNotPerfomed || _this.state.isNewSearch) {
	                    return React.createElement(
	                        'div',
	                        { className: 'PriceRequests__SearchForm_NotFound' },
	                        'Задайте параметры фильтра и нажмите "Найти".'
	                    );
	                } else if (state.isSearching) {
	                    return React.createElement(
	                        'div',
	                        { className: 'PriceRequests__SearchForm_NotFound' },
	                        'Выполняется поиск...'
	                    );
	                } else if (state.searchResults.length) {
	                    return React.createElement(
	                        'div',
	                        { className: 'row' },
	                        React.createElement(
	                            'div',
	                            { className: 'col-xs-12' },
	                            React.createElement(_SimpleComponentsSimpleTable2.SimpleTable2, { opt: _this.opt })
	                        )
	                    );
	                } else {
	                    return React.createElement(
	                        'div',
	                        { className: 'PriceRequests__SearchForm_NotFound' },
	                        'По заданным параметрам ничего не найдено.'
	                    );
	                }
	            };

	            var searchForm = React.createElement(
	                'div',
	                { className: 'row' },
	                React.createElement(
	                    'div',
	                    { className: 'col-xs-4' },
	                    React.createElement(
	                        _ControlsFormsFormGroup.FormGroup,
	                        { name: 'Откуда', from: 'from_addr' },
	                        React.createElement(_ControlsFormsInputAddress.InputAddress, { value: _this.state.from_addr, name: 'from_addr', onSelect: _this.onSelectFromAddress, onChange: _this.onChangeHandler, caption: 'Откуда', active: true, labelWidth: formProps.labelWidth })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'col-xs-4' },
	                    React.createElement(
	                        _ControlsFormsFormGroup.FormGroup,
	                        { name: 'Куда', from: 'to_addr' },
	                        React.createElement(_ControlsFormsInputAddress.InputAddress, { value: _this.state.to_addr, name: 'to_addr', onSelect: _this.onSelectToAddress, onChange: _this.onChangeHandler, caption: 'Куда', active: true, labelWidth: formProps.labelWidth })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'col-xs-4' },
	                    React.createElement(
	                        _ControlsFormsFormGroup.FormGroup,
	                        { name: 'Объем, куб.м.', from: 'to_addr' },
	                        React.createElement(_ControlsFormsInputSimple.InputSimple, { value: _this.state.volume, type: 'text', name: 'volume', placeholder: '', onChange: _this.onChangeHandler, validation: { typing: _Validation.Validation.typingFloat } })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'col-xs-4' },
	                    React.createElement(
	                        _ControlsFormsFormGroup.FormGroup,
	                        { name: 'Масса, тонн', from: 'mass' },
	                        React.createElement(_ControlsFormsInputSimple.InputSimple, { value: _this.state.mass, type: 'text', name: 'mass', placeholder: '', onChange: _this.onChangeHandler, validation: { typing: _Validation.Validation.typingFloat } })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'col-xs-4' },
	                    React.createElement(_ControlsFormsFormGroup.FormGroup, { name: 'Дата погрузки', from: 'from_date' }),
	                    React.createElement(_ControlsFormsInputDate.InputDate, { labelClass: 'PriceRequests__SearchForm_InputDateLabel', labelWidth: 70, value: _this.state.from_date, caption: ' ', name: 'from_date', onChange: _this.onChangeHandler })
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'col-xs-4' },
	                    React.createElement(_ControlsFormsFormGroup.FormGroup, { name: 'Дата разгрузки', from: 'to_date' }),
	                    React.createElement(_ControlsFormsInputDate.InputDate, { labelClass: 'PriceRequests__SearchForm_InputDateLabel', labelWidth: 70, value: _this.state.to_date, caption: ' ', name: 'to_date', onChange: _this.onChangeHandler })
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'col-xs-12' },
	                    React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.searchPriceRequest, type: 'primary', caption: 'Найти' })
	                )
	            );

	            // после нажатия на "найти" сворачиваем форму поиска
	            var searchFormResult = React.createElement(
	                'div',
	                null,
	                React.createElement(
	                    _SimpleComponentsFlexBox.FlexBox,
	                    { direction: 'row', alignItems: 'end' },
	                    React.createElement(
	                        'div',
	                        { className: 'PriceRequests__SearchForm_Result_Label' },
	                        'Поиск:'
	                    ),
	                    React.createElement(
	                        'span',
	                        { className: 'PriceRequests__SearchForm_Result_Value' },
	                        _this.state.from_addr ? _this.state.from_addr : "не задано",
	                        ' → ',
	                        _this.state.to_addr ? _this.state.to_addr : "не задано"
	                    ),
	                    '.'
	                ),
	                React.createElement(
	                    _SimpleComponentsFlexBox.FlexBox,
	                    { direction: 'row', alignItems: 'baseline' },
	                    React.createElement(
	                        'div',
	                        { className: 'PriceRequests__SearchForm_Result_Label' },
	                        'Объем, куб.м.:'
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'PriceRequests__SearchForm_Result_Value' },
	                        _this.state.volume ? _this.state.volume : "любой"
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'PriceRequests__SearchForm_Result_Label' },
	                        'Масса, тонн:'
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'PriceRequests__SearchForm_Result_Value' },
	                        _this.state.mass ? _this.state.mass : "любая"
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'PriceRequests__SearchForm_Result_Label' },
	                        'Начало:'
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'PriceRequests__SearchForm_Result_Value' },
	                        _this.state.from_date ? _this.state.from_date : "не задано"
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'PriceRequests__SearchForm_Result_Label' },
	                        'Окончание:'
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'PriceRequests__SearchForm_Result_Value' },
	                        _this.state.to_date ? _this.state.to_date : "не задано"
	                    ),
	                    React.createElement('div', { className: 'marg-lr' }),
	                    React.createElement('div', { className: 'marg-lr' })
	                ),
	                React.createElement('br', null),
	                React.createElement('br', null),
	                React.createElement(
	                    'div',
	                    { className: 'row' },
	                    React.createElement(
	                        'div',
	                        { className: 'col-xs-12' },
	                        React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.searchPriceRequestNew, type: 'primary', caption: 'Новый поиск' })
	                    )
	                )
	            );

	            return React.createElement(
	                'div',
	                { className: 'row' },
	                React.createElement(
	                    'div',
	                    { className: 'col-xs-12' },
	                    _this.state.isSearchNotPerfomed || _this.state.isNewSearch ? searchForm : searchFormResult
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'col-xs-12' },
	                    searchResults(_this.state)
	                )
	            );
	        };
	    }

	    _createClass(PriceRequestsSearch, [{
	        key: 'setPaginator',
	        value: function setPaginator(currentCapacity, currentPage) {
	            _ClassesLogger.logger.log('set paginator', currentCapacity, currentPage);
	            this.paginator.currentCapacity = currentCapacity;
	            this.paginator.currentPage = currentPage;
	        }
	    }], [{
	        key: 'defaultProps',
	        value: {},
	        enumerable: true
	    }]);

	    return PriceRequestsSearch;
	})(React.Component);

	// render

	exports.PriceRequestsSearch = PriceRequestsSearch;

	// <div className="box-cln-nw align-stretch panel-md">

	//                     </div>
	//                     <FlexBox direction="row" alignItems="center">

	//                     </FlexBox>
	//                     <div className="box-row-nw just-end marg-t">

	//                     </div>

	// shouldComponentUpdate =()=> {
	//     return this.state.isSearching;
	// }

/***/ },
/* 562 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _Dispatcher = __webpack_require__(4);

	var _api = __webpack_require__(1);

	var _AuthDashboard = __webpack_require__(247);

	var _ClassesLogger = __webpack_require__(3);

	var _ClassesLogger2 = _interopRequireDefault(_ClassesLogger);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	var _SimpleComponentsLoading = __webpack_require__(361);

	var _PriceRequestsDataTable = __webpack_require__(551);

	var React = __webpack_require__(202);

	var PriceRequestsBookmarks = (function (_React$Component) {
	    _inherits(PriceRequestsBookmarks, _React$Component);

	    function PriceRequestsBookmarks() {
	        _classCallCheck(this, PriceRequestsBookmarks);

	        _get(Object.getPrototypeOf(PriceRequestsBookmarks.prototype), 'constructor', this).apply(this, arguments);

	        this.state = {};

	        this.componentWillMount = function () {};

	        this.render = function () {

	            var priceRequestBookmarks = _AuthDashboard.AppState.PriceRequests.getPriceRequestBookmarks();
	            return React.createElement(
	                'div',
	                null,
	                React.createElement(
	                    _SimpleComponentsLoading.Loading,
	                    { dontShow: true, dataRecived: priceRequestBookmarks },
	                    React.createElement(_PriceRequestsDataTable.PriceRequestsDataTable, {
	                        type: 'bookmarks',
	                        priceRequests: priceRequestBookmarks ? priceRequestBookmarks : null })
	                )
	            );
	        };
	    }

	    return PriceRequestsBookmarks;
	})(React.Component);

	// render

	exports.PriceRequestsBookmarks = PriceRequestsBookmarks;

/***/ },
/* 563 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _Dispatcher = __webpack_require__(4);

	var _api = __webpack_require__(1);

	var _AuthDashboard = __webpack_require__(247);

	var _ClassesLogger = __webpack_require__(3);

	var _SimpleComponentsSimpleTable2 = __webpack_require__(399);

	var _SimpleComponentsTableCells = __webpack_require__(402);

	var _PriceRequestsView__Card = __webpack_require__(564);

	var _PriceRequestsView__Card_Bet = __webpack_require__(565);

	var _PriceRequestsView__Card_Company = __webpack_require__(566);

	var _PriceRequestsView__Card_Contact = __webpack_require__(567);

	var _PriceRequestsView__Card_Tags = __webpack_require__(568);

	var _PriceRequestsView__Card_Actions = __webpack_require__(569);

	var _PriceRequestsView__BetsList = __webpack_require__(570);

	var React = __webpack_require__(202);

	var PriceRequestsView = (function (_React$Component) {
	    _inherits(PriceRequestsView, _React$Component);

	    function PriceRequestsView(props) {
	        var _this = this;

	        _classCallCheck(this, PriceRequestsView);

	        _get(Object.getPrototypeOf(PriceRequestsView.prototype), 'constructor', this).call(this, props);
	        this.state = {
	            betsList: [],
	            isBetsListNotReceived: true,
	            requestDetails: []
	        };

	        this.componentWillReceiveProps = function (props) {
	            _this.requestID = parseInt(props.params.id) || 0;
	            _this.setState({ betsList: [], isBetsListNotReceived: true });
	            _this.update();
	        };

	        this.componentWillMount = function () {
	            // AppState.PriceRequests.on("PriceRequests_betslist_complete",this.showBetsList);
	            _this.requestID = parseInt(_this.props.params.id) || 0;
	            // this.update();
	        };

	        this.componentDidMount = function () {
	            _AuthDashboard.AppState.PriceRequests.on("PriceRequests_betslist_complete", _this.showBetsList);
	            _this.update();
	        };

	        this.componentWillUnmount = function () {
	            _AuthDashboard.AppState.PriceRequests.rem("PriceRequests_betslist_complete", _this.showBetsList);
	        };

	        this.shouldComponentUpdate = function (nextProps, nextState) {
	            return nextState.requestDetails.length !== _this.state.requestDetails.length || nextState.betsList.length !== _this.state.betsList.length || nextState.isBetsListNotReceived !== _this.state.isBetsListNotReceived;
	        };

	        this.getBetsList = function () {
	            // build params for searching
	            var params = {
	                "filters": [{ "col": "price_request_id",
	                    "op": "eq",
	                    "val": _this.requestID
	                }],
	                "fields": ["price_request_bet_id", "price_request_id", "comp_id", "tags", "cnt_customers", "cnt_carriers", "cnt_vehicles", "ctime", "bet", "flags", "contact"]
	            };
	            _AuthDashboard.AppState.PriceRequests.getPriceRequestBetsList(params);
	        };

	        this.showBetsList = function (result) {
	            _this.setState({ betsList: result, isBetsListNotReceived: false });
	        };

	        this.getPriceRequestDetails = function (id) {
	            _this.requestDetails = _AuthDashboard.AppState.PriceRequests.getPriceRequestDetails(id);
	            _this.setState({ requestDetails: _this.requestDetails });
	        };

	        this.update = function () {
	            _this.getPriceRequestDetails(_this.requestID);
	            _this.getBetsList();
	        };

	        this.render = function () {

	            var details = _this.requestDetails;
	            var unit = (details || []).length ? details[0].unit : '';

	            var headData = [{ id: 'ctime', title: 'Дата предложения', cellClass: _SimpleComponentsTableCells.TblDateUTCCls }, { id: 'bet', title: 'Ставка, ' + unit, cellClass: _PriceRequestsView__Card_Bet.PriceRequestsView__Card_Bet }, { id: 'comp_id', title: 'Компания', cellClass: _PriceRequestsView__Card_Company.PriceRequestsView__Card_Company }, { id: 'tags', title: 'Тип компании', cellClass: _PriceRequestsView__Card_Tags.PriceRequestsView__Card_Tags }, { id: 'contact', title: 'Контакт', cellClass: _PriceRequestsView__Card_Contact.PriceRequestsView__Card_Contact }, { id: 'actions', title: 'Действия', cellClass: _PriceRequestsView__Card_Actions.PriceRequestsView__Card_Actions }];

	            _this.opt = {
	                headerClass: _SimpleComponentsSimpleTable2.TblHead,
	                className: "panel panel-default max-size",
	                //headData: [{id: 'context', title: 'Таблица предложений', cellClass: PriceRequestsView__BetsList}],
	                headData: headData,
	                bodyClass: _SimpleComponentsSimpleTable2.TblBody,
	                bodyData: _this.state.betsList,
	                // paginator
	                pagesClass: _SimpleComponentsSimpleTable2.TblPages,
	                pagesConf: {
	                    availableCapacity: [1, 5, 10],
	                    currentCapacity: 10,
	                    currentPage: 1
	                },
	                // custom parameters
	                selectionKey: 'sKey',
	                selectable: false,
	                multiselect: true,
	                type: "betslist"
	            };

	            // таблица предложений
	            var betsList = function betsList(state) {
	                if (state.isBetsListNotReceived) {
	                    return React.createElement(
	                        'div',
	                        null,
	                        'Загрузка предложений...'
	                    );
	                } else if (state.betsList.length) {
	                    return React.createElement(
	                        'div',
	                        { className: 'price-requests__bets-list' },
	                        React.createElement(_SimpleComponentsSimpleTable2.SimpleTable2, { opt: _this.opt })
	                    );
	                } else {
	                    return React.createElement(
	                        'div',
	                        null,
	                        'Предложений не поступало.'
	                    );
	                }
	            };

	            // logger.log('render PR', this, details);

	            if ((details || []).length) {
	                return React.createElement(
	                    'div',
	                    { className: 'max-size' },
	                    _this.requestDetails.map(function (item, id) {
	                        return React.createElement(_PriceRequestsView__Card.PriceRequestsView__Card, { key: id, data: item });
	                    }),
	                    betsList(_this.state)
	                );
	            } else {
	                return React.createElement(
	                    'div',
	                    null,
	                    'Загрузка ...'
	                );
	            }
	        };

	        this.query = [];
	        this.requestID = 0;
	        this.requestDetails = null;
	    }

	    return PriceRequestsView;
	})(React.Component);

	// render

	exports.PriceRequestsView = PriceRequestsView;

/***/ },
/* 564 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _Dispatcher = __webpack_require__(4);

	var _api = __webpack_require__(1);

	var _AuthDashboard = __webpack_require__(247);

	var _ClassesLogger = __webpack_require__(3);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	var _SimpleComponentsIcons = __webpack_require__(252);

	var _SimpleComponentsHint = __webpack_require__(363);

	var _SimpleComponentsHint2 = _interopRequireDefault(_SimpleComponentsHint);

	var _SimpleComponentsTableCells = __webpack_require__(402);

	var _PriceRequests__Card_Actions_Created = __webpack_require__(553);

	var React = __webpack_require__(202);

	var PriceRequestsView__Card = (function (_React$Component) {
	    _inherits(PriceRequestsView__Card, _React$Component);

	    function PriceRequestsView__Card(props) {
	        var _this = this;

	        _classCallCheck(this, PriceRequestsView__Card);

	        _get(Object.getPrototypeOf(PriceRequestsView__Card.prototype), 'constructor', this).call(this, props);

	        this.render = function () {

	            // формируем активные кнопки в зависимости от типа запросов: созданные, входящие, закладки
	            var actions = null;
	            var countBadge = null;
	            var createBet = null;

	            // countBadge=(this.props.data.bets) ?  <div className="PriceRequests__Card_bets">
	            //                                             <Hint text="Количество предложений"><span className="font14 font600 accent-pad">{this.props.data.bets}</span></Hint>
	            //                                             </div>
	            //                                          :  <div className="PriceRequests__Card_bets_zero">
	            //                                             <Hint text="Количество предложений"><span className="font14 accent-pad">0</span></Hint>
	            //                                             </div>;

	            //  формируем короткий адрес откуда и куда
	            //  для грузовладельца формируем линк для перехода на подробную карточку
	            var fromAddrShort = _this.props.data.from_addr.substr(_this.props.data.from_addr.lastIndexOf(',') + 1);
	            var toAddrShort = _this.props.data.to_addr.substr(_this.props.data.to_addr.lastIndexOf(',') + 1);

	            return React.createElement(
	                'div',
	                { className: 'panel panel-default PriceRequestsView__Card' },
	                React.createElement(
	                    _SimpleComponentsFlexBox.FlexBox,
	                    { direction: 'row', justify: 'between', alignItems: 'center' },
	                    React.createElement(
	                        'div',
	                        { className: 'PriceRequests__Card_header' },
	                        countBadge,
	                        React.createElement(
	                            'span',
	                            { className: 'PriceRequests__Card_title' },
	                            fromAddrShort,
	                            ' → ',
	                            toAddrShort
	                        )
	                    ),
	                    actions
	                ),
	                React.createElement(
	                    _SimpleComponentsFlexBox.FlexBox,
	                    { direction: 'row', justify: 'between', alignItems: 'start' },
	                    React.createElement(
	                        'div',
	                        { className: 'PriceRequests__Card_address-created' },
	                        _this.props.data.from_addr,
	                        ' → ',
	                        _this.props.data.to_addr
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'PriceRequests__Card_footer-created' },
	                        _this.props.data.unit,
	                        ' ',
	                        React.createElement(_SimpleComponentsIcons.Icon, { iconName: 'pay-icon', size: 18, className: 'icon-color marg-icon' })
	                    )
	                ),
	                React.createElement(
	                    _SimpleComponentsFlexBox.FlexBox,
	                    { direction: 'row', justify: 'between', alignItems: 'start' },
	                    React.createElement(
	                        _SimpleComponentsFlexBox.FlexBox,
	                        { direction: 'row', alignItems: 'start' },
	                        React.createElement(
	                            'div',
	                            { className: 'PriceRequests__Card_footer-created' },
	                            React.createElement(_SimpleComponentsIcons.Icon, { iconName: 'clock-icon', size: 18, className: 'icon-color marg-icon' }),
	                            _this.props.data.shipment_time
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'PriceRequests__Card_footer-created' },
	                            React.createElement(_SimpleComponentsIcons.Icon, { iconName: 'cargo-icon', size: 18, className: 'icon-color marg-icon' }),
	                            React.createElement(
	                                'span',
	                                { className: 'PriceRequests__Card_cargo' },
	                                _this.props.data.cargo_name
	                            ),
	                            ': ',
	                            React.createElement(
	                                'span',
	                                { className: 'PriceRequests__Card_cargo' },
	                                _this.props.data.volume,
	                                ' '
	                            ),
	                            'м',
	                            React.createElement(
	                                'sup',
	                                null,
	                                '3'
	                            ),
	                            ', ',
	                            React.createElement(
	                                'span',
	                                { className: 'PriceRequests__Card_cargo' },
	                                _this.props.data.mass
	                            ),
	                            ' т.'
	                        ),
	                        _this.props.data.note ? React.createElement(
	                            'div',
	                            { className: 'PriceRequests__Card_footer-created' },
	                            React.createElement(_SimpleComponentsIcons.Icon, { iconName: 'comment-icon', size: 18, className: 'icon-color marg-icon' }),
	                            _this.props.data.note
	                        ) : null
	                    ),
	                    React.createElement(
	                        _SimpleComponentsFlexBox.FlexBox,
	                        { direction: 'row', alignItems: 'start' },
	                        React.createElement(
	                            'div',
	                            { className: 'PriceRequests__Card_ctime' },
	                            React.createElement(_SimpleComponentsTableCells.TblDateUTCCls, { value: _this.props.data.ctime })
	                        )
	                    )
	                )
	            );
	        };
	    }

	    return PriceRequestsView__Card;
	})(React.Component);

	exports.PriceRequestsView__Card = PriceRequestsView__Card;

/***/ },
/* 565 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _Dispatcher = __webpack_require__(4);

	var _api = __webpack_require__(1);

	var _AuthDashboard = __webpack_require__(247);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	var _SimpleComponentsTransparentButton = __webpack_require__(264);

	var _SimpleComponentsLoading = __webpack_require__(361);

	var _SimpleComponentsIcons = __webpack_require__(252);

	var _SimpleComponentsModalWindow = __webpack_require__(362);

	var _SimpleComponentsHint = __webpack_require__(363);

	var _SimpleComponentsHint2 = _interopRequireDefault(_SimpleComponentsHint);

	var _ClassesLogger = __webpack_require__(3);

	var React = __webpack_require__(202);

	var PriceRequestsView__Card_Bet = (function (_React$Component) {
	    _inherits(PriceRequestsView__Card_Bet, _React$Component);

	    function PriceRequestsView__Card_Bet(props) {
	        var _this = this;

	        _classCallCheck(this, PriceRequestsView__Card_Bet);

	        _get(Object.getPrototypeOf(PriceRequestsView__Card_Bet.prototype), 'constructor', this).call(this, props);

	        this.render = function () {

	            var vat = _this.props.obj.bet_flags ? "с НДС" : "без НДС";

	            return React.createElement(
	                'div',
	                null,
	                _this.props.obj.bet,
	                ' ',
	                React.createElement(
	                    'span',
	                    null,
	                    vat
	                )
	            );
	        };
	    }

	    return PriceRequestsView__Card_Bet;
	})(React.Component);

	// render
	exports.PriceRequestsView__Card_Bet = PriceRequestsView__Card_Bet;

/***/ },
/* 566 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _Dispatcher = __webpack_require__(4);

	var _api = __webpack_require__(1);

	var _AuthDashboard = __webpack_require__(247);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	var _SimpleComponentsTransparentButton = __webpack_require__(264);

	var _SimpleComponentsLoading = __webpack_require__(361);

	var _SimpleComponentsIcons = __webpack_require__(252);

	var _SimpleComponentsModalWindow = __webpack_require__(362);

	var _SimpleComponentsHint = __webpack_require__(363);

	var _SimpleComponentsHint2 = _interopRequireDefault(_SimpleComponentsHint);

	var _ClassesLogger = __webpack_require__(3);

	var _ClassesLogger2 = _interopRequireDefault(_ClassesLogger);

	var React = __webpack_require__(202);

	var PriceRequestsView__Card_Company = (function (_React$Component) {
	    _inherits(PriceRequestsView__Card_Company, _React$Component);

	    function PriceRequestsView__Card_Company(props) {
	        var _this = this;

	        _classCallCheck(this, PriceRequestsView__Card_Company);

	        _get(Object.getPrototypeOf(PriceRequestsView__Card_Company.prototype), 'constructor', this).call(this, props);

	        this.componentWillMount = function () {
	            _this.getCompanyDetails(_this.props.obj.comp_id);
	        };

	        this.getCompanyDetails = function (id) {
	            if (id) {
	                _api.Api.companyStateRequestById(id).then(function (res) {
	                    if (res.err) {
	                        _ClassesLogger2['default'].error(_this, 'Error while getting company details', res.msg);
	                        return null;
	                    } else {
	                        _this.companyDetails = res;
	                        _this.forceUpdate();
	                    }
	                });
	            } else {
	                _ClassesLogger2['default'].error(_this, 'Error while getting company details - not enough params');
	                return null;
	            }
	        };

	        this.render = function () {
	            var hrefCompDetails = '/#/dashboard/comp/' + _this.companyDetails.id;
	            var badgeCarriers = React.createElement(
	                'div',
	                { className: 'PriceRequestsView__Card_badge' },
	                React.createElement(
	                    'span',
	                    { 'data-tooltip': 'Количество перевозчиков', className: 'font400 accent-pad' },
	                    _this.props.obj.cnt_carriers
	                )
	            );
	            var badgeCustomers = React.createElement(
	                'div',
	                { className: 'PriceRequestsView__Card_badge' },
	                React.createElement(
	                    'span',
	                    { 'data-tooltip': 'Количество заказчиков', className: 'font400 accent-pad' },
	                    _this.props.obj.cnt_customers
	                )
	            );
	            var badgeVehicles = React.createElement(
	                'div',
	                { className: 'PriceRequestsView__Card_badge' },
	                React.createElement(
	                    'span',
	                    { 'data-tooltip': 'Количество автомобилей', className: 'font400 accent-pad' },
	                    _this.props.obj.cnt_vehicles
	                )
	            );

	            return React.createElement(
	                'div',
	                null,
	                React.createElement(
	                    'div',
	                    null,
	                    React.createElement(
	                        'a',
	                        { target: '_blank', href: hrefCompDetails },
	                        _this.companyDetails.name
	                    )
	                ),
	                React.createElement(
	                    _SimpleComponentsFlexBox.FlexBox,
	                    { direction: 'row' },
	                    badgeCarriers,
	                    ' ',
	                    badgeCustomers,
	                    ' ',
	                    badgeVehicles
	                )
	            );
	        };

	        this.companyDetails = [];
	    }

	    return PriceRequestsView__Card_Company;
	})(React.Component);

	// render
	exports.PriceRequestsView__Card_Company = PriceRequestsView__Card_Company;

	//
	// TODO: собрать все в контроллеры компании
	//

/***/ },
/* 567 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _Dispatcher = __webpack_require__(4);

	var _api = __webpack_require__(1);

	var _AuthDashboard = __webpack_require__(247);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	var _SimpleComponentsTransparentButton = __webpack_require__(264);

	var _SimpleComponentsLoading = __webpack_require__(361);

	var _SimpleComponentsIcons = __webpack_require__(252);

	var _SimpleComponentsModalWindow = __webpack_require__(362);

	var _SimpleComponentsHint = __webpack_require__(363);

	var _SimpleComponentsHint2 = _interopRequireDefault(_SimpleComponentsHint);

	var _ClassesLogger = __webpack_require__(3);

	var React = __webpack_require__(202);

	var PriceRequestsView__Card_Contact = (function (_React$Component) {
	    _inherits(PriceRequestsView__Card_Contact, _React$Component);

	    function PriceRequestsView__Card_Contact(props) {
	        var _this = this;

	        _classCallCheck(this, PriceRequestsView__Card_Contact);

	        _get(Object.getPrototypeOf(PriceRequestsView__Card_Contact.prototype), 'constructor', this).call(this, props);

	        this.render = function () {

	            //logger.log('contact', this.props.obj.contact.id)

	            return React.createElement(
	                'div',
	                null,
	                _this.props.obj.contact.first_name,
	                ' ',
	                _this.props.obj.contact.last_name
	            );
	        };
	    }

	    return PriceRequestsView__Card_Contact;
	})(React.Component);

	// render
	exports.PriceRequestsView__Card_Contact = PriceRequestsView__Card_Contact;

/***/ },
/* 568 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _Dispatcher = __webpack_require__(4);

	var _api = __webpack_require__(1);

	var _AuthDashboard = __webpack_require__(247);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	var _SimpleComponentsTransparentButton = __webpack_require__(264);

	var _SimpleComponentsLoading = __webpack_require__(361);

	var _SimpleComponentsIcons = __webpack_require__(252);

	var _SimpleComponentsModalWindow = __webpack_require__(362);

	var _SimpleComponentsHint = __webpack_require__(363);

	var _SimpleComponentsHint2 = _interopRequireDefault(_SimpleComponentsHint);

	var _ClassesLogger = __webpack_require__(3);

	var React = __webpack_require__(202);

	var PriceRequestsView__Card_Tags = (function (_React$Component) {
	    _inherits(PriceRequestsView__Card_Tags, _React$Component);

	    function PriceRequestsView__Card_Tags(props) {
	        var _this = this;

	        _classCallCheck(this, PriceRequestsView__Card_Tags);

	        _get(Object.getPrototypeOf(PriceRequestsView__Card_Tags.prototype), 'constructor', this).call(this, props);

	        this.render = function () {

	            var tags = _AuthDashboard.AppState.myCompany.getTagNames(_this.props.obj.tags);
	            var tagsList = tags.map(function (tag, key) {
	                return React.createElement(
	                    'div',
	                    { key: key },
	                    tag
	                );
	            });

	            return React.createElement(
	                'div',
	                null,
	                tagsList
	            );
	        };
	    }

	    return PriceRequestsView__Card_Tags;
	})(React.Component);

	exports.PriceRequestsView__Card_Tags = PriceRequestsView__Card_Tags;

/***/ },
/* 569 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _Dispatcher = __webpack_require__(4);

	var _api = __webpack_require__(1);

	var _AuthDashboard = __webpack_require__(247);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	var _SimpleComponentsTransparentButton = __webpack_require__(264);

	var _SimpleComponentsLoading = __webpack_require__(361);

	var _SimpleComponentsIcons = __webpack_require__(252);

	var _SimpleComponentsModalWindow = __webpack_require__(362);

	var _SimpleComponentsHint = __webpack_require__(363);

	var _SimpleComponentsHint2 = _interopRequireDefault(_SimpleComponentsHint);

	var _ClassesLogger = __webpack_require__(3);

	var React = __webpack_require__(202);

	var PriceRequestsView__Card_Actions = (function (_React$Component) {
	    _inherits(PriceRequestsView__Card_Actions, _React$Component);

	    function PriceRequestsView__Card_Actions(props) {
	        var _this = this;

	        _classCallCheck(this, PriceRequestsView__Card_Actions);

	        _get(Object.getPrototypeOf(PriceRequestsView__Card_Actions.prototype), 'constructor', this).call(this, props);

	        this.componentWillMount = function () {};

	        this.createBookmark = function () {
	            var params = {
	                comp_from: _AuthDashboard.AppState.myCompany.id,
	                comp_to: _this.props.obj.comp_id,
	                relation_type: "social"
	            };
	            var message = {};
	            _api.Api.linkCreateRequest(params).then(function (res) {
	                if (res.err) {
	                    message = { message: res.msg, type: "error" };
	                } else {
	                    message = {
	                        message: 'Компания добавлена в закладки',
	                        type: "info"
	                    };
	                }
	                _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, message);
	            });
	        };

	        this.sendMessage = function () {
	            _ClassesLogger.logger.log('Not implemented in messages controller yet.');
	        };

	        this.render = function () {

	            _ClassesLogger.logger.log(_this.props.obj);

	            return React.createElement(
	                _SimpleComponentsFlexBox.FlexBox,
	                { direction: 'row' },
	                React.createElement(
	                    'div',
	                    { 'data-tooltip': 'Добавить компанию в закладки', className: 'pagin-pls', onClick: _this.createBookmark },
	                    React.createElement(_SimpleComponentsIcons.Icon, { iconName: 'bookmark-icon', size: 20 })
	                )
	            );
	        };
	    }

	    return PriceRequestsView__Card_Actions;
	})(React.Component);

	// render
	exports.PriceRequestsView__Card_Actions = PriceRequestsView__Card_Actions;

	// TODO: send message
	// <div data-tooltip="Написать сообщение" className="pagin-pls" onClick={this.sendMessage}>
	//                     <Icon iconName="mail-icon" size={20}/>
	//                 </div>

	//
	// TODO: собрать все в контроллеры компании
	//

/***/ },
/* 570 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _Dispatcher = __webpack_require__(4);

	var _api = __webpack_require__(1);

	var _AuthDashboard = __webpack_require__(247);

	var _ClassesLogger = __webpack_require__(3);

	var _ClassesLogger2 = _interopRequireDefault(_ClassesLogger);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	var _SimpleComponentsTableCells = __webpack_require__(402);

	var React = __webpack_require__(202);

	var PriceRequestsView__BetsList = (function (_React$Component) {
	    _inherits(PriceRequestsView__BetsList, _React$Component);

	    function PriceRequestsView__BetsList(props) {
	        var _this = this;

	        _classCallCheck(this, PriceRequestsView__BetsList);

	        _get(Object.getPrototypeOf(PriceRequestsView__BetsList.prototype), 'constructor', this).call(this, props);

	        this.render = function () {

	            // формируем активные кнопки в зависимости от типа запросов: созданные, входящие, закладки
	            var actions = null;

	            return React.createElement(
	                _SimpleComponentsFlexBox.FlexBox,
	                { direction: 'column' },
	                React.createElement(_SimpleComponentsTableCells.TblDateUTCCls, { value: _this.props.obj.ctime }),
	                React.createElement(
	                    'div',
	                    null,
	                    'Ставка: ',
	                    _this.props.obj.bet,
	                    ' ',
	                    _this.props.obj.flags == 1 ? "с НДС" : "без НДС"
	                ),
	                React.createElement(
	                    'div',
	                    null,
	                    'Перевозчики/Грузовл/Кол-во авто ',
	                    _this.props.obj.cnt_carriers,
	                    '/',
	                    _this.props.obj.cnt_customers,
	                    '/',
	                    _this.props.obj.cnt_vehicles
	                ),
	                React.createElement(
	                    'div',
	                    null,
	                    'Компания: ',
	                    _this.props.obj.comp_id
	                ),
	                React.createElement(
	                    'div',
	                    null,
	                    'Контакт: ',
	                    _this.props.obj.contact.first_name,
	                    '  ',
	                    _this.props.obj.contact.last_name
	                ),
	                actions
	            );
	        };
	    }

	    return PriceRequestsView__BetsList;
	})(React.Component);

	exports.PriceRequestsView__BetsList = PriceRequestsView__BetsList;

/***/ },
/* 571 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _Dispatcher = __webpack_require__(4);

	var _api = __webpack_require__(1);

	var _AuthDashboard = __webpack_require__(247);

	var _ClassesLogger = __webpack_require__(3);

	var _ControlsDataTableDataTable = __webpack_require__(572);

	var _ControlsDataTableDataTable2 = _interopRequireDefault(_ControlsDataTableDataTable);

	var _PriceRequestsSearchProvider = __webpack_require__(576);

	var _PriceRequestsSearchProvider2 = _interopRequireDefault(_PriceRequestsSearchProvider);

	var React = __webpack_require__(202);

	var PriceRequestsSearch2 = (function (_React$Component) {
		_inherits(PriceRequestsSearch2, _React$Component);

		function PriceRequestsSearch2(props) {
			var _this = this;

			_classCallCheck(this, PriceRequestsSearch2);

			_get(Object.getPrototypeOf(PriceRequestsSearch2.prototype), 'constructor', this).call(this, props);

			this.state = {};

			this.componentWillMount = function () {};

			this.componentDidMount = function () {};

			this.componentWillUnmount = function () {};

			this.componentWillReceiveProps = function () {};

			this.componentDidUpdate = function () {};

			this.render = function () {

				_ClassesLogger.logger.log('render Search2', _this);

				return React.createElement(
					'div',
					null,
					React.createElement(
						'div',
						null,
						'Поиск запросов ставок'
					),
					React.createElement(_ControlsDataTableDataTable2['default'], { provider: _this.provider })
				);
			};

			this.provider = new _PriceRequestsSearchProvider2['default']();
		}

		return PriceRequestsSearch2;
	})(React.Component);

	exports.PriceRequestsSearch2 = PriceRequestsSearch2;

/***/ },
/* 572 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _reactAddons = __webpack_require__(202);

	var _reactAddons2 = _interopRequireDefault(_reactAddons);

	var _api = __webpack_require__(1);

	var _ClassesLogger = __webpack_require__(3);

	var _ControlsFormsButtonSimple = __webpack_require__(226);

	var _DataTable__Header = __webpack_require__(573);

	var _DataTable__Header2 = _interopRequireDefault(_DataTable__Header);

	var _DataTable__Filter = __webpack_require__(574);

	var _DataTable__Filter2 = _interopRequireDefault(_DataTable__Filter);

	var _DataTable__Footer = __webpack_require__(575);

	var _DataTable__Footer2 = _interopRequireDefault(_DataTable__Footer);

	/* 

	DataTable умеет рисовать таблицу, используя выборку данных - то, что лежит у него в store

	DataTable рисует колонки на основании конфига setColumns(), в качестве рендера ячейки колонки может
	быть использован внешний компонент, таким образом, в ячейке можно отобразить набор данных из выборки

	DataTable показывает фильтр по тем полям, которые заданы через setFilterable()

	За выборку данных отвечает provider, именно он знает, какой командой и какие поля получить из api

	*/

	var DataTable = (function (_Component) {
		_inherits(DataTable, _Component);

		function DataTable() {
			var _this = this;

			_classCallCheck(this, DataTable);

			_get(Object.getPrototypeOf(DataTable.prototype), 'constructor', this).apply(this, arguments);

			this.state = {
				data: null,
				isAppending: false
			};

			this.componentWillMount = function () {};

			this.componentDidMount = function () {
				_this.initProvider(_this.props);
			};

			this.componentWillUnmount = function () {
				_this.provider.cancel();
			};

			this.componentWillReceiveProps = function () {};

			this.componentDidUpdate = function () {};

			this.onDataLoaded = function (data) {
				_ClassesLogger.logger.log('onDataLoaded at DATA TABLE', _this);
				_this.setState({ data: data, isAppending: false });
			};

			this.initProvider = function (props) {
				_this.provider = props.provider;
				_this.provider.setHandler(_this.onDataLoaded);
				_this.provider.load();
			};

			this.renderData = function () {
				return _this.state.data.map(function (item, index) {
					// logger.log('renderData', this, item);
					return _this.renderRow(item, index);
				});
			};

			this.renderRow = function (item, itemIndex) {
				var cols = _this.provider.getColumns();
				var values = cols.map(function (col, index) {
					if (!col.renderer && col.name in item) return _this.useDefaultRenderer(item[col.name], index);else return _this.useCustomRenderer(col.renderer, item, index);
				});
				return _reactAddons2['default'].createElement(
					'tr',
					{ key: itemIndex },
					values
				);
			};

			this.useDefaultRenderer = function (value, valueIndex) {
				return _reactAddons2['default'].createElement(
					'td',
					{ key: valueIndex },
					value
				);
			};

			this.useCustomRenderer = function (renderer, item, valueIndex) {
				return _reactAddons2['default'].createElement(
					'td',
					{ key: valueIndex },
					_reactAddons2['default'].createElement(renderer, { obj: item })
				);
			};

			this.showMore = function () {
				_this.provider.showMore();
				_this.setState({ isAppending: true });
			};

			this.render = function () {

				// logger.log('render DataTable', this, this.props, this.state);

				if (!_this.state.data) return _reactAddons2['default'].createElement(
					'div',
					null,
					'Загрузка...'
				);

				// let dataList = this.state.data.map( (item,index) => {
				// 	return <li key={index}>{item['addr']}</li>
				// })

				var btnShowMore = null;

				if (_this.provider.getTotal() != _this.provider.getStoreSize()) {
					btnShowMore = _this.state.isAppending ? _reactAddons2['default'].createElement(
						'div',
						null,
						'Загрузка...'
					) : _reactAddons2['default'].createElement(
						'div',
						null,
						_reactAddons2['default'].createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.showMore, type: 'success', size: 'small', caption: "Показать еще " + _this.provider.getLimit() })
					);
				}

				return _reactAddons2['default'].createElement(
					'div',
					null,
					_reactAddons2['default'].createElement(_DataTable__Filter2['default'], { provider: _this.provider }),
					_reactAddons2['default'].createElement(
						'div',
						{ className: 'data-table__data' },
						_reactAddons2['default'].createElement(
							'table',
							{ className: 'table' },
							_reactAddons2['default'].createElement(_DataTable__Header2['default'], { columns: _this.provider.getColumns() }),
							_reactAddons2['default'].createElement(
								'tbody',
								null,
								_this.renderData()
							)
						)
					),
					_reactAddons2['default'].createElement(
						'div',
						{ className: 'data-table__footer row row-space-children row-end padd-top' },
						_reactAddons2['default'].createElement(
							'div',
							null,
							'Всего: ',
							_this.provider.getTotal()
						),
						_reactAddons2['default'].createElement(
							'div',
							null,
							'Показано: ',
							_this.provider.getStoreSize()
						),
						btnShowMore
					)
				);
			};
		}

		// { this.provider.getTotal() != this.provider.getStoreSize()
		// 	    				? <div><ButtonSimple onClick={this.showMore} type="success" size="small" caption={"Показать еще "+this.provider.getLimit()}/></div>
		// 	    				: null }

		_createClass(DataTable, null, [{
			key: 'propTypes',

			// constructor(props) {
			//     super(props);
			// }
			//

			value: {},
			enumerable: true
		}]);

		return DataTable;
	})(_reactAddons.Component);

	exports['default'] = DataTable;
	module.exports = exports['default'];

	// list    : React.PropTypes.array,
	// onSelect: React.PropTypes.func,
	// name    : React.PropTypes.func,
	// hidden  : React.PropTypes.bool

/***/ },
/* 573 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	   value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _reactAddons = __webpack_require__(202);

	var _reactAddons2 = _interopRequireDefault(_reactAddons);

	var _ClassesLogger = __webpack_require__(3);

	var DataTable__Header = (function (_Component) {
	   _inherits(DataTable__Header, _Component);

	   function DataTable__Header() {
	      var _this = this;

	      _classCallCheck(this, DataTable__Header);

	      _get(Object.getPrototypeOf(DataTable__Header.prototype), 'constructor', this).apply(this, arguments);

	      this.componentWillMount = function () {};

	      this.componentDidMount = function () {};

	      this.componentWillUnmount = function () {};

	      this.componentWillReceiveProps = function () {};

	      this.componentDidUpdate = function () {};

	      this.render = function () {

	         // logger.log('render DataTable__Header', this, this.props.columns);

	         var header = _this.props.columns.map(function (item, index) {
	            return _reactAddons2['default'].createElement(
	               'th',
	               { key: index },
	               item['title']
	            );
	         });

	         return _reactAddons2['default'].createElement(
	            'thead',
	            null,
	            _reactAddons2['default'].createElement(
	               'tr',
	               null,
	               header
	            )
	         );
	      };
	   }

	   return DataTable__Header;
	})(_reactAddons.Component);

	exports['default'] = DataTable__Header;
	module.exports = exports['default'];

/***/ },
/* 574 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});

	var _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _reactAddons = __webpack_require__(202);

	var _reactAddons2 = _interopRequireDefault(_reactAddons);

	// import _ from 'lodash';

	var _ClassesLogger = __webpack_require__(3);

	var _ControlsFormsFormGroup = __webpack_require__(224);

	var _ControlsFormsButtonSimple = __webpack_require__(226);

	var _ControlsFormsInputSimple = __webpack_require__(225);

	var DataTable__Filter = (function (_Component) {
		_inherits(DataTable__Filter, _Component);

		function DataTable__Filter() {
			var _this = this;

			_classCallCheck(this, DataTable__Filter);

			_get(Object.getPrototypeOf(DataTable__Filter.prototype), 'constructor', this).apply(this, arguments);

			this.state = {
				isOpen: false
			};
			this._filters = [];

			this.componentWillMount = function () {};

			this.componentDidMount = function () {
				// this.provider = this.props.provider;
			};

			this.componentWillUnmount = function () {};

			this.componentWillReceiveProps = function () {
				// this.provider = this.props.provider;
			};

			this.componentDidUpdate = function () {};

			this.renderFilters = function () {
				var filters = _this.props.provider.getFilterable();
				return filters.map(function (field, index) {
					return _this.renderField(field, index);
				});
			};

			this.renderField = function (field, fieldIndex) {

				// remember filter params		
				var name = field.name;

				var params = _objectWithoutProperties(field, ['name']);

				_this._filters[name] = params;

				var value = _this.props.provider.getFilterValue(name);
				_ClassesLogger.logger.log('renderField name= ' + name + " val= " + value);

				switch (field.type) {
					case 'text':
						return _reactAddons2['default'].createElement(
							_ControlsFormsFormGroup.FormGroup,
							{ key: fieldIndex, name: field.title, from: field.name },
							_reactAddons2['default'].createElement(_ControlsFormsInputSimple.InputSimple, { name: field.name, onChange: _this.onChange, defaultValue: value })
						);

					case 'date':

					case 'address':
				}
			};

			this.printFilters = function () {
				var activeFilters = _this.props.provider.getFilters() || [];

				if (!activeFilters.length) return _reactAddons2['default'].createElement(
					'div',
					null,
					'не установлен'
				);

				return activeFilters.map(function (filter, index) {
					var _filter = _slicedToArray(filter, 3);

					var name = _filter[0];
					var cond = _filter[1];
					var value = _filter[2];

					return _reactAddons2['default'].createElement(
						'div',
						{ key: index },
						_this._filters[name].title,
						': ',
						value
					);
				});
			};

			this.onChange = function (e) {
				var field = Object.keys(e).pop();
				_this.props.provider.setFilter(field, _this._filters[field].condition, e[field]);
				// logger.log('Filter onChange', this, field, e[field] );
			};

			this.toggleFilter = function () {
				_this.setState({ isOpen: !_this.state.isOpen });
			};

			this.find = function () {
				_this.props.provider.clear();
				_this.props.provider.load();
				_this.setState({ isOpen: false });
			};

			this.clear = function () {
				_this.props.provider.resetFilters();
				_this.find();
			};

			this.render = function () {

				// logger.log('render Filter', this, this.props);

				return _reactAddons2['default'].createElement(
					'div',
					{ className: 'data-table__filter' },
					_reactAddons2['default'].createElement(
						'div',
						{ className: 'data-table__filter-header' },
						_reactAddons2['default'].createElement(
							'div',
							{ className: 'data-table__filter-print' },
							_reactAddons2['default'].createElement(
								'span',
								{ className: 'data-table__filter-print--title' },
								'Фильтр'
							),
							_this.state.isOpen ? null : _this.printFilters()
						),
						_reactAddons2['default'].createElement(
							'div',
							{ className: 'data-table__filter-toggle pointer', onClick: _this.toggleFilter },
							_this.state.isOpen ? "[Скрыть фильтр]" : "[Показать фильтр]"
						)
					),
					_this.state.isOpen ? _reactAddons2['default'].createElement(
						'div',
						{ className: 'data-table__filter-fields' },
						_this.renderFilters(),
						_reactAddons2['default'].createElement(
							'div',
							{ className: 'row row-space-children padd-top row-end' },
							_reactAddons2['default'].createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.find, type: 'success', size: 'small', caption: 'Найти' }),
							_reactAddons2['default'].createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.clear, type: 'warning', size: 'small', caption: 'Очистить' })
						)
					) : null
				);
			};
		}

		return DataTable__Filter;
	})(_reactAddons.Component);

	exports['default'] = DataTable__Filter;
	module.exports = exports['default'];

	// <div key={fieldIndex}>
	// 					<label htmlFor={field.name}>{field.title}</label><input type="text" name={field.name} />
	// 				</div>

/***/ },
/* 575 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	   value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _reactAddons = __webpack_require__(202);

	var _reactAddons2 = _interopRequireDefault(_reactAddons);

	var _ClassesLogger = __webpack_require__(3);

	var DataTable__Footer = (function (_Component) {
	   _inherits(DataTable__Footer, _Component);

	   function DataTable__Footer() {
	      _classCallCheck(this, DataTable__Footer);

	      _get(Object.getPrototypeOf(DataTable__Footer.prototype), 'constructor', this).apply(this, arguments);

	      this.componentWillMount = function () {};

	      this.componentDidMount = function () {};

	      this.componentWillUnmount = function () {};

	      this.componentWillReceiveProps = function () {};

	      this.componentDidUpdate = function () {};

	      this.render = function () {

	         // logger.log('render DataTable__Footer', this, this.props);

	         return _reactAddons2['default'].createElement('div', null);
	      };
	   }

	   return DataTable__Footer;
	})(_reactAddons.Component);

	exports['default'] = DataTable__Footer;
	module.exports = exports['default'];

/***/ },
/* 576 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _api = __webpack_require__(1);

	var _ClassesLogger = __webpack_require__(3);

	var _ControlsDataTableDataTableProvider = __webpack_require__(577);

	var _ControlsDataTableDataTableProvider2 = _interopRequireDefault(_ControlsDataTableDataTableProvider);

	var _PriceRequests__Card_Actions_Search = __webpack_require__(559);

	var PriceRequestsSearchProvider = (function (_DataTableProvider) {
	  _inherits(PriceRequestsSearchProvider, _DataTableProvider);

	  function PriceRequestsSearchProvider() {
	    var _this = this;

	    _classCallCheck(this, PriceRequestsSearchProvider);

	    _get(Object.getPrototypeOf(PriceRequestsSearchProvider.prototype), 'constructor', this).call(this);

	    this.init = function () {
	      _ClassesLogger.logger.log('init PriceRequestsSearchProvider');

	      // api request params
	      _this.setCm('price_requests_list');
	      _this.setParam('type', 'regular');
	      _this.setFields(["price_request_id", "cargo_name", "from_addr", "from_x", "from_y", "to_addr", "to_x", "to_y", "volume", "mass", "unit", "ctime", "shipment_time", "bets", "bet", "bet_flags", "comp_id", "name", "inn", "addr", "note", "flags"]);

	      // this.setParam('fields',["price_request_id",
	      //                      "cargo_name",
	      //                      "from_addr",
	      //                      "from_x",
	      //                      "from_y",
	      //                      "to_addr",
	      //                      "to_x",
	      //                      "to_y",
	      //                      "volume",
	      //                      "mass",
	      //                      "unit",
	      //                      "ctime",
	      //                      "shipment_time",
	      //                      "bets",
	      //                      "bet",
	      //                      "bet_flags",
	      //                      "comp_id",
	      //                      "name",
	      //                      "inn",
	      //                      "addr",
	      //                      "note",
	      //                      "flags",
	      //                      ]);
	      // this.setLimit(5);
	      // this.setOffset(0);

	      // fields will be shown in filter section
	      // availiable types: text | date | fromDate | tillDate | address |
	      _this.setFilterable([{ name: 'from_addr', title: 'Откуда', type: 'address', condition: 'eq' }, { name: 'mass', title: 'Масса', type: 'text', condition: 'eq' }, { name: 'volume', title: 'Объем', type: 'text', condition: 'eq' }, { name: 'shipment_time', title: 'Дата погрузки', type: 'date', condition: 'gte' }, { name: 'shipment_time', title: 'Дата разгрузки', type: 'date', condition: 'lte' }]);

	      // columns data in order of appearance
	      _this.setColumns([{ name: "addr", title: "Откуда", sortable: true }, { name: "to_addr", title: "Куда" }, { name: "mass", title: "Масса" }, { name: "volume", title: "Объем" }, { name: "actions", title: "Действия", renderer: _PriceRequests__Card_Actions_Search.PriceRequests__Card_Actions_Search }]);
	    };

	    this.init();
	  }

	  return PriceRequestsSearchProvider;
	})(_ControlsDataTableDataTableProvider2['default']);

	exports['default'] = PriceRequestsSearchProvider;
	module.exports = exports['default'];

/***/ },
/* 577 */
/***/ function(module, exports, __webpack_require__) {

	// import _ from 'lodash';

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	var _api = __webpack_require__(1);

	var _ClassesLogger = __webpack_require__(3);

	var DataTableProvider = function DataTableProvider() {
	    var _this = this;

	    _classCallCheck(this, DataTableProvider);

	    this._subscribers = null;
	    this._req = null;
	    this._handler = null;
	    this._cm = null;
	    this._filterable = [];
	    this._columns = [];
	    this._filters = {};
	    this._fields = [];
	    this._params = { fields: [], filters: [] };

	    this.clear = function () {
	        _this._store = [];
	        _this._total = 0;
	        _this._limit = 10; // default limit
	        _this._offset = 0; // default offset
	    };

	    this.setCm = function (cm) {
	        _this._cm = cm || null;
	    };

	    this.setParam = function (name, value) {
	        _this._params[name] = value;
	    };

	    this.setLimit = function (limit) {
	        _this._limit = limit;
	    };

	    this.setOffset = function (offset) {
	        _this.offset = offset;
	    };

	    this.setFields = function (fields) {
	        _this._fields = fields;
	    };

	    this.setFilter = function () {
	        for (var _len = arguments.length, filters = Array(_len), _key = 0; _key < _len; _key++) {
	            filters[_key] = arguments[_key];
	        }

	        var field = filters[0];
	        var cond = filters[1];
	        var value = filters[2];

	        if (value) _this._filters[field] = filters;else delete _this._filters[field];
	        // logger.log('setFielter fld= '+field + " val= "+value, this, this._filters);
	    };

	    this.setFilterable = function (fields) {
	        _this._filterable = fields || [];
	        // Object.keys(fields).forEach( key => {
	        // 	this._filterable.push( {[key]: fields[key]} );
	        // });
	        // logger.log('filterable set= ', this, this._filterable);
	    };

	    this.setColumns = function (columns) {
	        _this._columns = columns || [];
	    };

	    this.setHandler = function (hr) {
	        // logger.log('setHandler = ' + typeof hr);
	        if (typeof hr == 'function') _this._handler = hr;
	    };

	    this.getFilterable = function () {
	        return _this._filterable;
	        // return _.clone(this._filterable, true)
	    };

	    this.getColumns = function () {
	        return _this._columns;
	        // return _.clone(this._columns, true)
	    };

	    this.getTotal = function () {
	        return _this._total;
	    };

	    this.getFilters = function () {
	        var filters = [];
	        Object.keys(_this._filters).forEach(function (key) {
	            filters.push(_this._filters[key]);
	        });
	        return filters;
	    };

	    this.getFilterValue = function (field) {
	        if (!(field in _this._filters)) return null;

	        var _filters$field = _slicedToArray(_this._filters[field], 3);

	        var name = _filters$field[0];
	        var cond = _filters$field[1];
	        var value = _filters$field[2];

	        // logger.log('getFilterValue name= '+name + " cond= "+cond + " val= "+value);
	        return value;
	    };

	    this.getStoreSize = function () {
	        return _this._store.length;
	    };

	    this.getLimit = function () {
	        return _this._limit;
	    };

	    this.cancel = function () {
	        _ClassesLogger.logger.log('cancel', _this);

	        if (_this._req) {
	            _this._req.cancel();
	            _this._req = null;
	        }
	    };

	    this.load = function () {
	        if (!_this._cm) return;

	        _this.cancel();

	        var params = _this.buildParams();
	        _ClassesLogger.logger.log('PARAMS', _this, params);

	        _this._req = new _api.xreq(_this._cm, params, _this._onDataLoaded);
	    };

	    this.buildParams = function () {
	        // first get request's specific params
	        var params = _this._params;

	        // then get the obligatory ones
	        params.fields = _this._fields;
	        params.filters = _this.getFilters();
	        params.limit = _this._limit;
	        params.offset = _this._offset;

	        return params;
	    };

	    this.subscribe = function () {};

	    this.showMore = function () {
	        if (_this._offset + _this._limit >= _this._total) return;
	        _this._offset += _this._limit;
	        _this.load();
	    };

	    this.appendData = function (data) {
	        if (!data) return;
	        _this._store = _this._store.concat(data);

	        // logger.log('appendData', this, this._store);
	    };

	    this.resetFilters = function () {
	        _this._filters = {};
	    };

	    this._onDataLoaded = function (req) {
	        _ClassesLogger.logger.log('onDataLoaded', _this, req);

	        _this.cancel();
	        if (req.res.err) return;
	        _this.appendData(req.res.data);
	        _this._total = req.res.total ? req.res.total : 0;

	        _this._onUpdate();
	    };

	    this._onUpdate = function () {
	        // logger.log('onUpdate', this, this._handler, this._store);
	        if (_this._handler) _this._handler(_this._store);
	    };

	    this._onError = function () {};

	    this.clear();
	}

	// TODO: разделить логику работы с уже полученными данными (store) и запросы к апи

	;

	exports['default'] = DataTableProvider;
	module.exports = exports['default'];

	/** Setters */

	// handler for loaded data

	/**
	 * Getters
	 * 
	 * TODO: use immutable data structures 
	 */

	/* Actions */

	/* Handlers */

/***/ },
/* 578 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _AuthDashboard = __webpack_require__(247);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	var _SimpleComponentsTransparentButton = __webpack_require__(264);

	var _ControlsModalWindow = __webpack_require__(233);

	var _ControlsNavTabs = __webpack_require__(405);

	var _TransportController = __webpack_require__(540);

	var _TransportController2 = _interopRequireDefault(_TransportController);

	var _TransportEditForm = __webpack_require__(579);

	var React = __webpack_require__(202);
	var Router = __webpack_require__(7);
	var RouteHandler = Router.RouteHandler;

	var Transport = (function (_React$Component) {
	    _inherits(Transport, _React$Component);

	    function Transport(props) {
	        var _this = this;

	        _classCallCheck(this, Transport);

	        _get(Object.getPrototypeOf(Transport.prototype), 'constructor', this).call(this, props);
	        this.state = {
	            isModalOpen: false,
	            selectedMenuItem: null,
	            countVehicles: 0
	        };

	        this.componentWillMount = function () {
	            _AuthDashboard.AppState.Transport = new _TransportController2['default']();
	            _AuthDashboard.AppState.Transport.on("Transport_vehicleslist_complete", _this.countVehicles);
	        };

	        this.componentWillUnmount = function () {
	            _AuthDashboard.AppState.Transport.rem("Transport_vehicleslist_complete", _this.countVehicles);
	        };

	        this.openModal = function () {
	            _this.setState({ isModalOpen: true });
	        };

	        this.closeModal = function () {
	            _this.setState({ isModalOpen: false });
	        };

	        this.countVehicles = function () {
	            _this.setState({ countVehicles: _AuthDashboard.AppState.Transport.countVehicles() });
	        };

	        this.render = function () {

	            // let menuConfig = [];
	            // menuConfig.push(
	            //         {
	            //             name: "Все ТС компании",
	            //             href: baseHref,
	            //             hash: "list",
	            //             wrapClass: "table-pr sm-header-bord",
	            //             count: this.state.countVehicles
	            //         });

	            // var buttonCreateNew = <div className="Transport__Button_CreateNew"><TransparentButton onClick={this.openModal} caption="Добавить ТС"/></div>;

	            // var upMenu = (activeItem)=> {
	            //     return menuConfig.map((item, key)=> {
	            //         var cl = "sm-header-a font600 text-under";
	            //         if (item.hash === activeItem) {
	            //             cl = cl + " active-item";
	            //         }
	            //         var countBadge=(item.count) ? <div className="box-row-nw just-center align-center accent-block">
	            //                                         <span className="font14 font600 accent-pad">{item.count}</span>
	            //                                       </div> : null;
	            //         return <div key={key} className={item.wrapClass}>
	            //                     <a href={item.href} data-hash={item.hash} className={cl} onClick={this.clickToSelect}>
	            //                         <div className="box-row-nw">
	            //                             <span className="font600 font-sec marg-tags" data-hash={item.hash}>{item.name}</span>
	            //                             {countBadge}
	            //                         </div>
	            //                     </a>
	            //                 </div>
	            //         })
	            // };

	            var modalWindowProps = {
	                title: "Добавление ТС",
	                width: 400,
	                height: 200
	            };

	            var tabs = [{ name: "Все ТС компании" }, { name: "Добавить ТС", onClick: _this.openModal }];

	            return React.createElement(
	                'div',
	                null,
	                React.createElement(
	                    'div',
	                    { className: 'panel__nav-tabs' },
	                    React.createElement(_ControlsNavTabs.NavTabs, { baseHref: '#/dashboard/company/transport', data: tabs, nHash: 4, className: 'nav-tabs nav-tabs--lower' }),
	                    React.createElement(
	                        _ControlsModalWindow.ModalWindow,
	                        { isOpen: _this.state.isModalOpen,
	                            onClose: _this.closeModal,
	                            width: modalWindowProps.width,
	                            height: modalWindowProps.height,
	                            title: modalWindowProps.title },
	                        React.createElement(_TransportEditForm.TransportEditForm, { onClose: _this.closeModal })
	                    )
	                ),
	                React.createElement(RouteHandler, null)
	            );
	        };

	        this.query = [];
	        this.path = 'created';
	    }

	    return Transport;
	})(React.Component);

	// render
	exports.Transport = Transport;

/***/ },
/* 579 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _Dispatcher = __webpack_require__(4);

	var _api = __webpack_require__(1);

	var _AuthDashboard = __webpack_require__(247);

	var _ClassesLogger = __webpack_require__(3);

	var _Validation = __webpack_require__(223);

	var _SimpleComponentsIcons = __webpack_require__(252);

	var _ControlsFormsButtonSimple = __webpack_require__(226);

	var _ControlsFormsInputSimple = __webpack_require__(225);

	var _ControlsFormsFormGroup = __webpack_require__(224);

	var _ControlsFormsInputUploadFile = __webpack_require__(580);

	var _ControlsFormsInputUploadFile2 = _interopRequireDefault(_ControlsFormsInputUploadFile);

	// import {InputSelect} from '../../Controls/Forms/InputSelect';

	var _SimpleComponentsInputSelect2 = __webpack_require__(267);

	var React = __webpack_require__(202);

	var TransportEditForm = (function (_React$Component) {
	    _inherits(TransportEditForm, _React$Component);

	    function TransportEditForm(props) {
	        var _this = this;

	        _classCallCheck(this, TransportEditForm);

	        _get(Object.getPrototypeOf(TransportEditForm.prototype), 'constructor', this).call(this, props);
	        this.state = {
	            "isValidated": false,
	            "typesList": []
	        };

	        this.componentDidMount = function () {
	            _this.initList(_this.props);
	            _this.initForm();
	        };

	        this.componentWillReceiveProps = function (nextProps) {
	            _this.initList(nextProps);
	            _this.initForm();
	        };

	        this.initList = function (props) {
	            var typesList = _AuthDashboard.AppState.Transport.typesList.map(function (item, key) {
	                if (props.obj && item.tag == props.obj.type) {
	                    return { id: item.tag, value: item.value, __selected__: true };
	                } else {
	                    return { id: item.tag, value: item.value };
	                }
	            });
	            _this.setState({ typesList: typesList });
	        };

	        this.formFields = {
	            fields: [{ name: "model", isRequired: true }, { name: "num", isRequired: true, validatorName: "validateNum" }, { name: "type", isRequired: true }, { name: "sts", isRequired: true }, { name: "pts", isRequired: true }]
	        };

	        this.initFields = function () {
	            _this.formFields.fields.forEach(function (field) {
	                field.isValidated = false;
	                field.isChanged = false;
	                // set custom validator
	                if (field.validatorName) field.validator = _this[field.validatorName];
	            });
	        };

	        this.initForm = function () {

	            _this.resetForm();
	            _this.initFields();

	            // если передан внешний объект, вытаскиваем из него данные для формы
	            if (_this.props.obj) {
	                Object.keys(_this.props.obj).forEach(function (key) {
	                    if (_this.isFieldInForm(key)) {
	                        // изменяем значение некоторых полей
	                        var key2 = key == "sts" || key == "pts" ? key + "_token" : key;
	                        _this.formData[key] = _this.props.obj[key2];
	                    }
	                });
	            }
	        };

	        this.resetForm = function () {
	            _this.formData = {};
	            _this.setState({ isValidated: false });
	        };

	        this.isFieldInForm = function (name) {
	            return _this.formFields.fields.some(function (field) {
	                return field.name == name;
	            });
	        };

	        this.setFormData = function (obj) {
	            Object.keys(obj).forEach(function (key) {
	                _this.formData[key] = obj[key];
	                // set field is changed
	                _this.formFields.fields.forEach(function (field) {
	                    if (field.name == key) field.isChanged = true;
	                });
	            });
	        };

	        this.validateForm = function () {
	            _this.formFields.fields.forEach(function (field) {

	                // not required field
	                if (!field.isRequired) {
	                    field.isValidated = true;
	                    return;
	                }

	                // required field
	                if (_this.formData[field.name]) {

	                    // custom validation
	                    if (field.validator) {
	                        field.isValidated = field.validator(_this.formData[field.name]);
	                        _ClassesLogger.logger.log('validate num', field);
	                        // only 'isRequired' validation
	                    } else {
	                            field.isValidated = true;
	                        }
	                } else {
	                    field.isValidated = false;
	                    field.isChanged = false;
	                }
	            });
	            _this.setState({ isValidated: _this.isValidated() });
	        };

	        this.isValidated = function () {
	            return _this.formFields.fields.every(function (field) {
	                return field.isValidated === true;
	            });
	        };

	        this.validateNum = function (value) {
	            var mask = _this.formData.type == 'trailer' || _this.formData.type == 'semitrailer' ? /[А-Яа-я]{2}\d{6,7}/ : /[А-Яа-я]\d{3}[А-Яа-я]{2}\d{2,3}/;
	            return mask.test(value);
	        };

	        this.onChangeHandler = function (obj) {
	            _this.setFormData(obj);
	            _this.validateForm();
	        };

	        this.saveForm = function () {
	            if (_this.props.obj && _this.props.obj.id) {
	                (function () {
	                    // get only modified fields
	                    var params = {};
	                    params.vehicle_id = _this.props.obj.id;
	                    _this.formFields.fields.forEach(function (field) {
	                        if (field.isChanged) {
	                            params[field.name] = _this.formData[field.name];
	                        }
	                    });
	                    // logger.log('update vehicle', params);

	                    _AuthDashboard.AppState.Transport.updateVehicle(params);
	                })();
	            } else {
	                // logger.log('create new vehicle', this.formData);

	                _AuthDashboard.AppState.Transport.createVehicle(_this.formData);
	            }
	            _this.closeForm();
	        };

	        this.closeForm = function () {
	            var c = _this.props.onClose;
	            if (c) c();
	        };

	        this.onChangeInputSelect = function (caller) {
	            var newType = caller.getSelectedList()[0].id;

	            // logger.log('cnange frm_type= ' + this.formData.type + " new type= " + newType);

	            // reset the num if type has changed
	            if ((!_this.formData.type || _this.formData.type == 'truck' || _this.formData.type == 'lorry') && (newType != 'truck' && newType != 'lorry')) {
	                _this.setFormData({ num: '' });
	            }
	            if ((_this.formData.type == 'trailer' || _this.formData.type == 'semitrailer') && (newType != 'trailer' && newType != 'semitrailer')) {
	                _this.setFormData({ num: '' });
	            }

	            _this.setFormData({ type: newType });
	            _this.validateForm();
	            _this.setState({ type: newType });
	        };

	        this.onUploadFile = function (filename, temp_file_token) {
	            // logger.log('on upload file fn='+filename + ' token='+ temp_file_token);

	            _this.setFormData(_defineProperty({}, filename, temp_file_token));
	            _this.validateForm();
	        };

	        this.render = function () {
	            return React.createElement(
	                'div',
	                { className: 'modal-container__body' },
	                React.createElement(
	                    _ControlsFormsFormGroup.FormGroup,
	                    { name: 'Тип', from: 'type' },
	                    React.createElement(_SimpleComponentsInputSelect2.InputSelect2, { ref: 'type', name: 'type', active: true, noIcon: true, list: _this.state.typesList, onChanged: _this.onChangeInputSelect })
	                ),
	                React.createElement(
	                    _ControlsFormsFormGroup.FormGroup,
	                    { name: 'Марка', from: 'model' },
	                    React.createElement(_ControlsFormsInputSimple.InputSimple, { value: _this.formData.model, name: 'model', onChange: _this.onChangeHandler })
	                ),
	                React.createElement(
	                    _ControlsFormsFormGroup.FormGroup,
	                    { name: 'Гос. номер', from: 'num' },
	                    _this.state.type == "trailer" || _this.state.type == "semitrailer" ? React.createElement(_ControlsFormsInputSimple.InputSimple, { name: 'num', value: _this.formData.num, placeholder: 'хx0000000[0]', onChange: _this.onChangeHandler, validation: { typing: _Validation.Validation.typingTrailerNum } }) : React.createElement(_ControlsFormsInputSimple.InputSimple, { name: 'num', value: _this.formData.num, placeholder: 'х000хх00[0]', onChange: _this.onChangeHandler, validation: { typing: _Validation.Validation.typingCarNum } })
	                ),
	                React.createElement(
	                    _ControlsFormsFormGroup.FormGroup,
	                    { name: 'СТС', from: 'sts' },
	                    React.createElement(_ControlsFormsInputUploadFile2['default'], { value: _this.formData.sts, filename: 'sts', onUpload: _this.onUploadFile })
	                ),
	                React.createElement(
	                    _ControlsFormsFormGroup.FormGroup,
	                    { name: 'ПТС', from: 'pts' },
	                    React.createElement(_ControlsFormsInputUploadFile2['default'], { value: _this.formData.pts, filename: 'pts', onUpload: _this.onUploadFile })
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'modal-container__footer' },
	                    React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.saveForm, disabled: !_this.state.isValidated, type: 'success', caption: _this.props.isEdit ? "Обновить" : "Добавить" })
	                )
	            );
	        };

	        this.formData = {};
	    }

	    // <InputSelect values={this.state.typesList} name="type" onChange={this.onChangeInputSelect}/>

	    // <FormGroup name="СТС" from="sts">
	    //                     <InputUpload name="sts" onUpload={this.onUploadFile} />
	    //                 </FormGroup>
	    //                 <FormGroup name="ПТС" from="pts">
	    //                     <InputUpload name="pts" onUpload={this.onUploadFile} />
	    //                 </FormGroup>

	    // <div>
	    //     <FlexBox direction="row" alignItems="center">
	    //         <label className="label Transport__EditForm_Label">Тип</label>
	    //         <InputSelect2 noIcon={true} list={this.state.typesList} onChanged={this.onChangeInputSelect}/>
	    //     </FlexBox>
	    //     <FlexBox direction="row" alignItems="center">
	    //         <label className="label Transport__EditForm_Label">Марка</label>
	    //         <InputSimple placeholder='' value={this.formData.model} name="model" onChange={this.onChangeHandler}/>
	    //     </FlexBox>
	    //     <FlexBox direction="row" alignItems="center">
	    //         <label className="label Transport__EditForm_Label">Гос. номер</label>
	    //         {(this.state.type == "trailer" || this.state.type == "semitrailer") ? <InputSimple name="num" value={this.formData.num} placeholder="хx0000000[0]" onChange={this.onChangeHandler} validation={{typing: Validation.typingTrailerNum}}/>
	    //             : <InputSimple name="num" value={this.formData.num} placeholder="х000хх00[0]" onChange={this.onChangeHandler} validation={{typing: Validation.typingCarNum}}/>}
	    //     </FlexBox>
	    //     <FlexBox direction="row" alignItems="center">
	    //         <label className="label Transport__EditForm_Label">СТС</label>
	    //         <InputUploadFile caption="загрузить файл" value={this.formData.sts} filename="sts" onUpload={this.onUploadFile} />
	    //     </FlexBox>
	    //     <FlexBox direction="row" alignItems="center">
	    //         <label className="label Transport__EditForm_Label">ПТС</label>
	    //         <InputUploadFile caption="загрузить файл" value={this.formData.pts} filename="pts" onUpload={this.onUploadFile} />
	    //     </FlexBox>
	    //     <div className="box-row-nw just-end marg-t">
	    //         <TransparentButton onClick={this.saveForm} disabled={!this.state.isValidated} caption={this.props.isEdit ? "Обновить" : "Добавить"}/>
	    //         <TransparentButton onClick={this.closeForm} caption="Отменить"/>
	    //     </div>
	    // </div>

	    // <FlexBox direction="row" alignItems="center">
	    //     <label className="label Transport__EditForm_Label">Тип</label>
	    //     <InputSelect2 noIcon={true} list={this.state.typesList} onChanged={this.onChangeInputSelect}/>
	    // </FlexBox>

	    // onChangeFileSelect = (e) => {
	    //     logger.log('onChangeFileSelect', e.target.isValidated, e.target.name);
	    //     let file = {};
	    //     let fileInput = document.getElementById(e.target.name);
	    //     file[e.target.name] = fileInput.files[0];
	    //     this.setFormData(file);
	    //     this.validateForm();
	    //     // var inp = document.getElementById(e.target.name);
	    //     // logger.log('file', inp.files[0]);
	    // }

	    // save form with multiple files
	    // let stsFile = document.getElementById('sts');
	    // let ptsFile = document.getElementById('pts');
	    // console.debug(document.forms.namedItem('updateTransportForm'));
	    // var frmData = new FormData(document.forms.namedItem('updateTransportForm'));
	    // var frmData = new FormData();
	    // frmData.append('model', this.formData.model);
	    // frmData.append('num', this.formData.num);
	    // frmData.append('type', this.formData.type);
	    // frmData.append('sts', stsFile.files[0]);
	    // frmData.append('pts', ptsFile.files[0]);
	    //logger.log('save: frmData stringify', JSON.stringify(this.formData));

	    _createClass(TransportEditForm, null, [{
	        key: 'propTypes',
	        value: {},
	        enumerable: true
	    }]);

	    return TransportEditForm;
	})(React.Component);

	exports.TransportEditForm = TransportEditForm;

	/**
	 * FORMS BLOCK - вынести в отдельный класс
	 *
	 * initFields()
	 * initForm() - инициализация и наполнение, если передан this.props.obj
	 * 
	 */

	/**
	 * End of FORMS BLOCK
	 */

/***/ },
/* 580 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _Dispatcher = __webpack_require__(4);

	var _api = __webpack_require__(1);

	var _AuthDashboard = __webpack_require__(247);

	var _ClassesLogger = __webpack_require__(3);

	var _Icon = __webpack_require__(232);

	var _ControlsFormsButtonSimple = __webpack_require__(226);

	var _ControlsFormsFormGroup = __webpack_require__(224);

	var _ControlsImageHint = __webpack_require__(543);

	var React = __webpack_require__(202);

	var InputUploadFile = (function (_React$Component) {
	    _inherits(InputUploadFile, _React$Component);

	    function InputUploadFile() {
	        var _this = this;

	        _classCallCheck(this, InputUploadFile);

	        _get(Object.getPrototypeOf(InputUploadFile.prototype), 'constructor', this).apply(this, arguments);

	        this.state = {
	            isUploading: false,
	            isNewUpload: false
	        };

	        this.componenDidMount = function () {
	            _this.selectedFile = null;
	            // this.fileToken = null;
	            _this.fileToken = _this.props.value || null;
	        };

	        this.componentWillReceiveProps = function (nextProps) {
	            _this.fileToken = nextProps.value || null;
	        };

	        this.onClickFileSelect = function () {
	            _this.refs['fileInputRef'].getDOMNode().click();
	        };

	        this.onChangeFileSelect = function () {
	            _this.selectedFile = _this.refs.fileInputRef.getDOMNode().isValidated;
	            _this.setState({ isUploading: true });
	            _this.uploadFile();
	        };

	        this.uploadFile = function () {

	            var frmData = new FormData(document.forms.namedItem('fileUploadingForm'));
	            var message = {};

	            if (frmData) {
	                // logger.log( 'Uploading new file...' );

	                _this.setState({ isUploading: true, isNewUpload: false });
	                _api.Api.temp_file_create(frmData).then(function (res) {
	                    if (res.err) {
	                        _ClassesLogger.logger.log('error', 'Error while uploading new file', res.msg);
	                        message = { message: res.msg, type: "error" };
	                    } else {
	                        message = { message: "Файл успешно загружен", type: "info" };
	                        _this.onUploadSuccess(res);
	                    }
	                    _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, message);
	                });
	            } else {
	                message = { message: "Ошибка загрузке файла: invalid data", type: "error" };
	                _Dispatcher.Events.run(_Dispatcher.Events.EV_SHOW_NOTIFY, message);
	            }
	        };

	        this.onUploadSuccess = function (res) {
	            _ClassesLogger.logger.log('file uploaded', res);
	            _this.fileToken = res.token;
	            _this.setState({ isUploading: false, isNewUpload: false });
	            _this.props.onUpload ? _this.props.onUpload(_this.props.filename, res.token) : null;

	            // logger.log('onUploadSuccess IUF f=' + this.fileToken);
	        };

	        this.resetUpload = function () {
	            _this.selectedFile = null;
	            _this.fileToken = null;
	            _this.setState({ isUploading: false, isNewUpload: true });

	            // logger.log('resetUpload IUF f=' + this.fileToken);
	        };
	    }

	    // <button ref="button" className="button-span button button-submit" onClick={this.onClickFileSelect}>
	    //                         <span>{this.props.caption}</span>
	    //                     </button>

	    // <span className="Transport__Temp_InputUploadFile_Select" onClick={this.resetUpload}>[выбрать другой]</span>

	    // <ImageHint src={img}>
	    //                             <div className="pagin-prs" onClick={this.editVehicle}>
	    //                                 <Icon iconName="view-icon" size={20}/>
	    //                             </div>
	    //                         </ImageHint>

	    _createClass(InputUploadFile, [{
	        key: 'render',
	        value: function render() {

	            // if( this.props.value && ! this.state.isNewUpload
	            //                      && ! this.state.isUploading
	            //                      && ! this.fileToken) this.fileToken = this.props.value;

	            if (this.state.isUploading) return React.createElement(
	                'div',
	                { className: 'input-upload__uploading' },
	                'Загрузка файла...'
	            );

	            if (this.fileToken) {
	                // let img = `http://cargo.chat/file/${this.fileToken}`;
	                return React.createElement(
	                    'div',
	                    { className: 'input-upload' },
	                    React.createElement(_ControlsImageHint.ImageHint, { src: 'http://cargo.chat/file/' + this.fileToken }),
	                    React.createElement(
	                        'div',
	                        { className: 'input-upload__select-another' },
	                        React.createElement(
	                            'div',
	                            null,
	                            'Файл загружен.'
	                        ),
	                        React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { type: 'warning', size: 'small', onClick: this.resetUpload, caption: 'Удалить' })
	                    )
	                );
	            }

	            return React.createElement(
	                'div',
	                { className: 'input-upload' },
	                React.createElement(
	                    'div',
	                    { style: {
	                            'display': 'none'
	                        } },
	                    React.createElement(
	                        'form',
	                        { id: 'fileUploadingForm', enctype: 'multipart/form-data', method: 'post' },
	                        React.createElement('input', { type: 'file', ref: 'fileInputRef', name: 'tempFile', onChange: this.onChangeFileSelect })
	                    )
	                ),
	                React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { type: 'success', size: 'small', onClick: this.onClickFileSelect, caption: 'Выбрать файл' })
	            );
	        }
	    }]);

	    return InputUploadFile;
	})(React.Component);

	exports['default'] = InputUploadFile;
	module.exports = exports['default'];

/***/ },
/* 581 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _AuthDashboard = __webpack_require__(247);

	var _ClassesLogger = __webpack_require__(3);

	var _SimpleComponentsSimpleTable2 = __webpack_require__(399);

	var _SimpleComponentsTableCells = __webpack_require__(402);

	var _TransportList__Cell_Type = __webpack_require__(541);

	var _TransportList__Cell_Actions = __webpack_require__(582);

	var _TransportList__Cell_ImageHint = __webpack_require__(542);

	var React = __webpack_require__(202);

	var TransportList = (function (_React$Component) {
	    _inherits(TransportList, _React$Component);

	    function TransportList(props) {
	        var _this = this;

	        _classCallCheck(this, TransportList);

	        _get(Object.getPrototypeOf(TransportList.prototype), 'constructor', this).call(this, props);
	        this.paginator = {};
	        this.state = {
	            results: []
	        };
	        this.paginator = {};

	        this.componentWillMount = function () {
	            _this.setPaginator(5, 1);
	            _AuthDashboard.AppState.Transport.on("Transport_vehicleslist_complete", _this.showResults);
	        };

	        this.componentDidMount = function () {
	            _AuthDashboard.AppState.Transport.getVehiclesList();
	        };

	        this.componentWillUnmount = function () {
	            _AuthDashboard.AppState.Transport.rem("Transport_vehicleslist_complete", _this.showResults);
	        };

	        this.showResults = function (result) {
	            _ClassesLogger.logger.log('Show results', result);
	            _this.setState({ results: _AuthDashboard.AppState.Transport.vehiclesList });
	        };

	        this.onPaginatorChange = function (paginator) {
	            _this.setPaginator(paginator.props.opt.pagesConf.currentCapacity, paginator.props.opt.pagesConf.currentPage);
	        };

	        this.render = function () {

	            var headData = [{ id: 'model', title: 'Модель' }, { id: 'num', title: 'Номер' }, { id: 'type', title: 'Тип ТС', cellClass: _TransportList__Cell_Type.TransportList__Cell_Type }, { id: 'sts', title: 'СТС', cellClass: _TransportList__Cell_ImageHint.TransportList__Cell_ImageHint, cellOpt: { type: 'sts' } }, { id: 'pts', title: 'ПТС', cellClass: _TransportList__Cell_ImageHint.TransportList__Cell_ImageHint, cellOpt: { type: 'pts' } }, { id: 'actions', title: 'Действия', cellClass: _TransportList__Cell_Actions.TransportList__Cell_Actions }];

	            _this.opt = {
	                // title
	                headerClass: _SimpleComponentsSimpleTable2.TblHead,
	                className: "panel panel-default max-size",
	                headData: headData,
	                // body + data
	                bodyClass: _SimpleComponentsSimpleTable2.TblBody,
	                bodyData: _this.state.results,
	                // paginator
	                pagesClass: _SimpleComponentsSimpleTable2.TblPages,
	                pagesConf: {
	                    availableCapacity: [2, 5, 10],
	                    currentCapacity: _this.paginator.currentCapacity,
	                    currentPage: _this.paginator.currentPage,
	                    onChanged: _this.onPaginatorChange
	                },
	                selectionKey: 'sKey',
	                selectable: false,
	                multiselect: true,
	                // custom parameters
	                type: "list"
	            };

	            return React.createElement(
	                'div',
	                { className: 'col-xs-12' },
	                React.createElement(_SimpleComponentsSimpleTable2.SimpleTable2, { opt: _this.opt })
	            );
	        };
	    }

	    _createClass(TransportList, [{
	        key: 'setPaginator',
	        value: function setPaginator(currentCapacity, currentPage) {
	            this.paginator.currentCapacity = currentCapacity;
	            this.paginator.currentPage = currentPage;
	        }
	    }]);

	    return TransportList;
	})(React.Component);

	exports.TransportList = TransportList;

/***/ },
/* 582 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _Dispatcher = __webpack_require__(4);

	var _api = __webpack_require__(1);

	var _AuthDashboard = __webpack_require__(247);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	var _SimpleComponentsLoading = __webpack_require__(361);

	var _ControlsIcon = __webpack_require__(232);

	var _ControlsModalWindow = __webpack_require__(233);

	var _ControlsFormsButtonSimple = __webpack_require__(226);

	var _ClassesLogger = __webpack_require__(3);

	var _TransportEditForm = __webpack_require__(579);

	var React = __webpack_require__(202);

	var TransportList__Cell_Actions = (function (_React$Component) {
	    _inherits(TransportList__Cell_Actions, _React$Component);

	    function TransportList__Cell_Actions(props) {
	        var _this = this;

	        _classCallCheck(this, TransportList__Cell_Actions);

	        _get(Object.getPrototypeOf(TransportList__Cell_Actions.prototype), 'constructor', this).call(this, props);
	        this.state = {
	            isModalDeleteOpen: false,
	            isModalEditOpen: false
	        };

	        this.deleteVehicle = function () {
	            _AuthDashboard.AppState.Transport.deleteVehicle(_this.props.obj.id);
	            _this.closeModalDelete();
	        };

	        this.closeModalDelete = function () {
	            _this.setState({ isModalDeleteOpen: false });
	        };

	        this.openModalDelete = function () {
	            _this.setState({ isModalDeleteOpen: true });
	        };

	        this.closeModalEdit = function () {
	            _this.setState({ isModalEditOpen: false });
	        };

	        this.openModalEdit = function () {
	            _this.setState({ isModalEditOpen: true });
	        };

	        this.render = function () {

	            var modalWindowDeleteProps = {
	                title: "Удаление",
	                width: 300,
	                height: 100
	            };

	            var modalWindowEditProps = {
	                title: "Редактирование ТС",
	                width: 400,
	                height: 200
	            };

	            return React.createElement(
	                'div',
	                { className: '' },
	                React.createElement(
	                    _SimpleComponentsFlexBox.FlexBox,
	                    { direction: 'row' },
	                    React.createElement(
	                        'div',
	                        { 'data-tooltip': 'Изменить данные', className: 'pagin-pls', onClick: _this.openModalEdit },
	                        React.createElement(_ControlsIcon.Icon, { name: 'edit', size: 23 })
	                    ),
	                    React.createElement(
	                        'div',
	                        { 'data-tooltip': 'Удалить ТС', className: 'pagin-pls', onClick: _this.openModalDelete },
	                        React.createElement(_ControlsIcon.Icon, { name: 'delete', size: 23 })
	                    )
	                ),
	                React.createElement(
	                    _ControlsModalWindow.ModalWindow,
	                    { isOpen: _this.state.isModalEditOpen,
	                        onClose: _this.closeModalEdit,
	                        title: modalWindowEditProps.title },
	                    React.createElement(_TransportEditForm.TransportEditForm, { onClose: _this.closeModalEdit, obj: _this.props.obj, isEdit: true })
	                ),
	                React.createElement(
	                    _ControlsModalWindow.ModalWindow,
	                    { isOpen: _this.state.isModalDeleteOpen,
	                        onClose: _this.closeModalDelete,
	                        title: modalWindowDeleteProps.title },
	                    React.createElement(
	                        'div',
	                        { className: 'modal-container__body' },
	                        React.createElement(
	                            'div',
	                            null,
	                            'Вы действительно хотите удалить это ТС?'
	                        ),
	                        React.createElement(
	                            'em',
	                            null,
	                            _AuthDashboard.AppState.Transport.getVehicleType(_this.props.obj.type),
	                            ' ',
	                            React.createElement(
	                                'b',
	                                null,
	                                _this.props.obj.model
	                            )
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'modal-container__footer' },
	                            React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { type: 'danger', onClick: _this.deleteVehicle, caption: 'Удалить' })
	                        )
	                    )
	                )
	            );
	        };
	    }

	    return TransportList__Cell_Actions;
	})(React.Component);

	// render
	exports.TransportList__Cell_Actions = TransportList__Cell_Actions;

/***/ },
/* 583 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _Dashboard = __webpack_require__(247);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	var _ClassesLogger = __webpack_require__(3);

	var _ControlsNavTabs = __webpack_require__(405);

	var React = __webpack_require__(202);
	var Router = __webpack_require__(7);
	var RouteHandler = Router.RouteHandler;

	var Orders = (function (_React$Component) {
	    _inherits(Orders, _React$Component);

	    function Orders() {
	        var _this = this;

	        _classCallCheck(this, Orders);

	        _get(Object.getPrototypeOf(Orders.prototype), 'constructor', this).apply(this, arguments);

	        this.state = {};
	        this.focus_hash = null;
	        this.xr1 = null;

	        this.componentWillMount = function () {
	            //logger.log(this, 'mount');
	            //console.debug(window.location.hash);  // #/dashboard/orders/create
	            // let m = window.location.hash.match(/^#\/dashboard\/orders\/([^\/]+)/i);
	            // //console.debug(m);  // ["#/dashboard/orders/create", "create", index: 0, input: "#/dashboard/orders/create"]
	            // let f = (m && m.length >= 2) ? m[1] : null;
	            // if (f && this.cfg[f]) {
	            //     this.focus_hash = f;
	            // } else {
	            //     window.location.hash = 'dashboard/orders/create';
	            // }
	        };

	        this.componentWillUnmount = function () {
	            //logger.log(this, 'unmount');
	            _this.xrStop();
	        };

	        this.render = function () {

	            var tabs = [];
	            if (_Dashboard.AppState.myCompany.isShipper()) {
	                tabs.push({ name: "Создать" }, { name: "Шаблоны", href: "/tpls", hash: "tpls" }, { name: "Новые", href: "/new", hash: "new" });
	            }

	            tabs.push({ name: "Открытые", href: "/open", hash: "open" }, { name: "Закрытые", href: "/close", hash: "close" }, { name: "Перевозка", href: "/ship", hash: "ship" }, { name: "Выполненные", href: "/done", hash: "done" }, { name: "Архив", href: "/arh", hash: "arh" }, { name: "Отмененные", href: "/cancel", hash: "cancel" });

	            // let tabs = [{ name: "Создать" },
	            //             { name: "Новые", href: "/new", hash: "new" },
	            //             { name: "Открытые", href: "/open", hash: "open" },
	            //             { name: "Закрытые", href: "/close", hash: "close" },
	            //             { name: "Перевозка", href: "/ship", hash: "ship" },
	            //             { name: "Выполненные", href: "/done", hash: "done" },
	            //             { name: "Архив", href: "/arh", hash: "arh" },
	            //             { name: "Отмененные", href: "/cancel", hash: "cancel" }];

	            return React.createElement(
	                'div',
	                { className: 'panel' },
	                React.createElement(
	                    'div',
	                    { className: 'panel__header' },
	                    React.createElement(
	                        'h1',
	                        { className: 'panel__title' },
	                        'Заказы'
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'panel__nav-tabs' },
	                    React.createElement(_ControlsNavTabs.NavTabs, { baseHref: '#/dashboard/orders', data: tabs })
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'panel__body' },
	                    React.createElement(RouteHandler, null)
	                )
	            );
	        };

	        this.xrStop = function () {
	            // выключаем api
	            if (_this.xr1) {
	                _this.xr1.cancel();_this.xr1 = null;
	            }
	        };

	        this.topMenuSelectHandler = function (k, o) {
	            //logger.log(this, 'topMenuSelectHandler');
	            //console.debug(k, o);
	            _this.focus_hash = k;
	            _this.forceUpdate();
	        };
	    }

	    return Orders;
	})(React.Component);

	exports.Orders = Orders;

	// cfg = {
	//     create: {title: 'Создать',    first: true},
	//     new:    {title: 'Новые'},
	//     open:   {title: 'Открытые'},
	//     close:  {title: 'Закрытые'},
	//     done:   {title: 'Выполненные'},
	//     arh:    {title: 'Архив'},
	//     cancel: {title: 'Отмененные', last: true}
	// };

/***/ },
/* 584 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _AuthDashboard = __webpack_require__(247);

	var _api = __webpack_require__(1);

	var _ClassesLogger = __webpack_require__(3);

	var _Dispatcher = __webpack_require__(4);

	var _utils = __webpack_require__(2);

	var _Validation = __webpack_require__(223);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	// import {InputSimple} from '../../SimpleComponents/InputSimple';

	var _SimpleComponentsInputAddress = __webpack_require__(432);

	var _SimpleComponentsTransparentButton = __webpack_require__(264);

	var _SimpleComponentsInputSelect2 = __webpack_require__(267);

	// new

	var _ControlsFormsButtonSimple = __webpack_require__(226);

	var _ControlsFormsInputSimple = __webpack_require__(225);

	var _ControlsFormsFormGroup = __webpack_require__(224);

	var _ControlsFormsInputSelect = __webpack_require__(585);

	var React = __webpack_require__(202);
	var Router = __webpack_require__(7);
	var RouteHandler = Router.RouteHandler;
	var DatePicker = __webpack_require__(356);
	var moment = __webpack_require__(268);

	var OrderCreate = (function (_React$Component) {
	    _inherits(OrderCreate, _React$Component);

	    function OrderCreate() {
	        var _this = this;

	        _classCallCheck(this, OrderCreate);

	        _get(Object.getPrototypeOf(OrderCreate.prototype), 'constructor', this).apply(this, arguments);

	        this.state = {};
	        this.order_src = null;
	        this.order_inp = {};
	        this.order_manager = null;
	        this.lp_manager = null;
	        this.lps_loader = null;
	        this.lps_data = null;
	        this.lps_sel = null;
	        this.lp_add_mode = false;
	        this.lp_inp = {};
	        this.edit_type = null;
	        this.removed_id = null;
	        this.vtypes = [{ id: 'tent', value: 'Тент' }, { id: 'refrigerator', value: 'Рефрижератор' }, { id: 'thermos', value: 'Термос' }, { id: 'container', value: 'Контейнер' }, { id: 'tank', value: 'Цистерна' }, { id: 'closed', value: 'Закрытый' }];
	        this.ltypes = [{ id: 'back', value: 'Задняя' }, { id: 'side', value: 'Боковая' }, { id: 'top', value: 'Верхняя' }];

	        this.componentWillMount = function () {
	            //logger.log(this, 'mount');
	            //console.debug(this.props);
	            _this.loadExpeditors();
	        };

	        this.componentWillUnmount = function () {
	            //logger.log(this, 'unmount');
	            _this.lpManagerStop();
	            _this.lpsLoaderStop();
	            _this.orderManagerStop();
	            _this.exp_loader_stop();
	        };

	        this.componentWillReceiveProps = function (p) {
	            var is_null = p.order == null;
	            var was_null = _this.order_src == null;
	            var diff = !is_null && !was_null && p.order.id != _this.order_src.id;

	            // logger.log(this, p, 'order create receive isNull= ' + is_null + ' wasNull= '+was_null + ' diff= '+diff);

	            //console.debug(is_null, was_null, diff);
	            if (is_null && !was_null || !is_null && was_null || diff) {

	                _this.order_src = p.order;
	                _this.edit_type = p.type ? p.type : null;

	                if (_this.edit_type == 'copy') {
	                    _this.removed_id = _this.order_src.id;
	                    delete _this.order_src.id;
	                }

	                // logger.log('ORDER CREATE rec prps', this, p);

	                if (_this.order_src != null) {

	                    var inp = _this.order_inp;
	                    var src = _this.order_src;
	                    var re = _this.refs;

	                    inp['lplace_id'] = src['lpid'];
	                    if (_this.lps_sel != null) _this.setSelected(_this.lps_sel, inp['lplace_id']);

	                    inp['expeditor'] = src['expid'];
	                    if (_this.exp_sel != null) _this.setSelected(_this.exp_sel, inp['expeditor']);

	                    inp['cargo'] = src['cargo'];
	                    re['cargo'].refs['inp'].getDOMNode().value = inp['cargo'];

	                    inp['ltype'] = src['ltype'];
	                    _this.setSelected(_this.ltypes, inp['ltype']);

	                    inp['mass'] = src['mass'];
	                    re['mass'].refs['inp'].getDOMNode().value = inp['mass'];

	                    inp['vol'] = src['vol'];
	                    re['vol'].refs['inp'].getDOMNode().value = inp['vol'];

	                    inp['vtype'] = src['vtype'];
	                    _this.setSelected(_this.vtypes, inp['vtype']);

	                    inp['ltime'] = src['ltime'];
	                    inp['utime'] = src['utime'];

	                    inp['receiver'] = src['receiver'];
	                    re['receiver'].refs['inp'].getDOMNode().value = inp['receiver'];

	                    inp['addr'] = src['addr'];
	                    inp['x'] = src['x'];
	                    inp['y'] = src['y'];
	                    re['addr'].refs['input'].getDOMNode().value = inp['addr'];

	                    inp['note'] = src['note'];
	                    re['note'].refs['inp'].getDOMNode().value = inp['note'];
	                } else {
	                    _this.order_inp = {};
	                }
	                _this.forceUpdate();
	            }
	        };

	        this.vis = function (b) {
	            return b ? {} : { display: 'none' };
	        };

	        this.setSelected = function (src, id) {
	            for (var i in src) {
	                var o = src[i];
	                if (o.id == id) {
	                    o.__selected__ = true;
	                } else {
	                    delete o.__selected__;
	                }
	                //console.debug(id, o);
	            }
	        };

	        this.lpManagerStop = function () {
	            if (_this.lp_manager) {
	                _this.lp_manager.cancel();_this.lp_manager = null;
	            }
	        };

	        this.lpsLoaderStop = function () {
	            if (_this.lps_loader) {
	                _this.lps_loader.cancel();_this.lps_loader = null;
	            }
	        };

	        this.orderManagerStop = function () {
	            if (_this.order_manager) {
	                _this.order_manager.cancel();_this.order_manager = null;
	            }
	        };

	        this.lpCancelHr = function () {
	            _this.lp_add_mode = false; // переключаемся обратно
	            _this.forceUpdate(); // передергиваем
	        };

	        this.lpCreateHr = function () {
	            //logger.log(this, 'lpCreateHr');
	            //console.debug(this.lp_inp);
	            if (_this.lp_manager) return; // создатель занят
	            var inp = _this.lp_inp;
	            _this.lp_manager = new _api.xreq('lplace_manage', {
	                action: 'create',
	                flags: 0x00, // todo: добавить чекбокс для флага 0x0001 (см api:lplace_flags)
	                name: inp['name'],
	                addr: inp['addr'],
	                x: inp['x'],
	                y: inp['y']
	            }, _this.lpCreatedHr); // создаем место погрузки
	        };

	        this.lpCreatedHr = function (xr) {
	            _ClassesLogger.logger.log(_this, 'lpCreatedHr');
	            _this.lpManagerStop();
	            if ('err' in xr.res) return _Dispatcher.Events.runError("Не удалось создать место погрузки: " + xr.res.msg);
	            if ('lplace_id' in xr.res == false || 'channel_id' in xr.res == false) return _Dispatcher.Events.runError('api fail: lplace_id and channel_id required'); // неожиданный ответ api
	            _this.lp_add_mode = false; // переключаемся обратно
	            _this.lpsLoaderStop(); // убиваем загрузчик мест (может еще что то грузить в фоне)
	            _this.lps_data = null; // зачищаем предыдущий список мест
	            _this.forceUpdate(); // передергиваем (список мест будет подгружен заново)
	        };

	        this.lpsLoaderHr = function (xr) {
	            _ClassesLogger.logger.log(_this, 'lpsLoaderHr');
	            _this.lpsLoaderStop(); // грохаем загрузчик
	            // проверяем ответ
	            if ('err' in xr.res) return _Dispatcher.Events.runError("Не удалось место погрузки: " + xr.res.msg);
	            if ('data' in xr.res == false) return _Dispatcher.Events.runError('api fail: data required'); // неожиданный ответ api
	            _this.lps_data = xr.res;
	            // строим датапровайдер для выбора места погрзки
	            _this.lps_sel = [];
	            for (var i = 0, l = _this.lps_data.data.length; i < l; i++) {
	                var o = _this.lps_data.data[i];
	                var s = { id: o['id'], value: o['name'] };
	                if (_this.order_inp['lplace_id'] == o['id']) s.__selected__ = true;
	                _this.lps_sel.push(s);
	            }
	            _this.forceUpdate();
	        };

	        this.lplaceInpHr = function (o) {
	            for (var k in o) _this.lp_inp[k] = o[k];
	        };

	        this.lplaceAddrSelHr = function (addr, obj, x, y) {
	            _this.lplaceInpHr({ addr: addr, x: x, y: y });
	        };

	        this.orderInpHr = function (o) {
	            for (var k in o) _this.order_inp[k] = o[k];
	        };

	        this.onLplaceChangeHr = function (caller) {
	            _this.orderInpHr({ 'lplace_id': caller.getSelectedList()[0].id });
	        };

	        this.onExpeditorChangeHr = function (caller) {
	            _this.orderInpHr({ 'expeditor': caller.getSelectedList()[0].id });
	        };

	        this.onLTypeChangeHr = function (caller) {
	            _this.orderInpHr({ 'ltype': caller.getSelectedList()[0].id });
	        };

	        this.onVTypeChangeHr = function (caller) {
	            _this.orderInpHr({ 'vtype': caller.getSelectedList()[0].id });
	        };

	        this.orderAddrSelHr = function (addr, obj, x, y) {
	            _this.orderInpHr({ addr: addr, x: x, y: y });
	        };

	        this.onUTimeChangeHr = function (mnt) {
	            _this.orderInpHr({ 'utime': mnt._d.getTime() / 1000 });
	        };

	        this.onLTimeChangeHr = function (mnt) {
	            _this.orderInpHr({ 'ltime': mnt._d.getTime() / 1000 });
	            // if( this.order_inp.utime && this.order_inp.utime < this.order_inp.ltime ) delete this.order_inp.utime;
	            if (_this.order_inp.utime && _this.order_inp.utime < _this.order_inp.ltime) _this.order_inp.utime = null;
	            _this.forceUpdate();
	        };

	        this.lplaceCreateHandler = function () {
	            _ClassesLogger.logger.log(_this, 'lplaceCreateHandler');
	            _this.lp_add_mode = true;
	            _this.forceUpdate();
	        };

	        this.orderCreateHr = function () {
	            // logger.log(this, 'create order', this.order_inp);

	            if (_this.order_manager) return; // менеджер занят
	            var inp = _this.order_inp;
	            _this.order_manager = new _api.xreq('order_manage', {
	                action: 'create',
	                // shipper:   inp['shipper'],
	                shipper: _AuthDashboard.AppState.myCompany.state.id, // заявки создаем пока только от грузовладельца
	                lplace_id: inp['lplace_id'],
	                cargo: inp['cargo'],
	                ltype: inp['ltype'],
	                mass: inp['mass'],
	                vol: inp['vol'],
	                vtype: inp['vtype'],
	                ltime: inp['ltime'],
	                utime: inp['utime'],
	                receiver: inp['receiver'],
	                addr: inp['addr'],
	                x: inp['x'],
	                y: inp['y'],
	                note: inp['note'],
	                expeditor: inp['expeditor']
	            }, _this.orderCreatedHr); // создаем заявку
	        };

	        this.orderCreatedHr = function (xr) {
	            // создание завершено
	            _ClassesLogger.logger.log(_this, 'orderCreatedHr');
	            _this.orderManagerStop();
	            // if ('err' in xr.res) return alert(JSON.stringify(xr.res));  // с ошибкой
	            if ('err' in xr.res) return _Dispatcher.Events.runError("Не удалось создать заказ: " + xr.res.msg);
	            if ('order_id' in xr.res == false) return _Dispatcher.Events.runError('api fail');
	            _Dispatcher.Events.runInfo('Создан заказ № ' + xr.res.order_id);

	            if (_this.props.onCancel) _utils.Utils.run(_this.props.onCancel);else window.location.hash = "dashboard/orders/new";
	        };

	        this.onCancel = function () {
	            if (_this.removed_id) _this.order_src.id = _this.removed_id;
	            if (_this.props.onCancel) _utils.Utils.run(_this.props.onCancel);
	        };

	        this.templateCreateHr = function () {
	            _ClassesLogger.logger.log(_this, 'templateCreateHr');
	            if (_this.order_manager) return; // менеджер занят
	            var inp = _this.order_inp;
	            var p = {
	                action: 'template',
	                tname: 'Шаблон от ' + _utils.Utils.ts2tmdhms(new Date().getTime() / 1000), // todo: приделать диалог ввода имени шаблона
	                shipper: _AuthDashboard.AppState.myCompany.state.id };
	            // пока только от грузовладельца
	            for (var k in _this.order_inp) {
	                p[k] = _this.order_inp[k];
	            }_this.order_manager = new _api.xreq('order_manage', p, _this.templateCreatedHr); // создаем шаблон заказа
	        };

	        this.templateCreatedHr = function (xr) {
	            // создание шаблона завершено
	            _ClassesLogger.logger.log(_this, 'templateCreatedHr');
	            _this.orderManagerStop();
	            if ('err' in xr.res) return _Dispatcher.Events.runError("Не удалось создать шаблон заказа: " + xr.res.msg);
	            if ('order_id' in xr.res == false) return _Dispatcher.Events.runError('api fail');
	            _Dispatcher.Events.runInfo('Создан шаблон № ' + xr.res.order_id);
	            if (_this.props.onCancel) _this.props.onCancel();else window.location.hash = "dashboard/orders/tpls";
	        };

	        this.orderSaveHr = function () {
	            //logger.log(this, 'orderSaveHr');
	            //console.debug(this.order_inp);
	            if (_this.order_manager) return; // менеджер занят
	            var inp = _this.order_inp;
	            _this.order_manager = new _api.xreq('order_manage', {
	                action: 'update',
	                order_id: _this.order_src['id'],
	                // shipper:   inp['shipper'],
	                shipper: _AuthDashboard.AppState.myCompany.state.id, // заявки создаем пока только от грузовладельца
	                lplace_id: inp['lplace_id'],
	                cargo: inp['cargo'],
	                ltype: inp['ltype'],
	                mass: inp['mass'],
	                vol: inp['vol'],
	                vtype: inp['vtype'],
	                ltime: inp['ltime'],
	                utime: inp['utime'],
	                receiver: inp['receiver'],
	                addr: inp['addr'],
	                x: inp['x'],
	                y: inp['y'],
	                note: inp['note'],
	                expeditor: inp['expeditor']
	            }, _this.orderSavedHr); // сохраняем заявку (todo: передавать только изменившиеся данные)
	        };

	        this.orderSavedHr = function (xr) {
	            // сохранение завершено
	            _ClassesLogger.logger.log(_this, 'orderSavedHr');
	            _this.orderManagerStop();
	            // if ('err' in xr.res) return alert(JSON.stringify(xr.res));  // с ошибкой
	            if ('err' in xr.res) return _Dispatcher.Events.runError("Не удалось сохранить заказ: " + xr.res.msg);
	            if ('order_id' in xr.res == false) return _Dispatcher.Events.runError('api fail');
	            _Dispatcher.Events.runInfo('Заказ изменен успешно');
	            var src = _this.order_src;
	            var inp = _this.order_inp;
	            // src['shipper']    = inp['shipper'];
	            src['shipper'] = _AuthDashboard.AppState.myCompany.state.id; // заявки создаем пока только от грузовладельца
	            src['cargo'] = inp['cargo'];
	            src['lpid'] = inp['lplace_id'];
	            src['lpname'] = _this.refs['lp'].getFirstSelectedObj().value;
	            src['mass'] = inp['mass'];
	            src['vol'] = inp['vol'];
	            src['addr'] = inp['addr'];
	            src['vtype'] = inp['vtype'];
	            src['ltype'] = inp['ltype'];
	            src['utime'] = inp['utime'];
	            src['note'] = inp['note'];
	            src['expeditor'] = inp['expeditor'];

	            _utils.Utils.run(_this.props.onCancel);
	        };

	        this.exp_loader = null;
	        this.exp_data = null;
	        this.exp_sel = null;

	        this.exp_loader_stop = function () {
	            if (_this.exp_loader) {
	                _this.exp_loader.cancel();_this.exp_loader = null;
	            }
	        };

	        this.loadExpeditors = function (cid, rel) {
	            // загрузка существующих связей
	            _this.exp_loader_stop();
	            var p = {
	                comp_id: _AuthDashboard.AppState.myCompany.state.id,
	                relation: 'expeditors',
	                fields: ['relation_id', 'name', 'inn', 'phone', 'ati_code', 'comp_id']
	            };
	            _this.exp_loader = new _api.xreq('comp_rel_list', p, _this.onExpeditorsLoaded);
	        };

	        this.onExpeditorsLoaded = function (req) {
	            // logger.log('loaded expeditors', this, req);

	            _this.exp_loader_stop();
	            if (req.res.err) return;

	            _this.exp_data = req.res;
	            _this.exp_sel = [];
	            for (var i = 0, l = _this.exp_data.data.length; i < l; i++) {
	                var o = _this.exp_data.data[i];
	                var s = { id: o['comp_id'], value: o['name'] };
	                if (_this.order_inp['expeditor'] == o['comp_id']) s.__selected__ = true;
	                _this.exp_sel.push(s);
	            }
	            _this.forceUpdate();
	        };

	        this.render = function () {
	            // logger.log(this, 'render order create= ', this.order_inp);

	            // места погрузки
	            if (_this.lps_data == null) {
	                // места погрузки не загружены
	                if (_this.lps_loader == null) {
	                    // места погрузки не загружаются
	                    _this.lps_loader = new _api.xreq('lplaces_list', { fields: ['id', 'name'] }, _this.lpsLoaderHr); // загружаем места погрузки
	                }
	                return React.createElement(
	                    'div',
	                    null,
	                    'загрузка ...'
	                );
	            }

	            if ('err' in _this.lps_data) return React.createElement(
	                'div',
	                null,
	                'места погрузки не загружены: ',
	                _this.lps_data.msg
	            ); // места погрузок загружены с ошибкой
	            if (!_utils.Utils.isArray(_this.lps_data['data'])) return React.createElement(
	                'div',
	                null,
	                'места погрузки не загружены: list.data required'
	            ); // api не вернул data

	            moment.locale('ru');

	            var now = Math.floor(new Date().getTime() / 1000);
	            // let ltime = Utils.timestamp2YYYYMMDD(this.order_inp['ltime'] || now);    // deprecated
	            // let utime = Utils.timestamp2YYYYMMDD(this.order_inp['utime'] || now);    // deprecated
	            var ltime = _this.order_inp['ltime'] ? moment(_utils.Utils.timestamp2YYYYMMDD(_this.order_inp['ltime'])) : null;
	            var utime = _this.order_inp['utime'] ? moment(_utils.Utils.timestamp2YYYYMMDD(_this.order_inp['utime'])) : null;

	            // expeditors list
	            if (_this.exp_data == null) {
	                if (_this.exp_loader == null) _this.loadExpeditors();
	                return React.createElement(
	                    'div',
	                    null,
	                    'загрузка ...'
	                );
	            }
	            if (!_utils.Utils.isArray(_this.exp_data['data'])) return React.createElement(
	                'div',
	                null,
	                'не удалось загрузить список экспедиторов'
	            );

	            var order_title = _this.order_src == null || !_this.order_src.id ? 'Создание заказа' : _this.edit_type == 'tmpl' ? 'Редактирование шаблона' : 'Редактирование заказа';

	            var bt_cancel = _this.props.onCancel != null ? React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.onCancel, type: 'warning', caption: 'Отменить' }) : null;

	            var buttons = React.createElement(
	                'div',
	                { className: "row padd-top " + (_this.edit_type != 'tmpl' ? "row-between" : "row-end") },
	                _this.edit_type != 'tmpl' ? React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.templateCreateHr, type: 'success', caption: 'Сохранить как шаблон' }) : null,
	                React.createElement(
	                    'div',
	                    { className: 'row row-nowrap row-space-children' },
	                    _this.order_src == null || !_this.order_src.id ? React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.orderCreateHr, type: 'success', caption: 'Создать заказ' }) : React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.orderSaveHr,
	                        type: 'success',
	                        caption: "Сохранить " + (_this.edit_type != 'tmpl' ? "заказ" : "шаблон") }),
	                    bt_cancel
	                )
	            );

	            return React.createElement(
	                'div',
	                null,
	                React.createElement(
	                    'div',
	                    { style: _this.vis(_this.lp_add_mode) },
	                    React.createElement(
	                        'div',
	                        { className: 'orders__form' },
	                        React.createElement(
	                            'h1',
	                            null,
	                            'Создание места погрузки'
	                        ),
	                        React.createElement(
	                            _ControlsFormsFormGroup.FormGroup,
	                            { name: 'Название', from: 'name' },
	                            React.createElement(_ControlsFormsInputSimple.InputSimple, { name: 'name', onChange: _this.lplaceInpHr })
	                        ),
	                        React.createElement(
	                            _ControlsFormsFormGroup.FormGroup,
	                            { name: 'Адрес', from: 'addr' },
	                            React.createElement(_SimpleComponentsInputAddress.InputAddress, { name: 'addr', onSelect: _this.lplaceAddrSelHr, caption: 'Адрес', active: true })
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'modal-container__footer' },
	                            React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.lpCreateHr, type: 'success', caption: 'Создать место погрузки' }),
	                            React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.lpCancelHr, type: 'warning', caption: 'Отмена' })
	                        )
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { style: _this.vis(!_this.lp_add_mode) },
	                    React.createElement(
	                        'div',
	                        { className: 'orders__form' },
	                        React.createElement(
	                            'h1',
	                            null,
	                            order_title
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'row row-nw row-between row-space-children' },
	                            React.createElement(
	                                _ControlsFormsFormGroup.FormGroup,
	                                { name: 'Место погрузки', from: 'lp' },
	                                React.createElement(_SimpleComponentsInputSelect2.InputSelect2, { ref: 'lp', name: 'lp', active: true, noIcon: true, styleGreed: true, list: _this.lps_sel, onChanged: _this.onLplaceChangeHr })
	                            ),
	                            React.createElement(
	                                _ControlsFormsFormGroup.FormGroup,
	                                { name: 'Экспедитор', from: 'expeditor' },
	                                React.createElement(_SimpleComponentsInputSelect2.InputSelect2, { ref: 'expeditor', name: 'expeditor', active: true, noIcon: true, list: _this.exp_sel, onChanged: _this.onExpeditorChangeHr })
	                            ),
	                            React.createElement(
	                                'div',
	                                null,
	                                React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.lplaceCreateHandler, type: 'warning', size: 'small', caption: 'Создать новое место погрузки' })
	                            )
	                        ),
	                        React.createElement(
	                            _ControlsFormsFormGroup.FormGroup,
	                            { name: 'Наименование груза', from: 'cargo' },
	                            React.createElement(_ControlsFormsInputSimple.InputSimple, { ref: 'cargo', name: 'cargo', defaultValue: _this.order_inp['cargo'], onChange: _this.orderInpHr })
	                        ),
	                        React.createElement(
	                            _ControlsFormsFormGroup.FormGroup,
	                            { name: 'Получатель', from: 'receiver' },
	                            React.createElement(
	                                'label',
	                                { style: {
	                                        'display': 'none'
	                                    } },
	                                ' !!! todo !!! сделать диалог выбора получателя'
	                            ),
	                            React.createElement(_ControlsFormsInputSimple.InputSimple, { ref: 'receiver', name: 'receiver', defaultValue: _this.order_inp['receiver'], onChange: _this.orderInpHr })
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'row row-nw row-between row-space-children' },
	                            React.createElement(
	                                _ControlsFormsFormGroup.FormGroup,
	                                { name: 'Место доставки', from: 'addr' },
	                                React.createElement(_SimpleComponentsInputAddress.InputAddress, { ref: 'addr', name: 'addr', onSelect: _this.orderAddrSelHr, caption: 'Место доставки', active: true })
	                            ),
	                            React.createElement(
	                                _ControlsFormsFormGroup.FormGroup,
	                                { name: 'Дата погрузки', from: 'ltime' },
	                                React.createElement(DatePicker, { key: 1,
	                                    dateFormat: 'YYYY-MM-DD',
	                                    locale: 'ru',
	                                    weekdays: ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'],
	                                    minDate: moment(),
	                                    placeholderText: 'выберите дату',
	                                    selected: ltime,
	                                    onChange: _this.onLTimeChangeHr })
	                            ),
	                            React.createElement(
	                                _ControlsFormsFormGroup.FormGroup,
	                                { name: 'Дата разгрузки', from: 'utime' },
	                                React.createElement(DatePicker, { key: 2,
	                                    dateFormat: 'YYYY-MM-DD',
	                                    locale: 'ru',
	                                    weekdays: ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'],
	                                    minDate: ltime ? ltime : moment(),
	                                    selected: utime,
	                                    placeholderText: 'выберите дату',
	                                    onChange: _this.onUTimeChangeHr })
	                            )
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'row row-nw row-between row-space-children' },
	                            React.createElement(
	                                _ControlsFormsFormGroup.FormGroup,
	                                { name: 'Погрузка / разгрузка', from: 'ltype' },
	                                React.createElement(_SimpleComponentsInputSelect2.InputSelect2, { ref: 'ltype', name: 'ltype', active: true, noIcon: true, list: _this.ltypes, onChanged: _this.onLTypeChangeHr })
	                            ),
	                            React.createElement(
	                                _ControlsFormsFormGroup.FormGroup,
	                                { name: 'Тип ТС', from: 'vtypes' },
	                                React.createElement(_SimpleComponentsInputSelect2.InputSelect2, { ref: 'vtypes', name: 'vtypes', active: true, noIcon: true, list: _this.vtypes, onChanged: _this.onVTypeChangeHr })
	                            ),
	                            React.createElement(
	                                _ControlsFormsFormGroup.FormGroup,
	                                { name: 'Масса, тонн', from: 'mass' },
	                                React.createElement(_ControlsFormsInputSimple.InputSimple, { ref: 'mass', name: 'mass', defaultValue: _this.order_inp['mass'], onChange: _this.orderInpHr, validation: { typing: _Validation.Validation.typingFloat } })
	                            ),
	                            React.createElement(
	                                _ControlsFormsFormGroup.FormGroup,
	                                { name: 'Объем, куб.м.', from: 'vol' },
	                                React.createElement(_ControlsFormsInputSimple.InputSimple, { ref: 'vol', name: 'vol', defaultValue: _this.order_inp['vol'], onChange: _this.orderInpHr, validation: { typing: _Validation.Validation.typingFloat } })
	                            )
	                        ),
	                        React.createElement(
	                            _ControlsFormsFormGroup.FormGroup,
	                            { name: 'Заметка', from: 'note' },
	                            React.createElement(_ControlsFormsInputSimple.InputSimple, { ref: 'note', name: 'note', defaultValue: _this.order_inp['note'], onChange: _this.orderInpHr })
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'modal-container__footer' },
	                            buttons
	                        )
	                    )
	                )
	            );
	        };
	    }

	    // переделаны на список
	    // <InputSimple ref='expeditor' name="expeditor" defaultValue={this.order_inp['expeditor']} onChange={this.orderInpHr} />

	    // заявки пока только от грузовладельца
	    // <FormGroup name="id грузовладельца" from="shipper">
	    //                                 <InputSimple ref='shipper' name='shipper' defaultValue={this.order_inp['shipper']} onChange={this.orderInpHr} />
	    //                                 <p style={{display: 'none'}}>todo: сделать диалог выбора</p>
	    //                             </FormGroup>

	    //  раньше было место погрузки и кнопка
	    // <FormGroup name="Место погрузки" from="lp">
	    //                             <div className="row row-nw marg-top-s">
	    //                                 <InputSelect2 ref='lp' name='lp' active={true} noIcon={true} styleGreed={true} list={this.lps_sel} onChanged={this.onLplaceChangeHr}/>
	    //                                 <ButtonSimple onClick={this.lplaceCreateHandler} type="warning" size="small" caption="Создать новое место погрузки"/>
	    //                             </div>
	    //                         </FormGroup>

	    //  old design
	    //  return (
	    //     <div>
	    //         <div style={this.vis(this.lp_add_mode)}>
	    //             <h1>Создание места погрузки</h1>
	    //             <FlexBox direction="row" alignItems="center">
	    //                 <label className="label label-width-md">Название</label>
	    //                 <InputSimple name="name" onChange={this.lplaceInpHr} />
	    //             </FlexBox>
	    //             <InputAddress name="addr" onSelect={this.lplaceAddrSelHr} caption="Адрес" active={true} labelWidth={105} />
	    //             <div className="box-row-nw just-end marg-t"><TransparentButton onClick={this.lpCreateHr} caption="Создать место погрузки" /></div>
	    //             <div className="box-row-nw just-end marg-t"><TransparentButton onClick={this.lpCancelHr} caption="Отмена" /></div>
	    //         </div>
	    //         <div style={this.vis(!this.lp_add_mode)}>
	    //             <h1>{order_title}</h1>

	    //             <FlexBox direction="row" alignItems="center">
	    //                 <label className="label label-width-md">место погрузки</label>
	    //                 <InputSelect2 ref='lp' active={true} noIcon={true} list={this.lps_sel} onChanged={this.onLplaceChangeHr}/>
	    //                 <input type="button" onClick={this.lplaceCreateHandler} value="добавить" />
	    //             </FlexBox>
	    //             <FlexBox direction="row" alignItems="center">
	    //                 <label className="label label-width-md">Наименование груза</label>
	    //                 <InputSimple ref='cargo' name="cargo" defaultValue={this.order_inp['cargo']} onChange={this.orderInpHr} />
	    //             </FlexBox>

	    //             <FlexBox direction="row" alignItems="center">
	    //                 <label className="label label-width-md">id грузовладельца</label>
	    //                 <InputSimple ref='shipper' name='shipper' defaultValue={this.order_inp['shipper']} onChange={this.orderInpHr} />
	    //                 <p>todo: сделать диалог выбора</p>
	    //             </FlexBox>

	    //             <FlexBox direction="row" alignItems="center">
	    //                 <label className="label label-width-md">id экспедитора</label>
	    //                 <InputSimple ref='expeditor' name="expeditor" defaultValue={this.order_inp['expeditor']} onChange={this.orderInpHr} />
	    //                 <p>todo: сделать диалог выбора</p>
	    //             </FlexBox>

	    //             <FlexBox direction="row" alignItems="center">
	    //                 <label className="label label-width-md">Погрузка / разгрузка</label>
	    //                 <InputSelect2 ref='ltype' active={true} noIcon={true} list={this.ltypes} onChanged={this.onLTypeChangeHr}/>
	    //             </FlexBox>
	    //             <FlexBox direction="row" alignItems="center">
	    //                 <label className="label label-width-md">Получатель</label>
	    //                 <label style={{display: 'none'}}> !!! todo !!! сделать диалог выбора получателя</label>
	    //                 <InputSimple ref='receiver' name="receiver" defaultValue={this.order_inp['receiver']} onChange={this.orderInpHr} />
	    //             </FlexBox>
	    //             <InputAddress ref='addr' name="addr" onSelect={this.orderAddrSelHr} caption="Место доставки" active={true} labelWidth={105} />
	    //             <FlexBox direction="row" alignItems="center">
	    //                 <label className="label label-width-md">Масса, тонн</label>
	    //                 <InputSimple ref='mass' name="mass" defaultValue={this.order_inp['mass']} onChange={this.orderInpHr} validation={{typing:Validation.typingFloat}} />
	    //             </FlexBox>
	    //             <FlexBox direction="row" alignItems="center">
	    //                 <label className="label label-width-md">Объем, куб.м.</label>
	    //                 <InputSimple ref='vol' name="vol" defaultValue={this.order_inp['vol']} onChange={this.orderInpHr} validation={{typing:Validation.typingFloat}} />
	    //             </FlexBox>
	    //             <FlexBox direction="row" alignItems="center">
	    //                 <label className="label label-width-md">Тип ТС</label>
	    //                 <InputSelect2 active={true} noIcon={true} list={this.vtypes} onChanged={this.onVTypeChangeHr}/>
	    //             </FlexBox>
	    //             <FlexBox direction="row" alignItems="center">
	    //                 <label className="label label-width-md">Дата погрузки</label>
	    //                 <DatePicker dateFormat="YYYY-MM-DD" selected={moment(ltime)} onChange={this.onLTimeChangeHr} />
	    //             </FlexBox>
	    //             <FlexBox direction="row" alignItems="center">
	    //                 <label className="label label-width-md">Дата разгрузки</label>
	    //                 <DatePicker dateFormat="YYYY-MM-DD" selected={moment(utime)} onChange={this.onUTimeChangeHr} />
	    //             </FlexBox>
	    //             <FlexBox direction="row" alignItems="center">
	    //                 <label className="label label-width-md">Заметка</label>
	    //                 <InputSimple ref='note' name="note" defaultValue={this.order_inp['note']} onChange={this.orderInpHr} />
	    //             </FlexBox>
	    //             {bt_submit}
	    //             {bt_cancel}
	    //         </div>
	    //     </div>
	    // )
	    return OrderCreate;
	})(React.Component);

	exports.OrderCreate = OrderCreate;
	// ископаемое

	// исходный объект заявки (object)
	// хранилище введенных данных для создания заявки
	// создатель/изменятель заявки (xreq)
	// менеджер (создает/изменяет) мест погрузки (xreq)
	// загрузчик мест погрузки (xreq)
	// хранилище загруженных мест погрузки (object)
	// датапровайдер для комобобокса мест погрузки (array)
	// режим добавления места погрузки
	// хранилище введенных данных для создания места погрузки

	// тип редактирования (string copy|tmpl)
	// пока костыль, храним id, который удалили при редактировании, а вообще надо в редактор
	// передавать клон заказа, а не shallow copy

	// мержим ввод юзера в this.lp_inp
	// мержим ввод юзера в this.order_inp

	// создание шаблона заказа

	// Loading expeditors
	// api.xreq

/***/ },
/* 585 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(202);

	var InputSelect = (function (_React$Component) {
	    _inherits(InputSelect, _React$Component);

	    function InputSelect() {
	        var _this = this;

	        _classCallCheck(this, InputSelect);

	        _get(Object.getPrototypeOf(InputSelect.prototype), 'constructor', this).apply(this, arguments);

	        this.state = {
	            defaultValue: this.props.value
	        };

	        this.change = function (e) {
	            var v = e.target.value,
	                obj = undefined;

	            if (_this.props.name) {
	                obj = {};
	                obj[_this.props.name] = v;
	            } else {
	                obj = v;
	            }

	            if (_this.props.onChange) _this.props.onChange(obj);
	        };

	        this.componentWillReceiveProps = function (newProps) {
	            _this.setState({ defaultValue: newProps.value });
	        };

	        this.render = function () {
	            var options = _this.props.values.map(function (option, i) {
	                return React.createElement(
	                    'option',
	                    { key: i, value: option.id, selected: option.__selected__ ? 'selected' : null },
	                    option.value
	                );
	            });

	            return React.createElement(
	                'select',
	                { className: _this.props.className ? "select-form-control " + _this.props.className : "select-form-control",
	                    name: _this.props.name,
	                    id: _this.props.name,
	                    onChange: _this.change },
	                options
	            );
	        };
	    }

	    _createClass(InputSelect, null, [{
	        key: 'propTypes',
	        value: {
	            onChange: React.PropTypes.func.isRequired,
	            values: React.PropTypes.array.isRequired,
	            name: React.PropTypes.string,
	            placeholder: React.PropTypes.string,
	            autoFocus: React.PropTypes.bool,
	            className: React.PropTypes.string
	        },
	        enumerable: true
	    }, {
	        key: 'defaultProps',
	        value: {
	            active: true
	        },
	        enumerable: true
	    }]);

	    return InputSelect;
	})(React.Component);

	exports.InputSelect = InputSelect;

/***/ },
/* 586 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _OrdersList = __webpack_require__(587);

	var React = __webpack_require__(202);

	var OrderTemplates = (function (_React$Component) {
	    _inherits(OrderTemplates, _React$Component);

	    function OrderTemplates() {
	        _classCallCheck(this, OrderTemplates);

	        _get(Object.getPrototypeOf(OrderTemplates.prototype), 'constructor', this).apply(this, arguments);

	        this.render = function () {
	            return React.createElement(_OrdersList.OrdersList, { type: 'templates' });
	        };
	    }

	    return OrderTemplates;
	})(React.Component);

	exports.OrderTemplates = OrderTemplates;

/***/ },
/* 587 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x3, _x4, _x5) { var _again = true; _function: while (_again) { var object = _x3, property = _x4, receiver = _x5; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x3 = parent; _x4 = property; _x5 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _api = __webpack_require__(1);

	var _ClassesLogger = __webpack_require__(3);

	var _utils = __webpack_require__(2);

	var _Dashboard = __webpack_require__(247);

	var _Dispatcher = __webpack_require__(4);

	var _OrderCreate = __webpack_require__(584);

	var _Validation = __webpack_require__(223);

	var _SimpleComponentsFlexBox = __webpack_require__(241);

	var _SimpleComponentsInputSelect2 = __webpack_require__(267);

	// import {InputSimple} from '../../SimpleComponents/InputSimple';

	var _ControlsFormsInputSimple = __webpack_require__(225);

	var _ControlsFormsButtonSimple = __webpack_require__(226);

	var _ControlsFormsFormGroup = __webpack_require__(224);

	var _ControlsIcon = __webpack_require__(232);

	var React = __webpack_require__(202);
	var Router = __webpack_require__(7);
	var RouteHandler = Router.RouteHandler;
	var DatePicker = __webpack_require__(356);
	var moment = __webpack_require__(268);

	var OrdersList = (function (_React$Component) {
	    _inherits(OrdersList, _React$Component);

	    function OrdersList() {
	        var _this = this;

	        _classCallCheck(this, OrdersList);

	        _get(Object.getPrototypeOf(OrdersList.prototype), 'constructor', this).apply(this, arguments);

	        this.state = {};
	        this.ordering_src = [// дата провайдер для выбора сортировки сортировки
	        { id: 'orderByTime', value: 'дате', __selected__: true }, { id: 'expname', value: 'экспедиторам' }, { id: 'lpaddr', value: 'месту погрузки' }];
	        this.ordering_focus = this.ordering_src[0].id;
	        this.orders_loader = null;
	        this.orders_data = null;
	        this.order_manager = null;
	        this.order_edit = null;
	        this.edit_type = null;
	        this.offer_obj = null;
	        this.offer_inp = {};
	        this.offers_obj = null;
	        this.offers_loader = null;
	        this.offers_data = null;
	        this.cancel_order = null;
	        this.cancel_inp = {};
	        this.shipping_order = null;
	        this.done_order = null;
	        this.memo_order = null;
	        this.memo_inp = {};
	        this.bid_inp = {};

	        this.componentWillMount = function () {
	            //logger.log(this, 'mount');
	            _Dispatcher.Events.on('EV_ORDER_FLOW', _this.orderFlowHr);
	            _Dispatcher.Events.on('EV_ORDER_OFFER_FLOW', _this.orderOfferFlowHr);

	            _this.loadVehicles();
	        };

	        this.componentWillUnmount = function () {
	            //logger.log(this, 'unmount');
	            _this.orderLoaderStop();
	            _this.orderManagerStop();
	            _this.offersLoaderStop();
	            _Dispatcher.Events.rem('EV_ORDER_FLOW', _this.orderFlowHr);
	            _Dispatcher.Events.rem('EV_ORDER_OFFER_FLOW', _this.orderOfferFlowHr);
	        };

	        this.render = function () {
	            //logger.log(this, 'render');

	            moment.locale('ru');

	            var k = 789456;

	            var generate_fields = function generate_fields() {
	                switch (_this.props['type']) {

	                    // шаблоны заказов
	                    case 'templates':
	                        return ['id', 'tname', 'lpid', 'lpname', 'cargo', 'ltype', 'mass', 'vol', 'vtype', 'ltime', 'utime', 'receiver', 'addr', 'x', 'y', 'note', 'expid', 'expname'];

	                    // заявки созданне своей компаний
	                    case 'created':
	                        return ['id', 'cid', 'shid', 'shname', 'cargo', 'createts', 'lpid', 'lpname', 'lpaddr', 'mass', 'vol', 'vtype', 'ltype', 'receiver', 'utime', 'ltime', 'expid', 'expname', 'addr', 'x', 'y', 'note', 'memo'];

	                    // все открытые заявки
	                    case 'opened':
	                        return ['id', 'cid', 'shid', 'shname', 'cargo', 'opents', 'lpid', 'lpname', 'lpaddr', 'mass', 'vol', 'vtype', 'ltype', 'receiver', 'utime', 'ltime', 'expid', 'expname', 'addr', 'note', 'oid', 'ovehicle', 'odriver', 'ocprice', 'oeprice', 'memo'];

	                    // закрытые заявки
	                    case 'closed':
	                        return ['id', 'cid', 'shid', 'shname', 'cargo', 'closets', 'lpid', 'lpname', 'lpaddr', 'mass', 'vol', 'vtype', 'ltype', 'receiver', 'utime', 'ltime', 'expid', 'expname', 'addr', 'note', 'crid', 'crname', 'vehicle', 'vid', 'vmodel', 'vnum', 'price', 'memo', 'did', 'dln', 'dfn'];

	                    // закрытые заявки
	                    case 'canceled':
	                        return ['id', 'cid', 'shid', 'shname', 'cargo', 'cancelts', 'lpid', 'lpname', 'lpaddr', 'mass', 'vol', 'vtype', 'ltype', 'receiver', 'utime', 'ltime', 'expid', 'expname', 'addr', 'note', 'crid', 'crname', 'vehicle', 'vid', 'vmodel', 'vnum', 'price', 'creason', 'memo', 'did', 'dln', 'dfn'];

	                    // перевозка
	                    case 'shipping':
	                        return ['id', 'cid', 'shid', 'shname', 'cargo', 'shipts', 'lpid', 'lpname', 'lpaddr', 'mass', 'vol', 'vtype', 'ltype', 'receiver', 'utime', 'ltime', 'expid', 'expname', 'addr', 'note', 'crid', 'crname', 'vehicle', 'vid', 'vmodel', 'vnum', 'price', 'creason', 'memo', 'did', 'dln', 'dfn'];

	                    // выполненные
	                    case 'done':
	                        return ['id', 'cid', 'shid', 'shname', 'cargo', 'donets', 'lpid', 'lpname', 'lpaddr', 'mass', 'vol', 'vtype', 'ltype', 'receiver', 'utime', 'ltime', 'expid', 'expname', 'addr', 'note', 'crid', 'crname', 'vehicle', 'vid', 'vmodel', 'vnum', 'price', 'creason', 'memo', 'did', 'dln', 'dfn'];

	                    // архив
	                    case 'archive':
	                        return ['id', 'cid', 'shid', 'shname', 'cargo', 'arhts', 'lpid', 'lpname', 'lpaddr', 'mass', 'vol', 'vtype', 'ltype', 'receiver', 'utime', 'ltime', 'expid', 'expname', 'addr', 'note', 'crid', 'crname', 'vehicle', 'vid', 'vmodel', 'vnum', 'driver', 'price', 'creason', 'memo', 'did', 'dln', 'dfn'];

	                }
	                return [];
	            };

	            var generate_filters = function generate_filters() {
	                switch (_this.props['type']) {
	                    case 'templates':
	                        return [['state', 'eq', 'template']]; // шаблоны заказов
	                    case 'created':
	                        return [['state', 'eq', 'created']]; // заявки созданне своей компаний
	                    case 'opened':
	                        return [['state', 'eq', 'opened']]; // все открытые заявки
	                    case 'closed':
	                        return [['state', 'eq', 'closed']]; // закрытые заявки
	                    case 'canceled':
	                        return [['state', 'eq', 'canceled']]; // отмененные заявки
	                    case 'shipping':
	                        return [['state', 'eq', 'shipping']]; // перевозка
	                    case 'done':
	                        return [['state', 'eq', 'done']]; // доставлено
	                    case 'archive':
	                        return []; // в архиве в общем то могут быть любые заявки но, скорее всего, будут только доставленные, фильтр состояния стоит оставить пустым на случай если все таки состояния как им то образом поменяются
	                }
	                return [];
	            };

	            var generate_orger_canceler = function generate_orger_canceler(o) {

	                if (_this.cancel_order != null && _this.cancel_order['id'] == o['id']) {
	                    return React.createElement(
	                        'div',
	                        { className: 'padd-top-s' },
	                        React.createElement(
	                            'div',
	                            { className: 'orders-popup-form__caller' },
	                            'Отменить заказ?'
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'orders-popup-form', 'data-context': 'offer' },
	                            React.createElement(_ControlsFormsInputSimple.InputSimple, { ref: 'reason', name: 'reason', autoFocus: true, placeholder: 'укажите причину отмены', onChange: _this.orderCancelInpHr }),
	                            React.createElement(
	                                'div',
	                                { className: 'modal-container__footer' },
	                                React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.orderCancleConfirmHr.bind(null, o), type: 'danger', size: 'small', caption: 'Отменить заказ' }),
	                                React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.orderCancleClickHr.bind(null, null), type: 'success', size: 'small', caption: 'Не отменять' })
	                            )
	                        )
	                    );
	                } else {
	                    return React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.orderCancleClickHr.bind(null, o), type: 'danger', size: 'small', caption: 'Отменить заказ' });
	                }
	            };

	            var generate_orger_memoer = function generate_orger_memoer(o) {

	                if (_this.memo_order != null && _this.memo_order['id'] == o['id']) {
	                    return React.createElement(
	                        'div',
	                        null,
	                        React.createElement(
	                            'div',
	                            { className: 'orders-popup-form__caller' },
	                            'Введите текст заметки'
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'orders-popup-form', 'data-context': 'note' },
	                            React.createElement(_ControlsFormsInputSimple.InputSimple, { ref: 'memo', name: 'memo', defaultValue: o['memo'], autoFocus: true, onChange: _this.orderMemoInpHr }),
	                            React.createElement(
	                                'div',
	                                { className: 'modal-container__footer' },
	                                React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.orderMemoConfirmHr.bind(null, o), type: 'success', size: 'small', caption: 'Сохранить' }),
	                                React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.orderMemoClickHr.bind(null, null), type: 'warning', size: 'small', caption: 'Отменить' })
	                            )
	                        )
	                    );
	                } else {
	                    return React.createElement(
	                        'div',
	                        { className: 'orders-table__actions-memo' },
	                        React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.orderMemoClickHr.bind(null, o), type: 'success', size: 'small', caption: o['memo'] ? "Изменить заметку" : "Сделать заметку" })
	                    );
	                }
	            };

	            var generate_order_actions = function generate_order_actions(o) {

	                switch (_this.props['type']) {

	                    // <ButtonSimple onClick={this.templateClickHr.bind(null, o)} type="success" size="small" caption="Использовать"/>
	                    // <ButtonSimple onClick={this.editBeginHr.bind(null, o)} type="warning" size="small" caption="Изменить"/>

	                    case 'templates':
	                        // шаблон заказа
	                        return React.createElement(
	                            'div',
	                            { className: 'orders-table__actions-btn' },
	                            React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.editBeginHr.bind(null, o, 'copy'), type: 'success', size: 'small', caption: 'Использовать' }),
	                            React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.editBeginHr.bind(null, o, 'tmpl'), type: 'warning', size: 'small', caption: 'Изменить' }),
	                            React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.delClickHr.bind(null, o), type: 'danger', size: 'small', caption: 'Удалить' })
	                        );

	                    case 'created':
	                        // заявка созданная своей компаний
	                        return React.createElement(
	                            'div',
	                            { className: 'orders-table__actions-btn' },
	                            React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.openClickHr.bind(null, o), type: 'success', size: 'small', caption: 'Разместить' }),
	                            React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.editBeginHr.bind(null, o), type: 'warning', size: 'small', caption: 'Изменить' }),
	                            React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.delClickHr.bind(null, o), type: 'danger', size: 'small', caption: 'Удалить' })
	                        );

	                    case 'opened':
	                        // открытая заявки
	                        var shipperOrEpeditor = _utils.Utils.isElementInArray(_Dashboard.AppState.myCompany.id, [o['shid'], o['expid']]);
	                        var сanMakeOffer = !shipperOrEpeditor && o['oid'] == null && _this.offer_obj == null;

	                        // <InputSimple ref='drv' name='drv' defaultValue={this.offer_inp['drv']} onChange={this.offerInpHr} />
	                        // <InputSimple ref='veh' name='veh' defaultValue={this.offer_inp['veh']} onChange={this.offerInpHr} />

	                        _ClassesLogger.logger.log('offers', _this, o);

	                        return React.createElement(
	                            'div',
	                            null,
	                            o['cid'] == _Dashboard.AppState.myCompany.id ? React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.backClickHr.bind(null, o), type: 'danger', size: 'small', caption: 'Снять заказ с размещения' }) : null,
	                            сanMakeOffer ? React.createElement(
	                                'div',
	                                { className: 'orders-popup-form__caller' },
	                                React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.offerClickHr.bind(null, o), type: 'success', size: 'small', caption: 'Сделать предложение' })
	                            ) : null,
	                            _this.offer_obj != null && _this.offer_obj['id'] == o['id'] ? React.createElement(
	                                'div',
	                                null,
	                                React.createElement(
	                                    'div',
	                                    { className: 'orders-popup-form__caller' },
	                                    'Ваше предложение'
	                                ),
	                                React.createElement(
	                                    'div',
	                                    { className: 'orders-popup-form', 'data-context': 'offer' },
	                                    React.createElement(
	                                        'div',
	                                        { className: 'orders-popup-form__make-offer', 'data-state': 'make-offer' },
	                                        React.createElement(
	                                            _ControlsFormsFormGroup.FormGroup,
	                                            { name: 'Водитель', from: 'drv' },
	                                            React.createElement(_SimpleComponentsInputSelect2.InputSelect2, { ref: 'drv', name: 'drv', active: true, noIcon: true, list: _this.getDriversList(), onChanged: _this.onDriverChangeHr })
	                                        ),
	                                        React.createElement(
	                                            _ControlsFormsFormGroup.FormGroup,
	                                            { name: 'Транспортное средство', from: 'veh' },
	                                            React.createElement(_SimpleComponentsInputSelect2.InputSelect2, { ref: 'veh', name: 'veh', active: true, noIcon: true, list: _this.getVehicleList(), onChanged: _this.onVehicleChangeHr })
	                                        ),
	                                        React.createElement(
	                                            _ControlsFormsFormGroup.FormGroup,
	                                            { name: 'Ваша цена', from: 'bid' },
	                                            React.createElement(_ControlsFormsInputSimple.InputSimple, { ref: 'bid', name: 'bid', defaultValue: _this.offer_inp['bid'], onChange: _this.offerInpHr, validation: { typing: _Validation.Validation.typingFloat } })
	                                        ),
	                                        React.createElement(
	                                            'div',
	                                            { className: 'modal-container__footer' },
	                                            React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.offerCreateClickHr.bind(null, o), type: 'success', caption: 'Сделать предложение' }),
	                                            React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.offerCreateClickHr.bind(null, null), type: 'warning', caption: 'Отмена' })
	                                        )
	                                    )
	                                )
	                            ) : null,
	                            o['oid'] != null ? o['ocprice'] != null ? React.createElement(
	                                'div',
	                                null,
	                                React.createElement(
	                                    'span',
	                                    { className: 'orders-table__my-price' },
	                                    'Мое предложение:'
	                                ),
	                                React.createElement(
	                                    'span',
	                                    { className: 'orders-table__my-price-value' },
	                                    o['ocprice'],
	                                    ' руб.'
	                                )
	                            ) : React.createElement(
	                                'div',
	                                null,
	                                React.createElement(
	                                    'div',
	                                    { className: 'orders-table__expeditor-price' },
	                                    React.createElement(
	                                        'div',
	                                        { className: 'orders-table__expeditor-price-title' },
	                                        'Предложение экспедитора:'
	                                    ),
	                                    React.createElement(
	                                        'div',
	                                        { className: 'orders-table__expeditor-price-accept' },
	                                        React.createElement(
	                                            'span',
	                                            { className: 'orders-table__expeditor-price-value' },
	                                            o['oeprice'],
	                                            ' руб.'
	                                        ),
	                                        React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.offerBidClickHr.bind(null, o['oid'], o['oeprice']), type: 'warning', size: 'small', caption: 'Принять' })
	                                    )
	                                ),
	                                React.createElement(
	                                    'div',
	                                    { className: 'orders-table__offer-price' },
	                                    React.createElement(
	                                        'div',
	                                        { className: 'orders-table__offer-price-input' },
	                                        React.createElement(_ControlsFormsInputSimple.InputSimple, { ref: 'price', name: 'price', onChange: _this.orderOfferPriceInpHr, placeholder: 'или укажите вашу цену', validation: { typing: _Validation.Validation.typingFloat } })
	                                    ),
	                                    React.createElement(
	                                        'div',
	                                        { className: 'orders-table__offer-price-set' },
	                                        React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.offerBidClickHr.bind(null, o['oid'], null), type: 'success', size: 'small', caption: 'Предложить свою цену' })
	                                    )
	                                )
	                            ) : null,
	                            o['expid'] == _Dashboard.AppState.myCompany.id ? _this.offers_obj != null && _this.offers_obj['id'] == o['id'] ? React.createElement(
	                                'div',
	                                { onClick: _this.offersListClickHr.bind(null, null) },
	                                React.createElement(
	                                    'span',
	                                    { className: 'orders-table__offer-hide' },
	                                    'Свернуть предложения'
	                                )
	                            ) : true ? React.createElement(
	                                'div',
	                                { onClick: _this.offersListClickHr.bind(null, o) },
	                                React.createElement(
	                                    'span',
	                                    { className: 'orders-table__offer-show' },
	                                    'Посмотреть предложения'
	                                )
	                            ) : React.createElement(
	                                'div',
	                                null,
	                                'Нет предложений'
	                            ) : null
	                        );

	                    case 'closed':
	                        // закрытая заявка

	                        return React.createElement(
	                            'div',
	                            { className: 'orders-table__actions-btn' },
	                            _utils.Utils.isElementInArray(_Dashboard.AppState.myCompany.id, [o['expid'], o['crid']]) ? _this.shipping_order != null && _this.shipping_order['id'] == o['id'] ? React.createElement(
	                                'div',
	                                null,
	                                React.createElement(
	                                    'div',
	                                    { className: 'orders-popup-form__caller' },
	                                    'Дата начала погрузки'
	                                ),
	                                React.createElement(
	                                    'div',
	                                    { className: 'orders-popup-form', 'data-context': 'offer' },
	                                    React.createElement(DatePicker, { ref: 'shipping_date', dateFormat: 'YYYY-MM-DD', selected: moment(_utils.Utils.timestamp2YYYYMMDD(Math.floor(new Date().getTime() / 1000))) }),
	                                    React.createElement(
	                                        'div',
	                                        { className: 'modal-container__footer' },
	                                        React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.orderShippingConfirmClickHr.bind(null, o), type: 'warning', size: 'small', caption: 'Начать погрузку' }),
	                                        React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.orderShippingConfirmClickHr.bind(null, null), type: 'success', size: 'small', caption: 'Отмена' })
	                                    )
	                                )
	                            ) : React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.orderShippingClickHr.bind(null, o), type: 'warning', size: 'small', caption: 'Прибыл на погрузку' }) : null,
	                            _utils.Utils.isElementInArray(_Dashboard.AppState.myCompany.id, [o['expid'], o['crid'], o['shid']]) ? generate_orger_canceler(o) : null
	                        );

	                    case 'shipping':
	                        // заявка в состоянии "перевозка"

	                        return React.createElement(
	                            'div',
	                            null,
	                            _utils.Utils.isElementInArray(_Dashboard.AppState.myCompany.id, [o['expid'], o['crid']]) ? _this.done_order == null ? React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.orderDoneClickHr.bind(null, o), type: 'warning', size: 'small', caption: 'Доставлена' }) : React.createElement(
	                                'div',
	                                null,
	                                React.createElement(
	                                    'div',
	                                    { className: 'orders-popup-form__caller' },
	                                    'Дата доставки'
	                                ),
	                                React.createElement(
	                                    'div',
	                                    { className: 'orders-popup-form', 'data-context': 'offer' },
	                                    React.createElement(DatePicker, { ref: 'done_date', dateFormat: 'YYYY-MM-DD', selected: moment(_utils.Utils.timestamp2YYYYMMDD(Math.floor(new Date().getTime() / 1000))) }),
	                                    React.createElement(
	                                        'div',
	                                        { className: 'modal-container__footer' },
	                                        React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.orderDoneConfirmClickHr.bind(null, o), type: 'warning', size: 'small', caption: 'Подтвердить перевозку' }),
	                                        React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.orderDoneConfirmClickHr.bind(null, null), type: 'success', size: 'small', caption: 'Отмена' })
	                                    )
	                                )
	                            ) : null
	                        );

	                    case 'done':
	                        // заявка в состояни "дотсавлена"
	                        return React.createElement(
	                            'div',
	                            null,
	                            _utils.Utils.isElementInArray(_Dashboard.AppState.myCompany.id, [o['expid'], o['crid'], o['shid']]) ? React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.orderArhClickHr.bind(null, o), type: 'warning', size: 'small', caption: 'Архивировать' }) : null
	                        );

	                }

	                return null;
	            };

	            var generate_title = function generate_title() {
	                switch (_this.props['type']) {
	                    case 'templates':
	                        return 'Шаблоны';
	                    case 'created':
	                        return 'Новые заказы';
	                    case 'opened':
	                        return 'Открытые заказы';
	                    case 'closed':
	                        return 'Закрытые заказы';
	                    case 'shipping':
	                        return 'Перевозка';
	                    case 'done':
	                        return 'Доставленные заказы';
	                    case 'canceled':
	                        return 'Отмененные заказы';
	                    case 'archive':
	                        return 'Архивные заказы';
	                }
	                return null;
	            };

	            var generate_offer_actions = function generate_offer_actions(order, offer) {

	                var isExp = order['expid'] == _Dashboard.AppState.myCompany.id;

	                if (offer['cprice'] != null) {

	                    if (isExp) {
	                        return React.createElement(
	                            'td',
	                            null,
	                            React.createElement(
	                                'div',
	                                { className: 'orders-table__expeditor-price' },
	                                React.createElement(
	                                    'div',
	                                    { className: 'orders-table__expeditor-price-title' },
	                                    'Предложение перевозчика:'
	                                ),
	                                React.createElement(
	                                    'div',
	                                    { className: 'orders-table__expeditor-price-accept' },
	                                    React.createElement(
	                                        'span',
	                                        { className: 'orders-table__expeditor-price-value' },
	                                        offer['cprice'],
	                                        ' руб.'
	                                    ),
	                                    React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.offerBidClickHr.bind(null, offer['id'], offer['cprice']), type: 'warning', size: 'small', caption: 'Принять' })
	                                )
	                            ),
	                            React.createElement(
	                                'div',
	                                { className: 'orders-table__offer-price' },
	                                React.createElement(
	                                    'div',
	                                    { className: 'orders-table__offer-price-input' },
	                                    React.createElement(_ControlsFormsInputSimple.InputSimple, { ref: 'price', name: 'price', onChange: _this.orderOfferPriceInpHr, placeholder: 'или укажите вашу цену', validation: { typing: _Validation.Validation.typingFloat } })
	                                ),
	                                React.createElement(
	                                    'div',
	                                    { className: 'orders-table__offer-price-set' },
	                                    React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.offerBidClickHr.bind(null, offer['id'], null), type: 'success', size: 'small', caption: 'Предложить свою цену' })
	                                )
	                            )
	                        );
	                    } else {
	                        return React.createElement(
	                            'td',
	                            null,
	                            'Мы перевезем за: ',
	                            React.createElement(
	                                'strong',
	                                null,
	                                offer['cprice']
	                            ),
	                            ' руб.',
	                            React.createElement('br', null)
	                        );
	                    }

	                    // if (isExp) {
	                    //     return [
	                    //         <td>
	                    //             Перевозчик предлагает:<br/>
	                    //             Стоимость: {offer['cprice']} <a onClick={this.offerBidClickHr.bind(null, offer['id'], offer['cprice'])}>[принять]</a>
	                    //         </td>,
	                    //         <td>
	                    //             <InputSimple ref='price' name='price' onChange={this.orderOfferPriceInpHr} validation={{typing:Validation.typingFloat}} /><br/>
	                    //             <a onClick={this.offerBidClickHr.bind(null, offer['id'], null)}>[предложить свою цену]</a>
	                    //         </td>
	                    //     ];
	                    // } else {
	                    //     return <td>мы перевезем за: {offer['cprice']}<br/></td>;
	                    // }
	                }

	                if (offer['eprice'] != null) {

	                    if (isExp) {
	                        return React.createElement(
	                            'td',
	                            null,
	                            'Мы экспедируем за: ',
	                            React.createElement(
	                                'strong',
	                                null,
	                                offer['eprice']
	                            ),
	                            ' руб.',
	                            React.createElement('br', null)
	                        );
	                    } else {
	                        return React.createElement(
	                            'td',
	                            null,
	                            React.createElement(
	                                'div',
	                                { className: 'orders-table__expeditor-price' },
	                                React.createElement(
	                                    'div',
	                                    { className: 'orders-table__expeditor-price-title' },
	                                    'Предложение экспедитора:'
	                                ),
	                                React.createElement(
	                                    'div',
	                                    { className: 'orders-table__expeditor-price-accept' },
	                                    React.createElement(
	                                        'span',
	                                        { className: 'orders-table__expeditor-price-value' },
	                                        offer['eprice'],
	                                        ' руб.'
	                                    ),
	                                    React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.offerBidClickHr.bind(null, offer['id'], offer['eprice']), type: 'warning', size: 'small', caption: 'Принять' })
	                                )
	                            ),
	                            React.createElement(
	                                'div',
	                                { className: 'orders-table__offer-price' },
	                                React.createElement(
	                                    'div',
	                                    { className: 'orders-table__offer-price-input' },
	                                    React.createElement(_ControlsFormsInputSimple.InputSimple, { ref: 'price', name: 'price', onChange: _this.orderOfferPriceInpHr, placeholder: 'или укажите вашу цену', validation: { typing: _Validation.Validation.typingFloat } })
	                                ),
	                                React.createElement(
	                                    'div',
	                                    { className: 'orders-table__offer-price-set' },
	                                    React.createElement(_ControlsFormsButtonSimple.ButtonSimple, { onClick: _this.offerBidClickHr.bind(null, offer['id'], null), type: 'success', size: 'small', caption: 'Предложить свою цену' })
	                                )
	                            )
	                        );
	                    }

	                    // if (isExp) {
	                    //     return <td>мы экспедируем за: {offer['eprice']}<br/></td>;
	                    // } else {
	                    //     return [
	                    //         <td>
	                    //             Экспедитор предлагает:<br/>
	                    //             Стоимость: {offer['eprice']} <a onClick={this.offerBidClickHr.bind(null, offer['id'], offer['eprice'])}>[принять]</a>
	                    //         </td>,
	                    //         <td>
	                    //             <InputSimple ref='price' name='price' onChange={this.orderOfferPriceInpHr} validation={{typing:Validation.typingFloat}} /><br/>
	                    //             <a onClick={this.offerBidClickHr.bind(null, offer['id'], null)}>[предложить свою цену]</a>
	                    //         </td>
	                    //     ];
	                    // }
	                }

	                return null;
	            };

	            var generate_offers_content = function generate_offers_content(order) {

	                var cont = [];

	                if ('err' in _this.offers_data) return React.createElement(
	                    'div',
	                    null,
	                    'Предложения не загружены: ',
	                    _this.offers_data.msg
	                ); // загружены с ошибкой
	                if (!_utils.Utils.isArray(_this.offers_data['data'])) return React.createElement(
	                    'div',
	                    null,
	                    'не загружены: list.data required'
	                ); // api не вернул data

	                for (var i = 0, l = _this.offers_data['data'].length; i < l; i++) {

	                    var ofr = _this.offers_data['data'][i];
	                    console.debug('offer', ofr);

	                    var ctime = new Date(ofr['ts'] * 1000).toLocaleString('ru-RU', { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' });

	                    // <td>ТС: <a tagert='_blank' href={'?vehicle_id=' + ofr['vid']}>{ofr['vmodel']} ({ofr['vnum']})</a><br/>Водитель: <a target='_blank' href={'?user_id=' + ofr['did']}>{ofr['dln']} {ofr['dfn']}</a></td>

	                    cont.push(React.createElement(
	                        'tr',
	                        { key: k++, style: {
	                                'backgroundColor': '#eee'
	                            } },
	                        React.createElement(
	                            'td',
	                            null,
	                            React.createElement(
	                                'span',
	                                { className: 'orders-table__order-num' },
	                                '#',
	                                ofr['id']
	                            ),
	                            React.createElement('br', null),
	                            ctime
	                        ),
	                        React.createElement(
	                            'td',
	                            null,
	                            React.createElement(
	                                'span',
	                                { className: 'orders-table__s-title' },
	                                'Перевозчик'
	                            ),
	                            ': ',
	                            React.createElement(
	                                'a',
	                                { target: '_blank', href: '#/dashboard/comp/' + ofr['cid'] },
	                                ofr['cname']
	                            ),
	                            React.createElement('br', null),
	                            React.createElement(
	                                'span',
	                                { className: 'orders-table__s-title' },
	                                'ТС'
	                            ),
	                            ': ',
	                            ofr['vmodel'],
	                            ' (',
	                            ofr['vnum'],
	                            ')',
	                            React.createElement('br', null),
	                            React.createElement(
	                                'span',
	                                { className: 'orders-table__s-title' },
	                                'Водитель'
	                            ),
	                            ': ',
	                            ofr['dln'],
	                            ' ',
	                            ofr['dfn'],
	                            React.createElement('br', null)
	                        ),
	                        generate_offer_actions(order, ofr)
	                    ));
	                }

	                return React.createElement(
	                    'table',
	                    { cellSpacing: 1 },
	                    React.createElement(
	                        'tbody',
	                        null,
	                        cont
	                    )
	                );
	            };

	            var generate_order_cost = function generate_order_cost(o) {
	                // грузовладелец не должен видеть договорной цены
	                return _Dashboard.AppState.myCompany.id != o['shid'] ? React.createElement(
	                    'div',
	                    null,
	                    React.createElement(
	                        'span',
	                        { className: 'orders-table__s-title' },
	                        'Цена'
	                    ),
	                    ': ',
	                    o['price'],
	                    ' руб.',
	                    React.createElement('br', null)
	                ) : null;
	            };

	            var generate_extra_order_data = function generate_extra_order_data(o) {
	                if (_this.props['type'] == 'created' || _this.props['type'] == 'opened' || _this.props['type'] == 'templates') return null;

	                return React.createElement(
	                    'div',
	                    null,
	                    React.createElement('br', null),
	                    React.createElement(
	                        'span',
	                        { className: 'orders-table__s-title' },
	                        'Перевозчик'
	                    ),
	                    ': ',
	                    React.createElement(
	                        'a',
	                        { target: '_blank', href: '#/dashboard/comp/' + o['crid'] },
	                        o['crname']
	                    ),
	                    React.createElement('br', null),
	                    React.createElement(
	                        'span',
	                        { className: 'orders-table__s-title' },
	                        'ТС'
	                    ),
	                    ': ',
	                    o['vmodel'],
	                    ' (',
	                    o['vnum'],
	                    ')',
	                    React.createElement('br', null),
	                    React.createElement(
	                        'span',
	                        { className: 'orders-table__s-title' },
	                        'Водитель'
	                    ),
	                    ': ',
	                    o['dln'],
	                    ' ',
	                    o['dfn'],
	                    React.createElement('br', null),
	                    generate_order_cost(o)
	                );
	            };

	            var generate_order_times = function generate_order_times(o) {
	                switch (_this.props['type']) {
	                    case 'created':
	                        return React.createElement(
	                            'div',
	                            { className: 'orders-table__s-title' },
	                            'Создана ',
	                            React.createElement(
	                                'span',
	                                { className: 'orders-table__order-num' },
	                                _utils.Utils.ts2tmdhms(o['createts'])
	                            )
	                        );
	                    case 'opened':
	                        return React.createElement(
	                            'div',
	                            { className: 'orders-table__s-title' },
	                            'Размещена ',
	                            React.createElement(
	                                'span',
	                                { className: 'orders-table__order-num' },
	                                _utils.Utils.ts2tmdhms(o['opents'])
	                            )
	                        );
	                    case 'closed':
	                        return React.createElement(
	                            'div',
	                            { className: 'orders-table__s-title' },
	                            'Закрыта ',
	                            React.createElement(
	                                'span',
	                                { className: 'orders-table__order-num' },
	                                _utils.Utils.ts2tmdhms(o['closets'])
	                            )
	                        );
	                    case 'shipping':
	                        return React.createElement(
	                            'div',
	                            { className: 'orders-table__s-title' },
	                            'Перевозка ',
	                            React.createElement(
	                                'span',
	                                { className: 'orders-table__order-num' },
	                                _utils.Utils.ts2tmdhms(o['shipts'])
	                            )
	                        );
	                    case 'done':
	                        return React.createElement(
	                            'div',
	                            { className: 'orders-table__s-title' },
	                            'Доставлено ',
	                            React.createElement(
	                                'span',
	                                { className: 'orders-table__order-num' },
	                                _utils.Utils.ts2tmdhms(o['donets'])
	                            )
	                        );
	                    case 'archive':
	                        return React.createElement(
	                            'div',
	                            { className: 'orders-table__s-title' },
	                            'Архивировано ',
	                            React.createElement(
	                                'span',
	                                { className: 'orders-table__order-num' },
	                                _utils.Utils.ts2tmdhms(o['arhts'])
	                            )
	                        );
	                    case 'canceled':
	                        return React.createElement(
	                            'div',
	                            { className: 'orders-table__s-title' },
	                            'Отменена ',
	                            React.createElement(
	                                'span',
	                                { className: 'orders-table__order-num' },
	                                _utils.Utils.ts2tmdhms(o['cancelts'])
	                            )
	                        );
	                }
	                return null;
	            };

	            var get_time_field = function get_time_field() {
	                switch (_this.props['type']) {
	                    case 'created':
	                        return 'createts';
	                    case 'opened':
	                        return 'opents';
	                    case 'closed':
	                        return 'closets';
	                    case 'shipping':
	                        return 'shipts';
	                    case 'done':
	                        return 'donets';
	                    case 'archive':
	                        return 'arhts';
	                    case 'canceled':
	                        return 'cancelts';
	                }
	                return null;
	            };

	            var generate_orders_content = function generate_orders_content() {

	                if (_this.orders_data == null) {
	                    // места погрузки не загружены
	                    if (_this.orders_loader == null) {
	                        // места погрузки не загружаются
	                        // todo: сделать компопнент типа bufferedTable (успех такой операции маловероятен)
	                        _this.orders_loader = new _api.xreq('orders_list', {
	                            archive: _this.props['type'] == 'archive',
	                            fields: generate_fields(),
	                            filters: generate_filters(),
	                            orderBy: _this.ordering_focus == 'orderByTime' ? get_time_field() : _this.ordering_focus, // если выбрана сортировка по времени, то у каждого раздела свое поле времени
	                            limit: 500
	                        }, _this.ordersLoaderHr); // загружаем места погрузки
	                    }
	                    return React.createElement(
	                        'div',
	                        null,
	                        'загрузка ...'
	                    );
	                }

	                if ('err' in _this.orders_data) return React.createElement(
	                    'div',
	                    null,
	                    'Заказы не загружены: ',
	                    _this.orders_data.msg
	                ); // места погрузок загружены с ошибкой
	                if (!_utils.Utils.isArray(_this.orders_data['data'])) return React.createElement(
	                    'div',
	                    null,
	                    'места погрузки не загружены: list.data required'
	                ); // api не вернул data

	                //console.debug(this.orders_data);

	                var day_last = 0;
	                var cont = [];

	                for (var i = 0, l = _this.orders_data['data'].length; i < l; i++) {

	                    var o = _this.orders_data['data'][i];
	                    var time_field = get_time_field();

	                    if (_this.ordering_focus == 'orderByTime') {
	                        // использована сортировка по времени, значит можно сделать группировку по дням
	                        var t = o[time_field] || Math.floor(new Date().getTime() / 1000);
	                        var day_cur = Math.ceil(t / 60 / 60 / 24); // номер дня
	                        if (day_last != day_cur) {
	                            // номер дня сменился, рисуем его
	                            cont.push(React.createElement(
	                                'tr',
	                                { key: k++ },
	                                React.createElement(
	                                    'td',
	                                    { colSpan: 5, className: 'orders-table__date' },
	                                    moment(t * 1000).format("D MMMM")
	                                )
	                            ));
	                            day_last = day_cur; // запоминаем какой номер дня в фокусе
	                        }
	                    }

	                    cont.push(React.createElement(
	                        'tr',
	                        { key: k++, 'data-state': _this.offer_obj != null && _this.offer_obj['id'] == o['id'] || _this.offers_obj != null && _this.offers_obj['id'] == o['id'] ? "active" : '' },
	                        React.createElement(
	                            'td',
	                            null,
	                            React.createElement(
	                                'div',
	                                { className: 'row row-between' },
	                                React.createElement(
	                                    'div',
	                                    null,
	                                    React.createElement(
	                                        'span',
	                                        { className: 'orders-table__order-num' },
	                                        '#',
	                                        o['id']
	                                    ),
	                                    React.createElement(
	                                        'span',
	                                        { className: 'orders-table__lp-name' },
	                                        o['lpname']
	                                    )
	                                ),
	                                React.createElement(
	                                    'div',
	                                    { className: 'row row-space-children-xs' },
	                                    o['cid'] == _Dashboard.AppState.myCompany.id ? React.createElement(
	                                        'span',
	                                        { 'data-tooltip': 'Копировать' },
	                                        React.createElement(_ControlsIcon.Icon, { name: 'copy', size: 20, onClick: _this.editBeginHr.bind(null, o, 'copy') })
	                                    ) : null,
	                                    React.createElement(
	                                        'span',
	                                        { 'data-tooltip': 'Экспорт в Excel' },
	                                        React.createElement(_ControlsIcon.Icon, { name: 'file-download', size: 20, onClick: _this.orderExportClickHr.bind(null, o) })
	                                    )
	                                )
	                            ),
	                            React.createElement(
	                                'div',
	                                { className: 'orders-table__s-title padd-top-s' },
	                                'Погрузка'
	                            ),
	                            React.createElement(
	                                'div',
	                                { className: 'orders-table__address' },
	                                o['lpaddr']
	                            ),
	                            React.createElement(
	                                'div',
	                                { className: 'orders-table__s-title padd-top-s' },
	                                'Доставка'
	                            ),
	                            React.createElement(
	                                'div',
	                                { className: 'orders-table__address' },
	                                o['addr']
	                            )
	                        ),
	                        React.createElement(
	                            'td',
	                            null,
	                            React.createElement(
	                                'div',
	                                { className: 'orders-table__s-title' },
	                                'Грузополучатель'
	                            ),
	                            o['receiver'],
	                            React.createElement(
	                                'div',
	                                { className: 'orders-table__s-title padd-top-s' },
	                                'Груз'
	                            ),
	                            React.createElement(
	                                'div',
	                                { className: 'orders-table__cargo' },
	                                o['cargo'],
	                                ': ',
	                                o['mass'],
	                                ' т, ',
	                                o['vol'],
	                                ' м',
	                                React.createElement(
	                                    'sup',
	                                    null,
	                                    '3'
	                                ),
	                                ', ',
	                                _this.ltype2txt(o['ltype']),
	                                ', ',
	                                _this.vtype2txt(o['vtype'])
	                            )
	                        ),
	                        React.createElement(
	                            'td',
	                            null,
	                            React.createElement(
	                                'div',
	                                { className: 'orders-table__s-title' },
	                                'Дата выгрузки'
	                            ),
	                            _utils.Utils.timestamp2YYYYMMDD(o['utime'])
	                        ),
	                        React.createElement(
	                            'td',
	                            null,
	                            React.createElement(
	                                'div',
	                                { className: 'orders-table__s-title' },
	                                'Грузовладелец ',
	                                React.createElement(
	                                    'a',
	                                    { target: '_blank', href: '#/dashboard/comp/' + o['shid'] },
	                                    o['shname']
	                                )
	                            ),
	                            React.createElement(
	                                'div',
	                                { className: 'orders-table__s-title' },
	                                'Экспедитор ',
	                                React.createElement(
	                                    'a',
	                                    { target: '_blank', href: '#/dashboard/comp/' + o['expid'] },
	                                    o['expname']
	                                )
	                            ),
	                            React.createElement(
	                                'div',
	                                { className: 'orders-table__s-title padd-top-s' },
	                                'Примечание'
	                            ),
	                            ' ',
	                            o['note'],
	                            generate_extra_order_data(o)
	                        ),
	                        React.createElement(
	                            'td',
	                            null,
	                            React.createElement(
	                                'div',
	                                { className: 'orders-table__actions' },
	                                generate_order_times(o),
	                                (o['memo'] || '').length > 0 ? React.createElement(
	                                    'div',
	                                    null,
	                                    React.createElement(
	                                        'span',
	                                        { className: 'orders-table__s-title' },
	                                        'Заметка'
	                                    ),
	                                    ' ',
	                                    o['memo']
	                                ) : null,
	                                _utils.Utils.isElementInArray(_Dashboard.AppState.myCompany.id, [o['expid'], o['crid'], o['shid']]) ? generate_orger_memoer(o) : null,
	                                generate_order_actions(o),
	                                _this.props['type'] == 'canceled' ? React.createElement(
	                                    'div',
	                                    null,
	                                    React.createElement(
	                                        'span',
	                                        { className: 'orders-table__s-title' },
	                                        'Причина отмены'
	                                    ),
	                                    ' ',
	                                    o['creason']
	                                ) : null
	                            )
	                        )
	                    ));

	                    // сделано на всплывающем окне
	                    //
	                    // if (this.offer_obj != null && this.offer_obj['id'] == o['id']) {
	                    //     cont.push(
	                    //         <tr key={k++}>
	                    //             <td colSpan={5}>
	                    //                 <FormGroup name="id водителя" from="drv">
	                    //                     <InputSimple ref='drv' name='drv' defaultValue={this.offer_inp['drv']} onChange={this.offerInpHr} />
	                    //                 </FormGroup>
	                    //                 <FormGroup name="id ТС" from="veh">
	                    //                     <InputSimple ref='veh' name='veh' defaultValue={this.offer_inp['veh']} onChange={this.offerInpHr} />
	                    //                 </FormGroup>
	                    //                  <FormGroup name="Ваша цена" from="bid">
	                    //                     <InputSimple ref='bid' name='bid' defaultValue={this.offer_inp['bid']} onChange={this.offerInpHr} validation={{typing:Validation.typingFloat}} />
	                    //                 </FormGroup>
	                    //                 <div className="modal-container__footer">
	                    //                     <ButtonSimple onClick={this.offerCreateClickHr.bind(null, o)} type="success" caption="Сделать предложение"/>
	                    //                     <ButtonSimple onClick={this.offerCreateClickHr.bind(null, null)} type="warning" caption="Отмена"/>
	                    //                 </div>
	                    //             </td>
	                    //         </tr>
	                    //     );
	                    // }

	                    //- old design
	                    // <tr key={k++}>
	                    //         <td colSpan={5}>
	                    //             id водителя: <InputSimple ref='drv' name='drv' defaultValue={this.offer_inp['drv']} onChange={this.offerInpHr} /> (todo: сделать диалог выбора)<br/>
	                    //             id TC: <InputSimple ref='veh' name='veh' defaultValue={this.offer_inp['veh']} onChange={this.offerInpHr} /> (todo: сделать диалог выбора)<br/>
	                    //             цена: <InputSimple ref='bid' name='bid' defaultValue={this.offer_inp['bid']} onChange={this.offerInpHr} validation={{typing:Validation.typingFloat}} /><br/>
	                    //             <a onClick={this.offerCreateClickHr.bind(null, o)}>[Сделать предложение]</a>
	                    //             <a onClick={this.offerCreateClickHr.bind(null, null)}>[Отмена]</a>
	                    //         </td>
	                    //     </tr>

	                    if (_this.offers_obj != null && _this.offers_obj['id'] == o['id']) {
	                        if (_this.offers_data == null) {
	                            // предложения не загружены
	                            if (_this.offers_loader == null) {
	                                // и еще не загружаются
	                                // todo: сделать компопнент типа bufferedTable
	                                _this.offers_loader = new _api.xreq('order_offers_list', {
	                                    fields: ['id', 'ts', 'cid', 'cname', 'vid', 'vnum', 'vmodel', 'did', 'dln', 'dfn', 'cprice', 'eprice'],
	                                    filters: [['oid', 'eq', _this.offers_obj['id']]],
	                                    limit: 500
	                                }, _this.offersLoaderHr); // загружаем места погрузки
	                            }
	                            cont.push(React.createElement(
	                                'tr',
	                                { key: k++ },
	                                React.createElement(
	                                    'td',
	                                    { colSpan: 5 },
	                                    'загрузка ...'
	                                )
	                            ));
	                        } else {
	                            cont.push(React.createElement(
	                                'tr',
	                                { key: k++ },
	                                React.createElement(
	                                    'td',
	                                    { colSpan: 5, className: 'orders-table__offers-td' },
	                                    React.createElement(
	                                        'div',
	                                        { className: 'orders-table__offers-list' },
	                                        generate_offers_content(o)
	                                    )
	                                )
	                            ));
	                        }
	                    }
	                }

	                return React.createElement(
	                    'table',
	                    { className: 'table' },
	                    React.createElement(
	                        'tbody',
	                        null,
	                        cont
	                    )
	                );
	            };

	            return React.createElement(
	                'div',
	                null,
	                React.createElement(
	                    'div',
	                    { style: _this.vis(_this.order_edit == null) },
	                    React.createElement(
	                        'div',
	                        { className: 'orders-list__header' },
	                        React.createElement(
	                            'div',
	                            { className: 'orders-list__title' },
	                            generate_title()
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'orders-list__sort' },
	                            React.createElement(
	                                'span',
	                                null,
	                                'Упорядочить по:'
	                            ),
	                            React.createElement(_SimpleComponentsInputSelect2.InputSelect2, { name: 'ordering_src', noIcon: true, list: _this.ordering_src, onChanged: _this.orderingChangeHr })
	                        )
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'orders-list' },
	                        generate_orders_content()
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { style: _this.vis(_this.order_edit != null) },
	                    React.createElement(_OrderCreate.OrderCreate, { order: _this.order_edit, type: _this.edit_type, onCancel: _this.editCancelHr })
	                )
	            );
	            // (my_comp_id={AppState.myCompany.id})<br />
	            //             {generate_title()}<br />
	            //             Упорядочить по <InputSelect2 name="ordering_src" list={this.ordering_src} onChanged={this.orderingChangeHr} /><br />
	            //             {generate_orders_content()}
	        };

	        this.onDriverChangeHr = function (caller) {
	            _this.offerInpHr({ 'drv': caller.getSelectedList()[0].id });
	        };

	        this.onVehicleChangeHr = function (caller) {
	            _this.offerInpHr({ 'veh': caller.getSelectedList()[0].id });
	        };

	        this.veh_loader = null;
	        this.veh_data = null;
	        this.veh_sel = [];

	        this.veh_loader_stop = function () {
	            if (_this.veh_loader) {
	                _this.veh_loader.cancel();_this.veh_loader = null;
	            }
	        };

	        this.loadVehicles = function () {
	            _this.veh_loader_stop();
	            var params = {
	                comp_id: _Dashboard.AppState.myCompany.id,
	                fields: ["id", "model", "num", "type"]
	            };
	            _this.veh_loader = new _api.xreq('vehicles_list', params, _this.onVehiclesLoaded);
	        };

	        this.onVehiclesLoaded = function (req) {
	            _this.veh_loader_stop();
	            if (req.res.err) return;
	            _this.veh_data = req.res;
	            _this.forceUpdate();
	        };

	        this.getVehicleList = function () {
	            if (_this.veh_data && (_this.veh_data.data || []).length) {
	                _this.veh_sel = [];
	                for (var i = 0, l = _this.veh_data.data.length; i < l; i++) {
	                    var o = _this.veh_data.data[i];
	                    if (o['type'] == 'lorry' || o['type'] == 'truck') {
	                        var type = o['type'] == 'lorry' ? 'Грузовик ' : 'Тягач ';
	                        var s = { id: o['id'], value: type + o['model'] + ', г/н: ' + o['num'] };
	                        // if (this.order_inp['veh'] == o['id']) s.__selected__ = true;
	                        _this.veh_sel.push(s);
	                    }
	                }
	            }
	            return _this.veh_sel;
	        };

	        this.drv_sel = [];

	        this.getDriversList = function () {
	            var drv_list = _Dashboard.AppState.myCompany.state.users || [];
	            _this.drv_sel = [];
	            for (var i = 0, l = drv_list.length; i < l; i++) {
	                var o = drv_list[i];
	                var s = { id: o['id'], value: o['first_name'] + ' ' + o['last_name'] };
	                // if (this.offer_inp['drv'] == o['id']) s.__selected__ = true;
	                _this.drv_sel.push(s);
	            }
	            return _this.drv_sel;
	        };

	        this.vis = function (b) {
	            return b ? {} : { display: 'none' };
	        };

	        this.refresh = function () {
	            var onlyOffers = arguments.length <= 0 || arguments[0] === undefined ? false : arguments[0];

	            _ClassesLogger.logger.log(_this, 'refresh');
	            if (!onlyOffers) {
	                _this.orders_data = null; // стираем загруженные данные заявок
	                _this.orderLoaderStop(); // прибиваем загрузчик заявок
	            }
	            _this.offers_data = null; // стираем загруженные данные предложений
	            _this.offersLoaderStop(); // прибиваем загрузчик предложений
	            _this.forceUpdate(); // передергиваем
	        };

	        this.orderLoaderStop = function () {
	            if (_this.orders_loader) {
	                _this.orders_loader.cancel();_this.orders_loader = null;
	            }
	        };

	        this.offersLoaderStop = function () {
	            if (_this.offers_loader) {
	                _this.offers_loader.cancel();_this.offers_loader = null;
	            }
	        };

	        this.orderManagerStop = function () {
	            if (_this.order_manager) {
	                _this.order_manager.cancel();_this.order_manager = null;
	            }
	        };

	        this.ordersLoaderHr = function (xr) {
	            _ClassesLogger.logger.log(_this, 'ordersLoaderHr');
	            _this.orderLoaderStop();
	            _this.orders_data = xr.res;
	            _this.forceUpdate();
	        };

	        this.orderingChangeHr = function (caller) {
	            // изменена сортировка
	            _ClassesLogger.logger.log(_this, 'orderingChangeHr');
	            _this.ordering_focus = caller.getSelectedList()[0].id;
	            _this.refresh();
	        };

	        this.orderFlowHr = function (e) {
	            // изменилось состояние заявки
	            _ClassesLogger.logger.log(_this, 'orderFlowHr');
	            //console.debug(e);  // {order_id: 32, state: "created", type: "order_flow"}
	            _this.refresh(); // todo: сделать что то блее умное чем передернуть все
	        };

	        this.orderOfferFlowHr = function (e) {
	            // изменилось состояние предложения к заявке
	            _ClassesLogger.logger.log(_this, 'orderOfferFlowHr');
	            console.debug(e); // {order_id: 24, offer_id: 7, type: "order_offer_flow"}
	            _this.refresh(); // todo: сделать что то блее умное чем передернуть все
	        };

	        this.templateClickHr = function (o) {
	            _ClassesLogger.logger.log(_this, 'templateClickHr');
	            _this.order_edit = o;
	            // this.order_copy = true;
	            _this.forceUpdate();
	        };

	        this.openClickHr = function (o) {
	            // клик по "разместить"
	            _ClassesLogger.logger.log(_this, 'openClickHr');
	            if (!confirm('Разместить ' + o['lpname'] + '?')) return;
	            if (_this.order_manager != null) return; // менеджер занят
	            _this.order_manager = new _api.xreq('order_state_flow', { order_id: o['id'], state: 'opened' }, _this.openXrHr); // открываем заявку
	        };

	        this.openXrHr = function (xr) {
	            _ClassesLogger.logger.log(_this, 'openXrHr');
	            _this.orderManagerStop(); // зачищаем размещатель
	            if ('err' in xr.res) return alert(JSON.stringify(xr.res)); // с ошибкой
	            if ('order_id' in xr.res == false) return _Dispatcher.Events.runError('api fail: order_id required in answer of order_state_flow request'); // api должен вернуть order_id
	            _Dispatcher.Events.runInfo('Заказ ' + xr.res['order_id'] + ' размещен');
	            //this.refresh();  // передергивать не обязательно, т.к. прийдет событие которое обновит сосоятние
	        };

	        this.editBeginHr = function (o) {
	            var type = arguments.length <= 1 || arguments[1] === undefined ? null : arguments[1];
	            // клик по "изменить"
	            _ClassesLogger.logger.log(_this, 'editBeginHr type= ' + type);
	            _this.order_edit = o;
	            _this.edit_type = type ? type : null;
	            _this.forceUpdate();
	        };

	        this.editCancelHr = function () {
	            _ClassesLogger.logger.log(_this, 'editCancelHr');
	            _this.order_edit = null;
	            // this.order_copy = false;
	            _this.edit_type = null;
	            _this.forceUpdate();
	        };

	        this.delClickHr = function (o) {
	            // клик по "удалить"
	            _ClassesLogger.logger.log(_this, 'delClickHr');
	            if (!confirm('Удалить ' + o['lpname'] + '?')) return;
	            if (_this.order_manager) return; // менеджер занят
	            _this.order_manager = new _api.xreq('order_manage', { action: 'delete', order_id: o['id'] }, _this.delXrHr); // удаляем заявку
	        };

	        this.delXrHr = function (xr) {
	            _ClassesLogger.logger.log(_this, 'delXrHr');
	            _this.orderManagerStop();
	            if ('err' in xr.res) return alert(JSON.stringify(xr.res)); // с ошибкой
	            if ('order_id' in xr.res == false) return _Dispatcher.Events.runError('api fail: order_id required in answer of order_manage request'); // api должен вернуть order_id
	            _Dispatcher.Events.runInfo('Заказ ' + xr.res['order_id'] + ' удален');
	            _this.refresh();
	        };

	        this.backClickHr = function (o) {
	            // клик по "снять с размещения"
	            _ClassesLogger.logger.log(_this, 'backClickHr');
	            if (!confirm('Снять с размещения ' + o['lpname'] + '?')) return;
	            if (_this.order_manager) return; // менеджер занят
	            _this.order_manager = new _api.xreq('order_state_flow', { order_id: o['id'], state: 'created' }, _this.backXrHr); // отменяем заявку
	        };

	        this.backXrHr = function (xr) {
	            _ClassesLogger.logger.log(_this, 'backXrHr');
	            _this.orderManagerStop();
	            if ('err' in xr.res) return alert(JSON.stringify(xr.res)); // с ошибкой
	            if ('order_id' in xr.res == false) return _Dispatcher.Events.runError('api fail: order_state_flow answ requreq order_id'); // api должен вернуть order_id
	            _Dispatcher.Events.runInfo('Заказ ' + xr.res['order_id'] + ' отменен');
	            //this.refresh();  // передергивать не обязательно, т.к. прийдет событие которое обновит сосоятние
	        };

	        this.orderCancleClickHr = function (o) {
	            _ClassesLogger.logger.log(_this, 'orderCancleClickHr');
	            _this.resetFocus();
	            _this.cancel_order = o;
	            _this.cancel_inp = {};
	            _this.forceUpdate();
	        };

	        this.orderCancelInpHr = function (o) {
	            for (var k in o) _this.cancel_inp[k] = o[k];
	        };

	        this.orderCancleConfirmHr = function (o) {
	            _ClassesLogger.logger.log(_this, 'orderCancleConfirmHr');
	            if (!confirm('Отменить заказ ' + o['id'] + '?')) return;
	            if (_this.order_manager) return; // менеджер занят
	            _this.order_manager = new _api.xreq('order_state_flow', { order_id: o['id'], state: 'canceled', reason: _this.cancel_inp['reason'] }, _this.cancelXrHr); // отменяем заявку
	        };

	        this.cancelXrHr = function (xr) {
	            _ClassesLogger.logger.log(_this, 'cancelXrHr');
	            _this.orderManagerStop();
	            if ('err' in xr.res) return alert(JSON.stringify(xr.res)); // с ошибкой
	            if ('order_id' in xr.res == false) return _Dispatcher.Events.runError('api fail: order_state_flow answ requreq order_id'); // api должен вернуть order_id
	            _Dispatcher.Events.runInfo('Заказ ' + xr.res['order_id'] + ' отменен');
	            //this.refresh();  // передергивать не обязательно, т.к. прийдет событие которое обновит сосоятние
	        };

	        this.orderMemoClickHr = function (o) {
	            _ClassesLogger.logger.log(_this, 'orderMemoClickHr');
	            _this.resetFocus();
	            _this.memo_order = o;
	            _this.memo_inp = {};
	            _this.forceUpdate();
	        };

	        this.orderMemoInpHr = function (o) {
	            for (var k in o) _this.memo_inp[k] = o[k];
	        };

	        this.orderMemoConfirmHr = function (o) {
	            _ClassesLogger.logger.log(_this, 'orderMemoConfirmHr');
	            if (_this.order_manager) return; // менеджер занят
	            _this.order_manager = new _api.xreq('order_memo', { order_id: o['id'], memo: _this.memo_inp['memo'] }, _this.memoXrHr); // делаем заметку
	        };

	        this.memoXrHr = function (xr) {
	            _ClassesLogger.logger.log(_this, 'memoXrHr');
	            _this.orderManagerStop();
	            if ('err' in xr.res) return alert(JSON.stringify(xr.res)); // с ошибкой
	            //if ('memo_id' in xr.res == false) return Events.runError('api fail: order_state_flow answ requreq order_id');
	            _Dispatcher.Events.runInfo('Заметка сделана');
	            _this.memo_order['memo'] = _this.memo_inp['memo']; // напрямую меняем заметку в данных
	            _this.memo_order = null; // забываем про фокус на заметке
	            _this.forceUpdate(); // тупо по-рекатовски перерисовываем тонну дом-а
	        };

	        this.offerClickHr = function (o) {
	            _ClassesLogger.logger.log(_this, 'offerClickHr');
	            _this.offer_obj = o;
	            _this.forceUpdate();
	        };

	        this.offerInpHr = function (o) {
	            for (var k in o) _this.offer_inp[k] = o[k];
	        };

	        this.offerCreateClickHr = function (o) {
	            // logger.log(this, 'offerCreateClickHr', this.offer_inp);

	            if (o == null) {
	                // отмена диалога создания предложения
	                _this.offer_obj = null;
	                _this.forceUpdate();
	                return;
	            }
	            if (_this.order_manager) return; // менеджер занят
	            _this.order_manager = new _api.xreq('order_offer_create', {
	                order_id: o['id'],
	                vehicle_id: _this.offer_inp['veh'],
	                driver_id: _this.offer_inp['drv'],
	                price: _this.offer_inp['bid']
	            }, _this.offerCreateXrHr); // отменяем заявку
	        };

	        this.offerCreateXrHr = function (xr) {
	            _ClassesLogger.logger.log(_this, 'offerCreateXrHr');
	            _this.orderManagerStop();
	            if ('err' in xr.res) return alert(JSON.stringify(xr.res)); // с ошибкой
	            _this.offer_obj = null;
	            _this.refresh(); // todo: сделать что то более умное чем просто передернуть всю фигню
	        };

	        this.offersListClickHr = function (o) {
	            _ClassesLogger.logger.log(_this, 'offersListClickHr');
	            _this.offersLoaderStop();
	            _this.offers_obj = o;
	            _this.refresh(true);
	        };

	        this.offersLoaderHr = function (xr) {
	            _ClassesLogger.logger.log(_this, 'offersLoaderHr');
	            _this.offersLoaderStop();
	            _this.offers_data = xr.res;
	            _this.forceUpdate();
	        };

	        this.orderOfferPriceInpHr = function (o) {
	            for (var k in o) _this.bid_inp[k] = o[k];
	        };

	        this.offerBidClickHr = function (offer_id, bid) {
	            _ClassesLogger.logger.log(_this, 'offerBidClickHr');
	            console.debug(offer_id, bid);
	            if (bid == null) bid = _this.bid_inp['price'];
	            if (_this.order_manager) return; // менеджер занят
	            _this.order_manager = new _api.xreq('order_offer_bid', {
	                offer_id: offer_id,
	                price: bid
	            }, _this.offerBidXrHr); // отменяем заявку
	        };

	        this.offerBidXrHr = function (xr) {
	            _ClassesLogger.logger.log(_this, 'offerBidXrHr');
	            _this.orderManagerStop();
	            if ('err' in xr.res) return alert(JSON.stringify(xr.res)); // с ошибкой
	            _this.offers_data = null; // todo: сделать что то более умное чем просто передернуть все предложения
	            _this.forceUpdate();
	        };

	        this.orderShippingClickHr = function (o) {
	            _ClassesLogger.logger.log(_this, 'orderShippingClickHr');
	            _this.resetFocus();
	            _this.shipping_order = o;
	            _this.forceUpdate();
	        };

	        this.orderShippingConfirmClickHr = function (o) {
	            _ClassesLogger.logger.log(_this, 'orderShippingConfirmClickHr');
	            _this.shipping_order = o;
	            if (o == null) return _this.forceUpdate();
	            if (_this.order_manager) return; // менеджер занят
	            if (!confirm('Перевести заказ ' + o['lpname'] + ' в состояние "перевозка" ?')) return;
	            var params = { order_id: o['id'], state: 'shipping' };
	            var d = _utils.Utils.deep(_this.refs, 'shipping_date.state.selected._d', null);
	            //if (d == null) return alert('date failed');
	            if (d != null) params['time'] = Math.floor(d.getTime() / 1000);
	            _this.order_manager = new _api.xreq('order_state_flow', params, _this.shippingXrHr); // переводим заявку в состояние "перевозка"
	        };

	        this.shippingXrHr = function (xr) {
	            _ClassesLogger.logger.log(_this, 'shippingXrHr');
	            _this.orderManagerStop();
	            if ('err' in xr.res) return alert(JSON.stringify(xr.res)); // с ошибкой
	            //this.refresh();  // передергивать не нужно, прийдет событие по которому эта заявка должна исчезнуть из списка
	        };

	        this.orderDoneClickHr = function (o) {
	            _ClassesLogger.logger.log(_this, 'orderDoneClickHr');
	            _this.done_order = o;
	            _this.forceUpdate();
	        };

	        this.orderDoneConfirmClickHr = function (o) {
	            _ClassesLogger.logger.log(_this, 'orderDoneConfirmClickHr');
	            _this.done_order = o;
	            if (o == null) return _this.forceUpdate();
	            if (_this.order_manager) return; // менеджер занят
	            if (!confirm('Заказ ' + o['lpname'] + ' доставлен ?')) return;
	            var params = { order_id: o['id'], state: 'done' };
	            var d = _utils.Utils.deep(_this.refs, 'done_date.state.selected._d', null);
	            //if (d == null) return alert('date failed');
	            if (d != null) params['time'] = Math.floor(d.getTime() / 1000);
	            _this.order_manager = new _api.xreq('order_state_flow', params, _this.doneXrHr); // переводим заявку в состояние "доставлено"
	        };

	        this.doneXrHr = function (xr) {
	            _ClassesLogger.logger.log(_this, 'doneXrHr');
	            _this.orderManagerStop();
	            if ('err' in xr.res) return alert(JSON.stringify(xr.res)); // с ошибкой
	            //this.refresh();  // передергивать не нужно, прийдет событие по которому эта заявка должна исчезнуть из списка
	        };

	        this.orderArhClickHr = function (o) {
	            _ClassesLogger.logger.log(_this, 'orderArhClickHr');
	            if (_this.order_manager) return; // менеджер занят
	            if (!confirm('Архивировать заказ ' + o['lpname'] + ' ?')) return;
	            _this.order_manager = new _api.xreq('order_archive', { order_id: o['id'] }, _this.arhXrHr); // архивируем заявку
	        };

	        this.arhXrHr = function (xr) {
	            _ClassesLogger.logger.log(_this, 'arhXrHr');
	            _this.orderManagerStop();
	            if ('err' in xr.res) return alert(JSON.stringify(xr.res)); // с ошибкой
	            _this.refresh(); // тут вместо перезагрузки можно просто выдернуть зявку из списка
	        };

	        this.orderExportClickHr = function (o) {
	            //logger.log(this, 'orderExportClickHr');
	            var xhr = new XMLHttpRequest();
	            xhr.open('GET', _api.Api.API_URI + '?cm=' + encodeURIComponent(_utils.Utils.o2j({ cm: 'order_export', sid: _api.Api.sid, order_id: o['id'] })), true);
	            xhr.responseType = 'blob';
	            xhr.onload = function () {
	                if (xhr.getResponseHeader('Content-Type').indexOf('application/json') != -1) {
	                    // ответпришел в json, скорее всего ошибка
	                    var r = new FileReader();
	                    r.onload = function () {
	                        alert(r.result.substr(0, 256)); // todo: сделать нормальный обработчик ошибок
	                    };
	                    return r.readAsText(xhr.response);
	                }
	                // иначе воспринимаем ответ как бинарь, отдаем его как приложенный файл
	                var a = document.createElement('a');
	                a.href = window.URL.createObjectURL(xhr.response);
	                a.download = 'order' + o['id'] + '.xlsx'; // или можно считать filename из хедеров ответа, но хз как это сделать
	                a.click();
	            };
	            xhr.send(null);
	            // todo: по-хорошему бы нужно сделать глушилку этого xhr при закрытии компонента, и не давать запускать новый при незавершенном предыдущем
	            // todo: можно переделать на новомодный fetch, он вроде умеет response.blob()
	        };

	        this.vtype2txt = function (v) {
	            switch (v) {
	                case 'tent':
	                    return 'тент';
	                case 'refrigerator':
	                    return 'рефрижератор';
	                case 'thermos':
	                    return 'термос';
	                case 'container':
	                    return 'контейнер';
	                case 'tank':
	                    return 'цистерна';
	                case 'closed':
	                    return 'закрытый';
	            }
	            return v;
	        };

	        this.ltype2txt = function (v) {
	            switch (v) {
	                case 'back':
	                    return 'задняя';
	                case 'side':
	                    return 'боковая';
	                case 'top':
	                    return 'верхняя';
	            }
	            return v;
	        };

	        this.resetFocus = function () {
	            _this.cancel_order = null;
	            _this.memo_order = null;
	            _this.shipping_order = null;
	            _this.done_order = null;
	        };
	    }

	    return OrdersList;
	})(React.Component);

	exports.OrdersList = OrdersList;
	// пережиток

	// текущая сортировка

	// загрузчик заявок (xreq)
	// хранилище загруженных заявок (object)

	// удалятель/открыватель/сниматель/... заявок (xreq)
	// редактируемая заявка (object)

	// order_copy     = false; // редактируемая заявка (boolean)
	// тип редактирования (string: copy|tmpl)

	// (object) заявка которая в фокусе предложения
	// (object) ввод предложения

	// заявка в фокусе просмотра предложений
	// загрузчик предложений (xreq)
	// хранилище загруженных предложений (object)

	// (object) фокус на отменяемой заявке
	// (object) хранилище для инпута причины отмены

	// (object) фокус на заявке которую перевозим в "перевозку"
	// (object) фокус на заявке которую перевозим в "доставлено"

	// (object) фокус на заявке для которой делается заметка
	// (object) хранилище для инпута заметки

	// (object) ввод торгов

	// Loading vehicles list once
	// api.xreq

	// загрузка списка

	// сортировка

	// события

	// шаблоны

	// размещение

	// редактирование, в случае копирования заказа или изменения шаблона передаем type = copy|tmpl

	// копирование
	// copyBeginHr=(o)=>{
	//     logger.log(this, 'copyBeginHr');
	//     this.order_copy = true;
	//     this.editBeginHr(o);
	// }

	// удаление

	// снятие

	// отмена

	// заметка

	// предложение

	// список предложений

	// торги

	// перевод в "перевозка"

	// доставлена

	// архивация

	// экспорт

	// локализация

	// reset

/***/ },
/* 588 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _OrdersList = __webpack_require__(587);

	var React = __webpack_require__(202);
	var Router = __webpack_require__(7);
	var RouteHandler = Router.RouteHandler;

	var OrderNew = (function (_React$Component) {
	    _inherits(OrderNew, _React$Component);

	    function OrderNew() {
	        _classCallCheck(this, OrderNew);

	        _get(Object.getPrototypeOf(OrderNew.prototype), 'constructor', this).apply(this, arguments);

	        this.render = function () {
	            return React.createElement(_OrdersList.OrdersList, { type: 'created' });
	        };
	    }

	    return OrderNew;
	})(React.Component);

	exports.OrderNew = OrderNew;

/***/ },
/* 589 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _OrdersList = __webpack_require__(587);

	var React = __webpack_require__(202);
	var Router = __webpack_require__(7);
	var RouteHandler = Router.RouteHandler;

	var OrderOpen = (function (_React$Component) {
	    _inherits(OrderOpen, _React$Component);

	    function OrderOpen() {
	        _classCallCheck(this, OrderOpen);

	        _get(Object.getPrototypeOf(OrderOpen.prototype), 'constructor', this).apply(this, arguments);

	        this.render = function () {
	            return React.createElement(_OrdersList.OrdersList, { type: 'opened' });
	        };
	    }

	    return OrderOpen;
	})(React.Component);

	exports.OrderOpen = OrderOpen;

/***/ },
/* 590 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _OrdersList = __webpack_require__(587);

	var React = __webpack_require__(202);
	var Router = __webpack_require__(7);
	var RouteHandler = Router.RouteHandler;

	var OrderClose = (function (_React$Component) {
	    _inherits(OrderClose, _React$Component);

	    function OrderClose() {
	        _classCallCheck(this, OrderClose);

	        _get(Object.getPrototypeOf(OrderClose.prototype), 'constructor', this).apply(this, arguments);

	        this.render = function () {
	            return React.createElement(_OrdersList.OrdersList, { type: 'closed' });
	        };
	    }

	    return OrderClose;
	})(React.Component);

	exports.OrderClose = OrderClose;

/***/ },
/* 591 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _OrdersList = __webpack_require__(587);

	var React = __webpack_require__(202);
	var Router = __webpack_require__(7);
	var RouteHandler = Router.RouteHandler;

	var OrderShip = (function (_React$Component) {
	    _inherits(OrderShip, _React$Component);

	    function OrderShip() {
	        _classCallCheck(this, OrderShip);

	        _get(Object.getPrototypeOf(OrderShip.prototype), 'constructor', this).apply(this, arguments);

	        this.render = function () {
	            return React.createElement(_OrdersList.OrdersList, { type: 'shipping' });
	        };
	    }

	    return OrderShip;
	})(React.Component);

	exports.OrderShip = OrderShip;

/***/ },
/* 592 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _OrdersList = __webpack_require__(587);

	var React = __webpack_require__(202);
	var Router = __webpack_require__(7);
	var RouteHandler = Router.RouteHandler;

	var OrderDone = (function (_React$Component) {
	    _inherits(OrderDone, _React$Component);

	    function OrderDone() {
	        _classCallCheck(this, OrderDone);

	        _get(Object.getPrototypeOf(OrderDone.prototype), 'constructor', this).apply(this, arguments);

	        this.render = function () {
	            return React.createElement(_OrdersList.OrdersList, { type: 'done' });
	        };
	    }

	    return OrderDone;
	})(React.Component);

	exports.OrderDone = OrderDone;

/***/ },
/* 593 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _OrdersList = __webpack_require__(587);

	var React = __webpack_require__(202);
	var Router = __webpack_require__(7);
	var RouteHandler = Router.RouteHandler;

	var OrderArh = (function (_React$Component) {
	    _inherits(OrderArh, _React$Component);

	    function OrderArh() {
	        _classCallCheck(this, OrderArh);

	        _get(Object.getPrototypeOf(OrderArh.prototype), 'constructor', this).apply(this, arguments);

	        this.render = function () {
	            return React.createElement(_OrdersList.OrdersList, { type: 'archive' });
	        };
	    }

	    return OrderArh;
	})(React.Component);

	exports.OrderArh = OrderArh;

/***/ },
/* 594 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _OrdersList = __webpack_require__(587);

	var React = __webpack_require__(202);
	var Router = __webpack_require__(7);
	var RouteHandler = Router.RouteHandler;

	var OrderCancel = (function (_React$Component) {
	    _inherits(OrderCancel, _React$Component);

	    function OrderCancel() {
	        _classCallCheck(this, OrderCancel);

	        _get(Object.getPrototypeOf(OrderCancel.prototype), 'constructor', this).apply(this, arguments);

	        this.render = function () {
	            return React.createElement(_OrdersList.OrdersList, { type: 'canceled' });
	        };
	    }

	    return OrderCancel;
	})(React.Component);

	exports.OrderCancel = OrderCancel;

/***/ },
/* 595 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	var update = __webpack_require__(243)(
		__webpack_require__(596)
	);
	// Hot Module Replacement
	if(false) {
		module.hot.accept("!!z:\\cargo\\node_modules\\style-loader\\index.js!z:\\cargo\\node_modules\\css-loader\\index.js!z:\\cargo\\node_modules\\sass-loader\\index.js!z:\\cargo\\client\\scss\\index.scss", function() {
			update(require("!!z:\\cargo\\node_modules\\style-loader\\index.js!z:\\cargo\\node_modules\\css-loader\\index.js!z:\\cargo\\node_modules\\sass-loader\\index.js!z:\\cargo\\client\\scss\\index.scss"));
		});
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 596 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	var update = __webpack_require__(243)(
		__webpack_require__(597)
	);
	// Hot Module Replacement
	if(false) {
		module.hot.accept("!!z:\\cargo\\node_modules\\css-loader\\index.js!z:\\cargo\\node_modules\\sass-loader\\index.js!z:\\cargo\\client\\scss\\index.scss", function() {
			update(require("!!z:\\cargo\\node_modules\\css-loader\\index.js!z:\\cargo\\node_modules\\sass-loader\\index.js!z:\\cargo\\client\\scss\\index.scss"));
		});
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 597 */
/***/ function(module, exports) {

	module.exports =
		"@import url(https://fonts.googleapis.com/css?family=Open+Sans:400,300,600,700&subset=latin,cyrillic-ext);" +
		"@charset \"UTF-8\";\n/* Vars & mixins */\n/* FlexBox */\n/* flex = flex-grow, flex-shrink, flex-basis: 0 1 auto by default */\n/* flex-direction = row by default */\n/* Grid Create */\n/* Borders and radius */\n/* Shadows, animation, transitions */\n/* Buttons */\n/* Core CSS */\n\nhtml {\n  box-sizing: border-box;\n  font-size: 16px; }\n\n*,\n*:before,\n*:after {\n  box-sizing: inherit;\n  margin: 0;\n  padding: 0; }\n\nhtml,\nbody {\n  height: 100%; }\n\nbody {\n  font-family: \"Open Sans\", sans-serif;\n  font-size: 0.875em;\n  font-weight: 400;\n  line-height: 1.125rem;\n  background-color: #f1f4f5;\n  color: #74848d; }\n\nh1, .h1,\nh2, .h2,\nh3, .h3 {\n  font-weight: 400;\n  color: #526069; }\n\nh1, .h1 {\n  font-size: 1.438rem;\n  margin-bottom: 1rem; }\n\nh2, .h2 {\n  font-size: 1.25rem;\n  margin-bottom: 1rem; }\n\nh3, .h3 {\n  font-size: 1.125rem;\n  margin-bottom: 1rem; }\n\np {\n  margin-top: 0;\n  margin-bottom: 1rem; }\n\na {\n  color: #62a8ea;\n  text-decoration: none; }\n  a:hover {\n    color: #1f83e1;\n    text-decoration: underline; }\n\ntextarea {\n  outline: none;\n  resize: none; }\n\n.container,\n.container-fluid {\n  margin-right: auto;\n  margin-left: auto; }\n\n.container {\n  max-width: 1140px; }\n\n.row {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n  -webkit-box-flex: 0 1 auto;\n  -moz-box-flex: 0 1 auto;\n  -webkit-flex: 0 1 auto;\n  -ms-flex: 0 1 auto;\n  flex: 0 1 auto;\n  -webkit-box-direction: normal;\n  -webkit-box-orient: horizontal;\n  -webkit-flex-direction: row;\n  -moz-flex-direction: row;\n  -ms-flex-direction: row;\n  flex-direction: row;\n  -webkit-flex-wrap: wrap;\n  -moz-flex-wrap: wrap;\n  -ms-flex-wrap: wrap;\n  flex-wrap: wrap; }\n  .row.row-nw {\n    -webkit-flex-wrap: nowrap;\n    -moz-flex-wrap: nowrap;\n    -ms-flex-wrap: nowrap;\n    flex-wrap: nowrap; }\n  .row.row-start {\n    -webkit-box-pack: flex-start;\n    -webkit-justify-content: flex-start;\n    -ms-flex-pack: flex-start;\n    justify-content: flex-start; }\n  .row.row-center {\n    -webkit-box-pack: center;\n    -webkit-justify-content: center;\n    -ms-flex-pack: center;\n    justify-content: center; }\n  .row.row-end {\n    -webkit-box-pack: flex-end;\n    -webkit-justify-content: flex-end;\n    -ms-flex-pack: flex-end;\n    justify-content: flex-end; }\n  .row.row-around {\n    -webkit-justify-content: space-around;\n    -ms-flex-pack: distribute;\n    justify-content: space-around; }\n  .row.row-between {\n    -webkit-justify-content: space-between;\n    -ms-flex-pack: justify;\n    -webkit-box-pack: justify;\n    justify-content: space-between; }\n  .row.row-no-padding > [class*=\"col\"] {\n    padding: 0; }\n  .row.row-space-children > :not(:first-child) {\n    margin-left: 20px; }\n  .row.row-space-children-xs > :not(:first-child) {\n    margin-left: 10px; }\n\n.row.reverse {\n  -webkit-box-direction: reverse;\n  -webkit-box-orient: horizontal;\n  -webkit-flex-direction: row-reverse;\n  -moz-flex-direction: row-reverse;\n  -ms-flex-direction: row-reverse;\n  flex-direction: row-reverse; }\n\n.col {\n  -webkit-box-direction: normal;\n  -webkit-box-orient: horizontal;\n  -webkit-flex-direction: row;\n  -moz-flex-direction: row;\n  -ms-flex-direction: row;\n  flex-direction: row; }\n\n.col-xs, .col-xs-1, .col-xs-2, .col-xs-3, .col-xs-4, .col-xs-5, .col-xs-6, .col-xs-7, .col-xs-8, .col-xs-9, .col-xs-10, .col-xs-11, .col-xs-12, .col-sm, .col-sm-1, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9, .col-sm-10, .col-sm-11, .col-sm-12, .col-md, .col-md-1, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-10, .col-md-11, .col-md-12, .col-lg, .col-lg-1, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9, .col-lg-10, .col-lg-11, .col-lg-12, .col-xl, .col-xl-1, .col-xl-2, .col-xl-3, .col-xl-4, .col-xl-5, .col-xl-6, .col-xl-7, .col-xl-8, .col-xl-9, .col-xl-10, .col-xl-11, .col-xl-12 {\n  -webkit-box-flex: 0 0 auto;\n  -moz-box-flex: 0 0 auto;\n  -webkit-flex: 0 0 auto;\n  -ms-flex: 0 0 auto;\n  flex: 0 0 auto;\n  -webkit-box-flex: 1;\n  -webkit-flex-grow: 1;\n  -ms-flex-positive: 1;\n  flex-grow: 1;\n  padding-left: 10px;\n  padding-right: 10px; }\n\n.col-first {\n  -webkit-box-ordinal-group: -1;\n  -moz-box-ordinal-group: -1;\n  -ms-flex-order: -1;\n  -webkit-order: -1;\n  order: -1; }\n\n.col-last {\n  -webkit-box-ordinal-group: 1;\n  -moz-box-ordinal-group: 1;\n  -ms-flex-order: 1;\n  -webkit-order: 1;\n  order: 1; }\n\n.col-xs-1 {\n  -webkit-flex-basis: 8.33333%;\n  -ms-flex-preferred-size: 8.33333%;\n  flex-basis: 8.33333%;\n  max-width: 8.33333%; }\n\n.col-xs-offset-1 {\n  margin-left: 8.33333%; }\n\n.col-xs-2 {\n  -webkit-flex-basis: 16.66667%;\n  -ms-flex-preferred-size: 16.66667%;\n  flex-basis: 16.66667%;\n  max-width: 16.66667%; }\n\n.col-xs-offset-2 {\n  margin-left: 16.66667%; }\n\n.col-xs-3 {\n  -webkit-flex-basis: 25%;\n  -ms-flex-preferred-size: 25%;\n  flex-basis: 25%;\n  max-width: 25%; }\n\n.col-xs-offset-3 {\n  margin-left: 25%; }\n\n.col-xs-4 {\n  -webkit-flex-basis: 33.33333%;\n  -ms-flex-preferred-size: 33.33333%;\n  flex-basis: 33.33333%;\n  max-width: 33.33333%; }\n\n.col-xs-offset-4 {\n  margin-left: 33.33333%; }\n\n.col-xs-5 {\n  -webkit-flex-basis: 41.66667%;\n  -ms-flex-preferred-size: 41.66667%;\n  flex-basis: 41.66667%;\n  max-width: 41.66667%; }\n\n.col-xs-offset-5 {\n  margin-left: 41.66667%; }\n\n.col-xs-6 {\n  -webkit-flex-basis: 50%;\n  -ms-flex-preferred-size: 50%;\n  flex-basis: 50%;\n  max-width: 50%; }\n\n.col-xs-offset-6 {\n  margin-left: 50%; }\n\n.col-xs-7 {\n  -webkit-flex-basis: 58.33333%;\n  -ms-flex-preferred-size: 58.33333%;\n  flex-basis: 58.33333%;\n  max-width: 58.33333%; }\n\n.col-xs-offset-7 {\n  margin-left: 58.33333%; }\n\n.col-xs-8 {\n  -webkit-flex-basis: 66.66667%;\n  -ms-flex-preferred-size: 66.66667%;\n  flex-basis: 66.66667%;\n  max-width: 66.66667%; }\n\n.col-xs-offset-8 {\n  margin-left: 66.66667%; }\n\n.col-xs-9 {\n  -webkit-flex-basis: 75%;\n  -ms-flex-preferred-size: 75%;\n  flex-basis: 75%;\n  max-width: 75%; }\n\n.col-xs-offset-9 {\n  margin-left: 75%; }\n\n.col-xs-10 {\n  -webkit-flex-basis: 83.33333%;\n  -ms-flex-preferred-size: 83.33333%;\n  flex-basis: 83.33333%;\n  max-width: 83.33333%; }\n\n.col-xs-offset-10 {\n  margin-left: 83.33333%; }\n\n.col-xs-11 {\n  -webkit-flex-basis: 91.66667%;\n  -ms-flex-preferred-size: 91.66667%;\n  flex-basis: 91.66667%;\n  max-width: 91.66667%; }\n\n.col-xs-offset-11 {\n  margin-left: 91.66667%; }\n\n.col-xs-12 {\n  -webkit-flex-basis: 100%;\n  -ms-flex-preferred-size: 100%;\n  flex-basis: 100%;\n  max-width: 100%; }\n\n.col-xs-offset-12 {\n  margin-left: 100%; }\n\n.middle-xs {\n  -webkit-box-align: center;\n  -webkit-align-items: center;\n  -ms-flex-align: center;\n  align-items: center; }\n\n@media (min-width: 34em) {\n  .col-sm-1 {\n    -webkit-flex-basis: 8.33333%;\n    -ms-flex-preferred-size: 8.33333%;\n    flex-basis: 8.33333%;\n    max-width: 8.33333%; }\n  .col-sm-offset-1 {\n    margin-left: 8.33333%; }\n  .col-sm-2 {\n    -webkit-flex-basis: 16.66667%;\n    -ms-flex-preferred-size: 16.66667%;\n    flex-basis: 16.66667%;\n    max-width: 16.66667%; }\n  .col-sm-offset-2 {\n    margin-left: 16.66667%; }\n  .col-sm-3 {\n    -webkit-flex-basis: 25%;\n    -ms-flex-preferred-size: 25%;\n    flex-basis: 25%;\n    max-width: 25%; }\n  .col-sm-offset-3 {\n    margin-left: 25%; }\n  .col-sm-4 {\n    -webkit-flex-basis: 33.33333%;\n    -ms-flex-preferred-size: 33.33333%;\n    flex-basis: 33.33333%;\n    max-width: 33.33333%; }\n  .col-sm-offset-4 {\n    margin-left: 33.33333%; }\n  .col-sm-5 {\n    -webkit-flex-basis: 41.66667%;\n    -ms-flex-preferred-size: 41.66667%;\n    flex-basis: 41.66667%;\n    max-width: 41.66667%; }\n  .col-sm-offset-5 {\n    margin-left: 41.66667%; }\n  .col-sm-6 {\n    -webkit-flex-basis: 50%;\n    -ms-flex-preferred-size: 50%;\n    flex-basis: 50%;\n    max-width: 50%; }\n  .col-sm-offset-6 {\n    margin-left: 50%; }\n  .col-sm-7 {\n    -webkit-flex-basis: 58.33333%;\n    -ms-flex-preferred-size: 58.33333%;\n    flex-basis: 58.33333%;\n    max-width: 58.33333%; }\n  .col-sm-offset-7 {\n    margin-left: 58.33333%; }\n  .col-sm-8 {\n    -webkit-flex-basis: 66.66667%;\n    -ms-flex-preferred-size: 66.66667%;\n    flex-basis: 66.66667%;\n    max-width: 66.66667%; }\n  .col-sm-offset-8 {\n    margin-left: 66.66667%; }\n  .col-sm-9 {\n    -webkit-flex-basis: 75%;\n    -ms-flex-preferred-size: 75%;\n    flex-basis: 75%;\n    max-width: 75%; }\n  .col-sm-offset-9 {\n    margin-left: 75%; }\n  .col-sm-10 {\n    -webkit-flex-basis: 83.33333%;\n    -ms-flex-preferred-size: 83.33333%;\n    flex-basis: 83.33333%;\n    max-width: 83.33333%; }\n  .col-sm-offset-10 {\n    margin-left: 83.33333%; }\n  .col-sm-11 {\n    -webkit-flex-basis: 91.66667%;\n    -ms-flex-preferred-size: 91.66667%;\n    flex-basis: 91.66667%;\n    max-width: 91.66667%; }\n  .col-sm-offset-11 {\n    margin-left: 91.66667%; }\n  .col-sm-12 {\n    -webkit-flex-basis: 100%;\n    -ms-flex-preferred-size: 100%;\n    flex-basis: 100%;\n    max-width: 100%; }\n  .col-sm-offset-12 {\n    margin-left: 100%; }\n  .middle-sm {\n    -webkit-box-align: center;\n    -webkit-align-items: center;\n    -ms-flex-align: center;\n    align-items: center; } }\n\n@media (min-width: 48em) {\n  .col-md-1 {\n    -webkit-flex-basis: 8.33333%;\n    -ms-flex-preferred-size: 8.33333%;\n    flex-basis: 8.33333%;\n    max-width: 8.33333%; }\n  .col-md-offset-1 {\n    margin-left: 8.33333%; }\n  .col-md-2 {\n    -webkit-flex-basis: 16.66667%;\n    -ms-flex-preferred-size: 16.66667%;\n    flex-basis: 16.66667%;\n    max-width: 16.66667%; }\n  .col-md-offset-2 {\n    margin-left: 16.66667%; }\n  .col-md-3 {\n    -webkit-flex-basis: 25%;\n    -ms-flex-preferred-size: 25%;\n    flex-basis: 25%;\n    max-width: 25%; }\n  .col-md-offset-3 {\n    margin-left: 25%; }\n  .col-md-4 {\n    -webkit-flex-basis: 33.33333%;\n    -ms-flex-preferred-size: 33.33333%;\n    flex-basis: 33.33333%;\n    max-width: 33.33333%; }\n  .col-md-offset-4 {\n    margin-left: 33.33333%; }\n  .col-md-5 {\n    -webkit-flex-basis: 41.66667%;\n    -ms-flex-preferred-size: 41.66667%;\n    flex-basis: 41.66667%;\n    max-width: 41.66667%; }\n  .col-md-offset-5 {\n    margin-left: 41.66667%; }\n  .col-md-6 {\n    -webkit-flex-basis: 50%;\n    -ms-flex-preferred-size: 50%;\n    flex-basis: 50%;\n    max-width: 50%; }\n  .col-md-offset-6 {\n    margin-left: 50%; }\n  .col-md-7 {\n    -webkit-flex-basis: 58.33333%;\n    -ms-flex-preferred-size: 58.33333%;\n    flex-basis: 58.33333%;\n    max-width: 58.33333%; }\n  .col-md-offset-7 {\n    margin-left: 58.33333%; }\n  .col-md-8 {\n    -webkit-flex-basis: 66.66667%;\n    -ms-flex-preferred-size: 66.66667%;\n    flex-basis: 66.66667%;\n    max-width: 66.66667%; }\n  .col-md-offset-8 {\n    margin-left: 66.66667%; }\n  .col-md-9 {\n    -webkit-flex-basis: 75%;\n    -ms-flex-preferred-size: 75%;\n    flex-basis: 75%;\n    max-width: 75%; }\n  .col-md-offset-9 {\n    margin-left: 75%; }\n  .col-md-10 {\n    -webkit-flex-basis: 83.33333%;\n    -ms-flex-preferred-size: 83.33333%;\n    flex-basis: 83.33333%;\n    max-width: 83.33333%; }\n  .col-md-offset-10 {\n    margin-left: 83.33333%; }\n  .col-md-11 {\n    -webkit-flex-basis: 91.66667%;\n    -ms-flex-preferred-size: 91.66667%;\n    flex-basis: 91.66667%;\n    max-width: 91.66667%; }\n  .col-md-offset-11 {\n    margin-left: 91.66667%; }\n  .col-md-12 {\n    -webkit-flex-basis: 100%;\n    -ms-flex-preferred-size: 100%;\n    flex-basis: 100%;\n    max-width: 100%; }\n  .col-md-offset-12 {\n    margin-left: 100%; }\n  .middle-md {\n    -webkit-box-align: center;\n    -webkit-align-items: center;\n    -ms-flex-align: center;\n    align-items: center; } }\n\n@media (min-width: 62em) {\n  .col-lg-1 {\n    -webkit-flex-basis: 8.33333%;\n    -ms-flex-preferred-size: 8.33333%;\n    flex-basis: 8.33333%;\n    max-width: 8.33333%; }\n  .col-lg-offset-1 {\n    margin-left: 8.33333%; }\n  .col-lg-2 {\n    -webkit-flex-basis: 16.66667%;\n    -ms-flex-preferred-size: 16.66667%;\n    flex-basis: 16.66667%;\n    max-width: 16.66667%; }\n  .col-lg-offset-2 {\n    margin-left: 16.66667%; }\n  .col-lg-3 {\n    -webkit-flex-basis: 25%;\n    -ms-flex-preferred-size: 25%;\n    flex-basis: 25%;\n    max-width: 25%; }\n  .col-lg-offset-3 {\n    margin-left: 25%; }\n  .col-lg-4 {\n    -webkit-flex-basis: 33.33333%;\n    -ms-flex-preferred-size: 33.33333%;\n    flex-basis: 33.33333%;\n    max-width: 33.33333%; }\n  .col-lg-offset-4 {\n    margin-left: 33.33333%; }\n  .col-lg-5 {\n    -webkit-flex-basis: 41.66667%;\n    -ms-flex-preferred-size: 41.66667%;\n    flex-basis: 41.66667%;\n    max-width: 41.66667%; }\n  .col-lg-offset-5 {\n    margin-left: 41.66667%; }\n  .col-lg-6 {\n    -webkit-flex-basis: 50%;\n    -ms-flex-preferred-size: 50%;\n    flex-basis: 50%;\n    max-width: 50%; }\n  .col-lg-offset-6 {\n    margin-left: 50%; }\n  .col-lg-7 {\n    -webkit-flex-basis: 58.33333%;\n    -ms-flex-preferred-size: 58.33333%;\n    flex-basis: 58.33333%;\n    max-width: 58.33333%; }\n  .col-lg-offset-7 {\n    margin-left: 58.33333%; }\n  .col-lg-8 {\n    -webkit-flex-basis: 66.66667%;\n    -ms-flex-preferred-size: 66.66667%;\n    flex-basis: 66.66667%;\n    max-width: 66.66667%; }\n  .col-lg-offset-8 {\n    margin-left: 66.66667%; }\n  .col-lg-9 {\n    -webkit-flex-basis: 75%;\n    -ms-flex-preferred-size: 75%;\n    flex-basis: 75%;\n    max-width: 75%; }\n  .col-lg-offset-9 {\n    margin-left: 75%; }\n  .col-lg-10 {\n    -webkit-flex-basis: 83.33333%;\n    -ms-flex-preferred-size: 83.33333%;\n    flex-basis: 83.33333%;\n    max-width: 83.33333%; }\n  .col-lg-offset-10 {\n    margin-left: 83.33333%; }\n  .col-lg-11 {\n    -webkit-flex-basis: 91.66667%;\n    -ms-flex-preferred-size: 91.66667%;\n    flex-basis: 91.66667%;\n    max-width: 91.66667%; }\n  .col-lg-offset-11 {\n    margin-left: 91.66667%; }\n  .col-lg-12 {\n    -webkit-flex-basis: 100%;\n    -ms-flex-preferred-size: 100%;\n    flex-basis: 100%;\n    max-width: 100%; }\n  .col-lg-offset-12 {\n    margin-left: 100%; }\n  .middle-lg {\n    -webkit-box-align: center;\n    -webkit-align-items: center;\n    -ms-flex-align: center;\n    align-items: center; } }\n\n@media (min-width: 75em) {\n  .col-xl-1 {\n    -webkit-flex-basis: 8.33333%;\n    -ms-flex-preferred-size: 8.33333%;\n    flex-basis: 8.33333%;\n    max-width: 8.33333%; }\n  .col-xl-offset-1 {\n    margin-left: 8.33333%; }\n  .col-xl-2 {\n    -webkit-flex-basis: 16.66667%;\n    -ms-flex-preferred-size: 16.66667%;\n    flex-basis: 16.66667%;\n    max-width: 16.66667%; }\n  .col-xl-offset-2 {\n    margin-left: 16.66667%; }\n  .col-xl-3 {\n    -webkit-flex-basis: 25%;\n    -ms-flex-preferred-size: 25%;\n    flex-basis: 25%;\n    max-width: 25%; }\n  .col-xl-offset-3 {\n    margin-left: 25%; }\n  .col-xl-4 {\n    -webkit-flex-basis: 33.33333%;\n    -ms-flex-preferred-size: 33.33333%;\n    flex-basis: 33.33333%;\n    max-width: 33.33333%; }\n  .col-xl-offset-4 {\n    margin-left: 33.33333%; }\n  .col-xl-5 {\n    -webkit-flex-basis: 41.66667%;\n    -ms-flex-preferred-size: 41.66667%;\n    flex-basis: 41.66667%;\n    max-width: 41.66667%; }\n  .col-xl-offset-5 {\n    margin-left: 41.66667%; }\n  .col-xl-6 {\n    -webkit-flex-basis: 50%;\n    -ms-flex-preferred-size: 50%;\n    flex-basis: 50%;\n    max-width: 50%; }\n  .col-xl-offset-6 {\n    margin-left: 50%; }\n  .col-xl-7 {\n    -webkit-flex-basis: 58.33333%;\n    -ms-flex-preferred-size: 58.33333%;\n    flex-basis: 58.33333%;\n    max-width: 58.33333%; }\n  .col-xl-offset-7 {\n    margin-left: 58.33333%; }\n  .col-xl-8 {\n    -webkit-flex-basis: 66.66667%;\n    -ms-flex-preferred-size: 66.66667%;\n    flex-basis: 66.66667%;\n    max-width: 66.66667%; }\n  .col-xl-offset-8 {\n    margin-left: 66.66667%; }\n  .col-xl-9 {\n    -webkit-flex-basis: 75%;\n    -ms-flex-preferred-size: 75%;\n    flex-basis: 75%;\n    max-width: 75%; }\n  .col-xl-offset-9 {\n    margin-left: 75%; }\n  .col-xl-10 {\n    -webkit-flex-basis: 83.33333%;\n    -ms-flex-preferred-size: 83.33333%;\n    flex-basis: 83.33333%;\n    max-width: 83.33333%; }\n  .col-xl-offset-10 {\n    margin-left: 83.33333%; }\n  .col-xl-11 {\n    -webkit-flex-basis: 91.66667%;\n    -ms-flex-preferred-size: 91.66667%;\n    flex-basis: 91.66667%;\n    max-width: 91.66667%; }\n  .col-xl-offset-11 {\n    margin-left: 91.66667%; }\n  .col-xl-12 {\n    -webkit-flex-basis: 100%;\n    -ms-flex-preferred-size: 100%;\n    flex-basis: 100%;\n    max-width: 100%; }\n  .col-xl-offset-12 {\n    margin-left: 100%; }\n  .middle-xl {\n    -webkit-box-align: center;\n    -webkit-align-items: center;\n    -ms-flex-align: center;\n    align-items: center; } }\n\n.badge {\n  display: inline-block;\n  min-width: 10px;\n  padding: 3px 6px;\n  font-size: 12px;\n  color: #74848d;\n  line-height: 1;\n  vertical-align: middle;\n  text-align: center;\n  background-color: #e9eaeb;\n  border-radius: 10px;\n  margin-top: -2px; }\n\n.badge-danger {\n  background: #f96868;\n  color: #fff; }\n\n.badge-warning {\n  background: #f2a654;\n  color: #fff; }\n\n.badge-primary {\n  background: #62a8ea;\n  color: #fff; }\n\n.badge-success {\n  background: #42bf89;\n  color: #fff; }\n\n.label {\n  display: inline-block;\n  border-radius: 3px;\n  padding: 2px 5px;\n  font-size: 11px;\n  background: #e4eaec; }\n\n.label-primary {\n  background: #62a8ea;\n  color: #fff !important; }\n\n.well {\n  min-height: 20px;\n  padding: 20px;\n  background-color: #f3f6f7;\n  border: 1px solid #e4eaec;\n  font-size: 13px; }\n\n.well-small {\n  padding: 9px;\n  border-radius: 2px; }\n\n.well-large {\n  padding: 24px;\n  border-radius: 4px; }\n\n.box-cln-nw {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n  -webkit-flex-flow: column nowrap;\n  -moz-flex-flow: column nowrap;\n  -ms-flex-flow: column nowrap;\n  flex-flow: column nowrap; }\n\n.box-cln-wr {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n  -webkit-flex-flow: column wrap;\n  -moz-flex-flow: column wrap;\n  -ms-flex-flow: column wrap;\n  flex-flow: column wrap; }\n\n.box-row-nw {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n  -webkit-box-align: center;\n  -webkit-align-items: center;\n  -ms-flex-align: center;\n  align-items: center; }\n\n.box-row-wr {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n  -webkit-flex-flow: row wrap;\n  -moz-flex-flow: row wrap;\n  -ms-flex-flow: row wrap;\n  flex-flow: row wrap; }\n\n/* Paddings */\n.padd-left-xl {\n  padding-left: 15px; }\n\n.padd-right-xl {\n  padding-right: 15px; }\n\n.padd-top-xl {\n  padding-top: 15px; }\n\n.padd-bottom-xl {\n  padding-bottom: 15px; }\n\n.padd-left {\n  padding-left: 10px; }\n\n.padd-right {\n  padding-right: 10px; }\n\n.padd-top {\n  padding-top: 10px; }\n\n.padd-bottom {\n  padding-bottom: 10px; }\n\n.padd-left-s {\n  padding-left: 5px; }\n\n.padd-right-s {\n  padding-right: 5px; }\n\n.padd-top-s {\n  padding-top: 5px; }\n\n.padd-bottom-s {\n  padding-bottom: 5px; }\n\n.padd-left-xs {\n  padding-left: 2px; }\n\n.padd-right-xs {\n  padding-right: 2px; }\n\n.padd-top-xs {\n  padding-top: 2px; }\n\n.padd-bottom-xs {\n  padding-bottom: 2px; }\n\n/* Margins */\n.marg-left {\n  margin-left: 10px; }\n\n.marg-right {\n  margin-right: 10px; }\n\n.marg-top {\n  margin-top: 10px; }\n\n.marg-bottom {\n  margin-bottom: 10px; }\n\n.marg-left-s {\n  margin-left: 5px; }\n\n.marg-right-s {\n  margin-right: 5px; }\n\n.marg-top-s {\n  margin-top: 5px; }\n\n.marg-bottom-s {\n  margin-bottom: 5px; }\n\n.marg-left-xs {\n  margin-left: 2px; }\n\n.marg-right-xs {\n  margin-right: 2px; }\n\n.marg-top-xs {\n  margin-top: 2px; }\n\n.marg-bottom-xs {\n  margin-bottom: 2px; }\n\n.clearfix:before,\n.clearfix:after {\n  content: \" \";\n  display: table; }\n\n.clearfix:after {\n  clear: both; }\n\n.d_n, .hidden,\n[hidden] {\n  display: none !important; }\n\n.invisible {\n  visibility: hidden; }\n\n.text-left {\n  text-align: left; }\n\n.text-right {\n  text-align: right; }\n\n.text-center {\n  text-align: center; }\n\n.text-justify {\n  text-align: justify; }\n\n.text-nowrap {\n  white-space: nowrap; }\n\n.font-size-13 {\n  font-size: 13px; }\n\n.font-size-12 {\n  font-size: 12px; }\n\n.font-size-10 {\n  font-size: 10px; }\n\nmark,\n.mark {\n  color: #fff;\n  border-radius: 2px;\n  background-color: #f2a654;\n  padding: 1px 4px; }\n\ncode,\n.code {\n  border: 1px solid #bcd8f1;\n  padding: 1px 4px;\n  font-size: 95%;\n  color: #5683ad;\n  background-color: rgba(232, 241, 248, 0.1);\n  border-radius: 3px; }\n\n.pointer {\n  cursor: pointer; }\n\n.animated {\n  -webkit-animation-duration: 1s;\n  animation-duration: 1s;\n  -webkit-animation-fill-mode: both;\n  animation-fill-mode: both; }\n\n@-webkit-keyframes fadeInLeft {\n  from {\n    opacity: 0;\n    -webkit-transform: translate3d(-100%, 0, 0);\n    transform: translate3d(-100%, 0, 0); }\n  to {\n    opacity: 1;\n    -webkit-transform: none;\n    transform: none; } }\n\n@keyframes fadeInLeft {\n  from {\n    opacity: 0;\n    -webkit-transform: translate3d(-100%, 0, 0);\n    transform: translate3d(-100%, 0, 0); }\n  to {\n    opacity: 1;\n    -webkit-transform: none;\n    transform: none; } }\n\n.fadeInLeft {\n  -webkit-animation-name: fadeInLeft;\n  animation-name: fadeInLeft; }\n\n@-webkit-keyframes fadeInRight {\n  from {\n    opacity: 0;\n    -webkit-transform: translate3d(100%, 0, 0);\n    transform: translate3d(100%, 0, 0); }\n  to {\n    opacity: 1;\n    -webkit-transform: none;\n    transform: none; } }\n\n@keyframes fadeInRight {\n  from {\n    opacity: 0;\n    -webkit-transform: translate3d(100%, 0, 0);\n    transform: translate3d(100%, 0, 0); }\n  to {\n    opacity: 1;\n    -webkit-transform: none;\n    transform: none; } }\n\n.fadeInRight {\n  -webkit-animation-name: fadeInRight;\n  animation-name: fadeInRight; }\n\n@-webkit-keyframes fadeInUp {\n  from {\n    opacity: 0;\n    -webkit-transform: translate3d(0, 30%, 0);\n    transform: translate3d(0, 30%, 0); }\n  to {\n    opacity: 1;\n    -webkit-transform: none;\n    transform: none; } }\n\n@keyframes fadeInUp {\n  from {\n    opacity: 0;\n    -webkit-transform: translate3d(0, 30%, 0);\n    transform: translate3d(0, 30%, 0); }\n  to {\n    opacity: 1;\n    -webkit-transform: none;\n    transform: none; } }\n\n.fadeInUp {\n  -webkit-animation-name: fadeInUp;\n  animation-name: fadeInUp; }\n\n/* Vendor styles */\n.tether-element-attached-top .datepicker__triangle, .tether-element-attached-bottom .datepicker__triangle {\n  margin-left: -8px;\n  position: absolute; }\n\n.tether-element-attached-top .datepicker__triangle, .tether-element-attached-bottom .datepicker__triangle, .tether-element-attached-top .datepicker__triangle:before, .tether-element-attached-bottom .datepicker__triangle:before {\n  box-sizing: content-box;\n  position: absolute;\n  border: 8px solid transparent;\n  height: 0;\n  width: 1px; }\n\n.tether-element-attached-top .datepicker__triangle:before, .tether-element-attached-bottom .datepicker__triangle:before {\n  content: \"\";\n  z-index: -1;\n  border-width: 8px;\n  left: -8px;\n  border-bottom-color: #aeaeae; }\n\n.tether-element-attached-top .datepicker__triangle {\n  top: 0;\n  margin-top: -8px; }\n\n.tether-element-attached-top .datepicker__triangle, .tether-element-attached-top .datepicker__triangle:before {\n  border-top: none;\n  border-bottom-color: #f0f0f0; }\n\n.tether-element-attached-top .datepicker__triangle:before {\n  top: -1px;\n  border-bottom-color: #aeaeae; }\n\n.tether-element-attached-bottom .datepicker__triangle {\n  bottom: 0;\n  margin-bottom: -8px; }\n\n.tether-element-attached-bottom .datepicker__triangle, .tether-element-attached-bottom .datepicker__triangle:before {\n  border-bottom: none;\n  border-top-color: #fff; }\n\n.tether-element-attached-bottom .datepicker__triangle:before {\n  bottom: -1px;\n  border-top-color: #aeaeae; }\n\n.datepicker {\n  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  font-size: 11px;\n  background-color: #fff;\n  color: #000;\n  border: 1px solid #aeaeae;\n  border-radius: 4px;\n  display: inline-block;\n  position: relative; }\n\n.datepicker__container {\n  position: absolute;\n  display: inline-block;\n  z-index: 2147483647; }\n\n.datepicker__triangle {\n  position: absolute;\n  left: 50px; }\n\n.datepicker__header {\n  text-align: center;\n  background-color: #f0f0f0;\n  border-bottom: 1px solid #aeaeae;\n  border-top-left-radius: 4px;\n  border-top-right-radius: 4px;\n  padding-top: 8px;\n  position: relative; }\n\n.datepicker__current-month {\n  color: black;\n  font-weight: bold;\n  font-size: 13px; }\n\n.datepicker__navigation {\n  line-height: 24px;\n  text-align: center;\n  cursor: pointer;\n  position: absolute;\n  top: 10px;\n  width: 0;\n  border: 6px solid transparent; }\n\n.datepicker__navigation--previous {\n  left: 10px;\n  border-right-color: #ccc; }\n\n.datepicker__navigation--previous:hover {\n  border-right-color: #b3b3b3; }\n\n.datepicker__navigation--next {\n  right: 10px;\n  border-left-color: #ccc; }\n\n.datepicker__navigation--next:hover {\n  border-left-color: #b3b3b3; }\n\n.datepicker__week-day {\n  color: #ccc;\n  display: inline-block;\n  width: 28px;\n  line-height: 24px; }\n\n.datepicker__month {\n  margin: 5px;\n  text-align: center; }\n\n.datepicker__day {\n  color: #000;\n  display: inline-block;\n  width: 24px;\n  line-height: 24px;\n  text-align: center;\n  margin: 2px;\n  cursor: pointer; }\n\n.datepicker__day:hover {\n  border-radius: 4px;\n  background-color: #f0f0f0; }\n\n.datepicker__day--today {\n  font-weight: bold; }\n\n.datepicker__day--selected {\n  border-radius: 4px;\n  background-color: #216ba5;\n  color: #fff; }\n\n.datepicker__day--selected:hover {\n  background-color: #1d5d90; }\n\n.datepicker__day--disabled {\n  cursor: default;\n  color: #ccc; }\n\n.datepicker__day--disabled:hover {\n  background-color: transparent; }\n\n.datepicker__input-container {\n  position: relative; }\n\n.datepicker__input {\n  position: relative;\n  font-size: 13px;\n  border-radius: 4px;\n  box-shadow: inset 0 2px 2px #e9e9e9;\n  border: 1px solid #aeaeae;\n  line-height: 16px;\n  padding: 6px 10px 5px; }\n\n.datepicker__input:focus {\n  outline: none;\n  border-color: #aeaeae;\n  box-shadow: inset 0 2px 2px #e9e9e9, 0 0 10px 0 rgba(73, 107, 125, 0.3); }\n\n.datepicker__input:not(:valid) ~ .close-icon {\n  display: none; }\n\n.close-icon {\n  background-color: transparent;\n  border: 0;\n  cursor: pointer;\n  display: inline-block;\n  height: 0;\n  outline: 0;\n  padding: 0;\n  vertical-align: middle; }\n\n.close-icon:after {\n  background-color: #216ba5;\n  border-radius: 50%;\n  bottom: 0;\n  box-sizing: border-box;\n  color: white;\n  content: \"\\00d7\";\n  cursor: pointer;\n  display: block;\n  font-size: 12px;\n  font-weight: normal;\n  height: 16px;\n  line-height: .8;\n  margin: -8px auto 0;\n  padding: 2px;\n  position: absolute;\n  right: 7px;\n  text-align: center;\n  top: 50%;\n  width: 16px;\n  z-index: 1; }\n\n.datepicker__input {\n  -webkit-border-radius: 3px;\n  -moz-border-radius: 3px;\n  -ms-border-radius: 3px;\n  border-radius: 3px;\n  box-shadow: none;\n  border: 1px solid #e9eaeb; }\n\n.datepicker__input-container {\n  margin-top: 5px; }\n\n.datepicker__input:focus {\n  outline: none;\n  border-color: #62a8ea;\n  box-shadow: none; }\n\n.datepicker__day--today {\n  font-weight: 600;\n  border: 1px solid #62a8ea;\n  -webkit-border-radius: 3px;\n  -moz-border-radius: 3px;\n  -ms-border-radius: 3px;\n  border-radius: 3px; }\n\n/* Controls */\n.panel {\n  background: #fff;\n  border-radius: 3px; }\n  .panel__header {\n    padding: 14px 20px 0; }\n    .panel__header h1 {\n      margin-right: 2rem; }\n  .panel__actions [data-tooltip] {\n    display: inline-block; }\n    .panel__actions [data-tooltip] svg {\n      margin: 0 3px -15px; }\n  .panel__body {\n    padding: 10px 10px 30px 10px;\n    min-height: 250px; }\n\n.btn {\n  border-radius: 3px;\n  font-size: 0.813rem;\n  padding: 10px 20px;\n  color: #74848d;\n  background: #e4eaec;\n  cursor: pointer;\n  outline: none;\n  border: 0;\n  white-space: nowrap;\n  -webkit-transition: all 0.2s ease-in-out;\n  -moz-transition: all 0.2s ease-in-out;\n  -o-transition: all 0.2s ease-in-out;\n  transition: all 0.2s ease-in-out; }\n  .btn[disabled] {\n    background-color: #f3f7f9;\n    color: #a3afb7; }\n    .btn[disabled]:hover {\n      background-color: #f3f7f9;\n      color: #a3afb7; }\n    .btn[disabled]:active {\n      background-color: #f3f7f9;\n      color: #a3afb7; }\n\n.btn-small {\n  padding: 4px 8px; }\n\n.btn-primary {\n  background: #62a8ea;\n  color: #fff; }\n  .btn-primary:hover {\n    background: #78b4ed; }\n  .btn-primary:active {\n    background: #4c9ce7; }\n\n.btn-success {\n  background: #42bf89;\n  color: #fff; }\n  .btn-success:hover {\n    background: #55c595; }\n  .btn-success:active {\n    background: #3bad7c; }\n\n.btn-danger {\n  background: #f96868;\n  color: #fff; }\n  .btn-danger:hover {\n    background: #fa8181; }\n  .btn-danger:active {\n    background: #f84f4f; }\n\n.btn-warning {\n  background: #f2a654;\n  color: #fff; }\n  .btn-warning:hover {\n    background: #f4b26c; }\n  .btn-warning:active {\n    background: #f09a3c; }\n\n.btn-group {\n  position: relative; }\n  .btn-group:before,\n  .btn-group:after {\n    content: \" \";\n    display: table; }\n  .btn-group:after {\n    clear: both; }\n  .btn-group.btn-group-row {\n    display: inline-block; }\n  .btn-group > .btn {\n    float: left; }\n    .btn-group > .btn[data-state=active] {\n      background: #42bf89;\n      border-color: #42bf89;\n      color: #fff; }\n      .btn-group > .btn[data-state=active]:hover {\n        background: #55c595;\n        border-color: #55c595; }\n    .btn-group > .btn[data-state=disabled] {\n      color: #A5AFB5;\n      cursor: default; }\n  .btn-group .btn:last-child:not(:first-child) {\n    border-bottom-left-radius: 0;\n    border-top-left-radius: 0;\n    border-left: 0; }\n  .btn-group .btn:first-child:not(:last-child) {\n    border-bottom-right-radius: 0;\n    border-top-right-radius: 0;\n    border-right: 0; }\n  .btn-group .btn:not(:last-child):not(:first-child) {\n    border-radius: 0; }\n\n.nav-tabs {\n  border-bottom: 1px solid #e9eaeb; }\n  .nav-tabs:before,\n  .nav-tabs:after {\n    content: \" \";\n    display: table; }\n  .nav-tabs:after {\n    clear: both; }\n  .nav-tabs__item {\n    float: left;\n    list-style: none;\n    margin-right: 5px;\n    margin-bottom: -1px;\n    border-bottom: 2px solid transparent;\n    -webkit-transition: border-color 0.15s linear;\n    -moz-transition: border-color 0.15s linear;\n    -o-transition: border-color 0.15s linear;\n    transition: border-color 0.15s linear; }\n    .nav-tabs__item:hover {\n      border-color: #74848d; }\n    .nav-tabs__item[data-state=active] {\n      border-color: #62a8ea; }\n      .nav-tabs__item[data-state=active] a {\n        color: #62a8ea; }\n    .nav-tabs__item[data-state=disabled] a {\n      color: #74848d;\n      cursor: default; }\n    .nav-tabs__item a {\n      display: block;\n      padding: 14px 20px;\n      text-decoration: none;\n      color: #74848d;\n      cursor: pointer;\n      -webkit-transition: color 0.15s linear;\n      -moz-transition: color 0.15s linear;\n      -o-transition: color 0.15s linear;\n      transition: color 0.15s linear; }\n\n.nav-tabs--lower {\n  margin: -10px -10px 10px; }\n\n.loading {\n  position: relative;\n  min-height: 200px; }\n  .loading:after {\n    content: '';\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    margin: -15px 0 0 -15px;\n    height: 30px;\n    width: 30px;\n    border: 5px solid;\n    border-color: #62A8EA #9AC7F1 #BDDAF6 #E1EEFA;\n    border-radius: 50%;\n    -webkit-animation: preloader 0.8s infinite linear;\n    -moz-animation: preloader 0.8s infinite linear;\n    -o-animation: preloader 0.8s infinite linear;\n    animation: preloader 0.8s infinite linear; }\n\n@-webkit-keyframes preloader {\n  0% {\n    transform: rotate(0deg); }\n  100% {\n    transform: rotate(360deg); } }\n\n@keyframes preloader {\n  0% {\n    transform: rotate(0deg); }\n  100% {\n    transform: rotate(360deg); } }\n\n.modal-window {\n  position: fixed;\n  left: 0;\n  top: 0;\n  z-index: 10000;\n  height: 100%;\n  width: 100%;\n  overflow: auto;\n  background-color: rgba(38, 50, 56, 0.7);\n  visibility: hidden;\n  opacity: 0;\n  -webkit-transition: opacity 0.3s 0s, visibility 0s 0.3s;\n  -moz-transition: opacity 0.3s 0s, visibility 0s 0.3s;\n  -o-transition: opacity 0.3s 0s, visibility 0s 0.3s;\n  transition: opacity 0.3s 0s, visibility 0s 0.3s; }\n  .modal-window[data-visible=true] {\n    -webkit-transition: opacity 0.3s 0s, visibility 0s 0s;\n    -moz-transition: opacity 0.3s 0s, visibility 0s 0s;\n    -o-transition: opacity 0.3s 0s, visibility 0s 0s;\n    transition: opacity 0.3s 0s, visibility 0s 0s;\n    visibility: visible;\n    opacity: 1; }\n    .modal-window[data-visible=true] .modal-container {\n      -webkit-transform: translateY(0);\n      -moz-transform: translateY(0);\n      -ms-transform: translateY(0);\n      -o-transform: translateY(0);\n      transform: translateY(0); }\n\n.modal-container {\n  width: 90%;\n  max-width: 400px;\n  margin: 4em auto;\n  background: #fff;\n  border-radius: 3px;\n  -webkit-backface-visibility: hidden;\n  -webkit-box-shadow: 0 0 20px rgba(0, 0, 0, 0.2);\n  -moz-box-shadow: 0 0 20px rgba(0, 0, 0, 0.2);\n  -o-box-shadow: 0 0 20px rgba(0, 0, 0, 0.2);\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.2);\n  -webkit-transform: translateY(-40px);\n  -moz-transform: translateY(-40px);\n  -ms-transform: translateY(-40px);\n  -o-transform: translateY(-40px);\n  transform: translateY(-40px);\n  -webkit-transition-property: -webkit-transform;\n  -moz-transition-property: -moz-transform;\n  transition-property: transform;\n  -webkit-transition-duration: 0.3s;\n  -moz-transition-duration: 0.3s;\n  -o-transition-duration: 0.3s;\n  transition-duration: 0.3s; }\n  .modal-container__header, .modal-container__body {\n    padding: 20px 30px; }\n  .modal-container__header {\n    position: relative;\n    border-bottom: 1px solid #e9eaeb;\n    padding-right: 56px; }\n    .modal-container__header h3 {\n      margin-bottom: 0; }\n    .modal-container__header .icon {\n      position: absolute;\n      top: 20px;\n      right: 30px; }\n  .modal-container__info {\n    margin-top: 20px;\n    display: -webkit-box;\n    display: -moz-box;\n    display: -ms-flexbox;\n    display: -webkit-flex;\n    display: flex; }\n  .modal-container__footer {\n    padding-top: 20px;\n    text-align: right; }\n    .modal-container__footer > .btn {\n      margin-right: 0;\n      margin-left: 15px; }\n\n.icon {\n  cursor: pointer;\n  fill: #526069;\n  -webkit-transition: all linear 0.25s;\n  -moz-transition: all linear 0.25s;\n  -o-transition: all linear 0.25s;\n  transition: all linear 0.25s; }\n  .icon:hover {\n    fill: #62a8ea; }\n\n[data-tooltip] {\n  position: relative;\n  cursor: pointer; }\n  [data-tooltip]:hover:before,\n  [data-tooltip]:hover:after {\n    visibility: visible;\n    opacity: 1;\n    -webkit-transition: opacity 0.3s 0s, visibility 0s 0s;\n    -moz-transition: opacity 0.3s 0s, visibility 0s 0s;\n    -o-transition: opacity 0.3s 0s, visibility 0s 0s;\n    transition: opacity 0.3s 0s, visibility 0s 0s; }\n  [data-tooltip]:before,\n  [data-tooltip]:after {\n    content: '';\n    display: block;\n    position: absolute;\n    z-index: 990;\n    visibility: hidden;\n    opacity: 0;\n    -webkit-transition: opacity 0.3s 0s, visibility 0s 0.3s;\n    -moz-transition: opacity 0.3s 0s, visibility 0s 0.3s;\n    -o-transition: opacity 0.3s 0s, visibility 0s 0.3s;\n    transition: opacity 0.3s 0s, visibility 0s 0.3s; }\n  [data-tooltip]:before {\n    content: attr(data-tooltip);\n    position: absolute;\n    left: 50%;\n    bottom: 100%;\n    border-radius: 3px;\n    padding: 3px 12px;\n    text-align: center;\n    width: 130px;\n    margin-left: -65px;\n    background: #424242;\n    font-size: 0.688rem;\n    color: #fff; }\n  [data-tooltip]:after {\n    left: 50%;\n    bottom: 100%;\n    border: 5px solid transparent;\n    border-top: 5px solid #424242;\n    margin-left: -5px;\n    margin-bottom: -10px; }\n\n.table-box {\n  margin: 20px 0; }\n  .table-box__footer {\n    border-top: 1px solid #e4eaec;\n    padding-top: 8px;\n    padding-bottom: 8px; }\n\n.table {\n  width: 100%;\n  border-collapse: collapse;\n  border-spacing: 0; }\n  .table th, .table td {\n    padding: 8px;\n    line-height: 1.5rem;\n    vertical-align: top; }\n    .table th:first-child, .table td:first-child {\n      padding-left: 0; }\n    .table th:last-child, .table td:last-child {\n      padding-right: 0; }\n  .table tbody tr:last-child td {\n    border-bottom: 0; }\n  .table tbody tr[data-state=active] {\n    background-color: #e9f2fb;\n    /*border: 1px solid $brand-primary;*/ }\n    .table tbody tr[data-state=active] td {\n      /*border-top: 1px solid $brand-primary;*/\n      /*border-bottom: 1px solid $brand-primary;*/ }\n  .table tbody td {\n    border-bottom: 1px solid #e4eaec;\n    font-weight: 300; }\n  .table tr:hover {\n    background-color: #fafafa; }\n  .table thead th {\n    color: #526069;\n    font-weight: 400;\n    border-bottom: 1px solid #e4eaec; }\n\n.form-group {\n  position: relative;\n  padding: 5px 0 10px;\n  width: 100%; }\n  .form-group > label {\n    font-size: 0.857rem;\n    text-transform: uppercase;\n    font-weight: 600; }\n  .form-group .select {\n    margin: 6px 0 0 -8px;\n    min-width: 180px; }\n\n.select-form-control {\n  position: relative;\n  border-radius: 0;\n  border: 0;\n  background: #fff;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  background-position: right 50%;\n  background-repeat: no-repeat;\n  background-image: url('data:image/svg+xml; utf8, <svg height=\"26\" viewBox=\"0 0 24 24\" width=\"26\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"#526069\" d=\"M7 10l5 5 5-5z\"/></svg>'); }\n\n[disabled],\n[disabled=disabled] {\n  cursor: not-allowed; }\n\n.select-form-control,\n.form-control {\n  width: 100%;\n  padding: 10px 0;\n  border: 0;\n  font-size: 0.929rem;\n  font-weight: 300;\n  color: #74848d;\n  outline: none;\n  border-bottom: 1px solid #e4eaec;\n  -webkit-transition: all 0.2s ease-in-out;\n  -moz-transition: all 0.2s ease-in-out;\n  -o-transition: all 0.2s ease-in-out;\n  transition: all 0.2s ease-in-out; }\n  .select-form-control:focus,\n  .form-control:focus {\n    border-color: #62a8ea; }\n\n.checkbox-form-control {\n  position: relative;\n  padding: 10px 0 10px 30px;\n  font-size: 0.929rem; }\n  .checkbox-form-control input[type=checkbox] {\n    position: absolute;\n    left: 0;\n    top: 50%;\n    margin-top: -10px;\n    outline: none; }\n    .checkbox-form-control input[type=checkbox]:before,\n    .checkbox-form-control input[type=checkbox]:after {\n      content: '';\n      position: absolute;\n      display: inline-block;\n      left: 0;\n      top: 0;\n      border-radius: 3px;\n      width: 20px;\n      height: 20px; }\n    .checkbox-form-control input[type=checkbox]:before {\n      background: #fff;\n      border: 1px solid #e9eaeb; }\n    .checkbox-form-control input[type=checkbox]:after {\n      content: url('data:image/svg+xml; utf8, <svg fill=\"#fff\" height=\"18\" viewBox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"/></svg>');\n      background: #62a8ea;\n      text-align: center;\n      line-height: 30px;\n      opacity: 0;\n      -webkit-transition: all 0.2s ease-in-out;\n      -moz-transition: all 0.2s ease-in-out;\n      -o-transition: all 0.2s ease-in-out;\n      transition: all 0.2s ease-in-out; }\n    .checkbox-form-control input[type=checkbox]:checked:after {\n      opacity: 1; }\n\n.address-form-control {\n  position: relative; }\n  .address-form-control-list {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 30px;\n    z-index: 10;\n    border: 1px solid #e9eaeb;\n    border-radius: 3px;\n    margin-top: 10px; }\n    .address-form-control-list__item {\n      cursor: pointer;\n      padding: 10px;\n      background: #fff;\n      font-size: 13px;\n      -webkit-transition: background 0.2s ease-in-out;\n      -moz-transition: background 0.2s ease-in-out;\n      -o-transition: background 0.2s ease-in-out;\n      transition: background 0.2s ease-in-out; }\n      .address-form-control-list__item:hover {\n        background: #e4eaec; }\n\n.upload-form-control {\n  position: relative; }\n  .upload-form-control button {\n    position: absolute;\n    right: 0;\n    top: 5px;\n    border-radius: 3px;\n    padding: 4px 5px;\n    outline: none;\n    border: 0; }\n  .upload-form-control__btn-upload {\n    background: #62a8ea;\n    color: #fff; }\n    .upload-form-control__btn-upload:hover {\n      background: #78b4ed; }\n    .upload-form-control__btn-upload:active {\n      background: #4c9ce7; }\n  .upload-form-control__btn-reset {\n    background: #f96868;\n    color: #fff; }\n    .upload-form-control__btn-reset:hover {\n      background: #fa8181; }\n    .upload-form-control__btn-reset:active {\n      background: #f84f4f; }\n  .upload-form-control__input {\n    padding-right: 40px; }\n\n.input-upload {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n  -webkit-box-direction: normal;\n  -webkit-box-orient: horizontal;\n  -webkit-flex-direction: row;\n  -moz-flex-direction: row;\n  -ms-flex-direction: row;\n  flex-direction: row;\n  -webkit-box-pack: flex-end;\n  -webkit-justify-content: flex-end;\n  -ms-flex-pack: flex-end;\n  justify-content: flex-end;\n  -webkit-box-align: center;\n  -webkit-align-items: center;\n  -ms-flex-align: center;\n  align-items: center;\n  min-height: 31px; }\n  .input-upload__select-another {\n    display: -webkit-box;\n    display: -moz-box;\n    display: -ms-flexbox;\n    display: -webkit-flex;\n    display: flex;\n    -webkit-box-direction: normal;\n    -webkit-box-orient: horizontal;\n    -webkit-flex-direction: row;\n    -moz-flex-direction: row;\n    -ms-flex-direction: row;\n    flex-direction: row;\n    -webkit-box-pack: space-between;\n    -webkit-justify-content: space-between;\n    -ms-flex-pack: space-between;\n    justify-content: space-between;\n    -webkit-box-flex: 2;\n    -webkit-flex-grow: 2;\n    -ms-flex-positive: 2;\n    flex-grow: 2;\n    padding-left: 5px; }\n  .input-upload__uploading {\n    min-height: 31px;\n    text-align: left;\n    padding-top: 5px; }\n\n/* Адаптированные под новый дизайн старые Simple Components */\n/* InputSelect2 */\n.flex-greed {\n  -webkit-box-flex: 5;\n  -webkit-flex-grow: 5;\n  -ms-flex-positive: 5;\n  flex-grow: 5; }\n\n.select {\n  color: #62a8ea;\n  cursor: pointer;\n  font-size: 14px;\n  line-height: 24px;\n  vertical-align: middle;\n  text-align: right;\n  overflow: hidden;\n  /*width: 100%;*/\n  /*margin: 6px 0 0 -8px;*/ }\n\n.select-list {\n  position: absolute;\n  /*box-shadow: 0px 1px 6px rgba(0,0,0,.4);*/\n  -webkit-border-radius: 3px;\n  -moz-border-radius: 3px;\n  -ms-border-radius: 3px;\n  border-radius: 3px;\n  border: 1px solid #74848d;\n  max-height: 200px;\n  overflow-y: auto;\n  background-color: white;\n  padding: 0;\n  margin: 2px 0 0 0;\n  z-index: 2; }\n\n.select-item {\n  text-align: left;\n  padding: 2px 25px 2px 8px;\n  min-width: 120px;\n  border-bottom: 1px solid #e9eaeb;\n  color: #74848d; }\n  .select-item:hover {\n    background-color: #62a8ea;\n    color: #ffffff;\n    transition: all linear 0.25s; }\n\n.selected {\n  height: 24px;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 0 16px 0 8px;\n  /*  & p {\n    font-weight: 500;\n    transition: all linear 0.25s;\n  }*/ }\n  .selected:hover {\n    background-color: #e9eaeb;\n    color: #62a8ea;\n    transition: all linear 0.25s; }\n\n.selected-ms {\n  font-size: 14px;\n  padding: 0 8px;\n  margin: 0 5px 0 0; }\n  .selected-ms:hover {\n    background-color: #62a8ea;\n    color: #ffffff;\n    transition: all linear 0.25s;\n    -webkit-border-radius: 3px;\n    -moz-border-radius: 3px;\n    -ms-border-radius: 3px;\n    border-radius: 3px; }\n  .selected-ms p {\n    font-weight: 500;\n    transition: all linear 0.25s; }\n\n.label {\n  color: #62a8ea;\n  font-size: 12px;\n  font-weight: 500; }\n\n.selected-tags {\n  font-size: 14px; }\n\n/* InputAddress */\n.addressList {\n  position: absolute;\n  z-index: 200;\n  width: 338px;\n  /*margin-left: 114px;*/\n  cursor: pointer;\n  -webkit-border-radius: 3px;\n  -moz-border-radius: 3px;\n  -ms-border-radius: 3px;\n  border-radius: 3px;\n  border: 1px solid #74848d;\n  /*box-shadow: $lf-box-shadow-btn-normal;*/ }\n  .addressList > :nth-child(odd) {\n    background-color: #ffffff; }\n    .addressList > :nth-child(odd):hover {\n      background-color: #62a8ea;\n      color: #ffffff; }\n  .addressList > :nth-child(even) {\n    background-color: #ffffff; }\n    .addressList > :nth-child(even):hover {\n      background-color: #62a8ea;\n      color: #ffffff; }\n\n.addressListItem {\n  position: relative;\n  display: inline;\n  white-space: pre-wrap;\n  line-height: 1.5;\n  font-size: 13px;\n  padding: 8px;\n  border-bottom: 1px solid #e9eaeb; }\n  .addressListItem:hover {\n    transition: all linear 0.25s;\n    background-color: #62a8ea;\n    color: #ffffff; }\n\n.text-area {\n  font-size: 0.875em;\n  min-height: 40px;\n  min-width: 350px;\n  color: #74848d;\n  border: none; }\n\n.input-underline {\n  /*padding: 4px 0 8px 3px;*/\n  /*display: block;*/\n  /*width: 100%;*/\n  border: none;\n  border-bottom: 1px solid #e9eaeb;\n  cursor: text; }\n  .input-underline:focus {\n    outline: none;\n    transition: 0.15s cubic-bezier(0.8, 0, 1, 1) all; }\n\n/* временно для совместимости */\n.image-hint {\n  position: relative;\n  display: inline-block; }\n  .image-hint__box {\n    position: absolute;\n    padding: 5px;\n    background: rgba(38, 50, 56, 0.7);\n    border-radius: 3px;\n    width: 150px;\n    left: 50%;\n    margin-left: -75px;\n    bottom: 40px; }\n    .image-hint__box:before {\n      content: '';\n      position: absolute;\n      bottom: -20px;\n      left: 50%;\n      margin-left: -10px;\n      border: 10px solid transparent;\n      border-top: 10px solid rgba(38, 50, 56, 0.7); }\n    .image-hint__box img {\n      width: 100%; }\n\n/* Notifications: info, errors */\n.note {\n  position: fixed;\n  top: 10px;\n  left: 20px;\n  width: 290px;\n  z-index: 9000; }\n\n.notify {\n  margin-bottom: 10px; }\n  .notify__title {\n    font-weight: 600;\n    font-size: 0.875rem;\n    margin-bottom: 5px; }\n  .notify-error, .notify-info {\n    padding: 10px 20px;\n    border-radius: 3px;\n    color: #fff; }\n  .notify-error {\n    background-color: #f96868; }\n  .notify-info {\n    background-color: #62a8ea; }\n\n/* NotificationCenter for messages */\n.note-center {\n  margin: 0; }\n  .note-center--no-events {\n    padding: 0 0 20px 0;\n    font-size: 0.9em;\n    text-align: center; }\n\n.note-area {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n  -webkit-box-direction: normal;\n  -webkit-box-orient: vertical;\n  -webkit-flex-direction: column;\n  -moz-flex-direction: column;\n  -ms-flex-direction: column;\n  flex-direction: column;\n  z-index: 9100;\n  position: absolute;\n  right: -10px;\n  top: 55px;\n  width: 300px;\n  background-color: #fff;\n  -webkit-box-shadow: 0 0 20px rgba(0, 0, 0, 0.2);\n  -moz-box-shadow: 0 0 20px rgba(0, 0, 0, 0.2);\n  -o-box-shadow: 0 0 20px rgba(0, 0, 0, 0.2);\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.2);\n  padding: 10px 15px;\n  overflow: none; }\n  .note-area__container {\n    overflow-y: auto;\n    overflow-x: none;\n    max-height: 400px; }\n  .note-area__header {\n    padding: 0 0 12px 0;\n    margin-right: 10px;\n    display: -webkit-box;\n    display: -moz-box;\n    display: -ms-flexbox;\n    display: -webkit-flex;\n    display: flex;\n    -webkit-box-direction: normal;\n    -webkit-box-orient: horizontal;\n    -webkit-flex-direction: row;\n    -moz-flex-direction: row;\n    -ms-flex-direction: row;\n    flex-direction: row;\n    -webkit-box-pack: space-between;\n    -webkit-justify-content: space-between;\n    -ms-flex-pack: space-between;\n    justify-content: space-between; }\n    .note-area__header-clear-all, .note-area__header-close {\n      border-bottom: 1px dotted;\n      color: #62a8ea;\n      cursor: pointer;\n      font-size: 0.8em;\n      font-weight: 400; }\n    .note-area__header-clear-all {\n      color: #f96868; }\n    .note-area__header-close {\n      color: #62a8ea; }\n\n/* frame */\n.note-area::after {\n  content: '';\n  position: absolute;\n  right: 15px;\n  top: -20px;\n  border: 10px solid transparent;\n  border-bottom: 10px solid white;\n  top: -19px; }\n\n.note-area__message {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n  -webkit-box-pack: flex-start;\n  -webkit-justify-content: flex-start;\n  -ms-flex-pack: flex-start;\n  justify-content: flex-start;\n  font-size: 0.9em;\n  margin: 2px 10px 6px 0;\n  border-top: 1px solid #ddd;\n  padding: 10px 0 0 0; }\n  .note-area__message-action-close {\n    margin-right: 10px;\n    padding-top: 18px; }\n  .note-area__message-content {\n    display: -webkit-box;\n    display: -moz-box;\n    display: -ms-flexbox;\n    display: -webkit-flex;\n    display: flex;\n    -webkit-box-direction: normal;\n    -webkit-box-orient: vertical;\n    -webkit-flex-direction: column;\n    -moz-flex-direction: column;\n    -ms-flex-direction: column;\n    flex-direction: column; }\n  .note-area__message-title {\n    font-weight: 400;\n    color: #42bf89; }\n  .note-area__message-title-event {\n    font-weight: 400;\n    color: #f96868; }\n  .note-area__message-user {\n    font-size: 1em;\n    color: #62a8ea;\n    margin: 0;\n    padding: 0 0 4px 0; }\n    .note-area__message-user span {\n      border-bottom: 1px dotted;\n      cursor: pointer; }\n  .note-area__message-user-company {\n    font-size: 0.688rem;\n    color: #74848d; }\n  .note-area__message-body {\n    padding: 0 0 2px 0; }\n  .note-area__message-list, .note-area__message-descr {\n    padding: 6px 0 2px 0;\n    word-break: break-word; }\n    .note-area__message-list span, .note-area__message-descr span {\n      color: #000;\n      cursor: pointer; }\n\n.emoji {\n  padding: 0;\n  margin: 0 2px; }\n  .emoji-set {\n    padding: 0;\n    margin: 0 5px;\n    cursor: pointer; }\n\n.data-table__data {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n  overflow-y: auto; }\n\n.data-table__filter-header {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n  -webkit-box-direction: normal;\n  -webkit-box-orient: horizontal;\n  -webkit-flex-direction: row;\n  -moz-flex-direction: row;\n  -ms-flex-direction: row;\n  flex-direction: row;\n  -webkit-box-pack: space-between;\n  -webkit-justify-content: space-between;\n  -ms-flex-pack: space-between;\n  justify-content: space-between; }\n\n.data-table__filter-print {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n  -webkit-box-direction: normal;\n  -webkit-box-orient: horizontal;\n  -webkit-flex-direction: row;\n  -moz-flex-direction: row;\n  -ms-flex-direction: row;\n  flex-direction: row; }\n  .data-table__filter-print > div {\n    margin-left: 10px; }\n  .data-table__filter-print--title {\n    font-weight: 600; }\n\n.data-table__filter-toggle {\n  color: #62a8ea;\n  border-bottom: 1px dotted; }\n\n/* Components */\n.page {\n  position: relative;\n  min-height: 100%; }\n\n.page-main {\n  padding-left: 310px;\n  padding-top: 70px;\n  min-height: 100%; }\n  .page-main__header {\n    position: fixed;\n    top: 0;\n    left: 0;\n    z-index: 998;\n    width: 100%;\n    height: 70px;\n    background: #263238; }\n  .page-main__sidebar {\n    position: fixed;\n    top: 70px;\n    left: 0;\n    bottom: 0;\n    z-index: 998;\n    width: 310px;\n    background: #fff;\n    padding: 20px; }\n  .page-main__content {\n    width: 100%;\n    padding: 20px; }\n\n.page-login {\n  position: absolute;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  right: 0; }\n\n.page-main .header:before,\n.page-main .header:after {\n  content: \" \";\n  display: table; }\n\n.page-main .header:after {\n  clear: both; }\n\n.page-main .header__logo {\n  float: left;\n  width: 310px;\n  overflow: hidden; }\n  .page-main .header__logo img {\n    width: 100%; }\n\n.page-main .header__container {\n  padding-left: 310px; }\n\n.page-main .header-menu {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n  -webkit-box-direction: normal;\n  -webkit-box-orient: horizontal;\n  -webkit-flex-direction: row;\n  -moz-flex-direction: row;\n  -ms-flex-direction: row;\n  flex-direction: row;\n  list-style: none; }\n  .page-main .header-menu--mini-profile {\n    -webkit-box-direction: reverse;\n    -webkit-box-orient: horizontal;\n    -webkit-flex-direction: row-reverse;\n    -moz-flex-direction: row-reverse;\n    -ms-flex-direction: row-reverse;\n    flex-direction: row-reverse;\n    padding-right: 20px; }\n    .page-main .header-menu--mini-profile .header-menu__item a {\n      padding: 20px 5px; }\n    .page-main .header-menu--mini-profile .header-menu__item-photo {\n      position: relative;\n      padding: 15px 10px; }\n  .page-main .header-menu__item {\n    position: relative;\n    cursor: pointer;\n    background: #263238;\n    -webkit-transition: background 0.2s linear;\n    -moz-transition: background 0.2s linear;\n    -o-transition: background 0.2s linear;\n    transition: background 0.2s linear; }\n    .page-main .header-menu__item:hover {\n      background: #2a373e; }\n    .page-main .header-menu__item a {\n      display: block;\n      padding: 24px 20px;\n      text-decoration: none;\n      font-size: 1rem;\n      color: #74848d; }\n    .page-main .header-menu__item[data-state=active] > a {\n      color: #62a8ea; }\n\n.page-main .header-profile {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n  -webkit-box-direction: reverse;\n  -webkit-box-orient: horizontal;\n  -webkit-flex-direction: row-reverse;\n  -moz-flex-direction: row-reverse;\n  -ms-flex-direction: row-reverse;\n  flex-direction: row-reverse; }\n  .page-main .header-profile img {\n    width: 45px;\n    height: 45px;\n    border-radius: 100%;\n    overflow: hidden;\n    background: #e9eaeb; }\n\n.contact-center {\n  height: 100%;\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n  -webkit-box-direction: normal;\n  -webkit-box-orient: vertical;\n  -webkit-flex-direction: column;\n  -moz-flex-direction: column;\n  -ms-flex-direction: column;\n  flex-direction: column;\n  -webkit-flex-wrap: nowrap;\n  -moz-flex-wrap: nowrap;\n  -ms-flex-wrap: nowrap;\n  flex-wrap: nowrap;\n  -webkit-box-pack: flex-start;\n  -webkit-justify-content: flex-start;\n  -ms-flex-pack: flex-start;\n  justify-content: flex-start;\n  -webkit-align-content: flex-start;\n  -ms-flex-line-pack: flex-start;\n  align-content: flex-start; }\n  .contact-center .not_found {\n    text-align: center;\n    padding: 10px;\n    color: #74848d; }\n\n.contact-center__block {\n  height: 100%;\n  overflow-y: hidden;\n  -webkit-box-flex: 5;\n  -webkit-flex-grow: 5;\n  -ms-flex-positive: 5;\n  flex-grow: 5;\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n  -webkit-box-direction: normal;\n  -webkit-box-orient: vertical;\n  -webkit-flex-direction: column;\n  -moz-flex-direction: column;\n  -ms-flex-direction: column;\n  flex-direction: column;\n  -webkit-flex-wrap: nowrap;\n  -moz-flex-wrap: nowrap;\n  -ms-flex-wrap: nowrap;\n  flex-wrap: nowrap;\n  border-bottom: 1px solid #e9eaeb;\n  margin: 0 0 8px 0; }\n  .contact-center__block[data-state=collapse] {\n    -webkit-box-flex: 0 0 40px;\n    -moz-box-flex: 0 0 40px;\n    -webkit-flex: 0 0 40px;\n    -ms-flex: 0 0 40px;\n    flex: 0 0 40px;\n    height: initial;\n    overflow-y: hidden;\n    color: #74848d; }\n  .contact-center__block-header {\n    min-height: 40px;\n    /*padding: 3px 0;*/\n    display: -webkit-box;\n    display: -moz-box;\n    display: -ms-flexbox;\n    display: -webkit-flex;\n    display: flex;\n    -webkit-box-direction: normal;\n    -webkit-box-orient: horizontal;\n    -webkit-flex-direction: row;\n    -moz-flex-direction: row;\n    -ms-flex-direction: row;\n    flex-direction: row;\n    -webkit-flex-wrap: nowrap;\n    -moz-flex-wrap: nowrap;\n    -ms-flex-wrap: nowrap;\n    flex-wrap: nowrap;\n    -webkit-box-pack: space-between;\n    -webkit-justify-content: space-between;\n    -ms-flex-pack: space-between;\n    justify-content: space-between;\n    -webkit-align-content: stretch;\n    -ms-flex-line-pack: stretch;\n    align-content: stretch;\n    -webkit-box-align: baseline;\n    -webkit-align-items: baseline;\n    -ms-flex-align: baseline;\n    align-items: baseline; }\n    .contact-center__block-header span {\n      font-size: 1.125rem;\n      margin: 4px;\n      color: #42bf89; }\n  .contact-center__block-subheader {\n    min-height: 30px;\n    display: -webkit-box;\n    display: -moz-box;\n    display: -ms-flexbox;\n    display: -webkit-flex;\n    display: flex;\n    -webkit-box-direction: normal;\n    -webkit-box-orient: horizontal;\n    -webkit-flex-direction: row;\n    -moz-flex-direction: row;\n    -ms-flex-direction: row;\n    flex-direction: row;\n    -webkit-flex-wrap: nowrap;\n    -moz-flex-wrap: nowrap;\n    -ms-flex-wrap: nowrap;\n    flex-wrap: nowrap; }\n  .contact-center__block-content {\n    overflow-y: auto;\n    display: -webkit-box;\n    display: -moz-box;\n    display: -ms-flexbox;\n    display: -webkit-flex;\n    display: flex;\n    -webkit-box-direction: normal;\n    -webkit-box-orient: vertical;\n    -webkit-flex-direction: column;\n    -moz-flex-direction: column;\n    -ms-flex-direction: column;\n    flex-direction: column;\n    -webkit-flex-wrap: nowrap;\n    -moz-flex-wrap: nowrap;\n    -ms-flex-wrap: nowrap;\n    flex-wrap: nowrap; }\n\n.contact-center__tab {\n  text-align: center;\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n  -webkit-box-direction: normal;\n  -webkit-box-orient: horizontal;\n  -webkit-flex-direction: row;\n  -moz-flex-direction: row;\n  -ms-flex-direction: row;\n  flex-direction: row;\n  -webkit-flex-wrap: nowrap;\n  -moz-flex-wrap: nowrap;\n  -ms-flex-wrap: nowrap;\n  flex-wrap: nowrap;\n  -webkit-box-pack: space-between;\n  -webkit-justify-content: space-between;\n  -ms-flex-pack: space-between;\n  justify-content: space-between;\n  -webkit-align-content: stretch;\n  -ms-flex-line-pack: stretch;\n  align-content: stretch;\n  -webkit-box-align: center;\n  -webkit-align-items: center;\n  -ms-flex-align: center;\n  align-items: center;\n  -webkit-box-flex: 50;\n  -webkit-flex-grow: 50;\n  -ms-flex-positive: 50;\n  flex-grow: 50;\n  margin: 0;\n  padding: 0; }\n  .contact-center__tab-left, .contact-center__tab-right {\n    border-top: 1px solid #dfe1e0;\n    border-bottom: 1px solid #dfe1e0;\n    -webkit-box-flex: 1;\n    -webkit-flex-grow: 1;\n    -ms-flex-positive: 1;\n    flex-grow: 1;\n    padding: 5px; }\n  .contact-center__tab-left {\n    border-left: 1px solid #dfe1e0;\n    border-bottom-left-radius: 3px;\n    border-top-left-radius: 3px; }\n  .contact-center__tab-right {\n    border-right: 1px solid #dfe1e0;\n    border-bottom-right-radius: 3px;\n    border-top-right-radius: 3px; }\n  .contact-center__tab-left[data-state=active], .contact-center__tab-right[data-state=active] {\n    background-color: #42bf89;\n    color: #ffffff; }\n\n.contact-center__btn {\n  background-color: #42bf89;\n  color: #ffffff;\n  padding: 1px 5px;\n  font-size: 16px;\n  -webkit-border-radius: 2px;\n  -moz-border-radius: 2px;\n  -ms-border-radius: 2px;\n  border-radius: 2px;\n  margin: 4px 0 0 0;\n  line-height: 1em; }\n\n.contact-center__search {\n  -webkit-box-flex: 1;\n  -webkit-flex-grow: 1;\n  -ms-flex-positive: 1;\n  flex-grow: 1;\n  border: 1px solid #dfe1e0;\n  -webkit-border-radius: 3px;\n  -moz-border-radius: 3px;\n  -ms-border-radius: 3px;\n  border-radius: 3px;\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n  -webkit-box-direction: normal;\n  -webkit-box-orient: horizontal;\n  -webkit-flex-direction: row;\n  -moz-flex-direction: row;\n  -ms-flex-direction: row;\n  flex-direction: row;\n  -webkit-flex-wrap: nowrap;\n  -moz-flex-wrap: nowrap;\n  -ms-flex-wrap: nowrap;\n  flex-wrap: nowrap;\n  -webkit-box-align: center;\n  -webkit-align-items: center;\n  -ms-flex-align: center;\n  align-items: center;\n  -webkit-align-content: stretch;\n  -ms-flex-line-pack: stretch;\n  align-content: stretch;\n  -webkit-box-pack: flex-start;\n  -webkit-justify-content: flex-start;\n  -ms-flex-pack: flex-start;\n  justify-content: flex-start;\n  margin: 0 0 0 5px;\n  padding: 0 2px 0 5px; }\n  .contact-center__search-icon {\n    padding: 5px 0 0 1px; }\n  .contact-center__search input {\n    width: 85%;\n    margin-left: 5px;\n    border: none;\n    font-size: 0.688rem;\n    color: #74848d; }\n    .contact-center__search input:focus {\n      outline: none; }\n    .contact-center__search input:disabled {\n      border: none; }\n\n.contact-center__elem {\n  padding: 10px 15px 10px 0;\n  font-size: 14px;\n  border-bottom: 1px solid #e9eaeb;\n  margin: 2px 0px 0px 0;\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n  -webkit-box-direction: normal;\n  -webkit-box-orient: horizontal;\n  -webkit-flex-direction: row;\n  -moz-flex-direction: row;\n  -ms-flex-direction: row;\n  flex-direction: row;\n  -webkit-flex-wrap: nowrap;\n  -moz-flex-wrap: nowrap;\n  -ms-flex-wrap: nowrap;\n  flex-wrap: nowrap;\n  -webkit-box-pack: space-between;\n  -webkit-justify-content: space-between;\n  -ms-flex-pack: space-between;\n  justify-content: space-between;\n  -webkit-box-flex: 1 0 auto;\n  -moz-box-flex: 1 0 auto;\n  -webkit-flex: 1 0 auto;\n  -ms-flex: 1 0 auto;\n  flex: 1 0 auto; }\n  .contact-center__elem-left {\n    display: -webkit-box;\n    display: -moz-box;\n    display: -ms-flexbox;\n    display: -webkit-flex;\n    display: flex;\n    -webkit-box-direction: normal;\n    -webkit-box-orient: vertical;\n    -webkit-flex-direction: column;\n    -moz-flex-direction: column;\n    -ms-flex-direction: column;\n    flex-direction: column; }\n  .contact-center__elem-right {\n    display: -webkit-box;\n    display: -moz-box;\n    display: -ms-flexbox;\n    display: -webkit-flex;\n    display: flex;\n    -webkit-box-direction: normal;\n    -webkit-box-orient: horizontal;\n    -webkit-flex-direction: row;\n    -moz-flex-direction: row;\n    -ms-flex-direction: row;\n    flex-direction: row;\n    -webkit-flex-wrap: nowrap;\n    -moz-flex-wrap: nowrap;\n    -ms-flex-wrap: nowrap;\n    flex-wrap: nowrap;\n    -webkit-box-align: center;\n    -webkit-align-items: center;\n    -ms-flex-align: center;\n    align-items: center; }\n\n.contact-center__user-credits {\n  color: #526069;\n  margin: 0 0 2px 0; }\n\n.contact-center__user-company {\n  font-size: 12px;\n  color: #74848d; }\n\n.contact-center__user-notInContact {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n  -webkit-box-pack: space-between;\n  -webkit-justify-content: space-between;\n  -ms-flex-pack: space-between;\n  justify-content: space-between;\n  font-size: 0.8em;\n  padding-top: 1px; }\n\n.contact-center__user-notInContact-text {\n  color: #f96868; }\n\n.contact-center__user-notInContact-action {\n  color: #42bf89;\n  border-bottom: 1px dotted;\n  cursor: pointer;\n  margin-left: 8px; }\n\n.contact-center__user-unreaded {\n  color: #42bf89; }\n\n.contact-center__user-status {\n  margin: 0 0 0 5px;\n  width: 10px;\n  height: 10px;\n  border-radius: 50%; }\n  .contact-center__user-status[data-state=offline] {\n    background-color: #e9eaeb; }\n  .contact-center__user-status[data-state=online] {\n    background-color: #42bf89 !important; }\n\n.contact-center__user-action {\n  margin-right: -5px; }\n\n.contact-center__channel-title {\n  color: #526069;\n  margin: 0 0 2px 0; }\n\n.contact-center__channel-users {\n  font-size: 12px;\n  color: #74848d; }\n\n.contact-center__channel-unreaded {\n  color: #42bf89; }\n\n.contact-center__channel-status {\n  margin: 0 0 0 5px;\n  width: 10px;\n  height: 10px;\n  border-radius: 50%; }\n  .contact-center__channel-status[data-state=invite] {\n    background-color: #f96868; }\n\n/* Channel and chat floating div */\n.channel-container {\n  position: fixed;\n  top: 70px;\n  left: 305px;\n  bottom: 20px;\n  z-index: 1000;\n  width: 500px;\n  background: #fff;\n  padding: 20px 0 20px 20px;\n  background: #fff;\n  -webkit-box-shadow: 0 1px 6px rgba(0, 0, 0, 0.25);\n  box-shadow: 0 1px 6px rgba(0, 0, 0, 0.25); }\n\n.channel {\n  height: 100%;\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n  -webkit-box-direction: normal;\n  -webkit-box-orient: vertical;\n  -webkit-flex-direction: column;\n  -moz-flex-direction: column;\n  -ms-flex-direction: column;\n  flex-direction: column;\n  -webkit-flex-wrap: nowrap;\n  -moz-flex-wrap: nowrap;\n  -ms-flex-wrap: nowrap;\n  flex-wrap: nowrap;\n  -webkit-box-pack: space-between;\n  -webkit-justify-content: space-between;\n  -ms-flex-pack: space-between;\n  justify-content: space-between; }\n\n.channel__preview {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n  -webkit-box-direction: normal;\n  -webkit-box-orient: vertical;\n  -webkit-flex-direction: column;\n  -moz-flex-direction: column;\n  -ms-flex-direction: column;\n  flex-direction: column;\n  -webkit-box-pack: flex-start;\n  -webkit-justify-content: flex-start;\n  -ms-flex-pack: flex-start;\n  justify-content: flex-start;\n  width: 100%; }\n  .channel__preview-actions {\n    text-align: right;\n    padding: 0 30px 25px 0; }\n  .channel__preview-not-found, .channel__preview-flags {\n    border: 1px solid #e9eaeb;\n    text-align: center;\n    margin: 0 30px 0 15px;\n    padding: 10px; }\n  .channel__preview-flags button {\n    margin: 10px; }\n\n.channel__header {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n  -webkit-box-direction: normal;\n  -webkit-box-orient: horizontal;\n  -webkit-flex-direction: row;\n  -moz-flex-direction: row;\n  -ms-flex-direction: row;\n  flex-direction: row;\n  -webkit-flex-wrap: nowrap;\n  -moz-flex-wrap: nowrap;\n  -ms-flex-wrap: nowrap;\n  flex-wrap: nowrap;\n  -webkit-box-pack: space-between;\n  -webkit-justify-content: space-between;\n  -ms-flex-pack: space-between;\n  justify-content: space-between;\n  -webkit-box-align: flex-start;\n  -webkit-align-items: flex-start;\n  -ms-flex-align: flex-start;\n  align-items: flex-start;\n  padding: 0 20px 0 0;\n  min-height: 50px; }\n  .channel__header-title {\n    font-size: 1.25rem;\n    color: #526069; }\n  .channel__header-actions, .channel__header-actions--admin {\n    display: -webkit-box;\n    display: -moz-box;\n    display: -ms-flexbox;\n    display: -webkit-flex;\n    display: flex;\n    -webkit-box-direction: normal;\n    -webkit-box-orient: horizontal;\n    -webkit-flex-direction: row;\n    -moz-flex-direction: row;\n    -ms-flex-direction: row;\n    flex-direction: row;\n    -webkit-flex-wrap: nowrap;\n    -moz-flex-wrap: nowrap;\n    -ms-flex-wrap: nowrap;\n    flex-wrap: nowrap;\n    -webkit-box-align: baseline;\n    -webkit-align-items: baseline;\n    -ms-flex-align: baseline;\n    align-items: baseline;\n    padding-top: 1px; }\n\n.channel__history {\n  width: 100%;\n  padding: 0 20px 0 0;\n  overflow-y: auto; }\n  .channel__history-alert {\n    position: absolute;\n    top: 60px;\n    left: 0;\n    width: 75%;\n    padding: 5px 20px;\n    background-color: #42bf89;\n    color: #fff;\n    z-index: 1100;\n    border-radius: 0 5px 5px 0; }\n    .channel__history-alert-action {\n      font-weight: 400;\n      cursor: pointer;\n      border-bottom: 1px dotted; }\n\n.channel__sendarea {\n  min-height: 50px;\n  margin: 15px 20px 0 0;\n  border: 1px solid #e9eaeb;\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n  -webkit-box-direction: normal;\n  -webkit-box-orient: horizontal;\n  -webkit-flex-direction: row;\n  -moz-flex-direction: row;\n  -ms-flex-direction: row;\n  flex-direction: row;\n  -webkit-flex-wrap: nowrap;\n  -moz-flex-wrap: nowrap;\n  -ms-flex-wrap: nowrap;\n  flex-wrap: nowrap;\n  -webkit-box-pack: space-between;\n  -webkit-justify-content: space-between;\n  -ms-flex-pack: space-between;\n  justify-content: space-between;\n  -webkit-box-align: stretch;\n  -webkit-align-items: stretch;\n  -ms-flex-align: stretch;\n  align-items: stretch; }\n  .channel__sendarea-actions {\n    width: 40px;\n    text-align: center;\n    background-color: #f8f8f8;\n    padding: 15px 0 0 0; }\n  .channel__sendarea-textarea {\n    padding: 5px;\n    width: 100%; }\n    .channel__sendarea-textarea textarea {\n      border: none;\n      width: 100%;\n      min-height: 40px;\n      font-family: \"Open Sans\", sans-serif;\n      font-size: 0.875em;\n      font-weight: 400;\n      color: #526069;\n      padding: 4px; }\n      .channel__sendarea-textarea textarea:focus {\n        outline: none; }\n  .channel__sendarea-emoji {\n    width: 50px;\n    text-align: center;\n    background-color: #f8f8f8;\n    padding: 15px 0 0 0; }\n  .channel__sendarea-emoji-open {\n    display: -webkit-box;\n    display: -moz-box;\n    display: -ms-flexbox;\n    display: -webkit-flex;\n    display: flex;\n    -webkit-box-direction: normal;\n    -webkit-box-orient: horizontal;\n    -webkit-flex-direction: row;\n    -moz-flex-direction: row;\n    -ms-flex-direction: row;\n    flex-direction: row;\n    border-radius: 3;\n    background: #fff;\n    -webkit-box-shadow: 0 1px 6px rgba(0, 0, 0, 0.25);\n    box-shadow: 0 1px 6px rgba(0, 0, 0, 0.25);\n    position: absolute;\n    bottom: 76px;\n    right: 20px;\n    max-width: 200px;\n    z-index: 1200;\n    border: 1px solid #74848d;\n    background-color: #fff;\n    border-radius: 3px;\n    padding: 10px; }\n  .channel__sendarea-emoji-open::before, .channel__sendarea-emoji-open::after {\n    content: '';\n    position: absolute;\n    right: 13px;\n    bottom: -20px;\n    border: 10px solid transparent;\n    border-top: 10px solid #526069; }\n  .channel__sendarea-emoji-open::after {\n    border-top: 10px solid white;\n    bottom: -19px; }\n\n/* Message */\n.message {\n  margin: 10px 0 20px 0;\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n  -webkit-box-direction: normal;\n  -webkit-box-orient: vertical;\n  -webkit-flex-direction: column;\n  -moz-flex-direction: column;\n  -ms-flex-direction: column;\n  flex-direction: column;\n  -webkit-flex-wrap: nowrap;\n  -moz-flex-wrap: nowrap;\n  -ms-flex-wrap: nowrap;\n  flex-wrap: nowrap;\n  -webkit-box-align: flex-start;\n  -webkit-align-items: flex-start;\n  -ms-flex-align: flex-start;\n  align-items: flex-start;\n  /* My message */\n  /* Unreaded */ }\n  .message__info {\n    display: -webkit-box;\n    display: -moz-box;\n    display: -ms-flexbox;\n    display: -webkit-flex;\n    display: flex;\n    -webkit-box-direction: normal;\n    -webkit-box-orient: horizontal;\n    -webkit-flex-direction: row;\n    -moz-flex-direction: row;\n    -ms-flex-direction: row;\n    flex-direction: row;\n    -webkit-flex-wrap: nowrap;\n    -moz-flex-wrap: nowrap;\n    -ms-flex-wrap: nowrap;\n    flex-wrap: nowrap;\n    -webkit-box-pack: space-between;\n    -webkit-justify-content: space-between;\n    -ms-flex-pack: space-between;\n    justify-content: space-between;\n    -webkit-box-align: center;\n    -webkit-align-items: center;\n    -ms-flex-align: center;\n    align-items: center;\n    width: 400px;\n    max-width: 400px; }\n  .message__user {\n    font-size: 0.875rem;\n    color: #526069;\n    margin: 5px 0 10px 0;\n    text-align: left;\n    -webkit-box-flex: 5;\n    -webkit-flex-grow: 5;\n    -ms-flex-positive: 5;\n    flex-grow: 5; }\n  .message__time {\n    padding: 0 0 0 10px; }\n  .message__body {\n    display: -webkit-box;\n    display: -moz-box;\n    display: -ms-flexbox;\n    display: -webkit-flex;\n    display: flex;\n    -webkit-box-direction: normal;\n    -webkit-box-orient: horizontal;\n    -webkit-flex-direction: row;\n    -moz-flex-direction: row;\n    -ms-flex-direction: row;\n    flex-direction: row;\n    -webkit-flex-wrap: nowrap;\n    -moz-flex-wrap: nowrap;\n    -ms-flex-wrap: nowrap;\n    flex-wrap: nowrap;\n    -webkit-box-align: center;\n    -webkit-align-items: center;\n    -ms-flex-align: center;\n    align-items: center; }\n  .message__body-action {\n    padding-right: 10px; }\n  .message__body-text {\n    position: relative;\n    background-color: #f8f8f8;\n    -webkit-border-radius: 6px;\n    -moz-border-radius: 6px;\n    -ms-border-radius: 6px;\n    border-radius: 6px;\n    padding: 10px 20px;\n    word-wrap: break-word;\n    width: 400px;\n    max-width: 400px; }\n    .message__body-text:before {\n      content: '';\n      position: absolute;\n      top: -16px;\n      left: 15px;\n      border: 8px solid transparent;\n      border-bottom: 8px solid #f8f8f8; }\n  .message__date {\n    text-align: center;\n    font-style: italic;\n    font-size: 12px; }\n    .message__date:before, .message__date:after {\n      content: '';\n      border-bottom: 1px solid #62a8ea;\n      display: inline-block;\n      width: 100px;\n      position: relative; }\n    .message__date:before, .message__date:after {\n      top: -4px;\n      right: 10px; }\n    .message__date:after {\n      top: -4px;\n      left: 10px; }\n  .message[data-state=my] {\n    -webkit-box-align: flex-end;\n    -webkit-align-items: flex-end;\n    -ms-flex-align: flex-end;\n    align-items: flex-end; }\n    .message[data-state=my] .message__user {\n      -webkit-box-ordinal-group: 3;\n      -moz-box-ordinal-group: 3;\n      -ms-flex-order: 3;\n      -webkit-order: 3;\n      order: 3;\n      text-align: right; }\n    .message[data-state=my] .message__actions {\n      -webkit-box-ordinal-group: 2;\n      -moz-box-ordinal-group: 2;\n      -ms-flex-order: 2;\n      -webkit-order: 2;\n      order: 2; }\n    .message[data-state=my] .message__time {\n      padding: 0 10px 0 0;\n      -webkit-box-ordinal-group: 1;\n      -moz-box-ordinal-group: 1;\n      -ms-flex-order: 1;\n      -webkit-order: 1;\n      order: 1; }\n    .message[data-state=my] .message__body-text {\n      background-color: #e9f2fb;\n      text-align: right; }\n      .message[data-state=my] .message__body-text:before {\n        border-bottom-color: #e9f2fb;\n        left: auto;\n        right: 15px; }\n  .message[data-readed=false] .message__user {\n    color: #62a8ea; }\n  .message[data-readed=false] .message__body {\n    font-weight: 600; }\n\n.orders__form {\n  width: 60%;\n  margin-left: 10px;\n  min-width: 725px; }\n\n.orders-list {\n  margin: 0 0 0 10px; }\n  .orders-list__header {\n    margin-left: 10px;\n    display: -webkit-box;\n    display: -moz-box;\n    display: -ms-flexbox;\n    display: -webkit-flex;\n    display: flex;\n    -webkit-box-pack: space-between;\n    -webkit-justify-content: space-between;\n    -ms-flex-pack: space-between;\n    justify-content: space-between;\n    -webkit-box-align: baseline;\n    -webkit-align-items: baseline;\n    -ms-flex-align: baseline;\n    align-items: baseline; }\n  .orders-list__title {\n    font-size: 1.438rem; }\n  .orders-list__sort {\n    display: -webkit-box;\n    display: -moz-box;\n    display: -ms-flexbox;\n    display: -webkit-flex;\n    display: flex;\n    -webkit-box-align: center;\n    -webkit-align-items: center;\n    -ms-flex-align: center;\n    align-items: center;\n    -webkit-box-flex: 5;\n    -webkit-flex-grow: 5;\n    -ms-flex-positive: 5;\n    flex-grow: 5;\n    padding-left: 50px; }\n    .orders-list__sort > span {\n      padding-right: 10px; }\n  .orders-list > table td:first-child {\n    padding-left: 10px !important; }\n\n.orders-table__date {\n  font-size: 1.25rem;\n  padding-top: 24px !important; }\n\n.orders-table__s-title {\n  font-weight: 600;\n  white-space: nowrap; }\n  .orders-table__s-title > a {\n    font-weight: 300; }\n\n.orders-table__order-num {\n  font-size: 0.688rem;\n  font-weight: 300;\n  color: #74848d;\n  padding-right: 5px; }\n\n.orders-table__lp-name {\n  font-size: 1rem;\n  color: #62a8ea;\n  font-weight: 600; }\n\n.orders-table__address {\n  font-size: 1rem;\n  color: #526069;\n  padding-top: 2px; }\n\n.orders-table__cargo {\n  /*font-size: $font-size-h5;*/\n  /*padding-top: 2px;*/ }\n\n.orders-table__actions {\n  min-width: 250px; }\n\n.orders-table__actions-btn {\n  padding: 6px 0 10px 0;\n  white-space: nowrap; }\n  .orders-table__actions-btn > button {\n    margin-right: 10px; }\n\n.orders-table__actions-memo {\n  padding: 6px 0; }\n\n.orders-table__expeditor-price {\n  padding: 2px 0 0 0; }\n  .orders-table__expeditor-price-title {\n    color: #f2a654;\n    /*text-decoration: underline;*/ }\n  .orders-table__expeditor-price-accept {\n    padding: 4px 0; }\n  .orders-table__expeditor-price-value {\n    font-weight: 600;\n    padding-right: 8px;\n    color: #f2a654; }\n\n.orders-table__offer-price-input {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n  -webkit-flex-wrap: nowrap;\n  -moz-flex-wrap: nowrap;\n  -ms-flex-wrap: nowrap;\n  flex-wrap: nowrap;\n  -webkit-box-align: flex-end;\n  -webkit-align-items: flex-end;\n  -ms-flex-align: flex-end;\n  align-items: flex-end; }\n  .orders-table__offer-price-input > span {\n    padding-right: 4px; }\n  .orders-table__offer-price-input > input {\n    padding: 4px 0; }\n\n.orders-table__offer-price-set {\n  padding: 8px 0 0 0; }\n\n.orders-table__offer-show, .orders-table__offer-hide {\n  font-weight: 600;\n  cursor: pointer;\n  border-bottom: 1px dotted; }\n\n.orders-table__offer-show {\n  color: #62a8ea; }\n\n.orders-table__offer-hide {\n  color: #42bf89; }\n\n.orders-table__offers-td {\n  border: 1px solid #e9f2fb; }\n\n.orders-table__offers-list {\n  width: 100%;\n  padding-right: 10px;\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n  -webkit-box-pack: flex-end;\n  -webkit-justify-content: flex-end;\n  -ms-flex-pack: flex-end;\n  justify-content: flex-end; }\n  .orders-table__offers-list > table td {\n    padding: 6px 12px !important;\n    background-color: #fafafa; }\n\n.orders-table__my-price {\n  color: #42bf89; }\n  .orders-table__my-price-value {\n    color: #42bf89;\n    font-weight: 600;\n    padding-left: 5px; }\n\n.orders-popup-form {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n  -webkit-box-direction: normal;\n  -webkit-box-orient: vertical;\n  -webkit-flex-direction: column;\n  -moz-flex-direction: column;\n  -ms-flex-direction: column;\n  flex-direction: column;\n  border-radius: 3;\n  background: #fff;\n  -webkit-box-shadow: 0 1px 6px rgba(0, 0, 0, 0.25);\n  box-shadow: 0 1px 6px rgba(0, 0, 0, 0.25);\n  position: absolute;\n  right: 30px;\n  min-width: 350px;\n  z-index: 2000;\n  border: 1px solid #74848d;\n  background-color: #fff;\n  border-radius: 3px;\n  padding: 10px;\n  /*&[data-context=note] {\n        right: initial;\n        &::before, &::after {\n\t        right: 80%;\n\t    }\n    }\n\n    &[data-context=offer] {\n        &::before, &::after {\n\t        right: 50%;\n\t    }\n    }*/ }\n  .orders-popup-form::before, .orders-popup-form::after {\n    content: '';\n    position: absolute;\n    right: 50%;\n    top: -20px;\n    border: 10px solid transparent;\n    border-bottom: 10px solid #526069; }\n  .orders-popup-form::after {\n    border-bottom: 10px solid white;\n    top: -19px; }\n  .orders-popup-form__make-offer {\n    padding: 10px; }\n    .orders-popup-form__make-offer input {\n      padding: 4px 0; }\n  .orders-popup-form__caller {\n    margin: 5px 0 10px 0;\n    font-weight: 600;\n    color: #62a8ea;\n    white-space: nowrap; }\n\n#company-logo {\n  max-width: 100px;\n  max-height: 100px; }\n\n#company-logo-null {\n  width: 100px;\n  height: 100px;\n  background: #e9eaeb; }\n\n.company-logo-box {\n  display: inline-block; }\n  .company-logo-box > #company-logo,\n  .company-logo-box__edit > #company-logo {\n    width: 100px; }\n  .company-logo-box__edit {\n    position: relative;\n    cursor: pointer;\n    width: 100px;\n    height: 100px; }\n    .company-logo-box__edit:hover:before, .company-logo-box__edit:hover:after {\n      opacity: 1; }\n    .company-logo-box__edit:before, .company-logo-box__edit:after {\n      content: '';\n      position: absolute;\n      opacity: 0;\n      -webkit-transition: opacity 0.1s ease-in-out;\n      -moz-transition: opacity 0.1s ease-in-out;\n      -o-transition: opacity 0.1s ease-in-out;\n      transition: opacity 0.1s ease-in-out; }\n    .company-logo-box__edit:before {\n      left: 0;\n      bottom: 0;\n      right: 0;\n      top: 0;\n      background: rgba(0, 0, 0, 0.1); }\n    .company-logo-box__edit:after {\n      content: 'Изменить';\n      left: 0;\n      bottom: 0;\n      right: 0;\n      background: rgba(0, 0, 0, 0.6);\n      color: #fff;\n      text-align: center;\n      font-size: 12px; }\n\n.company-info__map {\n  overflow: hidden;\n  margin: -10px -10px 20px; }\n\n.company-info__contact {\n  padding-top: 20px; }\n\n.company-mini-card:before,\n.company-mini-card:after {\n  content: \" \";\n  display: table; }\n\n.company-mini-card:after {\n  clear: both; }\n\n.company-mini-card .company-logo-box {\n  float: left;\n  padding-right: 20px; }\n\n.company-info-contacts__item {\n  padding: 10px 0;\n  border-top: 1px solid #e9eaeb; }\n\n.links-search {\n  margin-top: 10px;\n  margin-bottom: 20px; }\n  .links-search__input {\n    padding: 15px 20px;\n    border: 1px solid #e4eaec;\n    border-radius: 3px;\n    font-size: 16px; }\n\n.company-card {\n  cursor: pointer;\n  padding: 20px;\n  border-radius: 3px;\n  margin: 10px 0;\n  border: 1px solid #e4eaec; }\n  .company-card:hover {\n    background: #FAFCFE; }\n  .company-card__header {\n    margin-bottom: 20px;\n    min-height: 57px; }\n  .company-card__tags {\n    margin: 10px 0;\n    min-height: 19px; }\n    .company-card__tags .label {\n      margin-right: 5px; }\n  .company-card__name {\n    font-size: 16px;\n    font-weight: 400; }\n  .company-card__addr {\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    font-size: 13px;\n    color: #A5AFB5; }\n\n.relation__new-link {\n  cursor: pointer;\n  padding: 5px 5px 5px 15px;\n  margin-bottom: 12px;\n  border-radius: 3px; }\n  .relation__new-link p {\n    margin: 0; }\n  .relation__new-link:hover {\n    background-color: #e9eaeb; }\n  .relation__new-link--selected {\n    background-color: #42bf89;\n    color: #ffffff; }\n    .relation__new-link--selected:hover {\n      background-color: #42bf89; }\n\n.login-box {\n  position: relative;\n  width: 100%;\n  max-width: 400px;\n  margin: 85px auto;\n  background: #fff;\n  -webkit-backface-visibility: hidden;\n  -webkit-box-shadow: 0 0 20px rgba(0, 0, 0, 0.2);\n  -moz-box-shadow: 0 0 20px rgba(0, 0, 0, 0.2);\n  -o-box-shadow: 0 0 20px rgba(0, 0, 0, 0.2);\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.2); }\n  .login-box__header {\n    padding: 20px 20px 10px; }\n    .login-box__header h1 {\n      margin-bottom: 0; }\n  .login-box__footer {\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: -30px;\n    text-align: center; }\n    .login-box__footer a {\n      color: #74848d;\n      opacity: 0.7; }\n  .login-box__form {\n    padding: 10px 20px 20px; }\n    .login-box__form .btn {\n      margin: 0; }\n  .login-box__social {\n    padding: 0 20px 20px; }\n    .login-box__social .btn {\n      margin: 0;\n      width: 50%; }\n  .login-box__pass {\n    padding-right: 100px; }\n  .login-box__forgot-pass {\n    position: absolute;\n    bottom: 18px;\n    right: 0;\n    border-radius: 3px;\n    padding: 2px 5px;\n    font-size: 12px;\n    background: #e4eaec;\n    color: #74848d; }\n  .login-box__info-msg,\n  .login-box__error-msg {\n    padding: 10px 20px;\n    font-size: 13px;\n    color: #fff; }\n  .login-box__info-msg {\n    background: #62a8ea; }\n  .login-box__error-msg {\n    background: #f96868; }\n  .login-box .btn-social-facebook {\n    background: #3b5998;\n    color: #fff; }\n    .login-box .btn-social-facebook:hover {\n      background: #4264aa; }\n    .login-box .btn-social-facebook:active {\n      background: #344e86; }\n  .login-box .btn-social-linkedin {\n    background: #0177b5;\n    color: #fff; }\n    .login-box .btn-social-linkedin:hover {\n      background: #0188ce; }\n    .login-box .btn-social-linkedin:active {\n      background: #01669c; }\n\n.profile-mini__photo {\n  width: 40px;\n  height: 40px;\n  background: #e9eaeb;\n  overflow: hidden;\n  border-radius: 50%;\n  cursor: pointer; }\n\n.profile-mini__drop {\n  position: absolute;\n  right: 0px;\n  top: 55px;\n  z-index: 10000;\n  width: 250px;\n  background-color: #fff;\n  text-align: right;\n  -webkit-box-shadow: 0 0 20px rgba(0, 0, 0, 0.2);\n  -moz-box-shadow: 0 0 20px rgba(0, 0, 0, 0.2);\n  -o-box-shadow: 0 0 20px rgba(0, 0, 0, 0.2);\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.2); }\n  .profile-mini__drop:before {\n    content: '';\n    position: absolute;\n    right: 20px;\n    top: -20px;\n    border: 10px solid transparent;\n    border-bottom: 10px solid white; }\n  .profile-mini__drop-name,\n  .profile-mini__drop-info {\n    padding: 10px 15px;\n    border-bottom: 1px solid #e9eaeb; }\n  .profile-mini__drop-name {\n    font-size: 16px;\n    color: #526069; }\n    .profile-mini__drop-name p {\n      font-size: 14px;\n      color: #74848d;\n      margin-bottom: 0; }\n  .profile-mini__drop-footer {\n    padding: 10px 15px; }\n\n.social-account__facebook,\n.social-account__linkedin {\n  padding: 10px 20px; }\n\n.social-account__info {\n  padding: 10px 20px; }\n\n.social-account__facebook {\n  background: #4A6DA7; }\n  .social-account__facebook svg {\n    fill: #fff; }\n\n.social-account__linkedin {\n  background: #0077B5; }\n  .social-account__linkedin svg {\n    fill: #fff; }\n\n.icon-dark {\n  cursor: pointer;\n  fill: #74848d; }\n  .icon-dark:hover {\n    fill: #62a8ea;\n    transition: all linear 0.25s;\n    background-color: transparent; }\n  .icon-dark:active {\n    fill: #e9eaeb;\n    transition: all linear 0.25s; }\n\n.price-requests__bets-list {\n  width: 100%;\n  padding: 0 20px 10px 40px; }\n\n.PriceRequests {\n  /* Search Form */\n  /* Search Form Result Header */\n  /* Buttons */\n  /* PriceRequests__Card */ }\n  .PriceRequests__SearchForm {\n    padding: 0 20px 15px 25px; }\n    .PriceRequests__SearchForm_InputAddress {\n      width: 352px; }\n    .PriceRequests__SearchForm_InputAddress textarea {\n      min-height: inherit;\n      margin-right: 56px; }\n    .PriceRequests__SearchForm_InputTextLabel {\n      width: 60px; }\n    .PriceRequests__SearchForm_InputText {\n      width: 60px;\n      margin-right: 56px; }\n    .PriceRequests__SearchForm_InputDateLabel {\n      width: 110px; }\n    .PriceRequests__SearchForm_NotFound {\n      padding: 10px 25px; }\n  .PriceRequests__SearchForm_Result {\n    padding: 15px 0; }\n    .PriceRequests__SearchForm_Result_Label {\n      padding-left: 25px; }\n    .PriceRequests__SearchForm_Result_Value, .PriceRequests__SearchForm_Result_Value span {\n      font-size: 15px;\n      font-weight: 400;\n      color: #62a8ea;\n      padding-left: 10px; }\n  .PriceRequests__Button_CreateNew {\n    padding-left: 40px;\n    margin-bottom: 4px; }\n  .PriceRequests__Card {\n    padding: 0 0 15px 0;\n    /*        &_bet {\n            background-color: $brand-success;\n            color: #fff;\n            border-radius: 3px;\n            padding: 2px 5px;\n            margin-right: 8px;\n        }*/ }\n    .PriceRequests__Card_bets, .PriceRequests__Card_bets_zero {\n      margin: 2px 0;\n      width: 20px;\n      height: 20px;\n      border-radius: 100%;\n      display: inline-flex;\n      -webkit-box-align: center;\n      -webkit-align-items: center;\n      -ms-flex-align: center;\n      align-items: center;\n      -webkit-box-pack: center;\n      -webkit-justify-content: center;\n      -ms-flex-pack: center;\n      justify-content: center; }\n    .PriceRequests__Card_bets {\n      background-color: #62a8ea;\n      color: #fff; }\n    .PriceRequests__Card_bets_zero {\n      background-color: rgba(197, 202, 233, 0.4);\n      color: #000; }\n    .PriceRequests__Card_header {\n      padding: 12px 0; }\n    .PriceRequests__Card_title {\n      padding-left: 15px; }\n    .PriceRequests__Card_title span {\n      font-size: 16px;\n      font-weight: 400;\n      color: #62a8ea; }\n    .PriceRequests__Card_actions {\n      display: -webkit-box;\n      display: -moz-box;\n      display: -ms-flexbox;\n      display: -webkit-flex;\n      display: flex;\n      padding: 12px 0; }\n    .PriceRequests__Card_address {\n      padding: 0 0 15px 15px; }\n    .PriceRequests__Card_address-created {\n      padding: 0 0 15px 40px; }\n    .PriceRequests__Card_footer {\n      display: -webkit-box;\n      display: -moz-box;\n      display: -ms-flexbox;\n      display: -webkit-flex;\n      display: flex;\n      -webkit-box-align: center;\n      -webkit-align-items: center;\n      -ms-flex-align: center;\n      align-items: center;\n      padding: 0 0 4px 15px; }\n      .PriceRequests__Card_footer > span {\n        padding-left: 4px; }\n    .PriceRequests__Card_footer-created {\n      display: -webkit-box;\n      display: -moz-box;\n      display: -ms-flexbox;\n      display: -webkit-flex;\n      display: flex;\n      -webkit-box-align: center;\n      -webkit-align-items: center;\n      -ms-flex-align: center;\n      align-items: center;\n      padding: 0 0 4px 40px; }\n      .PriceRequests__Card_footer-created > span {\n        padding-left: 4px; }\n    .PriceRequests__Card_ctime {\n      font-size: 10px;\n      color: #333; }\n    .PriceRequests__Card_cargo, .PriceRequests__Card_cargo span {\n      font-weight: 400; }\n    .PriceRequests__Card_Button_CreateBet {\n      font-size: 13px !important;\n      padding: 1px 8px 0 0 !important; }\n    .PriceRequests__Card_bet {\n      color: #42bf89;\n      padding: 2px 5px;\n      margin-right: 8px;\n      font-weight: 600; }\n\n.PriceRequestsView__Card {\n  padding: 15px 20px; }\n  .PriceRequestsView__Card_badge {\n    margin: 2px 0;\n    width: 16px;\n    height: 16px;\n    border-radius: 100%;\n    display: inline-flex;\n    -webkit-box-align: center;\n    -webkit-align-items: center;\n    -ms-flex-align: center;\n    align-items: center;\n    -webkit-box-pack: center;\n    -webkit-justify-content: center;\n    -ms-flex-pack: center;\n    justify-content: center;\n    background-color: rgba(197, 202, 233, 0.4);\n    color: #000; }\n  .PriceRequestsView__Card_badge span {\n    font-size: 12px; }\n\n/* Landing Page */\n.landing-page {\n  /* Main block - Page block's */\n  /* Header - absolute - fixed */\n  /* Hero */\n  /* Hero */\n  /* For Whom */ }\n  .landing-page .container {\n    padding-left: 10px;\n    padding-right: 10px; }\n  .landing-page .page-full-screen {\n    display: -webkit-box;\n    display: -moz-box;\n    display: -ms-flexbox;\n    display: -webkit-flex;\n    display: flex;\n    position: relative;\n    min-height: 650px;\n    height: 100vh;\n    width: 100%;\n    padding-bottom: 150px; }\n  .landing-page .page-block {\n    padding: 100px 0;\n    background: #f1f4f5; }\n    .landing-page .page-block__title,\n    .landing-page .page-block__description {\n      max-width: 620px;\n      margin-left: auto;\n      margin-right: auto;\n      text-align: center;\n      padding: 0 20px; }\n    .landing-page .page-block__title {\n      font-size: 2.188rem;\n      line-height: 2.688rem;\n      font-weight: 300;\n      color: #000; }\n    .landing-page .page-block__description {\n      line-height: 1.500rem; }\n    .landing-page .page-block__controls {\n      text-align: center; }\n    .landing-page .page-block.page-block--light {\n      background: #fff; }\n  .landing-page .header {\n    position: absolute;\n    left: 0;\n    top: 0;\n    z-index: 999;\n    width: 100%; }\n    .landing-page .header__logo {\n      display: block;\n      background: url(\"http://cargo.chat/static/logo-light.png\");\n      background-repeat: no-repeat;\n      width: 147px;\n      height: 38px; }\n    .landing-page .header__container {\n      display: -webkit-box;\n      display: -moz-box;\n      display: -ms-flexbox;\n      display: -webkit-flex;\n      display: flex;\n      -webkit-box-pack: space-between;\n      -webkit-justify-content: space-between;\n      -ms-flex-pack: space-between;\n      justify-content: space-between;\n      -webkit-box-align: center;\n      -webkit-align-items: center;\n      -ms-flex-align: center;\n      align-items: center;\n      margin-right: auto;\n      margin-left: auto;\n      padding-right: 20px;\n      padding-left: 20px;\n      max-width: 1140px;\n      height: 100px; }\n    .landing-page .header .nav {\n      list-style: none; }\n      .landing-page .header .nav__item,\n      .landing-page .header .nav__link {\n        display: inline-block; }\n      .landing-page .header .nav__item--active a {\n        border-color: #62a8ea;\n        color: #62a8ea; }\n      .landing-page .header .nav__link {\n        border-top: 4px solid transparent;\n        text-decoration: none;\n        padding: 39px 30px;\n        color: #fff;\n        -webkit-transition: all 0.16s cubic-bezier(0.32, 1, 0.23, 1);\n        -moz-transition: all 0.16s cubic-bezier(0.32, 1, 0.23, 1);\n        -o-transition: all 0.16s cubic-bezier(0.32, 1, 0.23, 1);\n        transition: all 0.16s cubic-bezier(0.32, 1, 0.23, 1); }\n        .landing-page .header .nav__link:hover {\n          color: #62a8ea; }\n    .landing-page .header__control-login {\n      background: transparent;\n      border: 1px solid #fff;\n      color: #fff; }\n  .landing-page .hero {\n    padding-top: 100px;\n    width: 100%;\n    height: 100%;\n    background: url(\"http://cargo.chat/static/main_bg.jpg\") center no-repeat;\n    background-size: cover; }\n    .landing-page .hero__container {\n      display: -webkit-box;\n      display: -moz-box;\n      display: -ms-flexbox;\n      display: -webkit-flex;\n      display: flex;\n      -webkit-box-pack: center;\n      -webkit-justify-content: center;\n      -ms-flex-pack: center;\n      justify-content: center;\n      -webkit-box-align: flex-start;\n      -webkit-align-items: flex-start;\n      -ms-flex-align: flex-start;\n      align-items: flex-start;\n      -webkit-box-direction: normal;\n      -webkit-box-orient: vertical;\n      -webkit-flex-direction: column;\n      -moz-flex-direction: column;\n      -ms-flex-direction: column;\n      flex-direction: column;\n      margin-right: auto;\n      margin-left: auto;\n      padding-right: 20px;\n      padding-left: 20px;\n      max-width: 1140px;\n      width: 100%;\n      height: 100%; }\n    .landing-page .hero__title,\n    .landing-page .hero__description,\n    .landing-page .hero__controls {\n      width: 100%; }\n    .landing-page .hero__title,\n    .landing-page .hero__description {\n      color: #fff; }\n    .landing-page .hero__title {\n      line-height: 2.688rem;\n      font-size: 2.500rem;\n      font-weight: 700; }\n    .landing-page .hero__description {\n      line-height: 1.563rem;\n      margin: 20px 0 40px; }\n  .landing-page .about {\n    background: #263238;\n    margin-top: -150px;\n    z-index: 999; }\n    .landing-page .about__item {\n      display: -webkit-box;\n      display: -moz-box;\n      display: -ms-flexbox;\n      display: -webkit-flex;\n      display: flex;\n      -webkit-box-align: center;\n      -webkit-align-items: center;\n      -ms-flex-align: center;\n      align-items: center;\n      height: 150px; }\n    .landing-page .about__description {\n      margin-bottom: 0;\n      color: #e5e7e9;\n      font-size: 0.813rem; }\n    .landing-page .about__icon {\n      min-width: 38px;\n      margin-right: 10px;\n      fill: #E9EAEB; }\n  .landing-page .for-whom__icon {\n    display: inline-block;\n    width: 40px;\n    height: 40px;\n    border-radius: 50%;\n    border: 1px solid #758a92;\n    margin-bottom: -15px;\n    margin-right: 15px;\n    -webkit-transition: all 0.16s cubic-bezier(0.32, 1, 0.23, 1);\n    -moz-transition: all 0.16s cubic-bezier(0.32, 1, 0.23, 1);\n    -o-transition: all 0.16s cubic-bezier(0.32, 1, 0.23, 1);\n    transition: all 0.16s cubic-bezier(0.32, 1, 0.23, 1); }\n  .landing-page .for-whom__nav {\n    display: -webkit-box;\n    display: -moz-box;\n    display: -ms-flexbox;\n    display: -webkit-flex;\n    display: flex;\n    -webkit-box-pack: center;\n    -webkit-justify-content: center;\n    -ms-flex-pack: center;\n    justify-content: center;\n    padding: 20px; }\n  .landing-page .for-whom__link {\n    color: #758A92;\n    padding: 0 20px;\n    line-height: 40px;\n    text-decoration: none;\n    cursor: pointer;\n    overflow: hidden;\n    -webkit-transition: all 0.16s cubic-bezier(0.32, 1, 0.23, 1);\n    -moz-transition: all 0.16s cubic-bezier(0.32, 1, 0.23, 1);\n    -o-transition: all 0.16s cubic-bezier(0.32, 1, 0.23, 1);\n    transition: all 0.16s cubic-bezier(0.32, 1, 0.23, 1); }\n  .landing-page .for-whom__link--active {\n    color: #62a8ea; }\n  .landing-page .for-whom__link--active div {\n    background: #62a8ea;\n    border-color: #62a8ea; }\n  .landing-page .for-whom__card {\n    border-left: 4px solid #62a8ea;\n    padding-left: 20px;\n    margin: 20px 0; }\n  .landing-page .spr {\n    background: url(\"http://cargo.chat/static/sprites.svg\");\n    display: inline-block; }\n    .landing-page .spr--doc {\n      background-position: 0 0;\n      width: 32px;\n      height: 45px; }\n    .landing-page .spr--browser {\n      background-position: -34px 0;\n      width: 55px;\n      height: 40px; }\n    .landing-page .spr--search {\n      background-position: -90px 0;\n      width: 40px;\n      height: 40px; }\n    .landing-page .spr--check {\n      background-position: -240px 0;\n      width: 40px;\n      height: 40px; }\n    .landing-page .spr--map {\n      background-position: -182px 0;\n      width: 29px;\n      height: 42px; }\n    .landing-page .spr--mobile {\n      background-position: -212px 0;\n      width: 26px;\n      height: 45px; }\n    .landing-page .spr--archive {\n      background-position: -132px 0;\n      width: 48px;\n      height: 40px; }\n  .landing-page .how-it-work__container {\n    max-width: 730px;\n    width: 100%;\n    padding: 0 20px;\n    margin: 0 auto;\n    padding-top: 50px; }\n  .landing-page .how-it-work__item {\n    display: -webkit-box;\n    display: -moz-box;\n    display: -ms-flexbox;\n    display: -webkit-flex;\n    display: flex;\n    -webkit-box-align: center;\n    -webkit-align-items: center;\n    -ms-flex-align: center;\n    align-items: center; }\n    .landing-page .how-it-work__item--reverse {\n      -webkit-box-direction: reverse;\n      -webkit-box-orient: horizontal;\n      -webkit-flex-direction: row-reverse;\n      -moz-flex-direction: row-reverse;\n      -ms-flex-direction: row-reverse;\n      flex-direction: row-reverse;\n      text-align: right; }\n      .landing-page .how-it-work__item--reverse .how-it-work__step {\n        right: -25%;\n        top: -25%;\n        left: auto; }\n      .landing-page .how-it-work__item--reverse .how-it-work__icon {\n        text-align: right; }\n  .landing-page .how-it-work__muted {\n    display: block;\n    font-size: 12px;\n    color: #B1BCC0;\n    margin-top: 10px; }\n  .landing-page .how-it-work__divider {\n    position: relative;\n    height: 1px;\n    background: #D9DDDF;\n    margin: 30px 30px; }\n    .landing-page .how-it-work__divider:before,\n    .landing-page .how-it-work__divider:after {\n      content: '';\n      position: absolute;\n      width: 15px;\n      height: 15px;\n      background: url(\"http://cargo.chat/static/sprites.svg\"); }\n    .landing-page .how-it-work__divider:before {\n      background-position: -283px 0;\n      left: -15px;\n      bottom: 0px; }\n    .landing-page .how-it-work__divider:after {\n      background-position: -283px -18px;\n      right: -15px;\n      top: 0px; }\n    .landing-page .how-it-work__divider--reverse:before {\n      background-position: -299px -17px;\n      left: -15px;\n      top: 0;\n      bottom: auto; }\n    .landing-page .how-it-work__divider--reverse:after {\n      background-position: -298px 0;\n      right: -15px;\n      bottom: 0;\n      top: auto; }\n  .landing-page .how-it-work__icon {\n    position: relative;\n    width: 65px; }\n  .landing-page .how-it-work__step {\n    position: absolute;\n    left: -25%;\n    top: -25%;\n    background: #62a8ea;\n    border-radius: 50%;\n    height: 30px;\n    width: 30px;\n    text-align: center;\n    line-height: 28px;\n    color: #fff; }\n  .landing-page .how-it-work__text {\n    max-width: 350px;\n    line-height: 22px;\n    margin-bottom: 0; }\n  .landing-page .screen__container {\n    margin-bottom: -100px; }\n  .landing-page .screen img {\n    vertical-align: middle;\n    width: 100%; }\n  @media (max-width: 48em) {\n    .landing-page .header .nav {\n      display: none; }\n    .landing-page .about__item {\n      -webkit-box-direction: normal;\n      -webkit-box-orient: vertical;\n      -webkit-flex-direction: column;\n      -moz-flex-direction: column;\n      -ms-flex-direction: column;\n      flex-direction: column;\n      -webkit-box-pack: center;\n      -webkit-justify-content: center;\n      -ms-flex-pack: center;\n      justify-content: center;\n      padding: 0 40px;\n      text-align: center; }\n    .landing-page .about__icon {\n      display: block;\n      margin-right: 0;\n      margin-bottom: 10px; }\n    .landing-page .hero__title {\n      font-size: 1.750rem; }\n    .landing-page .hero__title,\n    .landing-page .hero__description,\n    .landing-page .hero__controls {\n      text-align: center; }\n    .landing-page .for-whom__link {\n      width: 80px;\n      height: 40px; }\n    .landing-page .slider__box {\n      margin: 0 20px; }\n    .landing-page .slider__arrow-left,\n    .landing-page .slider__arrow-right {\n      display: none; }\n    .landing-page .how-it-work__slider {\n      height: 260px;\n      padding-left: 20px;\n      padding-right: 20px; }\n    .landing-page .how-it-work__slide {\n      height: 220px;\n      left: 20px;\n      right: 20px; }\n    .landing-page .how-it-work__arrow-left,\n    .landing-page .how-it-work__arrow-right {\n      display: none; } }\n  .landing-page .footer {\n    background: #263238; }\n    .landing-page .footer .row {\n      height: 80px; }\n  .landing-page .info {\n    background: url(\"http://cargo.chat/static/main_bg.jpg\") top no-repeat;\n    background-size: cover; }\n    .landing-page .info__title {\n      font-size: 1.625rem;\n      color: #fff; }\n";

/***/ }
/******/ ]);